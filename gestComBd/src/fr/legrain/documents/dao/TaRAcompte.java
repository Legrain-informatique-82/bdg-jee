package fr.legrain.documents.dao;

// Generated Apr 7, 2009 3:27:23 PM by Hibernate Tools 3.2.0.CR1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import fr.legrain.gestCom.Module_Document.IRelationDoc;
import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaRDocument generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "TA_R_ACOMPTE")
@SequenceGenerator(name = "GEN_R_ACOMPTE", sequenceName = "NUM_ID_R_ACOMPTE", allocationSize = 1)
public class TaRAcompte implements java.io.Serializable ,IRelationDoc{

	private int id;
	private String version;
	private TaFacture taFacture;
	private TaBoncde taBoncde;
	private TaProforma taProforma;
	private TaDevis taDevis;
	private TaApporteur taApporteur;
	private TaAvoir taAvoir;
	private TaBonliv taBonliv;
	private TaAcompte taAcompte;
	private TaPrelevement taPrelevement;
	private BigDecimal affectation  = new BigDecimal(0);
	private String quiCree;
	private Date quandCree;
	private String quiModif;
	private Date quandModif;
	private String ipAcces;
	private Integer versionObj;
	private Integer export= 0;
	
	
	private Integer Etat =0;
	
	private boolean EtatDeSuppression =false;

	public TaRAcompte() {
	}

	public TaRAcompte(int idRAcompte) {
		this.id = idRAcompte;
	}

//public TaRAcompte(int id, String version, TaFacture taFacture,
//			TaBoncde taBoncde, TaProforma taProforma, TaDevis taDevis,
//			TaApporteur taApporteur, TaAvoir taAvoir, TaBonliv taBonliv,
//			TaAcompte taAcompte, BigDecimal affectation, String quiCree,
//			Date quandCree, String quiModif, Date quandModif, String ipAcces,
//			Integer versionObj, boolean etatDeSuppression) {
//		super();
//		this.id = id;
//		this.version = version;
//		this.taFacture = taFacture;
//		this.taBoncde = taBoncde;
//		this.taProforma = taProforma;
//		this.taDevis = taDevis;
//		this.taApporteur = taApporteur;
//		this.taAvoir = taAvoir;
//		this.taBonliv = taBonliv;
//		this.taAcompte = taAcompte;
//		this.affectation = affectation;
//		this.quiCree = quiCree;
//		this.quandCree = quandCree;
//		this.quiModif = quiModif;
//		this.quandModif = quandModif;
//		this.ipAcces = ipAcces;
//		this.versionObj = versionObj;
//		EtatDeSuppression = etatDeSuppression;
//	}

//	public TaRAcompte(int idRAcompte, TaFacture taFacture, TaBoncde taBoncde,
//			TaProforma taProforma, 
//			TaBonliv taBonliv, TaAvoir taAvoir,TaApporteur taApporteur,
//			TaDevis taDevis, String quiCreeRDocument,
//			Date quandCreeRDocument, String quiModifRDocument,
//			Date quandModifRDocument, String ipAcces, Integer versionObj) {
//		this.id = idRAcompte;
//		this.taFacture = taFacture;
//		this.taBoncde = taBoncde;
//		this.taProforma = taProforma;
//		this.taDevis = taDevis;		
//		this.taApporteur = taApporteur;
//		this.taAvoir = taAvoir;
//		this.taBonliv = taBonliv;
//		this.quiCree = quiCreeRDocument;
//		this.quandCree = quandCreeRDocument;
//		this.quiModif = quiModifRDocument;
//		this.quandModif = quandModifRDocument;
//		this.ipAcces = ipAcces;
//		this.versionObj = versionObj;
//	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GEN_R_ACOMPTE")
	@Column(name = "ID", unique = true, nullable = false)
	@LgrHibernateValidated(champEntite = "", champBd = "ID",table = "TA_R_ACOMPTE",clazz = TaRAcompte.class)
	public int getId() {
		return this.id;
	}

	public void setId(int idRAcompte) {
		this.id = idRAcompte;
	}

	@Column(name = "VERSION", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
	@JoinColumn(name = "ID_FACTURE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_FACTURE",table = "TA_FACTURE",clazz = TaFacture.class)
	public TaFacture getTaFacture() {
		return this.taFacture;
	}

	public void setTaFacture(TaFacture taFacture) {
		this.taFacture = taFacture;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PRELEVEMENT")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_PRELEVEMENT",table = "TA_PRELEVEMENT",clazz = TaPrelevement.class)
	public TaPrelevement getTaPrelevement() {
		return taPrelevement;
	}

	public void setTaPrelevement(TaPrelevement taPrelevement) {
		this.taPrelevement = taPrelevement;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_BONCDE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_BONCDE",table = "TA_BONCDE",clazz = TaBoncde.class)
	public TaBoncde getTaBoncde() {
		return this.taBoncde;
	}

	public void setTaBoncde(TaBoncde taBoncde) {
		this.taBoncde = taBoncde;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
	@JoinColumn(name = "ID_PROFORMA")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_PROFORMA",table = "TA_PROFORMA",clazz = TaProforma.class)
	public TaProforma getTaProforma() {
		return this.taProforma;
	}

	public void setTaProforma(TaProforma taProforma) {
		this.taProforma = taProforma;
	}


	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
	@JoinColumn(name = "ID_DEVIS")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_DEVIS",table = "TA_DEVIS",clazz = TaDevis.class)
	public TaDevis getTaDevis() {
		return this.taDevis;
	}

	public void setTaDevis(TaDevis taDevis) {
		this.taDevis = taDevis;
	}
	
	//
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_APPORTEUR")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_APPORTEUR",table = "TA_APPORTEUR",clazz = TaApporteur.class)
	public TaApporteur getTaApporteur() {
		return this.taApporteur;
	}

	public void setTaApporteur(TaApporteur taApporteur) {
		this.taApporteur = taApporteur;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_AVOIR")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_AVOIR",table = "TA_AVOIR",clazz = TaAvoir.class)
	public TaAvoir getTaAvoir() {
		return this.taAvoir;
	}

	public void setTaAvoir(TaAvoir taAvoir) {
		this.taAvoir = taAvoir;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_BONLIV")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_BONLIV",table = "TA_BONLIV",clazz = TaBonliv.class)
	public TaBonliv getTaBonliv() {
		return this.taBonliv;
	}

	public void setTaBonliv(TaBonliv taBonliv) {
		this.taBonliv = taBonliv;
	}
	//
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
	@JoinColumn(name = "ID_ACOMPTE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_ACOMPTE",table = "TA_ACOMPTE",clazz = TaAcompte.class)
	public TaAcompte getTaAcompte() {
		return this.taAcompte;
	}

	public void setTaAcompte(TaAcompte taAcompte) {
		this.taAcompte = taAcompte;
	}
	
	@Column(name = "AFFECTATION", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "AFFECTATION",table = "TA_R_ACOMPTE",clazz = TaRAcompte.class)
	public BigDecimal getAffectation() {
		return affectation ;
	}

	public void setAffectation(BigDecimal montant) {
		this.affectation = montant;
	}



	@Column(name = "EXPORT")
	@LgrHibernateValidated(champEntite = "", champBd = "EXPORT",table = "TA_R_ACOMPTE",clazz = TaRAcompte.class)
	public Integer getExport() {
		return export;
	}

	public void setExport(Integer export) {
		this.export = export;
	}
	

	@Column(name = "QUI_CREE", length = 50)
	public String getQuiCree() {
		return this.quiCree;
	}

	public void setQuiCree(String quiCreeRDocument) {
		this.quiCree = quiCreeRDocument;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_CREE", length = 19)
	public Date getQuandCree() {
		return this.quandCree;
	}

	public void setQuandCree(Date quandCreeRDocument) {
		this.quandCree = quandCreeRDocument;
	}

	@Column(name = "QUI_MODIF", length = 50)
	public String getQuiModif() {
		return this.quiModif;
	}

	public void setQuiModif(String quiModifRDocument) {
		this.quiModif = quiModifRDocument;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_MODIF", length = 19)
	public Date getQuandModif() {
		return this.quandModif;
	}

	public void setQuandModif(Date quandModifRDocument) {
		this.quandModif = quandModifRDocument;
	}

	@Column(name = "IP_ACCES", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}

	@Version
	@Column(name = "VERSION_OBJ")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}
	
	public BigDecimal calculAffectationEnCours(TaFacture taDocument){
		if(this.getId()==0)
			return getAffectation();
			else
		return BigDecimal.valueOf(0);
	}

	@Transient
	public boolean isEtatDeSuppression() {
		return EtatDeSuppression;
	}
	
	
	public void setEtatDeSuppression(boolean etatDeSuppression) {
		EtatDeSuppression = etatDeSuppression;
	}


	@Column(name = "ETAT")
	@LgrHibernateValidated(champEntite = "", champBd = "ETAT",table = "TA_R_ACOMPTE",clazz = TaRAcompte.class)
	public Integer getEtat() {
		return Etat;
	}
	


	public void setEtat(Integer etat) {
		Etat = etat;
	}	


}
