package fr.legrain.documents.dao;

// Generated Apr 7, 2009 3:27:23 PM by Hibernate Tools 3.2.0.CR1

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaRDocument generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "TA_R_DOCUMENT")
@SequenceGenerator(name = "GEN_R_DOCUMENT", sequenceName = "NUM_ID_R_DOCUMENT", allocationSize = 1)
public class TaRDocument implements java.io.Serializable {
	
//	public static final String identifiant = "idRDocument";
	
	
	private int idRDocument;
	private String version;
	private TaFacture taFacture;
	private TaBoncde taBoncde;
	private TaProforma taProforma;
	private TaBonliv taBonliv;
	private TaAvoir taAvoir;
	private TaApporteur taApporteur;
	private TaDevis taDevis;
	private TaAcompte taAcompte;
	private TaPrelevement taPrelevement;
	private TaAvisEcheance taAvisEcheance;
	private TaRDocument taDocumentGenere;
//	private TaTDoc taTypeDoc;
//	private TaReglement taReglement;
	private String quiCreeRDocument;
	private Date quandCreeRDocument;
	private String quiModifRDocument;
	private Date quandModifRDocument;
	private String ipAcces;
	private Integer versionObj;

	public TaRDocument() {
	}

	public TaRDocument(int idRDocument) {
		this.idRDocument = idRDocument;
	}



	public TaRDocument(int idRDocument, String version, TaFacture taFacture,
			TaBoncde taBoncde, TaProforma taProforma, TaBonliv taBonliv,
			TaAvoir taAvoir, TaApporteur taApporteur, TaDevis taDevis,
			TaAcompte taAcompte, TaPrelevement taPrelevement,
			TaAvisEcheance taAvisEcheance, TaRDocument taDocumentGenere,
			TaTDoc taTypeDoc, String quiCreeRDocument, Date quandCreeRDocument,
			String quiModifRDocument, Date quandModifRDocument, String ipAcces,
			Integer versionObj) {
		super();
		this.idRDocument = idRDocument;
		this.version = version;
		this.taFacture = taFacture;
		this.taBoncde = taBoncde;
		this.taProforma = taProforma;
		this.taBonliv = taBonliv;
		this.taAvoir = taAvoir;
		this.taApporteur = taApporteur;
		this.taDevis = taDevis;
		this.taAcompte = taAcompte;
		this.taPrelevement = taPrelevement;
		this.taAvisEcheance = taAvisEcheance;
		this.taDocumentGenere = taDocumentGenere;
//		this.taTypeDoc = taTypeDoc;
		this.quiCreeRDocument = quiCreeRDocument;
		this.quandCreeRDocument = quandCreeRDocument;
		this.quiModifRDocument = quiModifRDocument;
		this.quandModifRDocument = quandModifRDocument;
		this.ipAcces = ipAcces;
		this.versionObj = versionObj;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GEN_R_DOCUMENT")
	@Column(name = "ID_R_DOCUMENT", unique = true, nullable = false)
	@LgrHibernateValidated(champEntite = "", champBd = "ID_R_DOCUMENT",table = "TA_R_DOCUMENT",clazz = TaRDocument.class)
	public int getIdRDocument() {
		return this.idRDocument;
	}

	public void setIdRDocument(int idRDocument) {
		this.idRDocument = idRDocument;
	}

	@Column(name = "VERSION", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_FACTURE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_FACTURE",table = "TA_FACTURE",clazz = TaFacture.class)
	public TaFacture getTaFacture() {
		return this.taFacture;
	}

	public void setTaFacture(TaFacture taFacture) {
		this.taFacture = taFacture;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PRELEVEMENT")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_PRELEVEMENT",table = "TA_PRELEVEMENT",clazz = TaPrelevement.class)
	public TaPrelevement getTaPrelevement() {
		return taPrelevement;
	}

	public void setTaPrelevement(TaPrelevement taPrelevement) {
		this.taPrelevement = taPrelevement;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_AVIS_ECHEANCE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_AVIS_ECHEANCE",table = "TA_AVIS_ECHEANCE",clazz = TaAvisEcheance.class)
	public TaAvisEcheance getTaAvisEcheance() {
		return taAvisEcheance;
	}

	public void setTaAvisEcheance(TaAvisEcheance taAvisEcheance) {
		this.taAvisEcheance = taAvisEcheance;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_BONCDE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_BONCDE",table = "TA_BONCDE",clazz = TaBoncde.class)
	public TaBoncde getTaBoncde() {
		return this.taBoncde;
	}

	public void setTaBoncde(TaBoncde taBoncde) {
		this.taBoncde = taBoncde;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_PROFORMA")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_PROFORMA",table = "TA_PROFORMA",clazz = TaProforma.class)
	public TaProforma getTaProforma() {
		return this.taProforma;
	}

	public void setTaProforma(TaProforma taProforma) {
		this.taProforma = taProforma;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_BONLIV")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_BONLIV",table = "TA_BONLIV",clazz = TaBonliv.class)
	public TaBonliv getTaBonliv() {
		return this.taBonliv;
	}

	public void setTaBonliv(TaBonliv taBonliv) {
		this.taBonliv = taBonliv;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_AVOIR")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_AVOIR",table = "TA_AVOIR",clazz = TaAvoir.class)
	public TaAvoir getTaAvoir() {
		return this.taAvoir;
	}

	public void setTaAvoir(TaAvoir taAvoir) {
		this.taAvoir = taAvoir;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_APPORTEUR")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_APPORTEUR",table = "TA_APPORTEUR",clazz = TaApporteur.class)
	public TaApporteur getTaApporteur() {
		return this.taApporteur;
	}

	public void setTaApporteur(TaApporteur taApporteur) {
		this.taApporteur = taApporteur;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_DEVIS")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_DEVIS",table = "TA_DEVIS",clazz = TaApporteur.class)
	public TaDevis getTaDevis() {
		return this.taDevis;
	}

	public void setTaDevis(TaDevis idDevis) {
		this.taDevis = idDevis;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_ACOMPTE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_ACOMPTE",table = "TA_ACOMPTE",clazz = TaAcompte.class)
	public TaAcompte getTaAcompte() {
		return taAcompte;
	}

	public void setTaAcompte(TaAcompte taAcompte) {
		this.taAcompte = taAcompte;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "ID_REGLEMENT")
//	@LgrHibernateValidated(champEntite = "", champ = "ID_REGLEMENT",table = "TA_REGLEMENT",clazz = TaReglement.class)
//	public TaReglement getTaReglement() {
//		return taReglement;
//	}
//
//	public void setTaReglement(TaReglement taReglement) {
//		this.taReglement = taReglement;
//	}


	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE)
	@JoinColumn(name = "ID_DOC_GENERE")
//	@LgrHibernateValidated(champEntite = "", champ = "ID_DOCUMENT",table = "TA_ACOMPTE",clazz = TaAcompte.class)
	public TaRDocument getTaDocumentGenere() {
		return taDocumentGenere;
	}

	public void setTaDocumentGenere(TaRDocument taDocumentGenere) {
		this.taDocumentGenere = taDocumentGenere;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "ID_T_DOC_GENERE")
//	public TaTDoc getTaTypeDoc() {
//		return taTypeDoc;
//	}
//
//	public void setTaTypeDoc(TaTDoc taTypeDoc) {
//		this.taTypeDoc = taTypeDoc;
//	}
//	
	
	@Column(name = "QUI_CREE_R_DOCUMENT", length = 50)
	public String getQuiCreeRDocument() {
		return this.quiCreeRDocument;
	}

	public void setQuiCreeRDocument(String quiCreeRDocument) {
		this.quiCreeRDocument = quiCreeRDocument;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_CREE_R_DOCUMENT", length = 19)
	public Date getQuandCreeRDocument() {
		return this.quandCreeRDocument;
	}

	public void setQuandCreeRDocument(Date quandCreeRDocument) {
		this.quandCreeRDocument = quandCreeRDocument;
	}

	@Column(name = "QUI_MODIF_R_DOCUMENT", length = 50)
	public String getQuiModifRDocument() {
		return this.quiModifRDocument;
	}

	public void setQuiModifRDocument(String quiModifRDocument) {
		this.quiModifRDocument = quiModifRDocument;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_MODIF_R_DOCUMENT", length = 19)
	public Date getQuandModifRDocument() {
		return this.quandModifRDocument;
	}

	public void setQuandModifRDocument(Date quandModifRDocument) {
		this.quandModifRDocument = quandModifRDocument;
	}

	@Column(name = "IP_ACCES", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}

	@Version
	@Column(name = "VERSION_OBJ")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}



	public boolean verifRemoveAfter(){
		try {
			TaRDocumentDAO daoRDocument = new TaRDocumentDAO();
			TaRDocument rdocLiaison=null;
			if(daoRDocument.exist(this)) rdocLiaison=daoRDocument.findByIdGenere(this);
			if(rdocLiaison!=null){
				daoRDocument.remove(rdocLiaison);
			}
			return true;
		} catch (Exception e) {
			//logger.error("",e);
			return false;
		}
	}

	
	

	
}
