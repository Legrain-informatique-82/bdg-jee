package fr.legrain.documents.dao;

// Generated Apr 9, 2009 2:12:06 PM by Hibernate Tools 3.2.0.CR1

import java.beans.PropertyChangeEvent;
import java.math.BigDecimal;
import java.math.MathContext;
import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.apache.log4j.Logger;

import fr.legrain.articles.dao.TaArticle;
import fr.legrain.articles.dao.TaPrix;
import fr.legrain.gestCom.Appli.Const;
import fr.legrain.gestCom.Module_Document.ILigneDocumentTiers;
import fr.legrain.gestCom.Module_Document.SWTLigneDocument;
import fr.legrain.lib.data.LibCalcul;
import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaLDevis generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "TA_L_PRELEVEMENT")
//@SequenceGenerator(name = "GEN_L_PROFORMA", sequenceName = "NUM_ID_L_PROFORMA", allocationSize = 1)
public class TaLPrelevement extends SWTLigneDocument implements java.io.Serializable, ILigneDocumentTiers {

	static Logger logger = Logger.getLogger(TaLPrelevement.class.getName());
//	private int idLDocument;
	private String version;
	private TaTLigne taTLigne;
	private TaArticle taArticle;
	private TaPrelevement taDocument;
	private Integer numLigneLDocument;
	private String libLDocument;
	private BigDecimal qteLDocument;
	private BigDecimal qte2LDocument;
	private String u1LDocument;
	private String u2LDocument;
	private BigDecimal prixULDocument;
	private BigDecimal tauxTvaLDocument;
	private String compteLDocument;
	private String codeTvaLDocument;
	private String codeTTvaLDocument;
	private BigDecimal mtHtLDocument;
	private BigDecimal mtTtcLDocument;
	private BigDecimal remTxLDocument;
	private BigDecimal remHtLDocument;
	private String quiCreeLDocument;
	private Date quandCreeLDocument;
	private String quiModifLDocument;
	private Date quandModifLDocument;
	private String ipAcces;

	@Transient
	private boolean legrain = false;
	@Transient
	private BigDecimal txRemHtDocument;
	@Transient
	private BigDecimal mtHtLApresRemiseGlobaleDocument;
	@Transient
	private BigDecimal mtTtcLApresRemiseGlobaleDocument;
	public TaLPrelevement() {
	}
	
	public TaLPrelevement	(boolean legrain) {
		this.legrain = legrain;
	}
	
	public TaLPrelevement(int idLDevis) {
		this.idLDocument = idLDevis;
	}

	public TaLPrelevement(int idLDevis, TaTLigne taTLigne, TaArticle taArticle,
			TaDevis taDevis, Integer numLigneLDevis, String libLDevis,
			BigDecimal qteLDevis, BigDecimal qte2LDevis, String u1LDevis,
			String u2LDevis, BigDecimal prixULDevis, BigDecimal tauxTvaLDevis,
			String compteLDevis, String codeTvaLDevis, String codeTTvaLDevis,
			BigDecimal mtHtLDevis, BigDecimal mtTtcLDevis,
			BigDecimal remTxLDevis, BigDecimal remHtLDevis,
			String quiCreeLDevis, Date quandCreeLDevis, String quiModifLDevis,
			Date quandModifLDevis, String ipAcces, Integer versionObj) {
		this.idLDocument = idLDevis;
		this.taTLigne = taTLigne;
		this.taArticle = taArticle;
		this.taDocument = taDocument;
		this.numLigneLDocument = numLigneLDevis;
		this.libLDocument = libLDevis;
		this.qteLDocument = qteLDevis;
		this.qte2LDocument = qte2LDevis;
		this.u1LDocument = u1LDevis;
		this.u2LDocument = u2LDevis;
		this.prixULDocument = prixULDevis;
		this.tauxTvaLDocument = tauxTvaLDevis;
		this.compteLDocument = compteLDevis;
		this.codeTvaLDocument = codeTvaLDevis;
		this.codeTTvaLDocument = codeTTvaLDevis;
		this.mtHtLDocument = mtHtLDevis;
		this.mtTtcLDocument = mtTtcLDevis;
		this.remTxLDocument = remTxLDevis;
		this.remHtLDocument = remHtLDevis;
		this.quiCreeLDocument = quiCreeLDevis;
		this.quandCreeLDocument = quandCreeLDevis;
		this.quiModifLDocument = quiModifLDevis;
		this.quandModifLDocument = quandModifLDevis;
		this.ipAcces = ipAcces;
		this.versionObj = versionObj;
	}

//	@Id
//	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GEN_L_PROFORMA")
//	@Column(name = "ID_L_DOCUMENT", unique = true, nullable = false)
//	public int getIdLDocument() {
//		return this.idLDocument;
//	}
//
//	public void setIdLDocument(int idLProforma) {
//		this.idLDocument = idLProforma;
//	}

	@Column(name = "VERSION", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_T_LIGNE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_T_LIGNE",table = "TA_T_LIGNE",clazz = TaTLigne.class)
	public TaTLigne getTaTLigne() {
		return this.taTLigne;
	}

	public void setTaTLigne(TaTLigne taTLigne) {
		this.taTLigne = taTLigne;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
	@JoinColumn(name = "ID_ARTICLE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_ARTICLE",table = "TA_ARTICLE",clazz = TaArticle.class)
	public TaArticle getTaArticle() {
		return this.taArticle;
	}

//	public void setTaArticle(TaArticle taArticle) {
//		this.taArticle = taArticle;
//		if(legrain) {
//			if(taArticle!=null) {
//				if(getTaTLigne()==null || getTaTLigne().getCodeTLigne()==null)
//					setTaTLigne(new TaTLigneDAO().findByCode(Const.C_CODE_T_LIGNE_H));
//				else
//					if(!getTaTLigne().getCodeTLigne().equals(Const.C_CODE_T_LIGNE_H))
//						setTaTLigne(new TaTLigneDAO().findByCode(Const.C_CODE_T_LIGNE_H));
//
//				TaPrix prix = taArticle.chercheTarif(taDocument.getTaTiers());
//				if(prix!=null) {
//					if(taDocument!=null) { //#JPA
//						if(taDocument.getTtc()==1)
//							setPrixULDocument(prix.getPrixttcPrix());
//						else
//							setPrixULDocument(prix.getPrixPrix());
//					}
//
//					if(prix.getTaUnite()!=null) {
//						setU1LDocument(prix.getTaUnite().getCodeUnite());
//					}
//				}
//
//				if(taArticle.getTaTva()!=null && taDocument.isGestionTVA()) {
//					setCodeTvaLDocument(taArticle.getTaTva().getCodeTva());
//					setTauxTvaLDocument(taArticle.getTaTva().getTauxTva());
//				}
//
//				setLibLDocument(taArticle.getLibellecArticle());
//				setQteLDocument(new BigDecimal(1));
//				setCompteLDocument(taArticle.getNumcptArticle());
//
//				calculMontant();
//			}
//			
//			
//		}
//	}
	public void setTaArticle(TaArticle taArticle) {
		this.taArticle = taArticle;

		if(legrain) {
			if(taArticle!=null) {
				if(getTaTLigne()==null || getTaTLigne().getCodeTLigne()==null)
					setTaTLigne(new TaTLigneDAO().findByCode(Const.C_CODE_T_LIGNE_H));
				else
					if(!getTaTLigne().getCodeTLigne().equals(Const.C_CODE_T_LIGNE_H))
						setTaTLigne(new TaTLigneDAO().findByCode(Const.C_CODE_T_LIGNE_H));
				boolean commentaire=false;
				commentaire=taArticle.getTaFamille()!=null && taArticle.getTaFamille().getCodeFamille().equals("&&&");
				if(!commentaire){
					TaPrix prix = taArticle.chercheTarif(taDocument.getTaTiers());
					if(prix!=null) {
						if(taDocument!=null) { //#JPA
							if(taDocument.getTtc()==1)
								setPrixULDocument(prix.getPrixttcPrix());
							else
								setPrixULDocument(prix.getPrixPrix());
						}

						if(prix.getTaUnite()!=null) {
							setU1LDocument(prix.getTaUnite().getCodeUnite());
						}
					}else{
						setPrixULDocument(BigDecimal.valueOf(0));
						setU1LDocument("");
					}

					if(taArticle.getTaTva()!=null && taDocument.isGestionTVA()) {
						setCodeTvaLDocument(taArticle.getTaTva().getCodeTva());
						setTauxTvaLDocument(taArticle.getTaTva().getTauxTva());
					}else{
						setCodeTvaLDocument("");
						setTauxTvaLDocument(BigDecimal.valueOf(0));
					}
					setQteLDocument(new BigDecimal(1));
					setCompteLDocument(taArticle.getNumcptArticle());
					calculMontant();
					setLibLDocument(taArticle.getLibellecArticle());
				}
				else {
				setLibLDocument(taArticle.getLibellecArticle());
				setTaArticle(null);
				}
			}
		}
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_DOCUMENT")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public TaPrelevement getTaDocument() {
		return this.taDocument;
	}

	public void setTaDocument(TaPrelevement taProforma) {
		this.taDocument = taProforma;
	}

	@Column(name = "NUM_LIGNE_L_DOCUMENT")
	@LgrHibernateValidated(champEntite = "", champBd = "NUM_LIGNE_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public Integer getNumLigneLDocument() {
		return this.numLigneLDocument;
	}

	public void setNumLigneLDocument(Integer numLigneLProforma) {
		this.numLigneLDocument = numLigneLProforma;
	}

	@Column(name = "LIB_L_DOCUMENT")
	@LgrHibernateValidated(champEntite = "", champBd = "LIB_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public String getLibLDocument() {
		return this.libLDocument;
	}

	public void setLibLDocument(String libLProforma) {
		this.libLDocument = libLProforma;
	}

	@Column(name = "QTE_L_DOCUMENT", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "QTE_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getQteLDocument() {
		return this.qteLDocument;
	}

	public void setQteLDocument(BigDecimal qteLProforma) {		
		BigDecimal qteLDocumentOld = this.qteLDocument;
		this.qteLDocument = qteLProforma;
		if(legrain) {
			calculMontant();
			firePropertyChange(new PropertyChangeEvent(this,"qteLDocument",qteLDocumentOld,qteLProforma));
		}
	}

	@Column(name = "QTE2_L_DOCUMENT", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "QTE2_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getQte2LDocument() {
		return this.qte2LDocument;
	}

	public void setQte2LDocument(BigDecimal qte2LProforma) {
		this.qte2LDocument = qte2LProforma;
	}

	@Column(name = "U1_L_DOCUMENT", length = 20)
	@LgrHibernateValidated(champEntite = "", champBd = "U1_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public String getU1LDocument() {
		return this.u1LDocument;
	}

	public void setU1LDocument(String u1LProforma) {
		this.u1LDocument = u1LProforma;
	}

	@Column(name = "U2_L_DOCUMENT", length = 20)
	@LgrHibernateValidated(champEntite = "", champBd = "U2_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public String getU2LDocument() {
		return this.u2LDocument;
	}

	public void setU2LDocument(String u2LProforma) {
		this.u2LDocument = u2LProforma;
	}

	@Column(name = "PRIX_U_L_DOCUMENT", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "PRIX_U_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getPrixULDocument() {
		return this.prixULDocument;
	}

	public void setPrixULDocument(BigDecimal prixULProforma) {
		this.prixULDocument = prixULProforma;
		if(legrain) {
			calculMontant();
		}
	}

	@Column(name = "TAUX_TVA_L_DOCUMENT", precision = 15, scale = 4)
	@LgrHibernateValidated(champEntite = "", champBd = "TAUX_TVA_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getTauxTvaLDocument() {
		return this.tauxTvaLDocument;
	}

	public void setTauxTvaLDocument(BigDecimal tauxTvaLProforma) {
		this.tauxTvaLDocument = tauxTvaLProforma;
	}

	@Column(name = "COMPTE_L_DOCUMENT", length = 8)
	@LgrHibernateValidated(champEntite = "", champBd = "COMPTE_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public String getCompteLDocument() {
		return this.compteLDocument;
	}

	public void setCompteLDocument(String compteLProforma) {
		this.compteLDocument = compteLProforma;
	}

	@Column(name = "CODE_TVA_L_DOCUMENT", length = 20)
	@LgrHibernateValidated(champEntite = "", champBd = "CODE_TVA_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public String getCodeTvaLDocument() {
		return this.codeTvaLDocument;
	}

	public void setCodeTvaLDocument(String codeTvaLProforma) {
		this.codeTvaLDocument = codeTvaLProforma;
	}

	@Column(name = "CODE_T_TVA_L_DOCUMENT", length = 1)
	@LgrHibernateValidated(champEntite = "", champBd = "CODE_T_TVA_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public String getCodeTTvaLDocument() {
		return this.codeTTvaLDocument;
	}

	public void setCodeTTvaLDocument(String codeTTvaLProforma) {
		this.codeTTvaLDocument = codeTTvaLProforma;
	}

	@Column(name = "MT_HT_L_DOCUMENT", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "MT_HT_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getMtHtLDocument() {
		return this.mtHtLDocument;
	}

	public void setMtHtLDocument(BigDecimal mtHtLProforma) {
		this.mtHtLDocument = LibCalcul.arrondi(mtHtLProforma);
	}

	@Column(name = "MT_TTC_L_DOCUMENT", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "MT_TTC_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getMtTtcLDocument() {
		return this.mtTtcLDocument;
	}

	public void setMtTtcLDocument(BigDecimal mtTtcLProforma) {
		this.mtTtcLDocument = LibCalcul.arrondi(mtTtcLProforma);
	}

	@Column(name = "REM_TX_L_DOCUMENT", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "REM_TX_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getRemTxLDocument() {
		return this.remTxLDocument;
	}

	public void setRemTxLDocument(BigDecimal remTxLProforma) {
		this.remTxLDocument = remTxLProforma;
		if(legrain) {
			//calculMontant();
			taDocument.calculeTvaEtTotaux();
		}
		
	}

	@Column(name = "REM_HT_L_DOCUMENT", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "REM_HT_L_DOCUMENT",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getRemHtLDocument() {
		return this.remHtLDocument;
	}

	public void setRemHtLDocument(BigDecimal remHtLProforma) {
		this.remHtLDocument = remHtLProforma;
	}

	@Column(name = "QUI_CREE_L_DOCUMENT", length = 50)
	public String getQuiCreeLDocument() {
		return this.quiCreeLDocument;
	}

	public void setQuiCreeLDocument(String quiCreeLProforma) {
		this.quiCreeLDocument = quiCreeLProforma;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_CREE_L_DOCUMENT", length = 19)
	public Date getQuandCreeLDocument() {
		return this.quandCreeLDocument;
	}

	public void setQuandCreeLDocument(Date quandCreeLProforma) {
		this.quandCreeLDocument = quandCreeLProforma;
	}

	@Column(name = "QUI_MODIF_L_DOCUMENT", length = 50)
	public String getQuiModifLDocument() {
		return this.quiModifLDocument;
	}

	public void setQuiModifLDocument(String quiModifLProforma) {
		this.quiModifLDocument = quiModifLProforma;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_MODIF_L_DOCUMENT", length = 19)
	public Date getQuandModifLDocument() {
		return this.quandModifLDocument;
	}

	public void setQuandModifLDocument(Date quandModifLProforma) {
		this.quandModifLDocument = quandModifLProforma;
	}

	@Column(name = "IP_ACCES", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}

//	@Version
//	@Column(name = "VERSION_OBJ")
//	public Integer getVersionObj() {
//		return this.versionObj;
//	}
//
//	public void setVersionObj(Integer versionObj) {
//		this.versionObj = versionObj;
//	}

	@Override
	public boolean ligneEstVide() {
		if (taArticle!=null)return false;
		if (!libLDocument.equals(""))return false;		
		return true;
	}
	
	public void initialiseLigne(boolean reset){
		if (reset){
			setLibLDocument("");
			setQteLDocument(null);
			setQte2LDocument(null);
			setU1LDocument("") ;
			setU2LDocument("") ;
			setPrixULDocument(null);
			setTauxTvaLDocument(null);
			setCodeTvaLDocument("");
			setCodeTTvaLDocument("");
			setMtHtLDocument(null);
			setMtTtcLDocument(null);
			setRemTxLDocument(null);
			setRemHtLDocument(null);
		}else {
			setLibLDocument("");
			setQteLDocument(new BigDecimal(0));
			setQte2LDocument(new BigDecimal(0));
			setU1LDocument("");
			setU2LDocument("");
			setPrixULDocument(new BigDecimal(0)) ;
			setTauxTvaLDocument(new BigDecimal(0));
			setCodeTvaLDocument("");
			setCodeTTvaLDocument("");
			setMtHtLDocument(new BigDecimal(0));
			setMtTtcLDocument(new BigDecimal(0));
			setRemTxLDocument(new BigDecimal(0));
			setRemHtLDocument(new BigDecimal(0)) ;
		}
		setTaArticle(null);	
	}

	public void calculMontant() {
		if(qteLDocument!=null && prixULDocument!=null) {
			if(taDocument!=null) {//#JPA
				setTxRemHtDocument(taDocument.getTxRemHtDocument());
				if(taDocument.getTtc()==1) {
					setMtTtcLDocument(qteLDocument.multiply(prixULDocument));
					if(remTxLDocument!=null && remTxLDocument.signum()!=0){
						setMtTtcLDocument(getMtTtcLDocument().subtract(getMtTtcLDocument().multiply(remTxLDocument.divide(new BigDecimal(100)))));
					}
					if( tauxTvaLDocument!=null && tauxTvaLDocument.signum()!=0){
						setMtHtLDocument(mtTtcLDocument.divide(BigDecimal.valueOf(1).add((tauxTvaLDocument.divide(new BigDecimal(100),MathContext.DECIMAL128).setScale(3,BigDecimal.ROUND_HALF_UP)
								)),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP));
					} else {
						setMtHtLDocument(mtTtcLDocument);
					}
					
				} else {
					setMtHtLDocument(qteLDocument.multiply(prixULDocument));
					if(remTxLDocument!=null && remTxLDocument.signum()!=0){
						setMtHtLDocument(getMtHtLDocument().subtract(getMtHtLDocument().multiply(remTxLDocument.divide(new BigDecimal(100)))));
					}
					if( tauxTvaLDocument!=null && tauxTvaLDocument.signum()!=0){
						setMtTtcLDocument(mtHtLDocument.add((mtHtLDocument.multiply(tauxTvaLDocument.divide(new BigDecimal(100))))));
					} else {
						setMtTtcLDocument(mtHtLDocument);
					}
				
				}
				setMtTtcLApresRemiseGlobaleDocument(getMtTtcLDocument());
				setMtHtLApresRemiseGlobaleDocument(getMtHtLDocument());
			}
		}
	}
	
	@Transient
	public BigDecimal getTxRemHtDocument() {
		return txRemHtDocument;
	}

	public void setTxRemHtDocument(BigDecimal txRemHtProforma) {
		this.txRemHtDocument = txRemHtProforma;
	}

	//@Transient
	@Column(name = "MT_HT_APR_REM_GLOBALE", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "MT_APR_REM_GLOBALE",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getMtHtLApresRemiseGlobaleDocument() {
		return mtHtLApresRemiseGlobaleDocument;
	}

	public void setMtHtLApresRemiseGlobaleDocument(
			BigDecimal mtHtLApresRemiseGlobaleDocument) {
		this.mtHtLApresRemiseGlobaleDocument = mtHtLApresRemiseGlobaleDocument;
	}

	//@Transient
	@Column(name = "MT_TTC_APR_REM_GLOBALE", precision = 15)
	@LgrHibernateValidated(champEntite = "", champBd = "MT_TTC_APR_REM_GLOBALE",table = "TA_L_PRELEVEMENT",clazz = TaLPrelevement.class)
	public BigDecimal getMtTtcLApresRemiseGlobaleDocument() {
		return mtTtcLApresRemiseGlobaleDocument;
	}

	public void setMtTtcLApresRemiseGlobaleDocument(
			BigDecimal mtTtcLApresRemiseGlobaleDocument) {
		this.mtTtcLApresRemiseGlobaleDocument = mtTtcLApresRemiseGlobaleDocument;
	}

	public void setLegrain(boolean legrain) {
		this.legrain = legrain;
	}

	public TaLPrelevement clone() {
		TaLPrelevement ligne = new TaLPrelevement();
		try {
			//ligne = (TaLFacture)super.clone();
			ligne.setIdLDocument(0);
			ligne.setVersion(version);
			ligne.setTaTLigne(taTLigne);
			ligne.setTaDocument(taDocument);
			ligne.setTaArticle(taArticle);
			ligne.setNumLigneLDocument(numLigneLDocument);
			ligne.setLibLDocument(libLDocument);
			ligne.setQteLDocument(qteLDocument);
			ligne.setQte2LDocument(qte2LDocument);
			ligne.setU1LDocument(u1LDocument);
			ligne.setU2LDocument(u2LDocument);
			ligne.setPrixULDocument(prixULDocument);
			ligne.setTauxTvaLDocument(tauxTvaLDocument);
			ligne.setTxRemHtDocument(txRemHtDocument);
			ligne.setCompteLDocument(compteLDocument);
			ligne.setCodeTvaLDocument(codeTvaLDocument);
			ligne.setCodeTTvaLDocument(codeTTvaLDocument);
			ligne.setMtHtLDocument(mtHtLDocument);
			ligne.setMtTtcLDocument(mtTtcLDocument);
			ligne.setMtHtLApresRemiseGlobaleDocument(mtHtLApresRemiseGlobaleDocument);
			ligne.setMtTtcLApresRemiseGlobaleDocument(mtTtcLApresRemiseGlobaleDocument);
			ligne.setRemTxLDocument(remTxLDocument);
			ligne.setRemHtLDocument(remHtLDocument);
			ligne.setQuiCreeLDocument(quiCreeLDocument);
			ligne.setQuandCreeLDocument(quandCreeLDocument);
			ligne.setQuiModifLDocument(quiModifLDocument);
			ligne.setQuandModifLDocument(quandModifLDocument);
			ligne.setIpAcces(ipAcces);
			ligne.setVersionObj(versionObj);			
		} catch(Exception cnse) {
			logger.error("",cnse);
		}
		// on renvoie le clone
		return ligne;
	}
}


