package fr.legrain.documents.dao;

// Generated Mar 24, 2009 4:44:04 PM by Hibernate Tools 3.2.0.CR1

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaTRemise generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "TA_L_REMISE")
@SequenceGenerator(name = "GEN_L_FACTURE", sequenceName = "NUM_ID_L_DOCUMENT", allocationSize = 1)
public class TaLRemise implements java.io.Serializable {

	private int idLDocument;
	private TaRemise taDocument;
	private TaReglement taReglement;
	private TaAcompte taAcompte;
	private Integer etat = 0;
	private Integer export = 0;	
	private String quiCreeLDocument;
	private Date quandCreeLDocument;
	private String quiModifLDocument;
	private Date quandModifLDocument;
	private String ipAcces;
	private Integer versionObj;
	private String version;
	
//	@Transient
//	private BigDecimal montantRegle = new BigDecimal(0);

	
	@Transient
	private Boolean accepte=true;
	@Transient
	private String codeDocument;
	@Transient
	private String typeDocument;

	public TaLRemise() {
	}

	public TaLRemise(int idLDocument) {
		this.idLDocument = idLDocument;
	}


	
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GEN_L_FACTURE")
	@Column(name = "ID_L_DOCUMENT", unique = true, nullable = false)
	public int getIdLDocument() {
		return this.idLDocument;
	}

	public void setIdLDocument(int idLDocument) {
		this.idLDocument = idLDocument;
	}

	@Column(name = "VERSION", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
	@JoinColumn(name = "ID_DOCUMENT")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_DOCUMENT",table = "TA_REMISE",clazz = TaRemise.class)
	public TaRemise getTaDocument() {
		return taDocument;
	}

	public void setTaDocument(TaRemise taDocument) {
		this.taDocument = taDocument;
	}

//	@Column(name = "MONTANT_REGLE", precision = 15)
//	@LgrHibernateValidated(champEntite = "", champ = "MONTANT_REGLE",table = "TA_L_REMISE",clazz = TaLRemise.class)
//	public BigDecimal getMontantRegle() {
//		return montantRegle;
//	}
//
//	public void setMontantRegle(BigDecimal montantRegle) {
//		this.montantRegle = montantRegle;
//	}
	
	@Column(name = "ETAT")
	@LgrHibernateValidated(champEntite = "", champBd = "ETAT",table = "TA_L_REMISE",clazz = TaLRemise.class)
	public Integer getEtat() {
		return etat;
	}

	public void setEtat(Integer etat) {
		this.etat = etat;
	}
	
	@Column(name = "EXPORT")
	@LgrHibernateValidated(champEntite = "", champBd = "EXPORT",table = "TA_L_REMISE",clazz = TaLRemise.class)
	public Integer getExport() {
		return export;
	}

	public void setExport(Integer export) {
		this.export = export;
	}
	
	@Column(name = "QUI_CREE_L_DOCUMENT", length = 50)
	public String getQuiCreeLDocument() {
		return this.quiCreeLDocument;
	}

	public void setQuiCreeLDocument(String quiCree) {
		this.quiCreeLDocument = quiCree;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_CREE_L_DOCUMENT", length = 19)
	public Date getQuandCreeLDocument() {
		return this.quandCreeLDocument;
	}

	public void setQuandCreeLDocument(Date quandCreeTRemise) {
		this.quandCreeLDocument = quandCreeTRemise;
	}

	@Column(name = "QUI_MODIF_L_DOCUMENT", length = 50)
	public String getQuiModifLDocument() {
		return this.quiModifLDocument;
	}

	public void setQuiModifLDocument(String quiModifTRemise) {
		this.quiModifLDocument = quiModifTRemise;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUAND_MODIF_L_DOCUMENT", length = 19)
	public Date getQuandModifLDocument() {
		return this.quandModifLDocument;
	}

	public void setQuandModifLDocument(Date quandModifTRemise) {
		this.quandModifLDocument = quandModifTRemise;
	}

	@Column(name = "IP_ACCES", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}

	@Version
	@Column(name = "VERSION_OBJ")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}

	@Transient
	public Boolean getAccepte() {
		return accepte;
	}

	public void setAccepte(Boolean accepte) {
		this.accepte = accepte;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH})
	@JoinColumn(name = "ID_REGLEMENT")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_REGLEMENT",table = "TA_REGLEMENT",clazz = TaReglement.class)
	public TaReglement getTaReglement() {
		if(this.taReglement!=null){
			setTypeDocument(TaReglement.TYPE_DOC);
			setCodeDocument(taReglement.getCodeDocument());
		}
		return this.taReglement;
	}

	public void setTaReglement(TaReglement taReglement) {
		this.taReglement = taReglement;
		if(this.taReglement!=null){
			setTypeDocument(TaReglement.TYPE_DOC);
			setCodeDocument(taReglement.getCodeDocument());
		}
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_ACOMPTE")
	@LgrHibernateValidated(champEntite = "", champBd = "ID_ACOMPTE",table = "TA_ACOMPTE",clazz = TaApporteur.class)
	public TaAcompte getTaAcompte() {
		if(this.taAcompte!=null){
			setTypeDocument(TaAcompte.TYPE_DOC);
			setCodeDocument(taAcompte.getCodeDocument());
		}
		return this.taAcompte;
	}

	public void setTaAcompte(TaAcompte taAcompte) {		
		this.taAcompte = taAcompte;
		if(this.taAcompte!=null){
			setTypeDocument(TaAcompte.TYPE_DOC);
			setCodeDocument(taAcompte.getCodeDocument());
		}
	}

	@Transient
	public String getCodeDocument() {
		return this.codeDocument;
	}
	@Transient
	public void setCodeDocument(String codeFacture) {
		this.codeDocument = codeFacture;
	}

	@Transient
	public String getTypeDocument() {
		return typeDocument;
	}

	@Transient
	public void setTypeDocument(String typeDocument) {
		this.typeDocument=typeDocument;
	}

//	@PreUpdate
	public void verifUpdate() throws Exception{
		if(this.typeDocument==TaAcompte.TYPE_DOC){
			
		}
		
	}
	
}
