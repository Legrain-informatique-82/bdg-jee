<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.22" id="1">
    <property name="comments">Fiche Prelevement -- Legrain ( version 2011 )</property>
    <property name="createdBy">Eclipse BIRT Designer Version 3.7.1.v20110905 Build &lt;3.7.1.v20110905-1820></property>
    <text-property name="title">TaPrelevement</text-property>
    <html-property name="description">EditionsSupp</html-property>
    <property name="subject">Prelevement</property>
    <property name="units">in</property>
    <text-property name="displayName">TaPrelevement</text-property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <parameters>
        <scalar-parameter name="paramID_DOC" id="141">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="capital" id="828">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ape" id="829">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="siret" id="830">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rcs" id="894">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="nomEntreprise" id="895">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="factureTTC" id="896">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ParamCorr" id="1110">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">CORR</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ParamChoix" id="1053">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">choix 1</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="CoupureLigne" id="4043">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">54</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="PageBreakTotaux" id="7421">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">23</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="PageBreakMaxi" id="7422">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">36</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="DataSourceScript" id="7"/>
    </data-sources>
    <data-sets>
        <script-data-set name="DataSetScritp2" id="2623">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dateStart</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dateFin</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">nomInfoEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">pays</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">tvaEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">Tel</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">Fax</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">Email</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">Web</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dateStart</property>
                </structure>
                <structure>
                    <property name="columnName">dateFin</property>
                </structure>
                <structure>
                    <property name="columnName">nomInfoEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">pays</property>
                </structure>
                <structure>
                    <property name="columnName">tvaEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">Tel</property>
                </structure>
                <structure>
                    <property name="columnName">Fax</property>
                </structure>
                <structure>
                    <property name="columnName">Email</property>
                </structure>
                <structure>
                    <property name="columnName">Web</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dateStart</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dateFin</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">nomInfoEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">pays</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">tvaEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">Tel</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">Fax</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">Email</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">Web</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
taInfoEntreprise = null;

entityManager = null;

imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
entityManager = imprimeObjet.listEntityManager.get(0);

jpql = "select tie from TaInfoEntreprise tie";
	   
//a = new Packages.fr.legrain.lib.data.JPABdLgr();	     			  
//query = a.getEntityManager().createQuery(jpql);
query = entityManager.createQuery(jpql);

//imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
//imprimeObjet.l.clear();
for (i = 0; i < query.getResultList().size(); i++) {
	//imprimeObjet.l.add(query.getResultList().get(i));
	taInfoEntreprise = query.getResultList().get(i);
}
//list = imprimeObjet.l;]]></method>
            <method name="fetch"><![CDATA[libDate = new Packages.fr.legrain.lib.data.LibDate();

//if(count< list.size()) {
if(count<1) {
	row["dateStart"] = libDate.dateToString(taInfoEntreprise.getDatedebInfoEntreprise());
	row["dateFin"] =libDate.dateToString(taInfoEntreprise.getDatefinInfoEntreprise());
	row["nomInfoEntreprise"] = taInfoEntreprise.getNomInfoEntreprise();
	row["adresse1"] = taInfoEntreprise.getAdresse1InfoEntreprise();
	row["adresse2"] = taInfoEntreprise.getAdresse2InfoEntreprise();
	row["adresse3"] = taInfoEntreprise.getAdresse3InfoEntreprise();
	row["ville"] = taInfoEntreprise.getVilleInfoEntreprise();
	row["codePostal"] = taInfoEntreprise.getCodepostalInfoEntreprise();
	row["pays"] = taInfoEntreprise.getPaysInfoEntreprise();
	row["tvaEntreprise"] = taInfoEntreprise.getTvaIntraInfoEntreprise();
	row["Tel"] = taInfoEntreprise.getTelInfoEntreprise();
	row["Fax"] = taInfoEntreprise.getFaxInfoEntreprise();
	row["Email"] = taInfoEntreprise.getEmailInfoEntreprise();
	row["Web"] = taInfoEntreprise.getWebInfoEntreprise();
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript1" id="2652">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dateFacture</property>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">libEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">codeTCivilite</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">nomTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">prenomTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">codeTEntity</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">codeTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">tvaIComCompl</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">dateEch</property>
                    <property name="dataType">date</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeFacture</property>
                </structure>
                <structure>
                    <property name="columnName">dateFacture</property>
                </structure>
                <structure>
                    <property name="columnName">libEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">codeTCivilite</property>
                </structure>
                <structure>
                    <property name="columnName">nomTiers</property>
                </structure>
                <structure>
                    <property name="columnName">prenomTiers</property>
                </structure>
                <structure>
                    <property name="columnName">codeTEntity</property>
                </structure>
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">codeTiers</property>
                </structure>
                <structure>
                    <property name="columnName">tvaIComCompl</property>
                </structure>
                <structure>
                    <property name="columnName">dateEch</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dateFacture</property>
                        <property name="dataType">date</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">libEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">codeTCivilite</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">nomTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">prenomTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">codeTEntity</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">codeTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">tvaIComCompl</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">dateEch</property>
                        <property name="dataType">date</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
//liste = imprimeObjet.list1;
liste = imprimeObjet.m.get("TaPrelevement");
//facture = imprimeObjet.m.get("TaFacture");]]></method>
            <method name="fetch"><![CDATA[if(count< liste.size()) {
//if(count< 1) {
   facture = liste.get(count);
   row["codeFacture"] = facture.getCodeDocument();
   row["dateFacture"] = facture.getDateDocument();

   //row["libEntreprise"] = facture.getTaTiers().getTaEntreprise().getLiblEntreprise();
   if(facture.getTaInfosDocument().getCodeTCivilite()==null){
    row["codeTCivilite"] = " ";
   }else{
   	row["codeTCivilite"] = facture.getTaInfosDocument().getCodeTCivilite();	
   }
	  
   row["nomTiers"] = facture.getTaInfosDocument().getNomTiers();
   if(facture.getTaInfosDocument().getPrenomTiers() == null){
    row["prenomTiers"] = " ";
   }else{
    row["prenomTiers"] = facture.getTaInfosDocument().getPrenomTiers();
   }
    
   if(facture.getTaInfosDocument().getCodeTEntite()==null){
    row["codeTEntity"] = " ";
   }else{
   	row["codeTEntity"] = facture.getTaInfosDocument().getCodeTEntite();	
   }
    
   if(facture.getTaInfosDocument().getNomEntreprise()==null){
    row["libEntreprise"] = " ";
   }else{
   	row["libEntreprise"] = facture.getTaInfosDocument().getNomEntreprise();	
   }
   if(facture.getTaInfosDocument().getAdresse1()==null){
    row["adresse1"] = " ";
   }else{
   	row["adresse1"] = facture.getTaInfosDocument().getAdresse1();	
   } 
   
   if(facture.getTaInfosDocument().getAdresse2()==null){
    row["adresse2"] = " ";
   }else{
   	row["adresse2"] = facture.getTaInfosDocument().getAdresse2();	
   } 
   
   if(facture.getTaInfosDocument().getAdresse3()==null){
    row["adresse3"] = " ";
   }else{
   	row["adresse3"] = facture.getTaInfosDocument().getAdresse3();	
   } 
   
   if(facture.getTaInfosDocument().getVille()==null){
    row["ville"] = " ";
   }else{
   	row["ville"] = facture.getTaInfosDocument().getVille();	
   } 
   
   if(facture.getTaInfosDocument().getCodepostal()==null){
    row["codePostal"] = " ";
   }else{
   	row["codePostal"] = facture.getTaInfosDocument().getCodepostal();	
   } 

   row["codeTiers"] = facture.getTaTiers().getCodeTiers();
   
   if(facture.getTaInfosDocument().getTvaIComCompl()==null){
    row["tvaIComCompl"] = " ";
   }else{
   	row["tvaIComCompl"] = facture.getTaInfosDocument().getTvaIComCompl();	
   } 
   
   row["dateEch"] = facture.getDateEchDocument();

	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript3" id="2799">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeArticle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">libLFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">qteLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">u1Lfacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">prixULFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">rem</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codeTva</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">mtHTLFacture</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeArticle</property>
                </structure>
                <structure>
                    <property name="columnName">libLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">qteLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">u1Lfacture</property>
                </structure>
                <structure>
                    <property name="columnName">prixULFacture</property>
                </structure>
                <structure>
                    <property name="columnName">rem</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">codeTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">mtHTLFacture</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeArticle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">libLFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">qteLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">u1Lfacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">prixULFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">rem</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codeTva</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">mtHTLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idDocument = null;
listLDocument = null;
document = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
sizeTotal = 0;
entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
nombreFois = 0;
document = imprimeObjet.m.get("TaPrelevement").get(0);

idDocument = document.getIdDocument();

jpql = "select tlp from TaLPrelevement tlp where tlp.taDocument.idDocument = "+idDocument+" order by tlp.numLigneLDocument";
query = entityManager.createQuery(jpql);
listLDocument = query.getResultList();

//nombreFois = new Packages.java.math.BigDecimal(listLDocument.size()/52).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
nombreFois = new Packages.java.math.BigDecimal(listLDocument.size()/19).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
//sizeTotal = nombreFois*53;
if(listLDocument.size() <= 19 ){
	sizeTotal = 19;
}else{
	//sizeTotal = sizeTotal = nombreFois*52;
	sizeTotal = sizeTotal = nombreFois*19;
}





]]></method>
            <method name="fetch"><![CDATA[if(count< sizeTotal ) {
	if(count < listLDocument.size()){
   listDocument = listLDocument.get(count);
   
   if(listDocument.getTaArticle() == null){
      row["codeArticle"] = "";
   }else{
   	  row["codeArticle"] = listDocument.getTaArticle().getCodeArticle();
   }
   row["libLFacture"] = listDocument.getLibLDocument();
   
   if(listDocument.getQteLDocument()!= null ){
	  row["qteLFacture"] = listDocument.getQteLDocument().floatValue();
   }
   row["u1Lfacture"] = listDocument.getU1LDocument();
   
   if(listDocument.getPrixULDocument()!= null ){
	  row["prixULFacture"] = listDocument.getPrixULDocument().floatValue();
   }
   if(listDocument.getRemTxLDocument() == null){
   	  row["rem"] = null;
   }else{
   	  row["rem"] = listDocument.getRemTxLDocument().floatValue();	
   }
   row["codeTva"] = listDocument.getCodeTvaLDocument();
   row["TTC"] = listDocument.getTaDocument().getTtc();
   
   montantTtc = null;
   montantHt = null;
   if(listDocument.getMtTtcLDocument() != null){
   		montantTtc = listDocument.getMtTtcLDocument().floatValue();
   }
   if(listDocument.getMtHtLDocument() != null){
   		montantHt = listDocument.getMtHtLDocument().floatValue();
   }
   
   if(row["TTC"]==1){
   	row["montant"] = montantTtc;
   }else{
   	row["montant"] = montantHt;
   }
  }
	count++;
	return true;
	
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript9" id="3096">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeArticle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">libLFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">qteLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">u1Lfacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">prixULFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">rem</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codeTva</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">mtHTLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">flagVisible</property>
                    <property name="dataType">boolean</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeArticle</property>
                </structure>
                <structure>
                    <property name="columnName">libLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">qteLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">u1Lfacture</property>
                </structure>
                <structure>
                    <property name="columnName">prixULFacture</property>
                </structure>
                <structure>
                    <property name="columnName">rem</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">codeTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">mtHTLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">flagVisible</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeArticle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">libLFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">qteLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">u1Lfacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">prixULFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">rem</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codeTva</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">mtHTLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">flagVisible</property>
                        <property name="dataType">boolean</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idDocument = null;
listLDocument = null;
document = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
sizeTotal = 0;
entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
nombreFois = 0;
document = imprimeObjet.m.get("TaPrelevement").get(0);

idDocument = document.getIdDocument();

jpql = "select tlp from TaLPrelevement tlp where tlp.taDocument.idDocument = "+idDocument+" order by tlp.numLigneLDocument";
query = entityManager.createQuery(jpql);
listLDocument = query.getResultList();

//nombreFois = new Packages.java.math.BigDecimal(listLDocument.size()/52).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
nombreFois = new Packages.java.math.BigDecimal(listLDocument.size()/19).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
row["flagVisible"] = true;
if(listLDocument.size() <= 19 ){
	sizeTotal = 19;
}else{
	//sizeTotal = sizeTotal = nombreFois*52;
	sizeTotal = sizeTotal = nombreFois*19;
}





]]></method>
            <method name="fetch"><![CDATA[if(count< sizeTotal ) {
	if(count < listLDocument.size()){
   listDocument = listLDocument.get(count);
   
   if(listDocument.getTaArticle() == null){
      row["codeArticle"] = "";
   }else{
   	  row["codeArticle"] = listDocument.getTaArticle().getCodeArticle();
   }
   row["libLFacture"] = listDocument.getLibLDocument();
   
   if(listDocument.getQteLDocument()!= null ){
	  row["qteLFacture"] = listDocument.getQteLDocument().floatValue();
   }
   row["u1Lfacture"] = listDocument.getU1LDocument();
   
   if(listDocument.getPrixULDocument()!= null ){
	  row["prixULFacture"] = listDocument.getPrixULDocument().floatValue();
   }
   if(listDocument.getRemTxLDocument() == null){
   	  row["rem"] = null;
   }else{
   	  row["rem"] = listDocument.getRemTxLDocument().floatValue();	
   }
   row["codeTva"] = listDocument.getCodeTvaLDocument();
   row["TTC"] = listDocument.getTaDocument().getTtc();
   
   montantTtc = null;
   montantHt = null;
   if(listDocument.getMtTtcLDocument() != null){
   		montantTtc = listDocument.getMtTtcLDocument().floatValue();
   }
   if(listDocument.getMtHtLDocument() != null){
   		montantHt = listDocument.getMtHtLDocument().floatValue();
   }
   
   if(row["TTC"]==1){
   	row["montant"] = montantTtc;
   }else{
   	row["montant"] = montantHt;
   }
  }
  else{
  	row["flagVisible"] = true;
  }
	count++;
	return true;
	
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript10" id="3249">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeArticle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">libLFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">qteLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">u1Lfacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">prixULFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">rem</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codeTva</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">mtHTLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">flagVisible</property>
                    <property name="dataType">boolean</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeArticle</property>
                </structure>
                <structure>
                    <property name="columnName">libLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">qteLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">u1Lfacture</property>
                </structure>
                <structure>
                    <property name="columnName">prixULFacture</property>
                </structure>
                <structure>
                    <property name="columnName">rem</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">codeTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">mtHTLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">flagVisible</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeArticle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">libLFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">qteLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">u1Lfacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">prixULFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">rem</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codeTva</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">mtHTLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">flagVisible</property>
                        <property name="dataType">boolean</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeClose"><![CDATA[if(count< sizeTotal ) {
	if((count/19) == nombreFois){
		row["flagVisible"] = true;
	}
	count++;
	return true;	
}
return false;]]></method>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=1;
idDocument = null;
listLDocument = null;
document = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
sizeTotal = 0;
entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
nombreFois = 0;
document = imprimeObjet.m.get("TaPrelevement").get(0);

idDocument = document.getIdDocument();

jpql = "select tlp from TaLPrelevement tlp where tlp.taDocument.idDocument = "+idDocument+" order by tlp.numLigneLDocument";
query = entityManager.createQuery(jpql);
listLDocument = query.getResultList();

//pour traiter les retours à la ligne
listeFinale = new Packages.java.util.LinkedList;
listeFinale=listLDocument; // à enlever si je remet le traitement des retours à la ligne
document.setLignes(listLDocument);
listeFinale=document.calculNbReelLigneImpression(params["CoupureLigne"].value,listLDocument);

nombreLineBreak = 19;
//nombreFois = new Packages.java.math.BigDecimal(listLDocument.size()/52).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
nombreFois = new Packages.java.math.BigDecimal(listeFinale.size()/nombreLineBreak).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
//row["flagVisible"] = true;
if(listeFinale.size() <= nombreLineBreak ){
	sizeTotal = nombreLineBreak;
}else{
	//sizeTotal = sizeTotal = nombreFois*52;
	sizeTotal = sizeTotal = nombreFois*nombreLineBreak;
}





]]></method>
            <method name="fetch"><![CDATA[if(count<= sizeTotal ) {
	a = count%nombreLineBreak;
	if(a == 0 &amp;&amp; count != 0 &amp;&amp; count != sizeTotal){
		row["flagVisible"] = false;
	}
	else{
		row["flagVisible"] = true;
	}
	
	if(count <= listeFinale.size()){
		listDocument = listeFinale.get(count-1);
		if(listDocument.getTaArticle() == null){
      		row["codeArticle"] = "";
   		}else{
   	  		row["codeArticle"] = listDocument.getTaArticle().getCodeArticle();
   		}
   		/** 29/06/2010**/
   		
   		if(listDocument.getLibLDocument().length() > 57){
   			row["libLFacture"] = listDocument.getLibLDocument().substring(0,57);
   		}else{
   			row["libLFacture"] = listDocument.getLibLDocument();
   		}
   		/**************/
   		
   		if(listDocument.getQteLDocument()!= null ){
	  		row["qteLFacture"] = listDocument.getQteLDocument().floatValue();
   		}
   		row["u1Lfacture"] = listDocument.getU1LDocument();
   		
   		if(listDocument.getPrixULDocument()!= null ){
	  		row["prixULFacture"] = listDocument.getPrixULDocument().floatValue();
   		}
   		
   		if(listDocument.getRemTxLDocument() == null){
   	  		row["rem"] = null;
   		}else{
   	  		row["rem"] = listDocument.getRemTxLDocument().floatValue();	
   		}
   		
   		row["codeTva"] = listDocument.getCodeTvaLDocument();
   		row["TTC"] = listDocument.getTaDocument().getTtc();
   		
   		montantTtc = null;
   		montantHt = null;
   		
   		if(listDocument.getMtTtcLDocument() != null){
   			montantTtc = listDocument.getMtTtcLDocument().floatValue();
   		}
   		if(listDocument.getMtHtLDocument() != null){
   			montantHt = listDocument.getMtHtLDocument().floatValue();
   		}
   		if(row["TTC"]==1){
   			row["montant"] = montantTtc;
   		}else{
   			row["montant"] = montantHt;
   		}
	}
	count++;
	return true;	
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript4" id="2840">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeTvaRecup</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">taux</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">mt</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">mtRemis</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">mtTva</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">remise</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeTvaRecup</property>
                </structure>
                <structure>
                    <property name="columnName">taux</property>
                </structure>
                <structure>
                    <property name="columnName">mt</property>
                </structure>
                <structure>
                    <property name="columnName">mtRemis</property>
                </structure>
                <structure>
                    <property name="columnName">mtTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">remise</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeTvaRecup</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">taux</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">mt</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">mtRemis</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">mtTva</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">remise</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
ttc = null;
remise = null ;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
facture = imprimeObjet.m.get("TaPrelevement").get(0);
ttc = facture.getTtc();
if(facture.getTxRemHtDocument() != null){
   	remise = facture.getTxRemHtDocument().floatValue();
}else{
   	remise = 0.0;
}
facture.calculLignesTva();
listLignesTVA = facture.getLignesTVA();
]]></method>
            <method name="fetch"><![CDATA[if(count< listLignesTVA.size()) {
//if(count< 1) {
   lineTva = listLignesTVA.get(count) 
   
   row["codeTvaRecup"] = lineTva.getCodeTva();
   //row["taux"] = lineTva.getTauxTva().toString()+"%";
   row["taux"] = lineTva.getTauxTva().floatValue();
   row["TTC"] = ttc;
   if(row["TTC"] == 1) {
    row["mt"] = lineTva.getMontantTotalTtc().floatValue();
    row["mtRemis"] = lineTva.getMontantTotalTtcAvecRemise().floatValue();
   }else {
	row["mt"] = lineTva.getMontantTotalHt().floatValue();
	row["mtRemis"] = lineTva.getMontantTotalHtAvecRemise().floatValue();
   }
    row["mtTva"] = lineTva.getMtTva().floatValue();
	row["remise"] = remise;
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript5" id="2938">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">remisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">montantNT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">montantNTTva</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">montantTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">remisTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">montantNTTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">regle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">netPay</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">tauxRemisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">tauxRemisTTC</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">commtaire</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">remisHT</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">montantNT</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTva</property>
                </structure>
                <structure>
                    <property name="columnName">montantTtc</property>
                </structure>
                <structure>
                    <property name="columnName">remisTtc</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTtc</property>
                </structure>
                <structure>
                    <property name="columnName">regle</property>
                </structure>
                <structure>
                    <property name="columnName">netPay</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisHT</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisTTC</property>
                </structure>
                <structure>
                    <property name="columnName">commtaire</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">remisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">montantNT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">montantNTTva</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">montantTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">remisTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">montantNTTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">regle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">netPay</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">tauxRemisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">tauxRemisTTC</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">commtaire</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
ttc = null;
taFacture = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();

taFacture = imprimeObjet.m.get("TaPrelevement").get(0);
//taFacture.calculeTvaEtTotaux();


facture = new Packages.fr.legrain.documents.dao.TaPrelevement();
facture = taFacture;

]]></method>
            <method name="fetch"><![CDATA[//if(count< listLFacture.size()) {
if(count< 1) {
   
   //facture.calculeTvaEtTotaux();
   
   row["TTC"] = facture.getTtc();
   row["remisHT"] = facture.getRemHtDocument().floatValue();
   //row["remisHT"] = facture.getNetAPayer().floatValue();
   
   //row["montant"] = facture.getMtHtCalc().floatValue();
   if(row["TTC"]==1){
   	row["montant"] = facture.getMtTtcAvantRemiseGlobaleCalc().floatValue();
   }else{
   	row["montant"] = facture.getMtHtCalc().floatValue();
   	
   }
   row["montantNT"] = facture.getNetHtCalc().floatValue();
   row["montantNTTva"] = facture.getNetTvaCalc().floatValue();
   //row["montantTtc"] = row["montantNTTva"] + facture.getNetHtCalc().floatValue();
   row["montantTtc"] = facture.getMtTtcCalc().floatValue();
   row["remisTtc"] = facture.getRemTtcDocument().floatValue();
   //row["remisTtc"] = row["montant"]-row["montantNT"];
   row["montantNTTtc"] = facture.getNetTtcCalc().floatValue();
   row["regle"] = facture.getRegleDocument().floatValue(); 
   row["netPay"] = facture.getNetAPayer().floatValue(); 
   //row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   
   if(facture.getTxRemHtDocument() != null){
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   	row["tauxRemisHT"] = facture.getTxRemHtDocument();
   }else{
   	row["tauxRemisHT"] = 0.0;
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   }
    if(facture.getTxRemTtcDocument() != null){
   	//row["tauxRemisTTC"] = facture.getTxRemTtcDocument().floatValue();
   	row["tauxRemisTTC"] = facture.getTxRemTtcDocument();
   }else{
   	row["tauxRemisTTC"] = 0.0;
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   }
   row["commtaire"] = facture.getCommentaire();


   
   count++;
   return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript6" id="2988">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">pays</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">flagVisible</property>
                    <property name="dataType">boolean</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">pays</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">flagVisible</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">pays</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">flagVisible</property>
                        <property name="dataType">boolean</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
taFacture = null;
taAdresse = null;

entityManager = null;

imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
entityManager = imprimeObjet.listEntityManager.get(0);

taFacture = imprimeObjet.m.get("TaPrelevement").get(0);
id = taFacture.getTaTiers().getIdTiers();



jpql = "select taA from TaAdresse taA where taA.taTiers.idTiers="+id+" and taA.taTAdr.codeTAdr='"+params["ParamCorr"]+"'";
//jpql = "select taA from TaAdresse taA where taA.taTiers.idTiers=? and taA.taTAdr.codeTAdr=?";

//a = new Packages.fr.legrain.lib.data.JPABdLgr();	     			  
//query = a.getEntityManager().createQuery(jpql);
row["flagVisible"] = true;

query = entityManager.createQuery(jpql);
if(query.getResultList().size()!=0){
	taAdresse = query.getResultList().get(0);
}




]]></method>
            <method name="fetch"><![CDATA[//if(count< listAdresse.size()) {
if(count<1){
	if(taAdresse!=null){
	row["adresse1"] = taAdresse.getAdresse1Adresse();
	row["adresse2"] = taAdresse.getAdresse2Adresse();
	row["adresse3"] = taAdresse.getAdresse3Adresse();
	row["ville"] = taAdresse.getVilleAdresse();
	row["pays"] = taAdresse.getPaysAdresse();
	row["codePostal"] = taAdresse.getCodepostalAdresse();
	//row["codePostal"] = "ffff";
	row["flagVisible"] = false;
	count++;
   	return true;
	}


}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetforList" id="3046">
            <structure name="cachedMetaData"/>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
]]></method>
            <method name="fetch"><![CDATA[if(count< 1) {
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript51" id="3567">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">remisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">montantNT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">montantNTTva</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">montantTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">remisTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">montantNTTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">regle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">netPay</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">tauxRemisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">tauxRemisTTC</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">commtaire</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">libellePaiement</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">acompte</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">16</property>
                    <property name="name">resteRegler</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">remisHT</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">montantNT</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTva</property>
                </structure>
                <structure>
                    <property name="columnName">montantTtc</property>
                </structure>
                <structure>
                    <property name="columnName">remisTtc</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTtc</property>
                </structure>
                <structure>
                    <property name="columnName">regle</property>
                </structure>
                <structure>
                    <property name="columnName">netPay</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisHT</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisTTC</property>
                </structure>
                <structure>
                    <property name="columnName">commtaire</property>
                </structure>
                <structure>
                    <property name="columnName">libellePaiement</property>
                </structure>
                <structure>
                    <property name="columnName">acompte</property>
                </structure>
                <structure>
                    <property name="columnName">resteRegler</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">remisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">montantNT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">montantNTTva</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">montantTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">remisTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">montantNTTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">regle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">netPay</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">tauxRemisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">tauxRemisTTC</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">commtaire</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">libellePaiement</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">acompte</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">resteRegler</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
ttc = null;
taFacture = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();

taFacture = imprimeObjet.m.get("TaPrelevement").get(0);
//taFacture.calculeTvaEtTotaux();


facture = new Packages.fr.legrain.documents.dao.TaPrelevement();
facture = taFacture;

]]></method>
            <method name="fetch"><![CDATA[//if(count< listLFacture.size()) {
if(count< 1) {
   
   //facture.calculeTvaEtTotaux();
   
   row["TTC"] = facture.getTtc();
   row["remisHT"] = facture.getRemHtDocument().floatValue();
   //row["remisHT"] = facture.getNetAPayer().floatValue();
   
   //row["montant"] = facture.getMtHtCalc().floatValue();
   if(row["TTC"]==1){
   	row["montant"] = facture.getMtTtcAvantRemiseGlobaleCalc().floatValue();
   }else{
   	row["montant"] = facture.getMtHtCalc().floatValue();
   	
   }
   row["montantNT"] = facture.getNetHtCalc().floatValue();
   row["montantNTTva"] = facture.getNetTvaCalc().floatValue();
   //row["montantTtc"] = row["montantNTTva"] + facture.getNetHtCalc().floatValue();
   row["montantTtc"] = facture.getMtTtcCalc().floatValue();
   row["remisTtc"] = facture.getRemTtcDocument().floatValue();
   //row["remisTtc"] = row["montant"]-row["montantNT"];
   row["montantNTTtc"] = facture.getNetTtcCalc().floatValue();
   row["regle"] = facture.getRegleDocument().floatValue(); 
   row["netPay"] = facture.getNetAPayer().floatValue(); 
   //row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   
   if(facture.getTxRemHtDocument() != null){
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   	row["tauxRemisHT"] = facture.getTxRemHtDocument();
   }else{
   	row["tauxRemisHT"] = 0.0;
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   }
    if(facture.getTxRemTtcDocument() != null){
   	//row["tauxRemisTTC"] = facture.getTxRemTtcDocument().floatValue();
   	row["tauxRemisTTC"] = facture.getTxRemTtcDocument();
   }else{
   	row["tauxRemisTTC"] = 0.0;
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   }
   row["commtaire"] = facture.getCommentaire();
   //row["libellePaiement"] = facture.getLibellePaiement();
   //row["acompte"] = facture.getAcomptes().floatValue();
   //row["resteRegler"] = facture.getResteARegler().floatValue();
   
   count++;
   return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataCompteBanque" id="3973">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">compte</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">guichet</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">codeBanque</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">cleRib</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">nomBanque</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">datePrelevement</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">compte</property>
                </structure>
                <structure>
                    <property name="columnName">guichet</property>
                </structure>
                <structure>
                    <property name="columnName">codeBanque</property>
                </structure>
                <structure>
                    <property name="columnName">cleRib</property>
                </structure>
                <structure>
                    <property name="columnName">nomBanque</property>
                </structure>
                <structure>
                    <property name="columnName">datePrelevement</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">compte</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">guichet</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">codeBanque</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">cleRib</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">nomBanque</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">datePrelevement</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
countCompte=0;
idDocument = null;
taCompteBanque = null; 
taCompteBanque =new Packages.fr.legrain.tiers.dao.TaCompteBanque();
document = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
libDate = new Packages.fr.legrain.lib.data.LibDate();
entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
document = imprimeObjet.m.get("TaPrelevement").get(0);
idTiers = document.getTaTiers().getIdTiers();

jpql = "select cptB from TaCompteBanque cptB where cptB.taTiers.idTiers = "+idTiers+" and cptB.taTBanque.codeTBanque like 'PREL'";
query = entityManager.createQuery(jpql);
if(query.getResultList()!=null &amp;&amp; query.getResultList().size()>0){
taCompteBanque = query.getResultList().get(0);
countCompte++;
}

]]></method>
            <method name="fetch"><![CDATA[libDate = new Packages.fr.legrain.lib.data.LibDate();
if(count<1){
row["datePrelevement"] = libDate.dateToString(document.getDateEchDocument());
//row["datePrelevement"] = "01/01/2010";
if(countCompte>0){
  row["compte"] = taCompteBanque.getCompte();
  row["guichet"] = taCompteBanque.getCodeGuichet();
  row["codeBanque"] = taCompteBanque.getCodeBanque();
  row["cleRib"] = taCompteBanque.getCleRib();
  row["nomBanque"] = taCompteBanque.getNomBanque();
}
count++;
return true;
}
return false;]]></method>
        </script-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">"Verdana"</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">a4</property>
            <property name="topMargin">0cm</property>
            <property name="leftMargin">0.5cm</property>
            <property name="bottomMargin">0.2cm</property>
            <property name="rightMargin">0.5cm</property>
            <property name="showHeaderOnFirst">true</property>
            <property name="floatingFooter">false</property>
            <property name="headerHeight">0.5cm</property>
            <page-header>
                <text-data id="3968">
                    <property name="fontFamily">serif</property>
                    <property name="fontSize">7pt</property>
                    <expression name="valueExpr">var date = new Date();
var day =date.getDate();
var month =date.getMonth()+1;
var year =date.getYear()+1900;
if(day&lt;=9){day = "0"+date;}
if(month&lt;=9){month = "0"+month;}
"Imprimé par le Bureau de Gestion le "+day+"/"+month+"/"+year;</expression>
                    <property name="contentType">html</property>
                </text-data>
            </page-header>
            <page-footer>
                <grid id="3907">
                    <column id="3908">
                        <property name="width">2.5520833333333335in</property>
                    </column>
                    <column id="3930">
                        <property name="width">2.625in</property>
                    </column>
                    <column id="3927">
                        <property name="width">2.5833333333333335in</property>
                    </column>
                    <row id="3909">
                        <cell id="3910">
                            <property name="colSpan">3</property>
                            <property name="rowSpan">1</property>
                            <property name="textAlign">center</property>
                            <image id="3969">
                                <property name="height">105px</property>
                                <property name="width">614px</property>
                                <property name="source">embed</property>
                                <property name="imageName">bandeau_courrier_bas_new.jpg</property>
                            </image>
                        </cell>
                    </row>
                    <row id="3958">
                        <cell id="3959">
                            <property name="colSpan">3</property>
                            <property name="rowSpan">1</property>
                            <label id="3962">
                                <property name="fontFamily">serif</property>
                                <property name="fontSize">7pt</property>
                                <text-property name="text">Les marchandises restent notre propriété jusqu'au paiement intégral.Sauf mention particulière, nos factures sont payables au comptant sans escompte.Au-delà de la date d'échéance, une pénalité égale à 1,5 fois le taux de l'intérêt légal sera appliquée.</text-property>
                            </label>
                        </cell>
                    </row>
                    <row id="3911">
                        <cell id="3912"/>
                        <cell id="3929"/>
                        <cell id="3926">
                            <grid id="3914">
                                <column id="3915">
                                    <property name="width">1.5208333333333333in</property>
                                </column>
                                <column id="3916">
                                    <property name="width">0.34375in</property>
                                </column>
                                <column id="3917">
                                    <property name="width">0.65625in</property>
                                </column>
                                <row id="3918">
                                    <property name="height">0.3cm</property>
                                    <cell id="3919">
                                        <auto-text id="3920">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontSize">8pt</property>
                                            <property name="textAlign">right</property>
                                            <property name="type">page-number</property>
                                        </auto-text>
                                    </cell>
                                    <cell id="3921">
                                        <text id="3922">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontSize">8pt</property>
                                            <property name="textAlign">center</property>
                                            <property name="contentType">plain</property>
                                            <text-property name="content"><![CDATA[/]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="3923">
                                        <auto-text id="3924">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontSize">8pt</property>
                                            <property name="textAlign">left</property>
                                            <property name="type">total-page</property>
                                        </auto-text>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <list id="3014">
            <property name="dataSet">DataSetforList</property>
            <property name="pageBreakInterval">400</property>
            <header>
                <grid id="2671">
                    <property name="backgroundRepeat">no-repeat</property>
                    <property name="fontFamily">serif</property>
                    <property name="zIndex">0</property>
                    <property name="height">4.302083333333333in</property>
                    <property name="width">7.791666666666667in</property>
                    <list-property name="boundDataColumns">
                        <structure>
                            <property name="name">ss</property>
                            <expression name="expression">params["ParamChoix"].value</expression>
                            <property name="dataType">string</property>
                        </structure>
                    </list-property>
                    <column id="2672">
                        <property name="width">2.0729166666666665in</property>
                    </column>
                    <column id="3829">
                        <property name="width">0.20833333333333334in</property>
                    </column>
                    <column id="2673">
                        <property name="width">1.78125in</property>
                    </column>
                    <column id="2674">
                        <property name="width">3.7291666666666665in</property>
                    </column>
                    <row id="2675">
                        <cell id="2676">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">1</property>
                            <property name="borderTopColor">#000000</property>
                            <property name="borderTopStyle">dashed</property>
                            <property name="borderTopWidth">thin</property>
                            <image id="3754">
                                <property name="height">3.5cm</property>
                                <property name="width">5cm</property>
                                <property name="source">embed</property>
                                <property name="imageName">icon_par1.png</property>
                            </image>
                        </cell>
                        <cell id="3824">
                            <property name="colSpan">2</property>
                            <property name="rowSpan">1</property>
                            <property name="borderTopColor">#000000</property>
                            <property name="borderTopStyle">dashed</property>
                            <property name="borderTopWidth">thin</property>
                            <grid id="3838">
                                <property name="fontFamily">"FreeSans"</property>
                                <property name="color">#000000</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">dashed</property>
                                <property name="borderRightWidth">thin</property>
                                <column id="3839"/>
                                <row id="3842">
                                    <cell id="3843">
                                        <data id="3945">
                                            <property name="fontFamily">serif</property>
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Fax</property>
                                                    <expression name="expression">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Email</property>
                                                    <expression name="expression">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Web</property>
                                                    <expression name="expression">dataSetRow["Web"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Adresse</property>
                                                    <expression name="expression" type="javascript">BirtStr.trim(dataSetRow["adresse1"])+BirtStr.trim(dataSetRow["adresse2"])+BirtStr.trim(dataSetRow["adresse3"])</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">Adresse</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3844">
                                    <cell id="3845">
                                        <data id="3950">
                                            <property name="fontFamily">serif</property>
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Fax</property>
                                                    <expression name="expression">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Email</property>
                                                    <expression name="expression">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Web</property>
                                                    <expression name="expression">dataSetRow["Web"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostalAndVille</property>
                                                    <expression name="expression" type="javascript">BirtStr.trim(dataSetRow["codePostal"])+"  "+BirtStr.trim(dataSetRow["ville"])</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">codePostalAndVille</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3846">
                                    <cell id="3847">
                                        <data id="3951">
                                            <property name="fontFamily">serif</property>
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Fax</property>
                                                    <expression name="expression">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Email</property>
                                                    <expression name="expression">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Web</property>
                                                    <expression name="expression">dataSetRow["Web"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pay</property>
                                                    <expression name="expression" type="javascript">BirtStr.trim(dataSetRow["pays"])</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">pay</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3848">
                                    <cell id="3849">
                                        <data id="3952">
                                            <property name="fontFamily">serif</property>
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Fax</property>
                                                    <expression name="expression">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Email</property>
                                                    <expression name="expression">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Web</property>
                                                    <expression name="expression">dataSetRow["Web"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">InfotvaEntreprise</property>
                                                    <expression name="expression" type="javascript">"N° TVA : "+BirtStr.trim(dataSetRow["tvaEntreprise"])</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">InfotvaEntreprise</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                        <cell id="2678">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">1</property>
                            <label id="3836">
                                <property name="fontFamily">serif</property>
                                <property name="fontSize">16pt</property>
                                <property name="fontWeight">bold</property>
                                <property name="marginLeft">0.3cm</property>
                                <text-property name="text">AVIS DE PRELEVEMENT: </text-property>
                            </label>
                            <data id="3232">
                                <property name="fontFamily">serif</property>
                                <property name="fontSize">10pt</property>
                                <property name="fontWeight">bold</property>
                                <property name="marginLeft">0.3cm</property>
                                <property name="textAlign">left</property>
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeDocument</property>
                                        <expression name="expression" type="javascript">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">codeDocument</property>
                            </data>
                            <text-data id="3901">
                                <property name="fontFamily">serif</property>
                                <property name="marginLeft">0.3cm</property>
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                </list-property>
                                <expression name="valueExpr">var date =row["dateFacture"].getDate();
var month =row["dateFacture"].getMonth()+1;
var year =row["dateFacture"].getYear()+1900;
if(date&lt;=9){date = "0"+date;}
if(month&lt;=9){month = "0"+month;}
"Le : ".bold()+date+"/"+month+"/"+year;</expression>
                                <property name="contentType">html</property>
                            </text-data>
                            <text-data id="3902">
                                <property name="fontFamily">serif</property>
                                <property name="marginLeft">0.3cm</property>
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                </list-property>
                                <expression name="valueExpr">//"Valable jusqu'au : ".bold()+"29"+"/"+"07"+"/"+"2010";
var date =row["dateEch"].getDate();
var month =row["dateEch"].getMonth()+1;
var year =row["dateEch"].getYear()+1900;
if(date&lt;=9){date = "0"+date;}
if(month&lt;=9){month = "0"+month;}
"Date du prélèvement : ".bold()+date+"/"+month+"/"+year;</expression>
                                <property name="contentType">html</property>
                            </text-data>
                            <grid id="3854">
                                <column id="3855"/>
                                <row id="3856">
                                    <cell id="3857">
                                        <property name="textAlign">right</property>
                                        <image id="3665">
                                            <property name="height">1.6cm</property>
                                            <property name="width">3.3cm</property>
                                            <property name="source">embed</property>
                                            <property name="imageName">image_site_lien_1.jpg</property>
                                        </image>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="2691">
                        <property name="height">0.3854166666666667in</property>
                        <cell id="2692">
                            <property name="backgroundColor">silver</property>
                            <property name="borderBottomColor">#000000</property>
                            <property name="borderBottomStyle">dashed</property>
                            <property name="borderBottomWidth">thin</property>
                            <property name="borderLeftColor">#000000</property>
                            <property name="borderLeftStyle">dashed</property>
                            <property name="borderLeftWidth">thin</property>
                            <grid id="3792">
                                <column id="3793">
                                    <property name="width">0.5625in</property>
                                </column>
                                <column id="3794">
                                    <property name="width">1.4375in</property>
                                </column>
                                <row id="3795">
                                    <cell id="3796">
                                        <property name="colSpan">2</property>
                                        <property name="rowSpan">1</property>
                                        <label id="3810">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontSize">12pt</property>
                                            <property name="fontWeight">bold</property>
                                            <text-property name="text">Nous Contacter</text-property>
                                        </label>
                                    </cell>
                                </row>
                                <row id="3798">
                                    <cell id="3799">
                                        <label id="3811">
                                            <property name="fontFamily">serif</property>
                                            <text-property name="text">Tél  : </text-property>
                                        </label>
                                    </cell>
                                    <cell id="3800">
                                        <data id="3940">
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tel</property>
                                                    <expression name="expression" type="javascript">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">tel</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3801">
                                    <cell id="3802">
                                        <label id="3813">
                                            <property name="fontFamily">serif</property>
                                            <text-property name="text">Fax :</text-property>
                                        </label>
                                    </cell>
                                    <cell id="3803">
                                        <data id="3946">
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Fax</property>
                                                    <expression name="expression">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Email</property>
                                                    <expression name="expression">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Web</property>
                                                    <expression name="expression">dataSetRow["Web"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">numeroFax</property>
                                                    <expression name="expression" type="javascript">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">numeroFax</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3804">
                                    <cell id="3805">
                                        <label id="3815">
                                            <property name="fontFamily">serif</property>
                                            <text-property name="text">Web :</text-property>
                                        </label>
                                    </cell>
                                    <cell id="3806">
                                        <data id="3949">
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Fax</property>
                                                    <expression name="expression">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Email</property>
                                                    <expression name="expression">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Web</property>
                                                    <expression name="expression">dataSetRow["Web"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">web</property>
                                                    <expression name="expression" type="javascript">BirtStr.trim(dataSetRow["Web"])</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">web</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3807">
                                    <cell id="3808">
                                        <label id="3817">
                                            <property name="fontFamily">serif</property>
                                            <text-property name="text">Email :</text-property>
                                        </label>
                                    </cell>
                                    <cell id="3809">
                                        <data id="3948">
                                            <property name="dataSet">DataSetScritp2</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">dateStart</property>
                                                    <expression name="expression">dataSetRow["dateStart"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFin</property>
                                                    <expression name="expression">dataSetRow["dateFin"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomInfoEntreprise</property>
                                                    <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">pays</property>
                                                    <expression name="expression">dataSetRow["pays"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaEntreprise</property>
                                                    <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Tel</property>
                                                    <expression name="expression">dataSetRow["Tel"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Fax</property>
                                                    <expression name="expression">dataSetRow["Fax"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Email</property>
                                                    <expression name="expression">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Web</property>
                                                    <expression name="expression">dataSetRow["Web"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">email</property>
                                                    <expression name="expression" type="javascript">dataSetRow["Email"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">email</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                        <cell id="3827">
                            <property name="backgroundColor">#FFFFFF</property>
                        </cell>
                        <cell id="2693">
                            <property name="backgroundColor">#EDEDED</property>
                            <property name="borderBottomColor">#B6B6B6</property>
                            <property name="borderBottomStyle">dashed</property>
                            <property name="borderBottomWidth">thin</property>
                            <property name="borderLeftColor">#B6B6B6</property>
                            <property name="borderLeftStyle">dashed</property>
                            <property name="borderLeftWidth">thin</property>
                            <property name="borderTopColor">#B6B6B6</property>
                            <property name="borderTopStyle">dashed</property>
                            <property name="borderTopWidth">thin</property>
                            <label id="3837">
                                <property name="fontSize">12pt</property>
                                <property name="fontWeight">bold</property>
                                <text-property name="text">Vos références</text-property>
                            </label>
                            <data id="2744">
                                <property name="textAlign">left</property>
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">valueCodeTeirs</property>
                                        <expression name="expression">"Code client : "+dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">valueCodeTeirs</property>
                            </data>
                            <label id="3903">
                                <property name="fontWeight">normal</property>
                                <text-property name="text">N° TVA. :</text-property>
                            </label>
                            <data id="2745">
                                <property name="textAlign">left</property>
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaComp</property>
                                        <expression name="expression" type="javascript">value ="";
if(row["tvaIComCompl"]!=null) value=value.concat(row["tvaIComCompl"]);</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">tvaComp</property>
                            </data>
                        </cell>
                        <cell id="2694">
                            <property name="backgroundColor">#EDEDED</property>
                            <property name="borderBottomColor">#B6B6B6</property>
                            <property name="borderBottomStyle">dashed</property>
                            <property name="borderBottomWidth">thin</property>
                            <property name="borderRightColor">#B6B6B6</property>
                            <property name="borderRightStyle">dashed</property>
                            <property name="borderRightWidth">thin</property>
                            <property name="borderTopColor">#B6B6B6</property>
                            <property name="borderTopStyle">dashed</property>
                            <property name="borderTopWidth">thin</property>
                            <grid id="2733">
                                <property name="marginTop">0cm</property>
                                <property name="width">100%</property>
                                <column id="2734"/>
                                <row id="2735">
                                    <cell id="2736">
                                        <data id="3931">
                                            <property name="dataSet">DataSetScript1</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">codeFacture</property>
                                                    <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFacture</property>
                                                    <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libEntreprise</property>
                                                    <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTCivilite</property>
                                                    <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomTiers</property>
                                                    <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">prenomTiers</property>
                                                    <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTEntity</property>
                                                    <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">EnteteChoix123</property>
                                                    <expression name="expression">var value="";
if (params["ParamChoix"]=="choix 1"){
if(row["codeTCivilite"]!=null  ) value=value.concat(row["codeTCivilite"]);
if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);
if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);
if(value.replace(/^\s+/g,'').replace(/\s+$/g,'') ==""){
  if(row["codeTEntity"]!=null) value=value.concat("  "+row["codeTEntity"]);
  if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);
   }
}else
if (params["ParamChoix"]=="choix 2"){
if(row["codeTEntity"]!=null ) value=value.concat(row["codeTEntity"]);
if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);
  if(value.replace(/^\s+/g,'').replace(/\s+$/g,'') ==""){
     if(row["codeTCivilite"]!=null) value=value.concat(row["codeTCivilite"]);
     if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);
     if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);
     }
}else
if (params["ParamChoix"]=="choix 3"){
if(row["codeTEntity"]!=null) value=value.concat("  "+row["codeTEntity"]);
if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);
 }</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTiers</property>
                                                    <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaIComCompl</property>
                                                    <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateEch</property>
                                                    <expression name="expression">dataSetRow["dateEch"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">EnteteChoix123</property>
                                        </data>
                                        <data id="2743">
                                            <property name="dataSet">DataSetScript1</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">codeFacture</property>
                                                    <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFacture</property>
                                                    <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libEntreprise</property>
                                                    <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTCivilite</property>
                                                    <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomTiers</property>
                                                    <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">prenomTiers</property>
                                                    <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTEntity</property>
                                                    <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">EnteteChoix3</property>
                                                    <expression name="expression">value="";
if (params["ParamChoix"]=="choix 3"){
if(row["codeTCivilite"]!=null) value=value.concat(row["codeTCivilite"]);
if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);
if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTiers</property>
                                                    <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaIComCompl</property>
                                                    <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateEch</property>
                                                    <expression name="expression">dataSetRow["dateEch"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">EnteteChoix3</property>
                                        </data>
                                        <data id="2741">
                                            <property name="marginTop">0pt</property>
                                            <property name="dataSet">DataSetScript1</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">codeFacture</property>
                                                    <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFacture</property>
                                                    <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libEntreprise</property>
                                                    <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTCivilite</property>
                                                    <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomTiers</property>
                                                    <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">prenomTiers</property>
                                                    <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTEntity</property>
                                                    <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Adresse</property>
                                                    <expression name="expression">value="";
if(row["adresse1"]!=null) value=value.concat(row["adresse1"]+"\n");
if(row["adresse2"]!=null) value=value.concat(row["adresse2"]+"\n");
if(row["adresse3"]!=null) value=value.concat(row["adresse3"]+"\n");
if(row["codePostal"]!=null) value=value.concat(row["codePostal"]+" ");
if(row["ville"]!=null) value=value.concat(row["ville"]);</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTiers</property>
                                                    <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaIComCompl</property>
                                                    <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateEch</property>
                                                    <expression name="expression">dataSetRow["dateEch"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">Adresse</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="3819">
                        <property name="height">0.2in</property>
                        <cell id="3820">
                            <property name="backgroundColor">#FFFFFF</property>
                        </cell>
                        <cell id="3828">
                            <property name="backgroundColor">#FFFFFF</property>
                        </cell>
                        <cell id="3822">
                            <property name="backgroundColor">#FFFFFF</property>
                        </cell>
                        <cell id="3823">
                            <property name="backgroundColor">#FFFFFF</property>
                        </cell>
                    </row>
                </grid>
            </header>
            <detail>
                <table id="2852">
                    <property name="fontFamily">serif</property>
                    <property name="borderBottomColor">#000000</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderLeftColor">#000000</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderRightColor">#000000</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="borderTopColor">#000000</property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="width">100%</property>
                    <property name="dataSet">DataSetScript10</property>
                    <list-property name="boundDataColumns">
                        <structure>
                            <property name="name">codeArticle</property>
                            <expression name="expression">dataSetRow["codeArticle"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">libLFacture</property>
                            <expression name="expression">dataSetRow["libLFacture"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">qteLFacture</property>
                            <expression name="expression">dataSetRow["qteLFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">u1Lfacture</property>
                            <expression name="expression">dataSetRow["u1Lfacture"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">prixULFacture</property>
                            <expression name="expression">dataSetRow["prixULFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">rem</property>
                            <expression name="expression">dataSetRow["rem"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">montant</property>
                            <expression name="expression">dataSetRow["montant"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">codeTva</property>
                            <expression name="expression">dataSetRow["codeTva"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">TTC</property>
                            <expression name="expression">dataSetRow["TTC"]</expression>
                            <property name="dataType">integer</property>
                        </structure>
                        <structure>
                            <property name="name">mtHTLFacture</property>
                            <expression name="expression">dataSetRow["mtHTLFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">flagVisible</property>
                            <expression name="expression">dataSetRow["flagVisible"]</expression>
                            <property name="dataType">boolean</property>
                        </structure>
                    </list-property>
                    <property name="pageBreakInterval">19</property>
                    <column id="2880">
                        <property name="width">10%</property>
                    </column>
                    <column id="2881">
                        <property name="width">49%</property>
                    </column>
                    <column id="2882">
                        <property name="width">5%</property>
                    </column>
                    <column id="2883">
                        <property name="width">5%</property>
                    </column>
                    <column id="2884">
                        <property name="width">10%</property>
                    </column>
                    <column id="2885">
                        <property name="width">6%</property>
                    </column>
                    <column id="2886">
                        <property name="width">11%</property>
                    </column>
                    <column id="2887">
                        <property name="width">4%</property>
                    </column>
                    <header>
                        <row id="2853">
                            <property name="backgroundColor">silver</property>
                            <property name="textAlign">center</property>
                            <cell id="2854">
                                <label id="2890">
                                    <text-property name="text">Référence</text-property>
                                </label>
                            </cell>
                            <cell id="2855">
                                <label id="2891">
                                    <text-property name="text">Désignation de l'article</text-property>
                                </label>
                            </cell>
                            <cell id="2856">
                                <label id="2892">
                                    <text-property name="text">Qté</text-property>
                                </label>
                            </cell>
                            <cell id="2857">
                                <label id="2893">
                                    <text-property name="text">U1</text-property>
                                </label>
                            </cell>
                            <cell id="2858">
                                <label id="2894">
                                    <text-property name="text">Prix unitaire</text-property>
                                </label>
                            </cell>
                            <cell id="2859">
                                <label id="2895">
                                    <text-property name="text">Rem.%</text-property>
                                </label>
                            </cell>
                            <cell id="2860">
                                <text-data id="2899">
                                    <property name="dataSet">DataSetScript3</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">codeArticle</property>
                                            <expression name="expression">dataSetRow["codeArticle"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">libLFacture</property>
                                            <expression name="expression">dataSetRow["libLFacture"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">qteLFacture</property>
                                            <expression name="expression">dataSetRow["qteLFacture"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">u1Lfacture</property>
                                            <expression name="expression">dataSetRow["u1Lfacture"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">prixULFacture</property>
                                            <expression name="expression">dataSetRow["prixULFacture"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">rem</property>
                                            <expression name="expression">dataSetRow["rem"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">montant</property>
                                            <expression name="expression">dataSetRow["montant"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">codeTva</property>
                                            <expression name="expression">dataSetRow["codeTva"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">TTC</property>
                                            <expression name="expression">dataSetRow["TTC"]</expression>
                                            <property name="dataType">integer</property>
                                        </structure>
                                        <structure>
                                            <property name="name">mtHTLFacture</property>
                                            <expression name="expression">dataSetRow["mtHTLFacture"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                    </list-property>
                                    <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="Montant TTC";
} else {
value+="Montant HT";
}</expression>
                                    <property name="contentType">html</property>
                                </text-data>
                            </cell>
                            <cell id="2861">
                                <label id="2896">
                                    <text-property name="text">Tva</text-property>
                                </label>
                            </cell>
                        </row>
                    </header>
                    <detail>
                        <row id="2862">
                            <list-property name="highlightRules">
                                <structure>
                                    <property name="operator">ne</property>
                                    <property name="backgroundColor">#E5E5E5</property>
                                    <expression name="testExpr">row[0] % 2</expression>
                                    <simple-property-list name="value1">
                                        <value>0</value>
                                    </simple-property-list>
                                </structure>
                            </list-property>
                            <cell id="2863">
                                <data id="3353">
                                    <property name="resultSetColumn">codeArticle</property>
                                </data>
                            </cell>
                            <cell id="2864">
                                <property name="borderLeftColor">#DDDDDD</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <data id="3374">
                                    <property name="fontSize">9pt</property>
                                    <property name="resultSetColumn">libLFacture</property>
                                </data>
                            </cell>
                            <cell id="2865">
                                <property name="borderLeftColor">#DDDDDD</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <data id="3375">
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">qteLFacture</property>
                                </data>
                            </cell>
                            <cell id="2866">
                                <property name="borderLeftColor">#DDDDDD</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <data id="3376">
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">u1Lfacture</property>
                                </data>
                            </cell>
                            <cell id="2867">
                                <property name="borderLeftColor">#DDDDDD</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <data id="3377">
                                    <structure name="numberFormat">
                                        <property name="category">Currency</property>
                                        <property name="pattern">###0.00€</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">prixULFacture</property>
                                </data>
                            </cell>
                            <cell id="2868">
                                <property name="borderLeftColor">#DDDDDD</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <data id="3378">
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">rem</property>
                                </data>
                            </cell>
                            <cell id="2869">
                                <property name="borderLeftColor">#DDDDDD</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <data id="3379">
                                    <structure name="numberFormat">
                                        <property name="category">Currency</property>
                                        <property name="pattern">###0.00€</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">montant</property>
                                </data>
                            </cell>
                            <cell id="2870">
                                <property name="borderLeftColor">#DDDDDD</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <data id="3380">
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">codeTva</property>
                                </data>
                            </cell>
                        </row>
                        <row id="3364">
                            <property name="height">7cm</property>
                            <property name="backgroundColor">white</property>
                            <property name="borderTopColor">#000000</property>
                            <property name="borderTopStyle">solid</property>
                            <property name="borderTopWidth">2px</property>
                            <list-property name="highlightRules">
                                <structure>
                                    <property name="operator">ne</property>
                                    <property name="backgroundColor">#E5E5E5</property>
                                    <expression name="testExpr">row[0] % 2</expression>
                                    <simple-property-list name="value1">
                                        <value>0</value>
                                    </simple-property-list>
                                </structure>
                            </list-property>
                            <list-property name="visibility">
                                <structure>
                                    <property name="format">all</property>
                                    <expression name="valueExpr" type="javascript">row["flagVisible"]</expression>
                                </structure>
                            </list-property>
                            <cell id="3365">
                                <property name="colSpan">8</property>
                                <property name="rowSpan">1</property>
                                <property name="backgroundColor">white</property>
                            </cell>
                        </row>
                    </detail>
                </table>
            </detail>
            <footer>
                <grid id="3099">
                    <property name="marginTop">0.2cm</property>
                    <property name="pageBreakInside">avoid</property>
                    <property name="width">100%</property>
                    <column id="3100">
                        <property name="width">63%</property>
                    </column>
                    <column id="3101">
                        <property name="width">2%</property>
                    </column>
                    <column id="3102">
                        <property name="width">35%</property>
                    </column>
                    <row id="3103">
                        <cell id="3104">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">5</property>
                            <table id="3105">
                                <property name="fontFamily">serif</property>
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <property name="borderLeftColor">#000000</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <property name="borderTopColor">#000000</property>
                                <property name="borderTopStyle">solid</property>
                                <property name="borderTopWidth">thin</property>
                                <property name="pageBreakAfter">auto</property>
                                <property name="pageBreakBefore">auto</property>
                                <property name="canShrink">false</property>
                                <property name="height">0.885in</property>
                                <property name="width">100%</property>
                                <property name="dataSet">DataSetScript4</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeTvaRecup</property>
                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">taux</property>
                                        <expression name="expression">dataSetRow["taux"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mt</property>
                                        <expression name="expression">dataSetRow["mt"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mtRemis</property>
                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mtTva</property>
                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">TTC</property>
                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                        <property name="dataType">integer</property>
                                    </structure>
                                    <structure>
                                        <property name="name">remise</property>
                                        <expression name="expression">dataSetRow["remise"]+"%"</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="pageBreakInterval">400</property>
                                <column id="3139">
                                    <property name="width">16%</property>
                                </column>
                                <column id="3140">
                                    <property name="width">16%</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="3141">
                                    <property name="width">16%</property>
                                    <property name="repeat">1</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="3142">
                                    <property name="width">16%</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="3143">
                                    <property name="width">16%</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <column id="3144">
                                    <property name="width">20%</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <header>
                                    <row id="3106">
                                        <property name="height">0.25in</property>
                                        <property name="backgroundColor">#C0C0C0</property>
                                        <property name="verticalAlign">middle</property>
                                        <cell id="3107">
                                            <property name="paddingTop">0mm</property>
                                            <label id="3108">
                                                <property name="marginLeft">2mm</property>
                                                <property name="textAlign">left</property>
                                                <text-property name="text">Code TVA</text-property>
                                            </label>
                                        </cell>
                                        <cell id="3109">
                                            <property name="paddingTop">0mm</property>
                                            <label id="3110">
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Taux %</text-property>
                                            </label>
                                        </cell>
                                        <cell id="3111">
                                            <property name="paddingTop">0mm</property>
                                            <text-data id="3112">
                                                <property name="textAlign">center</property>
                                                <property name="dataSet">DataSetScript4</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">codeTvaRecup</property>
                                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">taux</property>
                                                        <expression name="expression">dataSetRow["taux"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mt</property>
                                                        <expression name="expression">dataSetRow["mt"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtRemis</property>
                                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtTva</property>
                                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">TTC</property>
                                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="TTC";
} else {
value+="HT";
}</expression>
                                                <property name="contentType">html</property>
                                            </text-data>
                                        </cell>
                                        <cell id="3113">
                                            <property name="paddingTop">0mm</property>
                                            <label id="3114">
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Remise</text-property>
                                            </label>
                                        </cell>
                                        <cell id="3115">
                                            <property name="paddingTop">0mm</property>
                                            <text-data id="3116">
                                                <property name="textAlign">center</property>
                                                <property name="dataSet">DataSetScript4</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">codeTvaRecup</property>
                                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">taux</property>
                                                        <expression name="expression">dataSetRow["taux"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mt</property>
                                                        <expression name="expression">dataSetRow["mt"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtRemis</property>
                                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtTva</property>
                                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">TTC</property>
                                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="Net TTC";
} else {
value+="Net HT";
}</expression>
                                                <property name="contentType">html</property>
                                            </text-data>
                                        </cell>
                                        <cell id="3117">
                                            <property name="paddingTop">0mm</property>
                                            <text-data id="3118">
                                                <property name="textAlign">center</property>
                                                <property name="dataSet">DataSetScript4</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">codeTvaRecup</property>
                                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">taux</property>
                                                        <expression name="expression">dataSetRow["taux"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mt</property>
                                                        <expression name="expression">dataSetRow["mt"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtRemis</property>
                                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtTva</property>
                                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">TTC</property>
                                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="Dont TVA";
} else {
value+="Montant TVA";
}</expression>
                                                <property name="contentType">html</property>
                                            </text-data>
                                        </cell>
                                    </row>
                                </header>
                                <detail>
                                    <row id="3119">
                                        <cell id="3120">
                                            <property name="paddingTop">0mm</property>
                                            <data id="3121">
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">codeTvaRecup</property>
                                            </data>
                                        </cell>
                                        <cell id="3122">
                                            <property name="borderLeftColor">#DDDDDD</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3123">
                                                <property name="marginTop">0pt</property>
                                                <structure name="numberFormat">
                                                    <property name="category">Fixed</property>
                                                    <property name="pattern">Fixed</property>
                                                </structure>
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">taux</property>
                                            </data>
                                        </cell>
                                        <cell id="3124">
                                            <property name="borderLeftColor">#DDDDDD</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3125">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">mt</property>
                                            </data>
                                        </cell>
                                        <cell id="3126">
                                            <property name="borderLeftColor">#DDDDDD</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3127">
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">remise</property>
                                            </data>
                                        </cell>
                                        <cell id="3128">
                                            <property name="borderLeftColor">#DDDDDD</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3129">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">right</property>
                                                <property name="resultSetColumn">mtRemis</property>
                                            </data>
                                        </cell>
                                        <cell id="3130">
                                            <property name="borderLeftColor">#DDDDDD</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3131">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">right</property>
                                                <property name="resultSetColumn">mtTva</property>
                                            </data>
                                        </cell>
                                    </row>
                                </detail>
                                <footer>
                                    <row id="3132">
                                        <property name="height">0.239in</property>
                                        <cell id="3133">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="3134">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="3135">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="3136">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="3137">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="3138">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                    </row>
                                </footer>
                            </table>
                            <data id="3659">
                                <property name="fontFamily">serif</property>
                                <property name="marginTop">0.3cm</property>
                                <property name="marginBottom">0in</property>
                                <property name="dataSet">DataSetScript51</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">TTC</property>
                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                        <property name="dataType">integer</property>
                                    </structure>
                                    <structure>
                                        <property name="name">remisHT</property>
                                        <expression name="expression">dataSetRow["remisHT"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">montant</property>
                                        <expression name="expression">dataSetRow["montant"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">montantNT</property>
                                        <expression name="expression">dataSetRow["montantNT"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">montantNTTva</property>
                                        <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">montantTtc</property>
                                        <expression name="expression">dataSetRow["montantTtc"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">remisTtc</property>
                                        <expression name="expression">dataSetRow["remisTtc"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">montantNTTtc</property>
                                        <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">regle</property>
                                        <expression name="expression">dataSetRow["regle"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">netPay</property>
                                        <expression name="expression">dataSetRow["netPay"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tauxRemisHT</property>
                                        <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tauxRemisTTC</property>
                                        <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">commtaire</property>
                                        <expression name="expression">dataSetRow["commtaire"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libellePaiement</property>
                                        <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">acompte</property>
                                        <expression name="expression">dataSetRow["acompte"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">resteRegler</property>
                                        <expression name="expression">dataSetRow["resteRegler"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">commentDocument</property>
                                        <expression name="expression" type="javascript">dataSetRow["commtaire"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">commentDocument</property>
                            </data>
                            <grid id="3977">
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">dotted</property>
                                <property name="borderBottomWidth">thin</property>
                                <property name="borderLeftColor">#000000</property>
                                <property name="borderLeftStyle">dotted</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">dotted</property>
                                <property name="borderRightWidth">thin</property>
                                <property name="borderTopColor">#000000</property>
                                <property name="borderTopStyle">dotted</property>
                                <property name="borderTopWidth">thin</property>
                                <property name="marginTop">0.5cm</property>
                                <property name="dataSet">DataCompteBanque</property>
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if(row["compte"]!=null) false; else true;</expression>
                                    </structure>
                                </list-property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">compte</property>
                                        <expression name="expression">dataSetRow["compte"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">guichet</property>
                                        <expression name="expression">dataSetRow["guichet"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeBanque</property>
                                        <expression name="expression">dataSetRow["codeBanque"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">cleRib</property>
                                        <expression name="expression">dataSetRow["cleRib"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomBanque</property>
                                        <expression name="expression">dataSetRow["nomBanque"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">datePrelevement</property>
                                        <expression name="expression">dataSetRow["datePrelevement"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <column id="3978"/>
                                <row id="3979">
                                    <cell id="3980">
                                        <label id="3985"/>
                                        <text-data id="3974">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontSize">12pt</property>
                                            <property name="dataSet">DataCompteBanque</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">compte</property>
                                                    <expression name="expression">dataSetRow["compte"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">guichet</property>
                                                    <expression name="expression">dataSetRow["guichet"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeBanque</property>
                                                    <expression name="expression">dataSetRow["codeBanque"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">cleRib</property>
                                                    <expression name="expression">dataSetRow["cleRib"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomBanque</property>
                                                    <expression name="expression">dataSetRow["nomBanque"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">datePrelevement</property>
                                                    <expression name="expression">dataSetRow["datePrelevement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">var value = null;&#13;
if(row["compte"]!= null){&#13;
value='Vous serez prélevé le : '+row["datePrelevement"].bold();&#13;
}</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                </row>
                                <row id="3981">
                                    <cell id="3982">
                                        <text-data id="3975">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontSize">12pt</property>
                                            <property name="dataSet">DataCompteBanque</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">compte</property>
                                                    <expression name="expression">dataSetRow["compte"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">guichet</property>
                                                    <expression name="expression">dataSetRow["guichet"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeBanque</property>
                                                    <expression name="expression">dataSetRow["codeBanque"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">cleRib</property>
                                                    <expression name="expression">dataSetRow["cleRib"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomBanque</property>
                                                    <expression name="expression">dataSetRow["nomBanque"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">datePrelevement</property>
                                                    <expression name="expression">dataSetRow["datePrelevement"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">var value = null;&#13;
if(row["compte"]!= null){&#13;
value='Sur le compte n° : '+row["codeBanque"].bold() +" "+row["guichet"].bold() +" "+row["compte"].bold()+" "+row["cleRib"].bold();&#13;
}</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                </row>
                                <row id="3983">
                                    <cell id="3984">
                                        <text-data id="3976">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontSize">12pt</property>
                                            <property name="dataSet">DataCompteBanque</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">compte</property>
                                                    <expression name="expression">dataSetRow["compte"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">guichet</property>
                                                    <expression name="expression">dataSetRow["guichet"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeBanque</property>
                                                    <expression name="expression">dataSetRow["codeBanque"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">cleRib</property>
                                                    <expression name="expression">dataSetRow["cleRib"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomBanque</property>
                                                    <expression name="expression">dataSetRow["nomBanque"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">datePrelevement</property>
                                                    <expression name="expression">dataSetRow["datePrelevement"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">if(row["compte"]!= null){&#13;
'Du montant '+'Net à prélever'.bold()+ ' ci-contre';&#13;
}</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                        <label id="3986"/>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                        <cell id="3145"/>
                        <cell id="3146">
                            <grid id="3147">
                                <property name="fontFamily">serif</property>
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <property name="borderLeftColor">#000000</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <property name="borderTopColor">#000000</property>
                                <property name="borderTopStyle">solid</property>
                                <property name="borderTopWidth">thin</property>
                                <property name="textAlign">right</property>
                                <property name="width">100%</property>
                                <column id="3148"/>
                                <column id="3149"/>
                                <row id="3150">
                                    <cell id="3151">
                                        <data id="3636">
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">textTTCorHT</property>
                                                    <expression name="expression" type="javascript">var value="";
if(dataSetRow["TTC"] == 1){
	value = "Total TTC"
}else{
	value = "Total HT"
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">textTTCorHT</property>
                                        </data>
                                    </cell>
                                    <cell id="3153">
                                        <property name="fontWeight">bold</property>
                                        <data id="3638">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTotal</property>
                                                    <expression name="expression" type="javascript">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantTotal</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3155">
                                    <cell id="3156">
                                        <data id="3637">
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">textTauxRemisHT</property>
                                                    <expression name="expression" type="javascript">var value = null;
if(dataSetRow["tauxRemisHT"] != 0){
	value = "Remise "+dataSetRow["tauxRemisHT"]+"%";
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">textTauxRemisHT</property>
                                        </data>
                                    </cell>
                                    <cell id="3158">
                                        <property name="fontWeight">bold</property>
                                        <data id="3639">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montanRemisHT</property>
                                                    <expression name="expression" type="javascript">var value = null;
if(dataSetRow["remisHT"] != 0){
	value = dataSetRow["remisHT"];
}</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montanRemisHT</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="3160">
                        <cell id="3161"/>
                        <cell id="3162">
                            <grid id="3163">
                                <property name="fontFamily">serif</property>
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <property name="borderLeftColor">#000000</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <property name="borderTopColor">#000000</property>
                                <property name="borderTopStyle">solid</property>
                                <property name="borderTopWidth">thin</property>
                                <property name="width">100%</property>
                                <column id="3164"/>
                                <column id="3165"/>
                                <row id="3166">
                                    <cell id="3167">
                                        <data id="3640">
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">textMontantTTCorHT</property>
                                                    <expression name="expression" type="javascript">var value = null;
if(dataSetRow["tauxRemisHT"] != 0){
	if(dataSetRow["TTC"] == 1) {
		value = "Montant TTC";	
	}else{
		value ="HT après remise";
	}
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">textMontantTTCorHT</property>
                                        </data>
                                    </cell>
                                    <cell id="3169">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">right</property>
                                        <data id="3641">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montanTTCorHT</property>
                                                    <expression name="expression" type="javascript">var value = null;&#13;
if(dataSetRow["tauxRemisHT"] != 0){&#13;
	if(dataSetRow["TTC"] == 1) {&#13;
		value = dataSetRow["montantTtc"];&#13;
	} else {&#13;
		value = dataSetRow["montantNT"];&#13;
	}&#13;
}</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montanTTCorHT</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3171">
                                    <cell id="3172">
                                        <data id="3642">
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">testTVA</property>
                                                    <expression name="expression" type="javascript">var value="";
if(dataSetRow["TTC"] ==1) {
value+="Dont TVA";
} else {
value+="Montant TVA";
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">testTVA</property>
                                        </data>
                                    </cell>
                                    <cell id="3174">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">right</property>
                                        <data id="3644">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNetTva</property>
                                                    <expression name="expression" type="javascript">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantNetTva</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3176">
                                    <cell id="3177">
                                        <data id="3643">
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">textMontantTTC</property>
                                                    <expression name="expression" type="javascript">var value="";
if(dataSetRow["TTC"]==1) {
value+="Montant HT";
} else {
value+="Montant TTC";
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">textMontantTTC</property>
                                        </data>
                                    </cell>
                                    <cell id="3179">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">right</property>
                                        <data id="3645">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTTC</property>
                                                    <expression name="expression" type="javascript">var value=null;
if(dataSetRow["TTC"] != 1) {
	value=dataSetRow["montantTtc"];
}else{
	value = dataSetRow["montantNT"];
}</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantTTC</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="3181">
                        <cell id="3184"/>
                        <cell id="3185">
                            <grid id="3186">
                                <property name="fontFamily">serif</property>
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <property name="borderLeftColor">#000000</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <property name="borderTopColor">#000000</property>
                                <property name="borderTopStyle">solid</property>
                                <property name="borderTopWidth">thin</property>
                                <property name="width">100%</property>
                                <column id="3187">
                                    <property name="width">50%</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <column id="3188">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <row id="3189">
                                    <cell id="3190">
                                        <data id="3646">
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">textEscompte</property>
                                                    <expression name="expression" type="javascript">var value = null;
if(dataSetRow["tauxRemisTTC"] != 0){
	value = "Escompte : "+dataSetRow["tauxRemisTTC"]+"%";
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">textEscompte</property>
                                        </data>
                                    </cell>
                                    <cell id="3192">
                                        <data id="3647">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantRmTTC</property>
                                                    <expression name="expression" type="javascript">var value = null;
if(dataSetRow["remisTtc"] != 0){
	value = dataSetRow["remisTtc"];
}</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantRmTTC</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3194">
                                    <cell id="3195">
                                        <label id="3196">
                                            <property name="fontWeight">normal</property>
                                            <text-property name="text">TTC après escompte</text-property>
                                        </label>
                                    </cell>
                                    <cell id="3197">
                                        <data id="3198">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">mtNtTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">mtNtTtc</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="3970">
                                    <cell id="3971">
                                        <label id="3201">
                                            <text-property name="text">Acompte versé</text-property>
                                        </label>
                                    </cell>
                                    <cell id="3972">
                                        <data id="3203">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">mtRegle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">mtRegle</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="3654">
                        <cell id="3656"/>
                        <cell id="3657">
                            <grid id="3586">
                                <property name="fontFamily">serif</property>
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <property name="borderLeftColor">#000000</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <property name="borderTopColor">#000000</property>
                                <property name="borderTopStyle">solid</property>
                                <property name="borderTopWidth">thin</property>
                                <property name="marginTop">0.2cm</property>
                                <property name="marginBottom">0.2cm</property>
                                <property name="width">100%</property>
                                <column id="3587">
                                    <property name="width">50%</property>
                                </column>
                                <column id="3588"/>
                                <row id="3589">
                                    <cell id="3590">
                                        <label id="3591">
                                            <property name="fontSize">12pt</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="textAlign">right</property>
                                            <text-property name="text">Net à prélever</text-property>
                                        </label>
                                    </cell>
                                    <cell id="3592">
                                        <data id="3648">
                                            <property name="fontWeight">bold</property>
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNetTTC</property>
                                                    <expression name="expression" type="javascript">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantNetTTC</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="3953">
                        <cell id="3955"/>
                        <cell id="3956">
                            <label id="3957">
                                <property name="fontFamily">serif</property>
                                <property name="fontSize">7.5pt</property>
                                <property name="fontWeight">bold</property>
                                <text-property name="text">Merci de rappeler votre n°client lors des règlements.</text-property>
                            </label>
                        </cell>
                    </row>
                </grid>
            </footer>
        </list>
        <grid id="2990">
            <property name="marginTop">0cm</property>
            <property name="pageBreakAfter">auto</property>
            <property name="pageBreakBefore">auto</property>
            <property name="width">100%</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">infoCorrespondance</property>
                    <expression name="expression">value="123";
if(row["adresse1"]!=null) value=value.concat(row["adresse1"]+"\n");
if(row["adresse2"]!=null) value=value.concat(row["adresse2"]+"\n");
if(row["adresse3"]!=null) value=value.concat(row["adresse3"]+"\n");
if(row["codePostal"]!=null) value=value.concat(row["codePostal"]+" ");
if(row["ville"]!=null) value=value.concat(row["ville"]);</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="2991"/>
            <column id="2992"/>
            <column id="2993"/>
            <row id="2994">
                <cell id="2995"/>
                <cell id="2996"/>
                <cell id="2997">
                    <data id="3002">
                        <property name="fontFamily">serif</property>
                        <property name="pageBreakBefore">auto</property>
                        <property name="dataSet">DataSetScript6</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">row["flagVisible"]</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">adresse1</property>
                                <expression name="expression">dataSetRow["adresse1"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">adresse2</property>
                                <expression name="expression">dataSetRow["adresse2"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">adresse3</property>
                                <expression name="expression">dataSetRow["adresse3"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">ville</property>
                                <expression name="expression">dataSetRow["ville"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">pays</property>
                                <expression name="expression">dataSetRow["pays"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">codePostal</property>
                                <expression name="expression">dataSetRow["codePostal"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">flagVisible</property>
                                <expression name="expression">dataSetRow["flagVisible"]</expression>
                                <property name="dataType">boolean</property>
                            </structure>
                            <structure>
                                <property name="name">infoCorrespondance</property>
                                <expression name="expression" type="javascript">value="";
if(dataSetRow["adresse1"]!=null) value=value.concat(dataSetRow["adresse1"]+"\n");
if(dataSetRow["adresse2"]!=null) value=value.concat(dataSetRow["adresse2"]+"\n");
if(dataSetRow["adresse3"]!=null) value=value.concat(dataSetRow["adresse3"]+"\n");
if(dataSetRow["codePostal"]!=null) value=value.concat(dataSetRow["codePostal"]+" ");
if(dataSetRow["ville"]!=null) value=value.concat(dataSetRow["ville"]);</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <method name="onCreate"><![CDATA[if(this.getValue() != null &amp;&amp; this.getValue() != "" ){
	this.getStyle().pageBreakBefore = "Always";
}else{
	this.getStyle().pageBreakBefore = "Avoid";
}]]></method>
                        <property name="resultSetColumn">infoCorrespondance</property>
                    </data>
                </cell>
            </row>
        </grid>
    </body>
    <list-property name="images">
        <structure>
            <property name="name">image_site_lien_1.jpg</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEASABIAAD//gATQ3JlYXRlZCB3aXRoIEdJTVD/2wBDAAEBAQEBAQEBAQEBAQEB
                AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEB
                AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/
                wAARCADRAZwDASIAAhEBAxEB/8QAHwABAAICAwADAQAAAAAAAAAAAAgKBwkEBQYBAgML/8QAZRAAAAYC
                AQMBAwQKCQ8HBg8AAQIDBAUGAAcICRESExQVIQoWIjEXGBlBUVdYlpfWIzI2QmF1sbTXJCU0NTc4cXJ2
                d4GRtdTVGjmTtsHR8DNISnh5t1NVVmJjhoeJlaGlssXH8f/EAB4BAQAABwEBAQAAAAAAAAAAAAACAwUG
                BwgJAQQK/8QASREAAQQCAQIEAgYCDQoHAAAAAgABAwQFBhEHEggTITEUQRUiI1FhcYGRCRYXGCQnMjOh
                scHR8DQ3QkNFRkdVV2RWY3SUs9Xx/9oADAMBAAIRAxEAPwC/xjGMImMYwiYxjCJjGMImMYwiYxjCJjGM
                ImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJkWOS3Mzj9xPhDSO27s0azzhmZ5B6/gxRmL9Yy91Sp
                DG15JdI7ZmsqiqgSam14mATWTOktLEWAExzveqvJXKsSNcjLxb9dOpJL0RtdFGrFs7BEwCRckatcKvb4
                dqoumcyftgQp37Qey8e7ZuiJLk1OWLoicZbfOSdmtm4uU1msk06O+mJ+f2Br2XmZR4oAAo6kJOQ1M4ev
                HBwKUplnC6iglKUBMIFDCLUTyt6wHIrebtzBamkZPQGu0nAC0Tp006bbFlwQOYUnMzeo8WT+NA4eCgxN
                YGMQT8jtXz6bTIVXIP8A243Lv8qjkf8Apw2b+tGWPPuEHET8Y3I/87tY/wBEGPuEHET8Y3I/879Zf0QY
                RVw/txuXf5VHI/8AThs39aMfbjcu/wAqjkf+nDZv60ZY8+4QcRPxjcj/AM79Zf0QY+4QcRPxjcj/AM79
                Zf0QYRVw/txuXf5VHI/9OGzf1ox9uNy7/Ko5H/pw2b+tGWPPuEHET8Y3I/8AO/WX9EGPuEHET8Y3I/8A
                O/WX9EGEVcP7cbl3+VRyP/Ths39aMfbjcu/yqOR/6cNm/rRljz7hBxE/GNyP/O/WX9EGPuEHET8Y3I/8
                79Zf0QYRV7aTyO517ItEPSqFyD5U2+2zzorOIr9f3DtWTk3y5gETAk2bWRQ4IoEKo4dOlPTbNGqSrp2u
                g3SOdOxVxp47bd4y0o/Ijndy63jPvoBJo9Q1gG89ky9Ggnzt0i2io6w+lZ1E9i2Z++XaR7avNSKVX25d
                Vqp85mqqTptOLjDwy0Bw8rbyP1ZXlCSr1JQ1k2LbnLKUvM61TOK4Iys8ixjGbGLZkIn4RMHHwsIUyAP1
                o9SRM5er6YepVyRkNw3WtUyBerJazqFrjDxbUhlEkrFOe2otl7M+RMJAV9NE67ODSWKKjKPXdLlKivLO
                0S+i3L/h8147szc/0ferKOMYzxepjPFbB2PQ9UVZ/dtk2+v0ipxgF9tnrLJtoqPTUUA4otU1XKhBcv3P
                gYjOPalWfPlgBBo3WWMVMYdfdROBX5Rdb/Nu/fqlhFPrGQF+6icCvyi63+bd+/VLH3UTgV+UXW/zbv36
                pYRT6xkBfuonAr8out/m3fv1Sx91E4FflF1v8279+qWEU+sZGTTfMXjhyDn3VZ0zsgt/mGDMz+RThqne
                SMYtoUDCReWmJCssoaLK4MUUmgSD9qZ84ErZmCy5iJjJvCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMIm
                MYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxnx/rEewj9Yd//wDf/wAu/wAPgHwwi+cZ
                g60cnONtInH1YunITSFQskWr6MnXrRtihQE5HLCUFARfxMrPtH7RUUxKcE3DdM4kMUwFEB7h0P243ET8
                qjjh+nDWX60YRSPxkcPtxuIn5VHHD9OGsv1ox9uNxE/Ko44fpw1l+tGEXhOUmy128E/o0G4MmLlL07E7
                RN4mFA5QOWHSUAe4FWKJDyIl7AcglYmMZNV4jlb/AJCfujiP8ooj/aTbNt2+eSXHaXsNnWid9aWlEV3q
                h0FY3aVHepLl9FIvqJKNZxUqpfIB+mQRABD4fezTHvTYFElrBFLRV2qUoknOxayisfZIZ6kRFN+3OdY5
                2ztQpUyEAxznMIJkAPITCX4BNF2Zm9W+/wB/n/jj/Hq8ouXd/R349Pb8G+77/wC79FzjMebPPtUtRfk0
                031+relzFRjXOy39iaVSMIYpxO/eNKxFv5eaUSOBE0olF3BkX9UVzS6Ps4NXeM/txuIn5VHHD9OGsv1o
                x9uNxE/Ko44fpw1j+s+SlNWlje/So578lrSNt3Pyg1bcH6J1giY5de7sq5XW6/gCjSt1tjT20LConIii
                VwoyZEdyBkiOZN09dgZdTB33BbkZ+OLSn/SXr9UssMfbjcRPyqOOH6cNY/rPmW6NsfXuzog9g1te6bsK
                BTdKMVJuj2iEtkQm+RAhlmZ5KBev2RXSJVEzKNzLgsQFCidMoGL3Iqxn3BbkZ+OLSn/SXr9UsfcFuRn4
                4tKf9Jev1Sy1PjCKqx9wW5Gfji0p/wBJev1Sz3ms+gtfvnlFKbh3PTC0FE5lpptrhCec2uRIQCinHx7i
                yQTGJiyuTCb1ZVZKTO1ITslGODqCohZrzGO3LTIVKkyUjFiCcg4MWObOO4d2R3SS5jPEy9h81kiInBAB
                ECprnIsoChExTO90WtWc2DQePG7eNHDjjFX4yg0Y+0IZTZ7yB8/eFicItXJgr8pNrmWlZp24UatXFrmZ
                B69kZL2ZhXVHRIxtJx7jbxlbeHOdXnJxzVVOZRRTaseooooYTnOodq/MY5zmETGOYwiJjGETCIiIiIjl
                kjIyZm4/Ty/3/wCOVCL8s7/imMYyBRJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMImMY
                wiYxjCJjGMImMYwiYxjCJjPxXXSboqruFU0EECHVWXWUKkiikQDGOoqocwETTIUPI5zGKBSdzCIdsj1c
                eVejqWdZF5ckpp6h3AzOsM3c55iH1gSQap+5vIB7AIHkyiHxAPiBgz3h39md0X58iuWehuLFd9/bjvUf
                BunLZVxB1Jj/AF1u9mFMFSkJA1locX66CjhIzM8w8BhX2Lo6ScnLsSnBTKz3LnrE7y3kErTtMpvNFa0c
                mXaqOot/6uzrIyMZVLvK2hr6RKw3dpCiseJqgIvWygrsnNnmmCp0xsfjxo4mb0Sa7csOhdc22UvrNpYl
                p630+JkbE+TfIpqIDJOXZXqvqpICREEAcqIN0yFRREqRSgH1+0O4Yfkw6U/MCB/3TPEVD5ZZZysq4cKq
                LuF1VFl11lDKrLLKnFRVZVU4mOoqocxjqKHMY5zmExhEREc/PL4v2h3DH8mHSn5gwP8AumPtDuGP5MOl
                PzBgf90wiodYy+L9odwx/Jh0p+YMD/umPtDuGP5MOlPzBgf90wiodYy+L9odwx/Jh0p+YMD/ALpj7Q7h
                j+TDpT8wYH/dMIqHWc6Li5Kbko+GhY5/MTEs8bR0VExbRxIScnIPFiN2jCPYNE1nb146cKERbNWyai66
                p00k0jmUKUb2/wBodwx/Jh0p+YMD/umezoHFXjbqqyN7hrfRusKVaWjdy1aWGu1CHjJdqg8T9F2k2foN
                iroA4S8kVhROQx0RUSMIpqHKYi0WcHei+7kgidncwEV45ib0X8Po+OeHRknRAORRFXYs0wWKeMRUIUxj
                VWCc+8TkWSGVmYxwg9hFLHdfr0DU4SLrVXhoqu16EZIx0NBQce1ioiKYNigRBlHxrFJBozaol7FTQbop
                JED4FKGdxkCeZHIDY+nJGrRlEexkcSZiXr926dxTaSdFWbPiIEKj7b6rYiRk+5TFO1OYe5hKoUfDx9Zu
                X4R349XU9sZoghuTvM66uVnEPsxvAwpVBKeScUagKsy+JgKokwScVRy6fLF7HASit6RDlMRd0iYyRRyC
                nvrknHIlF/vWek3IeQKGTomomDQRADdhTbF1+4cJgIiHYFH631E/AfvF2P8Ag/6V4z8+y3PZg3kL/c8U
                /jZn/Nn2ajbpyP5YHYulavyBscVIpJmM3R+x9pCRaqCUvxJ6D/WyJ1FlBL2SA8szbiqYSKOEUjAsnhnj
                jyc5hbh2Q+r229sI7M1INTsj9FVlRNf1k0bb4V/Dsk4+fLX6fBWCEmWCb56krGu3Z41z64KN1H4ERXJ6
                wOzs/p6O33/3J7s/48t/YkH/AH8PHD/OlG/zR9lkrK2sH/fw8cP86Ub/ADR9lkrEny/T/YoQ9n/P+xkx
                jGS1GmMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJmP9jbHrms
                Kw+s9leot2zRu4VRQUcItlHRmyJlleyq5ipt26CRTLvnq4g1ZNwFZU37QinvjHKQhjnMUhCFE5znEClI
                UoeRjGMPiBSlKAiJjdgAA7j9Q5pV551ix8sKNcNZwl6U15G2lxDwBbAWLUmFGNMbT0e8n26MWR9FCu6t
                Ea1csHhFXrcotpFRmssduiCYUnP5irr2CzOwXndqWDxd7LW3YZCdq+PrS2pndogkk4GOInJwA3YWd2En
                Zhev6piKOf2jXMFk8tHgsdmc5i8XkM1JWsXQxNK9egrW8k9KqxWbj0q8klgalcXnslGMEXByCokb36qm
                s7pJLmk5i9SVBTfnbIS9VqMm412wFFT0wceuZRtKT5UzlESzDSKlkXAmOtGKCyUQAv5x1urV7rsdbKhN
                MrBXZxsLyNlY5X1GzpLyUTUAfIpFUXCCxFEHbVyRF2xdJrNHaKThJRMvh9nDxh0dophxxr6LjctwYIJP
                VrS7RrSMHASYkVZnTde6mvtLiTaGb+0e6nT6TasTLIA4J7UBlENeNGRd64hnUDUJqwQ0U+l3066atJqS
                RQVlJBNui6clRRcJN0CnRaN0/RbIoo90vU9L2g66q2pe0+MrRdMasL2A3W3erxWXx+rg0LYrzGEvLv37
                kx1WJmY2eoDy3YjYPighaRX51bq9I6OSgxvS6PbeMVPkKWVvbJfpXocwMM8Y4/IVYq+MxkuOsyxNO+Qr
                SAcAuVeOCGMorEs10rj1/cN1P/kJXf8AZ6OZjymDHckORUQxaRcTvrdUXGMEE2rGOjto3lkxZNUSgRFs
                0aNp1Ju2QSIAFTRRTImQoAUpQAO2SK4ubj3ltLkFqrXty3/vx9V7ZaUIqaZtd07LjXC7FVq7VMRF+xsq
                DxqYTJEEqyCqKpewgBw8u2W5gvHVq+wZvD4GnoWejuZvK47EVDsZbHDAFnJW4acBzlHFIYwhLODykEch
                iDE4xmTML4mBgeQBkN4wIhY5GHvcAcmYiYGdnJxZ+WFnZy445blWCOSnM3QnFWHM62hcEhsi7ZRzD69r
                oITN7mwAqhkBbwxHKScWycCmZNKasLqHhTKpnRCQM5EqJq7W++sNyd2RYxPqSQaaPpbFZX3dFRTGFslj
                k0+6hEXVjn5+IepnWFM/crCFYRTJEwgRf3ks3SeG3azPSl4YWOWkJ6w0m6T05Lu1n8rNTO19jSktJvnB
                xUcPJCRfWNd49drqCJ1nDlZVZU4iY5zCIjnWfciuC/4s7D+ki+f8e/hHMxb3rnXrbZTr4nM6zqeHE2eO
                tic3l48lOIuLsd3LRYWGw5O/P2NNqtftfsljsOLSPur0h3bwg9OK8V3ZNZ33qLsxRds97YtU1mbCVSMe
                JAxmvT7VZpizct22si+QudwPJXlqNJ5Q14/umfOj8oOw/m5Q/wBVMfdM+dH5Qdh/Nyh/qplhz7kXwX/F
                nYf0kXz/AI9j7kXwX/FnYf0kXz/j2Yzbox1+9P4xH+X++m1fLt/7L8P6/wAOc8fvofB1/wBFW+X/AAs6
                efhz/tb8/wBX668f3TPnR+UHYfzcof6qY+6Z86Pyg7D+blD/AFUyw59yL4L/AIs7D+ki+f8AHsfci+C/
                4s7D+ki+f8ew3Rjr96fxiP8AL/fTavl2/wDZfh/X+HL99D4Ov+irfL/hZ08/Dn/a35/q/XXj+6Z86Pyg
                7D+blD/VTH3TPnP+UHYfzbof6qZYc+5F8F/xZ2H9JF8/49nJjukzwZjZBlIF1XKvDMXTd2VpI3+9PY9y
                duqCxUXzJSeBN20UEgEcNVe6LlMToqlMkJyj6PRjr73CxdRXFncWd/257W/DchyXDUvXhm9uW59m+XMJ
                eKPwdsJOPRNiJhJxH9y7p4PcTDyw930s/Hc/Lc8Pw3rw/HD6uuId66qfLqVQe13e1jp2rmr0G09tKwVC
                lDDJekp4vWVYZfNZuvbpxuUhyGYRy6DFmsZBKal4n2lBY8UuuZ1E9jcFORWjePaVaabyR+10r2y5nYGx
                JxWJtU7K2jZmzqxIsXDWpRMVAsmSSFBaLMyR0c2MgV+ukPrGRBdW4LCwsRXYqPgoCLj4WFiWaEfFxMUz
                bx8bHMWqZUmzNixappNmjVBIpSIoIJkSTKHiQpQAAzWpzE6d/TL5k7jZW/l5Qafedz0/T7Zs1Tk97bM1
                1Ow2l67ZLdNozTup0baNMaBVY6x2C3KOblIQqhSrqOWLuZMhFt2rLa3pLp+P0Qgk2rNbNutmesQXrOSy
                t+3EMr9jxhj8dZyI16kAEz8yPJJbk5d5JyjcYY9JupPV7DdRdhGWLp9qWlafTKZ8dgNS17C0L8hO3Edn
                M5mnVxtrJWHblnhE6+Ngbt8ij5zSWZqY/wDyifcCTZFm041aqZNGyRUW7dvaLWmiikQoFKRMoJB4lAO4
                fEPIRHyEO+dM6+UH7ic/tuPWtC9x+9aLSP4f/ovwff8Aw/4ctMN+iZ0EnjNKRZ6c1k5j3BoMiD9vy93u
                uzWPZoJ3aK4VJynyCMiqawVli9sUGUihhloJk6l2AOI5uq4L3FD6FXQx2nEObDrHj/SdjQDOSWhnc5Q+
                VXIW3Q7WXQas3q0U4kq9vyRZoSSLKRjnirFRcjlNq/ZOTolSdIHPnb6b6d/+Hsl+ofw+/LP939P3eisX
                6T0j/kt79Tf/AGSq1a760fKDd97resdVcTa1sHYVyk04ms1CpSVxmp2YfrAc3ptWLRBVT0m6Cazl67V8
                GkexQcvpBZs0bKrp2d+BnEDf3H2PG98pD06J2pvhrcbDO6rpjtxPw+vUEFYJ2EdLWpR0ownbM9UmTkmU
                4FqeEixYoN2E9YiCR4nsi4k9OjhXwXPZXHFjQta1fK3AUyWKxGmbfere/ZpFbiSHTuWx7JbrVH171mqD
                s1bjpdnAnkE/eSkYMgY7o2UNz/ux1z/Emw//AN1My1s5ksLbMYcJhxx9cSEisTlIduV+G+r2PYmhgBnd
                24EpTPgXeQW7o1b+WvYqwTR4rGDThHh3mkOQrMj8c8dvnSQxAzv7D3kXHPmCz9jaaZStq1nntxybF8zM
                nWzYt5HLH7iJ2yjaQKKRjB9H1m6xFEFA79+xSKmKQqpO1iHNJWyGCJ+VnEiU8QBy23S1YAbx+kdB7ESD
                kxRN98pDx5fABH6IqqCAAJjDm7XLeL2H8v7lQx+f58t+TszsmMYyBRJjGMImMYwiYxjCJjGMImMYwiYx
                jCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwixztiWPEUKfWSESrO25IxIQEC/CQVI2cD37h4iVod
                wYoh3+mBQ+oR7a4ypJL2CHRXTTWRWmY9JVJUhVE1U1HiBVE1CHAxTkOURKchgEpiiIGAQHtk+N9fuFL/
                AB0x/m77IFofukg/48jP56hkTgBxSAYiYGJAYmLEJAQ8EJC7OxCTO7OLs7OzuztwoCdxcXF3Z2flnZ3Z
                2dnZ2dnb1Z2dmdn+T+q2KhQ9QmclaFpmtzOzuF2pGoV2sC4O6bIEdOWxUQZiqZw3bKJuF0gKKiSByqqF
                KmYps4Jqro9NRJFSu6pTVXAhkUTxFRKosVQwlSMkQzcDKAcwCUglAwGMAlKI/VmqK48ZN+z25LVdaZXp
                at2aq8p+Ru8dW2Z8IIwD+QDUfG1nSWs0KLtI6tT2Y+qFy15KAoHf3e5mVikRWbtVQ93qPjJLuXvTwnr3
                ouLRlKXVtzl3CeerMBJva2+d10VqCwtD5w1Os+UjppQ/zcOoCwRz0BcMytFDibKV9C4f/lOM/wDYVfl7
                f6r5KNbIyVTSCiTpdOt6qOgxFP21YkNUTIs/WUBFH2pQrcSN/VWEEUhWMTzVEEygY4gA98ypOt4uVbmj
                ajSI6cbJC/aCxgYJpKoIkUBuL1sKDRJ2kmVQ5URcpCUpVDlTE/kIAOj2h8Z9sK8f6LrUdTu428pci9M2
                O1JXPQtZGrNq1EbympuRlbdNxNghJzclXjq/KIyk7X5eahliwXtsOykWAr+0o5l4y8XNtQGyeN11dQ1l
                1xJaW04/qNkSl1yOK/YCzG79tE2DQ2KTUpG7WqvYibhL/q6MI2V+a8FE0aEF6b2V24NEOIxIEJhi8cBg
                TEBjSrCQkLs4kJNEziQuzOzs7Ozs3DopPdSDeuxuPHGxxsTV9jY1Ozlv9Gr5p2QhIywtWETOySjSVVUj
                JdBdot6aAAqBhIRUAIIJKJibyyGO0OW21decUdh7U1zzc19yLsDPaerac2usHpCrUuM1yxnnT0J1s+hz
                S87HTy0ozM0dEcPvQGORZrEbm9V0CqGwfm7xwsPKfR6mratZoSpzBbpUbW3l7AxeyUWAVh+d/wCyrtGB
                03CvtJjEIAFOUnbyAxu3wHAG1uInI/fmi7Bqfa1/0K3knexNcW+Bkdd66sVXhkoypvXrydYTzB1Lyq0i
                8kwOySjV0TN0WxE3JF/UKuQCVFFFN5zg5KVzWXM91W9u0DkJXNH0fX87r7k9UdasKxAHutqslXYTFEew
                iUjOU2dex0LNO3iPuteRGMMyBSYdLryTaOj878TeUu57DyXg9EXLc+t+TVatmgGu4n10oFRhqpJaqsSr
                5mgam2glUmp2vuCgRyVsZNyq2mDOpCJdKIxyQmZPO72507Z60zfL1vrK40yha95Ua911FrUtKvu2cfWt
                jUCfrjotnTYw4JRpmMtDx04L0GaLZ6vNzR3bgq4essee+l9Ka90hToit0ij0SouyQkCxsz2k1GDqpLNL
                xMck1XlpMIhgyVkXDhz7W6IvICu6A7tYx1BUVUExFmDGMYRMwJv/AJG6y42VWMs+yJRdIZ6bY16tV6JI
                1dWOxybpdEqycRHuXbIiqEU0UM/lnazhBoyakIU6ntbxg0d4i5ac59Q8UYN03mn6Vs2c4ZAtAayhXiIy
                ypl0hO0kbI6Aq5KxAnMJD+2vkzv3iAqGhYuUOg4KhVa2nyH2dyW3xCbC2fNGkHyk40aQcO19RCBqsJ7e
                LhtA15gY5wbMUPVETrKnXfv1fJ5Junr1U6460ddfEFium+GzWM1qxUy28w429LHXbts0sDJFWkkCxl+w
                u0rIkLPDi+8Zj9JLTQwODT7Z+Hzwu7D1VlHaNmguYDp5TjltPbMCrZDZnhjKQKmEGUHdqRmLDby5AVcB
                coabzWml+Fuj0HYVO2dWGNxo08ysVdkgH0HzNQRMkuQCCuwetVAI5j5BqJyldsXiKDlAxyAdMAOQwx85
                RcYz7/iXKkdaZKIsilYd6+igkJESVOtVa9SbaJ23PMoNnErqzVysmtHM1UmCVgdPa6QDMCGYsAUlHjyv
                Pqvkxs7jPa/nTQZIqke6OgWyVCSMqrW7QyQU7+jINCHKLd8kQypY+ZaCm/jxUOVNZVqs6aut11X6r/B1
                3rFnsPZu+tcaRk/Nwzl9dbGuMLH3tnIsG7dd+MLWElxsVwgv6pJ7usVfhXDJ8YTMl02M02fRDD5fDJ4k
                sX1/w0FGbHFh+oFSq0mTwNULFmnkRhYGmyWBkfzZirORicuPskV2j3+X5l2CP407Y6zeHTZ+mBtmsaFj
                YdKuWhr08tDF33cdPP3FBQzNaEWcJTYSGC9BG1O24M7jUnkGo3W0LgfP1WwIyU1ZKtZC17Vu/ddVWXUJ
                KR0o6cXm2SkhpywWCDi45hVkZHWdI2HuKgEUi2IJxsFbgYwLYrJczeO70Nx0zpqcPT2/mTs+CiIHXLRj
                BQz1hbZi7ytwNF1WJYQdRosVOV2pSrmyS7uJkixFKjmb5jEMS+8H9gSi28tIRuofmJ8qD4y6zYTFc4h0
                WychbuCC6Mbd7cwk9d6gj3ZygRu99llCMdj2pNsqJjuogIClt3iIIgytRDrGUQqK77271COqTsOd2vcI
                Hd3I17WFDNUYbWOurdZqBqmPlUnLxtA12rUuJkoWmtHTKGXWUVXTCYsScMtKTsrOSDd1IDvHg+nuTuFH
                azTPh8cLiR/EuMdyZnduACE/rV+7+S8lhgIXdu2KTl2bE2K02/YcbGUZ8bSZxc/PcY7Mgu7fUCM/WF35
                475mEm5btik9Wbehpj5UxupbmDbrPtzW0W74d29+yh69qyts4sNjamgWCiyDO2xdsMRiN4ssmiqL26Qd
                hXRh37hJu1qDioN2piyNsNpvXUvJKF0ruHSV4hdha7tlc2C5iJ+EXMYpFS/Mn2uJlWC5EpCDnYxU3s0x
                Ay7VjMRTsp275k3XIJB/k+sIqTgrJJwk3HP4eZhpF1Fy8RKtHEfKRcnHLqs38bIx7tJJ0xfsXaSzZ4zc
                opOWzlNRFZMh0zEC118nOsa8dsPfrN7KPCQbagwMmnFi7WMx95Kybxus7bxwqC294OGzZu1UXTSKudBF
                Eh1fRRL6d47ho+Gh1+xnMaDUJsUFUCgibvguQyTwVAeRnLuGcHmaV7IkTzMBNKMhm0oXJs2qYyPCzZai
                LVZMeEAnHG3dDaikmhgFyZ35GYfNE/OZy81mfzGIiaQd+GyJdIOXXEeAAxRcK7fby6pQ7CKSTeNfs25j
                d/iALHdOgT7ABR9mOPb4Fzd/mlnV+h9gbw5V1HdyhiwVB1RZiTCkk9QVVCXeMGrhGPq0El5pC4cCdyVz
                LyAmI0j0zKHMmo8dNmS26bMHk/8AJb5s3r+fp/csTD7f1fizMzc/0JjGMgUSYxjCJjGMImMYwiYxjCJj
                GMImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMIsK76/cKX+OmP82fZAtD90kH/HkZ/PUMnpvr
                9wpf46Y/zZ9kC0P3SQf8eRn89QyYP8gv0/1Mpcny/T/Ytr2M6Ox2SDqMJJ2WzSjOEgIZoo9k5R+sCLVo
                2T7AJ1DD3E5znMmi3RSKou5XUTbN01HCqSR9R+5epVPLPHkRpOvsY+MSUFJO4Wpsd7JvgIIgLmNgCrJM
                o5I5gKKJpY8moq3N3WYMXJvTRwl1g8QHS7obQrWt+z/wl7IAcmK1/HQPkdhygRv2lLVx0RD5NVjYonv3
                5qWPaYXge357jG85hcvZvnx+tbjM+BHt9f1d/wCD73x/1fAf4fwfeyrpP8592zD4wPeREk1e+0GTFrFW
                KEroeuooBRQ93wJYxEDCf6BEAb9yD9BIpRECjlnjPu7clx5J6hjLXtbYk/FPri0I8iJW42B5DuCps3RQ
                KrErSAxpwDxKIh7KJTnH1TgJzHEdY8N+yE6LsOz69rWN6db1XPZM9iMLRuZo8PjQFsrfrUAtywwW8gTh
                CdkJDihkl7gZ280SdmX1WqFyk8bXKtiqUsbSxjYglgeSJ34aQGlAO8HdnbvHkfT39H4sZ59BH8P3/h+D
                4d/8Hfv943b4AAfEQ7ZircW5KVoylPbzen6jePQVBnHR7RMF5WdlViKHaxMU2E5CqulgSOc6ih0mjRum
                s7drIN0VFS6BeQHPTce0jyXoWVXVlAR9UxYStyp4lQGRS+InsNrILOQkBMUezlIqsbDKeZAGNAweZ86d
                c/FD056FvXxmYO5sG434Bnx+n4JopMi8EpOENvJzyk1fFU5pBeOEpvOu2SYipULUccxxZa6VdDNz6sSF
                YxMcOLwUM/w9jO5FpPhTsMwudXHwRAU+RtgJM5hC0dePkRntQmcYnYXs2z9b0w507jsGkVNQhSiYlmtk
                BBHKBxKBDmJKv2hgKYTk7dw+l5k8Q7mABxzI8q+NcWUx3e99UHAiJlx933qvSpvTJ5CYCkin7051jCmI
                EbFKZwcfECJmE5O9OWf5E6ejXKoPby2dqmOodVxGxtgnkFD9/JRQX0PFyDZUTmP5ep7QYqhvISHOIHEe
                bXtlUO8iqSqWuHml0gOdVk3dAnIIpgHb1FY1yVCQST7B+3O1KQPq8h7fDU7K+Ojq9BAeSboPJr+HNhOC
                5nh2axXGNy9DO+2LwtWYSFxZiBoQ59ndnZbfReBDGY2vTm2TbNorjakaCKx9AV8NWtTkLkMVT487nfI7
                MRDG00pkLO/Yzi7vaK2B1NOKdHRcFjrXO7BkGwHA0fSa1IqkMoXuBQLL2MlehFkjj27rM5F2AFHuUBES
                lNqx5BdWTc99ayEBqSJZ6fgHaSrY00i5LPXxdI4emoZvNLN20ZAiskY3iaLilJVgr+ys55NVIqpdaD36
                jf4A/kHPIP8A9/8A+Pw5ifY/Fx1l3yGSk+WoapjrH1JqupVJsdPJGTCPaWUtW7+Xj5Yn8z4S9UCTl2KP
                tdhHNfT/AMKHR7UbEGQmw9va8hA4SRT7ZZiyVaORnYu4cVXrUsTIzFw4fGUrZx9rdkjF3EXYQlK2Tuax
                WD5uR8vdrGkyd2yyvXcikq8KyPJx0c8nZmWmXqJDetMTUY2VdO3hlXD6SQTETLrBnGltTbC1NsenRWxK
                04rMk6sJUk2Dt5GOHaa0W+QbyKLlCOevVGThquqRFdu8K3WKqKhQT7pn9PLGhXiEdF8hpGWiIKw1Vlow
                itsrk2lZf6/sjbs0qlXYuLeVWxVmUiX6l+VprhzJjILtm8K3mSqRj5RZu3NkrlnBVg+6qxsSAbwBJa6b
                q2/GbBdQkZcoUH2x6vcIVe3uAj7VeLsgSHVkLMDiEXh1YYiqS7hBzEICi2AKe+t05ul+w7H5s8mVixFi
                xYCbIQgJV7lrLY0rAUnx8k9lnlqxRtK2TjN5ytlLDEFaD47OL7dka25tqTwVY8LZoZipWlgxc8pjcx+s
                0MwNSTIjlYoKTtXt2JXh+hpY/h46EcFiSW3a+jMZXT+x1R+/4m/lHK+/PVJYNuxC4pn9E1IjUCK+BgSM
                qnYbQdRIpx7FE5CqJnEgdzFKoXy7goHawRdP7HV/xTfyjmoDl7V2M0Q7pyQoqg1M2IoP7dIyKzlVFVMB
                79jkO5OHcO3mAimI+IiGXH+xy7nBofVKjsFuqdukGHydK8EZds0VS7HWintQtw7SS1R+2GF+Gn7Hi7gc
                2kDDHX+21Po1flIe4Xz+vxlx7iJzvyQt83H34+fqtPbz6v8ASAf6Ph8M2C8KrFS6/Rb89uoammohlYZk
                JSt7BuutqnY04Kd0ltStOW9DYXS9VSZsEhsSdkaxr6UfQsXZYulQ7uSnpxKJBVlLNdfkgmZFRRI/wOko
                dMwf/OTN4m+9+EOwd/h8R+98c2O9O3V3HO9obYm+QNK1psFOs/NstOqF6tuz9fqzctIpzALpKXjXm4qK
                NerbEEW0hMoG19f5uxCihBRMzrv2xaxpfo/zc0BY2SfukkgkGEhKszSHIEpRsDxP5sQ8Exs4m8wALOxS
                cgxCueuYKNqcpH5jh9m3EIsUjsZAA9jOcbM/1m+sRiI+5P2s7FAK9Rtfht0bQh6o9ipKrRWxbpHVqRgV
                2juEfwDGySbWGewrlg+k2LmKdRyTdeOXZyci1XZqIqNnzxMya6lpT5NTpQNnby3dbHkqk0gaHrytxsxF
                FTVF9MBcpmRM1K0ckEEmqTYawuR4ooB1RTdl9mEDF9QlVefYtI3Z15jmTSDj2UfcbKyZsaytMOa0yatZ
                l83bs68vYZewT7iEbJEKhEqzc/NTKjArY8pLSTwXDte5L8lW/dZzB/yR0x/tfYf/AHj/AK8pW2/5vs87
                E5cQ4/gnZu5+MlQ9S49OX93ZvRn5bl1TdjbnTcvz9ZmhpcO7Mzl/DqnqTNy3Ls/L+r+v5cq4rGxsdDMW
                0XFMm0dHMkwSasmiJG7ZBPyE3immmAFATnOc5xEBMqqY6hzCcxjDz8YzVxYCTGMYRMYxhExjGETGMYRM
                YxhExjGETGMYRMYxhExjGETGMYRMYxhExjGETGMYRMYxhExjGEWFd9fuFL/HTH+bPshRU4pGbvUBHOFV
                UUzvl3XmkJAUA8azcySJBE5TE8VFmhEzh3A4pGU8BA5QHJw7vYvZCllQYM3b5f3uyUFBm3WcqgQqDwDH
                FNApz+JRMUDG7eIeQd/vZCuPY3Kp2KPsjenzTsYxZZRRF3DS5WqjZdsu0dFWWRRTOmHsyyogqBgBMxQO
                IHAokz05AihllN+AjAzN/V3YRHuJ2ZuXd2FndmZnd+OGblQE3qPv6P8Ad+Si31EORnv64S9AbTZY/XOr
                k3Tm0L+0GSYvbLGIKuZx/Jq+RSnaVZEikcikon/Uj9vLuA9UqqQo1xmWwrtywuy0FCv38DrgXZ2kPAsl
                FGDiZaeqJSv7MoiqJ3i7vsCpY06oRrAhUUioLPCLvnE5OTFS2tuvXN0pusolxaNj7JkGTISe8o6KAzeW
                sTN5bZN/IS7pmyRYkhiyx5D1nRVVm51U2pHjwyLJznDgr0obRrVWJn9vbai2sgUqK567rxko+9kU7FOV
                JWyWBq2SVWT7imsRvX1G5VSmBF25TKVY/GboBlNb6ydSN466dSbuNvbDmNssYzVMPlbENwtZwdOKrPS+
                AxxlNJCFarcqYyncaBnjOjeljkee3amLoL4Tv3HNC0PcOrG7ZDHWeokWWk1/QMLbxN7OS4mGjj6F+7sM
                NerQuVKV2/ZyMdGjkMhLWmqR468NKRntE5QQ3l0+n2vKO3nnkYZsk7ZA5ROol4goQSd/MoiUfIPh8BAw
                d/IPiYO2fHTZdbe07zh4xUCcfPl6zabswauqvOHXWPBFesphdg5j/XEV4Z2m2Bmq5jkxI3UK5WI+Zg9B
                F02sd702dx3oNYNDlkDbCvdZRcREQ6t7plNNqk5YCdJd2nGN2sfCLSzN0PgxUcxK5o94iZyisms3EFK2
                7zaCMfyy19bIl0dSYTs0qZm+IqB3KUjJwkywayAqGN3Oo1cvCvPpdxOKPxL5dih0D3rE6Zg8NZz+axtP
                MUcLWqbPHWsQRzSUXwMkGeDIVDkDvr5Nhot8HNEwSV4ppOCcpeyO3OqniDznX/XtZ6b5DH1bVuHbXuBs
                dyuLWmsWorWGp4/HdznYr442vjbyZGcZ2blKiwxANNpJdqHNnkYXbmy7VY3Mv7PrPXqUtHVkyiohGtoC
                H815m0mKQPETzZmikqq4FP2gsUlGM1hErAnjoWRu1h5Q3wETrumFGbyPhXa0U4poHQTUEiEpMJkOJHcu
                5IIqCKplUo4qhmrLt/VCzqYfKWHvlo09OUzWtZsNtt91koGtMIasRTuXlF2ruVQdSQ+g0TUFuxGOZOUp
                GQdFIxZsll1nSrZEqjgmU+DvSl5AsXERPbXslY1Y2EyDhWGRMhdLIkn2Kf0VUoeSbwSC4gHgp4TjgqAg
                AmIoJTEU59eGKHHb9s+29b+ol/GXty2ParkONHJ2qvmUACGrYsz4qrakY44447dfEUSgAnx2Px41K5Rx
                zkJdDNOznSPob01m+kNjxGGzWOqBiNYxBQWcllq1StViObMPjsVUuXIp8rbmmEslNBG088F1wld5bK57
                np8LpazC3e6+7IWwm9o9L6HkCfkIeXb9t27CAfWHw/gzVPeeP1irqs/cIsruIYwr9uyi5Vsos0UUnUnC
                bo4x7hESKetHMSGO4UROAoC9beBxE4GLdyUpOmdXa5Trezr9N2yLjWabsKys7awKUwofugQpmcUUZFBN
                24TMl6gTJATTExfJfxMqFe/nxsSuWl47JEtYiGgo5FVnA12CaNmEHCMAMcxWkcxblKimBzGMou4MUV3a
                xjKrKnOImHpfbwuGgp1smDQWYZKUzR1pBGWK38RDJWIp2du0qnEhch9dp3HyiYYyI20T3bxd7Jsmnbr0
                +Ejyn7Z7sNb6XljmrV8ZiauRqZKOWpBZFrUmXkKpGMMkkNUce5NchllsxRAMBdBbneX9pJVC1KFG6VpA
                qxnYFImE/CgoRuSTMkQClTfNFzptpMqZCpKGXZukSgLpRJDNz/8Af/8Aj8OavtYz6kVyMpKjFQwJyclI
                Q7tIhvEi7SSjXiAprAA9jlRXFu7KQQ7eu2REQAwdw2gv/wB//wCPw5yl60aVjNL6gSQ4WGOti8zTr5iC
                nCzDDSmktT1rVaCNv5uB5az2Yo2Zo4RsfDxCMcIiO1fhn3nKbx0+GTNzSW8rgclLhJ70ruU9+vFXqW6d
                mxI7faWGgtNWmkfmSYq3nzEUkpE/ttJK3YL6LbX25n2kbRJRS8ZH2OMd7faydgM7kIspadHhpOn3a4vX
                cosVKQRZKw6cQuMMPrvSPyRrV36Hcmu7xqvaGsaTet4VTbkjHyLmRTgqtbb9ZfscrT8+acmIudYXmsVl
                SpWOwTkg/nJyvpIDNJywvntqZMZBykLv2/DyclKnsC+3RhYVaoxqmrJN9YLGlcICle7IWYu1BqX7JKWD
                SO/E3SUlLWOIh1YyOpLOQchIgqafZRjeRj5X9uUhohjuqg1No5hDz9JtthrNujIiw0uwnhZ6HnmMY+jn
                zilcZuOLJNZs9YPW4GVTupHAoqHZSMUkUycldQUaI9Fs7dlsWGyJV74wQEeSjrBTm7hJgjfIlj7Ulyej
                ObGOPhaN8ZIJfFWInmpZBlyOSPqk+Ogq1nxDa9dlt2Qjw81o79fD2JBKSZ8SOWpRUYMnWj8t8pYeR81C
                /wDAqszV8j4e6f2Or/im/lHNNnLafXTtDKtNEVnDl7GoOEGrZJRdwsq5kJBomkiikU6qqihmpSkSTIc5
                zCUqZRH4DuTun9jq/wCKb+Uc1Rco4GqM2UlaSlkpfbNlRj9f6ugY5YwvG8qlMFllrFFt2vZ4SQj0pJXw
                kBMKLFUrNJAEXbpJ0lJ8AmpXN36h0NdpzBW+MoXDt2ZH9K1CEa53JxFv5yWOHl4o37QKRx8044mkkHE3
                iHhefotfib/S2HXXd/T0Zpi5L14ZmFuSJ+WZhZ3f0ZaYJcxjunRzkMRQy6xjpGASHIYyvkchim+kQxTe
                QGAwCYpiiU370wbfelxHWR9RtzmgCcsQInISJXB+J81cIeWEg6c2cd2e/fNTXV+Bd7HxxXclo9N4aMMG
                026SbcFjKKmb+f5T8Y3Fh1ex2c2atSbYq9WinuyRjEiEb3NVlEtPnNJikiUiJpdg4RdyKbtJIisgwI4a
                rguuRh4R44pvte1+iTtju9XjJN002UKEC/V1DqDcrjxU0ntpCelZqu7SjnSSVJ1dDPXGxZNATyFfeWRl
                UpyYq8y9qEM6h/0lXHr28E9er9mNcYKrR+srxtA8YRjyziUgEID9o3L9r9zszgTNzwuyx3cdI0Xo7EEb
                jw5uJC4O3HHa7gXDO0jcP28k7cibNDy4FUT29sciprioqS+20qqmxFXS2wTqFn5HzPelnrONeKXExg8r
                Oq8jmLlSaM+UXaNFfNBO4z8lW/dZzB/yR0x/tfYeVA9rtUGHIXdDFpBx9ZasttbFatq3EJxqUVXkG1wm
                UUYOMThW7OHTj4hMgMGRIlo1jCNmyRWLdFsCaZbfnyVb91nMH/JHTH+19h5I2x+7p7nS++vjn92f3yVB
                /duWf0dm9HdvT3f3eRsT86Zl3/8AJpf036b/AP6/zfl+XVyTGMZq6sBpjGMImMYwiYxjCJjGMImMYwiY
                xjCJjGMImMYwiYxjCJjGMImMYwiYxjCJjGMImMYwiYxjCJnUWD+0M3/FEl/M1s7fOosH9oZv+KJL+ZLZ
                8mQ/yG7/AOks/wDwmiqy1WePV7JDzpCmP7uegoqQnYFFWqhDN3iZBN2KBlGiy6ZBN++Eo/w5s8qt5QO0
                aPGrkFWzlBFwgqAiHmisQqiRigPiP0imKPiIAICJgMH1jmv7UtJRs8yrISSILREMKZ1EFA8iPHyoiLds
                oQQ7KIJgQ6zkgdwMJUETAKbgwZLk6f0exDCkJQKUokECeJSD8C9vqEAD4AXxHsAB2+ABn5u+jWD22nhr
                OwYu1DWjs2XLHUp3kjK75DlDasjMP1YRI4xgh7gIZTgkczgARKTKeg7pR1/4rFZuGabDXpRn8yuPfNRt
                tGERTNETi00M0YRBMLF5g+TGUbG/dGdafn7Obq4s8krs3uATElpjdVglbXp/ZSZFj14ktMO30xLatnnZ
                DKIxNuiBcOPcrR4on854RgErG+o494R0bCjSey3tx5KanTUVOqC1tQMb4iPYoNXZzGEPwABRETfEOxR8
                hDxDvbt2Prym7Yp85r/ZdbhLxS7G29jmK3ZItCTi3iRTkWQUMiv5eg8ZOE03sa/bGQfRr1FvIsXLZ62b
                uCQBoHDLjRw6qsqFJjJGe2LYmLiKaXO6PyWG5EjnK4iq1jVvZ2zWFim7UTNHLtkzRkpdFJFvNSUs4Aqg
                bz5Xr5lM10o2yrvuFlw2wQarewQXQvY+bG55p8NZx1W/9hZkkx91u2vFbpvEYXbcoT0ex7EtandeIt6l
                S3zUW1rKFlq97asKY13pX6kuOObMUuYpZLteuE8PeZvCcLnIAj5UrOwjMft9WWZKoX2vzLlT0mRXJ2b8
                /fsVNrIInZnXVH6xTanVTdHDsP8A5D4B3AO222t2krciZiqh2EC9h8g7dv3v1fe+rt2MPxEviPjmn+lU
                97dp1KJaGFBuUoOJF6JPIrNkQSlUOAdwBRdUxipN0u4AdU4CIETKuoWf8KPuCOYRbRRwdtHtUWiBnC51
                1xSbpFTT9ZU491DiQoCIdylL8ATTBPsUNHOkY7dj6N7NYimc2Pgsj2AJ9tmzOwg1j4OJ2/hIwiMXmcEz
                uReXXGWUZADeDrBi8Xk7dBmlYsk1V4rELD3CNZieSuZn3cDI5nMzBw7lE4uTgIix6eOqPyJ2ZojlVBLW
                Z28Q1PueKiU9fTxTre5m9iga8whZiouXAgCKM0Mo1Tlkm3f9na2VkdIxxSfey6l9scg3NjTXA7w6gmKc
                BD1O/wBf1d/iH3/+3/Tak5A6i1Tye1bPae3XVGdwo9gBFZZk4UXaSMVKshOeMsVdl2h0pKBsEUqY52Et
                GuEXKQKuGqh1mDp40cVzZfo7b4Z7leUWCv0dN6NQZx8pD7ltizIlqKwdO5Bu5qc5UYk6Tmbu0E3ZN1VZ
                xkhB1extpFs8M4g5AHkYh0o6Z+InHbngaOv7BBe1/ZdYxENCdrtK1BQzGNoOMVa3VsHCzR5aKOUYL+On
                7ZrDgF6iVhpLtfH6cZvpfl6GSks4uqeRpZK2UojDwU9OzPyckc4u7M1QyYpIrXPlxMTwz+X2xnPGbiHR
                rDsjbrm+IxUg8q+smasrOSabZZaPays40fRleaO10yiRBZwcZCTbCochR9yqgPfuUqm0F93Hv2AQ/D37
                dwEDD8BD+HuH1/eyS2tNN0bjja9e6i06zVUQZsgT2DJuzEcSNtdyYHUmZK0GRICS7wkaim6Rb+gmxjUS
                RzJmRJu2KQrkDqJCt+dvrLb0oNyuVOWjkgMZKKeLqCCTpuHxFKOdqGKj6AgCbN0JE2xgQcot22uHVG1b
                3zYsztGP75cfrc0evnA7dxDVqP8AGHdiMWZpH8+7O16F28yowg7nNGzvH0D6B42p0713CatknjDJ7P37
                EVkX4CS5bYKcdGQS9QYatGu1KZn8q2RSOwRSmwycDiVEWKVs22zVxjaLCvGagPISFDqOr6TuCa2FHH2x
                qaOGvpUW/wBbttfkkImQko6+ruhgXryNJTQetjtCoqO0vS8yIa3QXIyAjrjXbm1k2mx7q0Xv9t0drXTj
                fbLxpa26EhfIF9rylVM19YzjkozRpuddWJ2iSWbqt5EQkXSjrE2iYqvzhd2RU6k2bOHelZQYS1SGu5jZ
                EbQ3TTYGuH1gtj+Pga1apGtpJUJvcINC6JRaZoB7OtXDeUina7d8l77kDJVOcmdB2KtQtNblsV02PKsb
                BrvSi+oqXJ00bRX2NXrsW8Pr3XSGwHVHfMbLBSdlJGyLwiyhGkrKnflO2QuQJoj6IbDT86QJgw894Yhz
                fdBMIZTI1bIHgzPvjlie3SmecIvhhAwkhlGee9GeQrFeePq1Hf8Ah4ZIJKeZxZzFrbBYrnLpte9Vkj2a
                MPKKCZ6GSr/DSzDbKUJIZoJK1XHSx+Jun9jq/wCKb+UcixF0qsqW1/fVYhqvbUmoVxpMrlMs4YxCB13o
                tmAKiZNiZwtKuweuWxEl3yIpoLrHboEKEp7p/Y6v+Kb+Uc2JdKri1ojkDTdzy+3qCS4Pq9eISNhXKtht
                0MRm1dQijt0gROuz0Q2XMosCSih1yLLgBUygcqfYgVT9jZykWI6pBbmaYo/2tZyIhgYHN/MhqszOxyRC
                4u7N3M5evtw7LFHiYvx47oVlbErSuD5/XYiaFmc3Y5jbh2IwHtf2Lkn92+q604PEk101EVkyLIqpCmqk
                qQqiaiageKiaiZwEpyHKIlOQwCUwCIGAQHNGGrr3JaHvO1a3Fcqtz8dWkNsJRirAayb3h3E3otTmJxgg
                NqJTNmUMDe7EwWZNwXVfrGbSsgRo8a+Sh1v6W5umpwkN+20c0H/69bPD6v8ABdswPKdDnpUTMg/lZTh/
                UHslKPHUg/eOLttsyzt6+XUcOnKxg2AUBVcOFTqH+BQE5vgAB2zuvT3/AA0MdmKerkyjnGNuBgonwUZd
                wu42Jzjfj2Z3Anb3FxJmdcwq+4YyMZo5K94glGNuBhqF6xvzzxLMYff69ju3uzi7M7fzodV6R2Zzl5j2
                zX/GOnWW8zu0tl3q0VptMOXZ3kVTpKyv5ULRf7HOy84pFMoqNftV7HPWCxSzgz1UrdSVm5p+0CQ/pF9M
                Tpr636cmmDVWJeI3DcV4bxD/AHHs30lkUp2XjknAsK7WWi/ZSLpNbVfvkYdJRNOSlnDl3NS4kcOW0dFZ
                44u8DuIfC4bWfjBoyoakdXj3eW1ycOrOS81NIRQLDHMXE5Z5eclyRjNRwsulEtnyMYDtZV2LMXShljS7
                AAD6gAPj3+Advj+H/Dlv7TvNnOVwxVAZqeGFoykhkdms3JA7XB7RRmYeVEQsUcAkQvILTyk5tEMNGz+1
                z5SAcfTaStjRaNzA+1prRhw4vYcCIfLjJmcIhJxImaSR3doxi+cYxlhK0ExjGETGMYRMYxhExjGETGMY
                RMYxhExjGETGMYRMYxhExjGETGMYRMYxhExjGETGMYRMYxhEzqLB/aGb/iiS/mS2dvnHcN0nbddsuX1E
                XKKjddPyOQDpKkMmqTyIcpieRDCUDJnKcgj3A3cO+SLUZTVrEIOLFLBNGLk7sLPJGQs7uzO/DO7c8M/p
                yirw6lk2EVTUEGzd7Jybx+/duWUW29qUSEFAZpe1uTGSYMRMizTFMj922McpinSIoUwmPkRR9aXACLeA
                j48g+QgaYmhM4IAiAFEWkSykG5+374AkyAHx8TnAfMNsMNxc0TAx6MVFUUGjBsdYyCA2e4OBIK6511B9
                VzYFlx8llDiAGUN2AQKXsQAKHZfa46Y/+RofnDavw9//AI8/D8f8OcxdZ8FHVjEYLEYqzt+kRlj8dVqy
                x4q5lgrnJHELTk81zUp7UhHL3k08b0nJnY2rxG/pN72+51o42RaLVAIs2DedjCz02sm1iomEhBO6UOsq
                mgCy76Sk3hEUvWMKCPhGJKLLdwRECpLqt+gmKG3rdFs0rKrnmrY+iVDSU28UM4XIJ1E/JoyOsJjotkwH
                0jHDsdz49zgVIUW6W16a4VU+TvTy2DXI0QauPKA9S0WoFG6CKigtCKoC8OiIN0zmOAD6hjLGMqooocwi
                Pgt68XZNDVN5c1ushLzCUGspHRkE5sE1MPFwWQAqUdFopuVX7k5fIxUSJKGMAGHx7CIBQth8GnUvG4ne
                tlzOY1DKx4zXM3Nr2Mp5za8rYhhq4a3JNPBUva7FC2eyBs8UQVWGKIGjrwz/AGs0h3Ro88cW7adJKYxR
                R7Tr5yySkIBGA5amRSGZEwgACzkZk7MIs5O/DcrX1o2BSjKd72EgA8nnSrhQ4h2ODNmqoyZpCHw7lKdN
                w4L8BEwuu3cQIUQy2p2L3ERAA7G8vIe3YvYRH6xDt+ERD4/SAA7gIDnAp+kd6KVWBZPqhfq00bxrZII6
                Mos6WZOAJgKhpJ/KxK/si6qgCY7VnGt1WoHOn7YoJPNPuTccLQqPnI6t2JOK9+5lZ+CuM15mD4lAW8ig
                u1ApewARJNuRIvYvYodgzDmm6rt+O1rBY+jpGZhjr42o0kmSq3Me008sQzWpo4a9G/YYpbJySENuGpJy
                78h8l0Fzed163mMlat7LjTOW7P2hUsVrTxxAbhDGZzWqcPbHCIRiUMs4OwtwXvx4OWt9VhynNJWGGZiU
                B7pqyLb1zCX4CUjcqhl1DAI9hKkkcQDsIlNmFpjbjizPD1nV0etLzC5FCnnHqRmsTFIGMVM74ybgoLqg
                gJgEvtKCSYqCkQiL8xgbK5o2Zq3b1YrybWg6M2EMvJqHbEcV3V9iWGJaIph67ryjoM5UHJwOm3Z+oBBL
                5KrJG82oDnI1lx52fVqoy9bV2wSzkwknKzq69MsntpnjovqlauBPG+sQWCans5kTCBSufaVviouc56t9
                E9Qclnh12vjMpjakFQbeYyFTX8n50ISvE0FHH5C0xQnbnAvMllGiD1ImGWKUp/s2rePyWmY7EvmrF7H3
                bMln4fGU7WZotDKcbEU1u7Trk0g1oTDsCIrZNZl+zkAYvtHxPSNcsKURzIOXCszaJYDmmZ515mWWMoYF
                1WzYFDGOi2OqBFFROb13ahSLODABEEUO4sUQznomShZBMFWUozcMnJB+P7G4KdMTEMPfxUII+okoX4pq
                EIYhinAohnNXUW2O/cusNhj9f1UuyD2//TPh3++A/D4/H6wzpXGnduj+11ZscfpfvaPZh+Aj/BGD/p/B
                /hzL2E065j6UeOra7koaQgQPCWOuO0jS8+aUxHERzSTckU0spFJKRERk5O7r4i26jcufSFnYccdvzI5R
                m+kagPEUXa8TRCEwjEEXDNFHGIhGwsICLMtONOucXqyT2lV7jUndwgrnVl9cWWLj7EepyTcsNsSk3xF7
                HTAw1gTQWSntexjZdJeKcpLsXT1IDIqmSWJlLcluj7620Ddq3TqzRKpb9r7qtBKvBWGWmnEDb5myUpa2
                QyrJ1SKhDQFfatCVt3UIquPLUzawsiVo/mm8k0cRTP089pjmHSdo3eza90XvRo4lJGaZlk2WlLZMtnka
                7k0H5wQB7U5FidNdwzbLlcoFA5hTN2V8FFAV8091Hzo2bddfBfdJchJVpXp1IkUMhpq3QkNDFlXjI0k5
                EW9Ui4liV0ZmzNISDoyZQRZNxdOgQbAKOOzxux1tK2/W2w2zWTmxWQxuPqR6hGTMEGSLIQduaZny8wG7
                3Xjox1ngKzc7mcmfl9o2yOq3criNobPajWeCpayV+0e9zDPNLd1K1h5oo9ad2wgWGJ8ZGd8rLWhq0fL7
                e93FdRNwsxZJBjXoCMfTE5NO0IyIiYxsq8kJKQeLFQaM2TVAp1nDhwqomkkkmU5zHMHYDfEAso9PDjRc
                eLehHlOvr+Oc2u43mV2RLRkUcXDWsqTNeqsEhXFJLyFGUfMm1ZRcyLtomRiR88cMWKsgzZoysh1/DnhZ
                D6HbJX28oMJvb8k1VTTXIKbyOozF2UxFoqDW7CVeXcpHMlNTqQABkVFImMMEcLx1MT/7B+APh9Xw+r6/
                +8f9Y5tH4NPDbluluCh3XeBmp7hmaLx1Ne7u19fxtlgImyrA/B5myAi8tTny8ZG/kysV55Rqc4vEj4h4
                d5pn051FoJdTp34bWVzRRscmdyNJy8gMcRfzOJqmRE1gRabITMJgQUow+L+cYxm9y05TGMYRMYxhExml
                Ljz1H94PesDy56X3KOraqrTWA1jVuQ/CO90KEt1ZkNr6WkVwStcXdDW28WxlZ71WHUqlCmf0+KqEY6e6
                22jJJwRYxJgWPnnz05c0rghw85B8tr6LVaF0nrqYs0dDu3B2idsujoyEFrujJOkynM2dXq/S1bqDRz4C
                Vs5mk3KviiioYCKXWMgh0zubFc6h/Bvjvy4gk4qPktpUVmfYNahV1FGNN2xXV163s+pNUnLt5IoxsPdY
                qZJXhllveb+rqQcu4KYsikc0RuXPUa3dTOqXwT6Z/FOt6ntdp2/D2TeHL2x7Hg7bYR1FxprLkfZndSNU
                r3Tm0LsC6FrdzhoJ1am9jioyZe0Ry8rUlHzwFUIt1GMZpT6uvUc3n0zLVwh3AhVNWWDhNtDkPF6K5hWi
                ywNwX2PqKPuqaLil7Eplih7xE1WNr7BjG3N5aC2ymziKjmFhIVjItH1naqMyLdZjPoQxVClUIcp0zlKc
                hyGAxDkMHkUxTB3ASmAQMUxREBAQ+Il7Bmlzp1dZHU/UD5o9QziXT06+2PxE2BGR+qp+NfLrOdv60i0m
                tD2TciJLuFknreq7rjZVk3mYhFrDPKZdtcHSTcvVXsnIkW6bGay+r11BG3TM4F7j5SMo+v2HZUWnD0bR
                lKsyMi8h7xui8vyxNNhpCOh5SDlpaHiEQlbtZ4uKnYSWkKjU7A3ipNlJGaKkmBxjl98WHjzpewcoIqj1
                /kPYdb1Sf3FWtbRM5C0eq36aiW0nP1OvMLLZ7lOAzq7x0evqO5CySKsm6jnMkn7Gg7SYtSLOmMjLzNt/
                IbX3FTft/wCKEBRbbyJoesbNdtU0/ZEDZbNULpZKkyNYDUp7C1C1UmwvJK4RkdIVqtnY2iKTZ2aUh30g
                dzGtnbF1gbpS88IrqS8DNA8tG7SDh7Xeq2vDbYq1eO5LFVHb9OfuKzsSFjWchIS0rGwbiej1rBUWMxJy
                EqFLnK46dyEgo6B64ItieM0sc8usjqfg/wBQfp7cG7OnAOXHLmwTSW1bJIv1WzzUFTsYPqHomdAhnLOM
                I32Lu0ikHJyUqudpBVKqWqRVbg5PGqhucfP2cWyeSUk7ax8dHtnD6QfvnCTRkxZNEjuHTt47cHTbtmrZ
                BNRZw4WVTRQSIc6hwIQRwi5eM0xdHXqG776mUHyx5EWenayqXEiH5GWjU3CmQrNbuURsrYmu6G6kEp/Z
                GzJOw3iwwMoWcCSqrGFb1eq05OHm4m7R0iSU9Biq33O4RMYxhEzUv0guotdOpPqHkzsm8a5q+tXuiOa+
                5+LMRG1SVlpZpPV/WFY1nPR9qklZcpVm8xKrXt2g7ZtQ9iRTYtjICIqq5toysD8lZ/vWOoj/AO1+5b/+
                7rjxhFZ+xjNZvVD6nGsOmTpWtXix0u1bo3Rt+3Iaw42ccNeh6l/3dtF+DdNnAxQJM5R5HwLBw+iyWOwM
                4WeeMBloiPiYGdsE3BwsiRbMsZWag0PlV+1oVDb4TfSv43LyTJpLQ3Fu3xG3bdKxjf0/XCBv95r7K8N0
                LKqkoCEgtVL07hzv0i+geBbqKgjLDp3dVTZ+8N+XngHz848JcPeoPrGotr6WmRdiTsmneQ2uFDnScbO4
                /WZR5IKv4lmqUTytVUm7Q+h2xHYmscjJV+7xFQIt2uMZxnbxqwaun75y3ZMWTdZ28eO1k2zVo0bJmWcO
                XLhYxEkEG6JDqrLKnIkkmUxzmApTGAi5OMrAF6qHUn6nWytj07om6Y0VX+L2rrU6otg6hnMJS6J692Ba
                YwiYzUdorXtaYGmZUrD1UnLOYk4W4NHUa4Yq2eJoa01D+0dzYub/AFnemELHZ3VB1Xxo5Y8I05CLZ7N5
                J8H4+/RW2eO7CYeFaGvey9S2thFo23X8M7WSQlD0aASWiYgSTEhZHEss1rLwiszYzTF0LOo7tvqicO7r
                yP3FAaur07Dckdp6nrqGo4O31+sP6RToulyVcl3bG63O8S5p5+nZnJ5JwnKs2KpCtSIRDFRJf1dzuETH
                YPwZWK6g/W85Q8ReqvFdPDTvHGj8g3O3OLlRsnHeoRzGyxGx7Ryg2FfJqtwDG8X9xfEKVWdGVerV6wXW
                7PjUVKXZx0A79S2RLNwpIRu1fgBV+qfBF2jJdS3afEK7rTy1Ve6oq/FWmbChmtHFRrJL3SLn7He/dq8x
                GoPHEXG1xEYuXk1UGDqVkbKB3pItEi2PYxmlrqZ9WeT4kbM1Twx4k6PfcweozyEYqyur+P0XLBCVik05
                MZBNbau57R5pJ12mtBipl43YmdxIyUdX52Ql7JT4VmlOLkW6XGVqjRXyrCtxwbaWtHSX2PJJlJKyHFaK
                i91V5JyxOmArVusbHlGsUVG1EBMiTVey7D+a7Z84druZ6WZNGzV9ifjP8oU23yc6nvCPgEbjpD8erHf2
                fJWn85tObehbbJ7q0luPSmntg7LrLPV96jLVXKZNa8t/zZhHjCwzOu5V3OQq8umxTiv62TCpFat7B+AP
                /A9/5QAf8OQR6l3IPkjxY4S7y3vxJ0GryY37QoWEeUfUaUbYJwJb3jaYSGnZ11Wagu1t9rYU2vSEnbHt
                YqztnNzbWGVZNZCOKorINZ3ZDfqGchrpxL4M8seTWuYyrzV80TojY2z6hE3ZlKyVRkZ+oV17LxjSxsIK
                brcw7h13LchHzeMnoh6qiJyN5BuoJFAIvM9NHkHyR5T8JdG735baDV4z79vsLNPLxqNWNsEGWJGNtM3D
                QM61rNvXdW+qMblX4+LtjKsWl28m4RrMpMnUhIlTSkXU7uwfV2+H4Mhv08+Q105acGeJ3JrY0ZV4W+b2
                0RrnZ9viaSylY2ox0/b66yl5NpXGE7N2SYaQ6DlwcjFvJz0u9SRApHEg4UA6gzIwiYyqXtD5QLyD1r1I
                OdfTxqfGKvckNy0a5aT1vwK05qthZqndtnWW865Uvmz7Xv7Z1mt8/Q63rXV0cZrMS8/F1ao+wRbhIkmo
                nGBNXCtZMvlj+VL6drMnyNfRvTD3zG16MXtFp4X6rit1R9uc1xsQX0pXtcXywIxbia2EwikTptEX9ulI
                13NC6QhI26mLFRUuRWaMdg/B/B/oH6w/05Cnp5c59U9R3iPqblxp5tJRFa2RGv0ZioziiKs9Q7vW5J1A
                XOlTCyCaSTxaCnmLtKPl0kGyFgg1ImxNWrdpLIIkmthF8dg/AH+r8P1/68+cYwiZXx6hfUx551jqF6r6
                Y3TJ0dxz2Hv2d4+O+TW0dh8qpm7stW06gGtExVI+HYxdEstMsTmXSdwzd3ISbN/PpnC1V9izhBO0sDyM
                sHZQJmbD1yi/KJ5WQgaJ021OcBen8+aQsHKPN/BxxPxnLthU0dKSKza4p337MJ5oESOiITKdVCN9UUo0
                HHifCK7zxfneRdk0Prya5aUjX+uORDuPlCbOpuq553ZdeRMu0sUuyjlKpNSDt7IPIyVrzeHmSEfOlXjR
                aQWYuvTXbHTLn3MJccXPIR5o/WrrlbH6riuRS9bQPtuN0ipZFdUNLZ7Q5BwjRlLg+krMaDBr7IKIzL90
                89cVxOsJRIAZEu847rVKt9kYJt1ntfq9gm2aTsiijVV1FRLt+2TcpoKt1TtzqoEBciK6KhkhMVJUhhKc
                pF6nGU2eA3WG6y3WR0TFR3CnVHELSOztcmsZ+UnJvble2gx0JDWWQsU2fVGm9E0Mtk2pbJ+7PqIyg7Xs
                uz2F5YYCvs50rdOMgn7mthOW4dRstoxmrddx27Z+n2vcLKl1tttCya+gpOtUacviMS1TtMnUoGYkpmUi
                6+7mCu1Ytq/kFnRWhkjKptjGFqiRVw/lGVEtnHCQ4RdZ/TcO6fbG6de8YCM3KxigIm8ufFbcMqhUbrXn
                ahzl9creZmAqMekVVqjHR22rdNuXafu9ExcOdWHYte6vHOrpndJzSliLcuONxjKj1GuZFkra6/u6Q46x
                8SSX1LWn0gy83UOlfIGWfmCPmWQJBN7O0nYTIpmSaLZaD5B6QonJfRe3+PWzmHvLX26tb3LWFubFKkZy
                WDukE9gXj6OUXSVI1mIwj0JKFkSk9eMl2rOQbHTctklCVzPk0PSW2x0/qfyj2/ynYyy3I3YWznvHuqSN
                jTcqPmfG/jM+V11RpSuryDhxINalsiQgQlau1Axot7rKoanlIJZaGWYHEixp0xbLB9IrqtdQrpZbDkWt
                D4u7jibB1E+GErOuvYK9CVAYZzIblpUIZbt7QxqdbrkqySRboAqxiOP9omH6r08mVyOWPk+9bsXL/dPP
                7rb7NipBpJc1NtzGm+LLKdST94VPiJpWVbQEO1ZHSESIJ2SZrVcr1mbpkapvbTp53YAaJjN+u45Pymnp
                X7X5+aT4/bU4sQsw55Q6h2g00+ZStKPGkjOcf+ULpjqTZzCdWikyvnNXqr+bgrHaHT9b3DWtUudwScsV
                KGfzK4WA+LfHihcSuOekuM+sWpWtF0frWqa4gFBbINHUonWopuxe2OVTbfsSk7aZMj2x2F33Oq/nJWQe
                uFFV3KihiLPeQf6kXDeu8/eDvJLiXYAZpONt63lWFMlnwCVtW9oQKiFp1ZaHByJqLlZ1/YULXJOTRbAR
                Z9EoP44FSJvDmCcGMIqV2tutrcdX/JwrHY557KMOf+jph90vWVQUTFa/J8ko5utTKHYmsck4GSmLPAae
                TS2A+dpIvPe2wqVZI30pAxFynjNf+Bb75O8y6NPUjrEW+Mrr4rXjX1T1oxVzIoT0TyOkJe2zNsfN2JG5
                ZJHWctabpVa9MSHsyMtJULQEQ+UTcJALqe1u6FE7YflHUXyu9wy/2jsrGw/PK1xhETloDvmdS11qPE1F
                Vp6gs1bVIXV215Eu5F41dHkWj63QIGQaOS+nZB51cTaTzo4hcgeJt/IiWB3ZrmaqzSUWSBY1YtiZUpah
                3RqQyawGfUm7xlftTEoorEUdRCKaqKyRzpqEWgXmJIseql13OG/CatPm9s4t9NSpxvO7k04jnTSTqVt3
                FaGUDKaBqLw4HcxM4mxjpaiTTEjc65ZeobE2Y0M2Xbx6jlC1blbn5M3029o8D+HV7vPJmuzkJyv5GbHe
                K7FbW4Fl7ZW9baWUf6t0/THj956jt1FpR0ZYbvAre0GbKQN5iEkEiJNUgGyNhEyp1097BBdJ/rLdQrpz
                XmWj6Jxe5XVuX6kXEuRm3SMbV6yZGNknu/KmzWOcjaMZwkXXreCabpU6UdR9AtpV67QWmE0XFsXKx/ym
                bpcbb6gGh9AbD4tREs65Nac2sjq5E9cO4ZyUxoblGpHaf2xHzTqNMi+VqtfWlK9Y7Wu8UWhYHWJdqvJN
                BKHkJtyBFpjpnT7tnXx0L1fOq1YYKwBtLdloeVDpcx6xXkZMVvXvE6QbyFfbQjMSuGKMjtg9VhtRSz+O
                XTKzvaG0ZXwbvpUHhJi8ius7cOTvyerRwapeLS/PbntYoHpsHqMO8Sb2Vtvl65YUneU0u3OqC8Ia30Ny
                2loY5nqD2sPN36+fLO/JIxz2wuJ/G6gcPuNWkOL+sEfSo+jtb1jX0M6O3Sau5pSDj0kZa0SiCJ1EgnLd
                NnkrRPqEOcq81MPlgMb1RHKxvGLoUTWpflDu6OTT6ty5OEmt42c5jcdYl4iqvr5jyg5PlUp12rkDHLET
                r7WWocxSbldTsoJuEjToRhx1M+Ig2VrLhQisjcF+KVP4OcQOPPEyimbrwmj9ZwVQcyrZuVoSz2sxFZe+
                3RVsBSgi8vF6lLHcH5CkKAPppz2KAD4jLHGMImM0AdZvqZ9QPgTtjhnSuGXBZxyvq29bfIRGyZ35u7As
                ioO2kxAMI7VtTfUR+wjddXmxRsjITEXddiI2Gs+ytHCraryjeBsS7Hf/AIRMrA/JWf71jqJf+1+5b/8A
                u648ZZ+yuh8mv0jujRXG3nfBbu1DtDTc5cOqdyg2FU4batAtevJW0UGwULRLOBvFcjrdExDubqE07iJZ
                rD2WNRdQsm5i5FBk9WUZOSJEVi/KVXVT+3g2V8pT4h1XiNX+NFw2px64GSG59D0nmG7vzbSgzNou+2qt
                sK+xbGgysPPyWxEmSMYnCnbPkmLM2u2UudL2+tprjdVzRH1huA3IvbF44x9RXp9nr5eoDwTmJt5SqTan
                yMbVeRem7U1dtL9oiwST2SiGEa8lWL+ZSrb55MwbEzazW2JczUM/mYWz1siw788vlXv4puiD/wDiXMD+
                kvIw2fhP19OUHPrpzcseVFM6YevW3CzdpJqVt3GO0b7g9jzmldiv4CB3XS3wbCc3uOszR3Q206Wswhzw
                YIyktKoJTDFGek1DZ5Q+UmwVWgT1fdHSp6q2veTTJmVm/wBEwnGo9xj5O1D3bFb0zYK87WFbJT15FNcr
                S3KUqMcyEa2cSMRXpQfYmr7IHTipXVJ5Z817X1KOcbTYPC7QTbWjrVnF7p5tr3Lg8eQEo7cPVNnclak1
                9ginlwZlkJBSHb26Ejrm0nnRRLXaZA1SCTtRFYjzUR17LneqH0duoFYtdrvGtlNoOWrqjlgJiu29Wuk7
                BUy/LpKkEqiApUKwWRRRwkYqrZMqiyRwOkBg2754Haes6PubWmwdQ7MgGdq11tGlWfX17rciAiynqjb4
                V7AWGJciUSqESfRT903MqkciyPn6yJyKlKYCKD3R+1trjVHS14A1HVKEelTluKGk7iR1GlSKjN2TY1Gh
                9g3izLgiAE94Wi62ewWCTAfpkkJJymYCmJ4lnhsCnVDYlDu+v9hRMZP0G9VGyU67wU0VM8PNVCzwzyEs
                sRLEW7JGjZKFfPWb4ivZMzZdUDj4iPao5xl3N1L+imwtXEOtcSNpdWrgHraxzgcb9zcbAkHnILU1Ok5F
                1NG1Vf6E3rs6peE4Jy7dkgXMAg3i0SKKjC2h1CO4WlU7IG/uoF1T+o9rWR41aR6fO+emBqPcybjX+7Oa
                HMyJloG2681pY01Ye5RurdMfNuDs7292CHPLRcJYAfnTYN1wdsndSfvYq7V4i9d8kAaRcf0sthMIJ8aT
                hGPNjfLOHkjiUTyMW2q+qEY96YyZEiGM6aJouDCRFMoir9FMhfo5akyrd8kOridd6VNqIwUUeVuS5kb+
                eU+YVUQOM9WY+O15W2cx2Q8QJ7Q7gXyZiKINjCogdVNArc6JjWkcIqqtip0RZ/le1Cm5JFJV5rvpWvbj
                XzHRIodvLvbpdNfLLJHOPduqMBeptuKyf0zIuFW4gCa6va1V2D8AZXR+whuf/lQn2f8A7EOz/sD/AHLD
                7Hv2bPmBbPsSfP8A+zB7z+Y/2SPdPzN+eHu3+uHza98++fYf6r9i9H9kyxdhEyrP0dmEftDrafKA94bJ
                OSV3brrb2ntA0ZSTAAkqloVuW+MYphCpq/TbwtsZ6r165d+zlKguvWmb03daQUUXtMZWh6hfDfmlw956
                k6x3TE14hvyyXqlwusudvCYJJKvv9/0evNGTCE2Hr2SFNcPsiQEVDwLUiLBk+n2shXYiSiIG7R9gvlUl
                yKy9lSjmHrjXVX+Vt9JG/wBaYxsbf9o8YuRrnZZGKKaDqaGoceuVdcp1nmQT7C7knMIRaqpv1iiuaIp0
                TH+oKEa3Inn8nykiuT0WWo0HpTdWS08mliljU+P0hxfUrh46zlKBXTey3Y1hlHEBVWS4kK7s56W7kGDR
                y1fydWYo+3BH6ztDcReqtYflDfTx6hfOjVVkRebbo/Jd9aqtqyoWy76Q4Oa1i+N28qXp3SN63PFJS9Cj
                rfPS1mWkpJupNN2UzeLas7jncjMWZePYkV4nNYHWt/5o/qNf+qBvD/qTKZs/zXP1d6RdNl9L3nvr/XNQ
                tF/vlw4sbir1RpNJgJW1W60z8nT5FtGwdcrcE0fzM3MSLlQjdjGRjJ09drHIi3ROocAwi8x0Uv8Amj+n
                L/6oGj/+pMXmz/Nc/SIpF01p0veBGv8AY1QtFAvlP4sadr1upN2gJWq26rT8ZT45tJQdjrc60YTMJMRz
                lM7d9GSbJq9aLEOi4RIoQQzYxhFU/wCmbrSszXylfro7akGLVzatfU3jvSq08XakWXjo7Z1HpEpZFGTg
                5hFos4NrSEaqHSSFZdqqsj6ySJ10XFsDK6PTg0huijdcfrkbbuuodoU7VW2h4k/Yq2ZaaBa6/r7Zvzc1
                2+ZWL7H1ylohnXLn7henI0mvm5JSPup0YqD/ANBUQINi7CKsL8lXWOjxA52wCX7HDU/qw8sa1Wo8oFBC
                IgkaToiTSjWoAAH9nI/k37goKGUU9Vycvn4FIROz1ldD5NfpHdGiuNvO+C3fqHaGm5y4dU7lBsKpQ21a
                Ba9eStooNgoWiWcFd65H26JiHc3T5t3ESzWHssai6hZNzFyKLN6soyckSsX4RMZo465nUQ5v9O3TOkbz
                wl4kJ8orFsPbBqdenL+nbI2FDUSFTjUncTHq1HVUnC2oZzYD5ZzFVqyLyRq9CP4hRjIRUxIzsIxNuO1n
                ZLJcdba9t1ypr3XVvtVIqdjtWvpB8jJyFEss5AsJOcpr+TbJIt5F5WJN26hHL5BBFB0uxUcJJplUIQpF
                7nKwP/pcH/3QP/8AduWfsro/YR3R/wAqE+z/APYh2f8AYH+5YfY9+zZ8wLZ9iT5/fZg95/Mf7JHun5m/
                PD3b/XD5te+ffPsP9V+xeh+yYRWLsx/tn+5Xsv8Azf3P/q5JZkDPDbNaO3+tdhMGDZw+fPqPbGjJm0RU
                cunbpzAv0W7Zs3QKdZw4cKnIkgikQyiqpyppl8jFLhFXN+SO06IrHRj1fNxqKaTzYm7N93GwnIiRIziX
                Y3c+v0FlVCfScqBA0WEbgqqHmCSCTYOySKYjZrzQR8mY03t7QvSC0HrPeeqtkaX2RD3je7uX1/tijWfX
                V3imkvuK4ScS5kapb4uFnWDeUjHTeRjVnLBNJ6wcIvGplUFUzjv3wi+BEAARH4AACIiIgAAAB3Hv3HsH
                w7iI/V2D4j8MxhrLaUDtBtZHEL2IFdskjBqF9Yqgu2aChjRc0kAFKcjSWbAc6JVA8irN3KYCYE/MfPch
                Lo4p2tZQkYKhrFalUajXUUB7ujyE2BkVlG5SeSgLNo8Ha7c5Cm7PCtUxEvqFPmC6vVj8cNna8bmcHNWN
                mVxhU7It6pztUb4xIkKT0pTG7JoOXzhJJmKggCTaRllPpAgOEUnNp7Ii9V1Q9olETuwGSjY1qxSP4LvF
                njkAXIiYwCXzbRyT9/2UEhFAa+l6gHUKbMhNXKD1s3eNViLtXSCTlsumbyTWQXIVRFUhu3xIomYpyD98
                DZD6/wASjvbdZNeLKq/MzW1ffvbCu3MYpVLLOtSoMkSKF8QM4ZCqyWSKJjB3ZS6HkkYxu/u+Nlhfq1GU
                17PnALPq2Xc1SQTEwiY8YmsuEI5T79u7X0kHMe0MAB5t41M/c3qeZiKRuMZ18rKMoSMkZmRWBvHxTB3J
                PlzfAqDNi3UdOVR7iAdk0UjmEBEPvAIh8Awi8ArtOCT2q31Ubx96uK4ebI7BcnpleAoKpYUURL5C8PEk
                UlwEDiUrUpBEoioXMivHjaOZun71YjZmybLvHbhQeybds2SOs4WUEPiBE0iHVOIAbsUpu3ce2a4DVizy
                tLleUSAOE7infguUazMqp4Fo8U4PFmYHT+gBkUwKJVTGASqwMePiCgOChmeN47A+devKTV6SsKsru9eM
                Yxgd/wBkawTgzRaXUdAUpvRKkdw3jX5VAICbdWSMJyC0OAEWa9WbGjdpVJC1RiB2hTv5GPcsVVCqLM3D
                FyYpE1TkACiZdidm+AAD4JvEyiPfv2yNkQdcxKGkdzvtZpKqhUNhV5hMVVRwYxzBYINmLaUbKKnMBSuX
                5G8g7WDv3N5RSCYCY3xl9hEzGm0tmQ2qq81sMumdwk7m4qIRapH8FlCvHAGfuEwAhxOMfFIvn4EEpSLK
                IJNjrIguVVPJeQ1vkElvrdLyhrLLEqGs6rIjKuUBMJAt1lZ+gxMmZIxSHcxxjNHSKS3kQq0JKNVAAq6q
                ZyKYqKyLlFFw3UTWQWTIsiskYp01UlSgdNRM5REDEUIYpymARAxTAIdwHMaRu0oSS2lPatRD+ukHAMJg
                zr1A8FnSynk/jQIJQAVWLN5EOgMmooKgOXqShUjMjCrh/TuzxrmpbYwuZ/GwaTGQr8y2UVEyrpuwMulX
                00lvExDEdqIe4WSwAJVTMiLj2TXIc2CWdVsVMqNP5NPPaXFqc3dzaragUTFFemW5ZOPIiRITAkT1U1Dn
                aeAEBNvYy+ocCsUkykWybGcRi9ayTNpIsVyOmT5qg8ZuUhEUnDV2kmu2XTHt3MmsioVQhu37Uwdw7gPb
                l4RR+3Ptq2a3l6YwrlGcWpGxPFEHiyZHhx8k126KcUwFmmoROUdFWOsgo78kikTHxbLlBc7aQOMYRMxT
                qXY62zIqySS8SlEmgLlMVUiSTszwHJIptGuCvTHO3bikdYX5iiiBTlICQCVQ3kYC5WyL/FX9yuxf88Fu
                /wBnV3CKUGeB2LsSA1pXzT06ZdYyrhNhFRTFP1pKZlFwMKEexRExQMocpDKKKKGBNFEhjmExxSTU99kK
                ttXSCguRtKc3MkitX6jTFpmIZsY9WUMewyj1+3B8LRMAEvoJtW6pFQ8/RdRTdUDAb6KZF7st45KSDcZe
                P1DWGMccntDeEmLMAWNZA300ynODpm1aOTJmIBkHjZsuiqVQiqBTgBc9vrPcEff3cpXJKHkKfeoAANOV
                KX+LlFLyIQXke49NAH7DzUSD1vQROUq6ChkRbrt3C/kvtp9X/wDwNw/NWQ/786aO3Jo6wbErs0jDzwXq
                SM1qcNLO69JMzenJuhbEbqCKxGxiAd2cFXSqCqzdqdQCqFRKYmEUqcxruPVdX3nqnY+mrseaRqW0KVY6
                JY3Fbl3desbSIs8U6iXr2vWBgJX0FOs0XRncNNMjkeRUkg1ftTFcN0xLkrMV7unZCt6nvUvFqKIv28Gq
                g3XS7gq2NIrIxxnSQl7CRVqm7O4SP3DwOkU3cBDuBFVf46bz6vnSXjbTxJj+JEz1f+LGq52aa6W5F6Qu
                xKxvirU1y+Wex1L21UJavT7u+T8K3BdsyVhgWST8Bi2N+sEa3h4yJ/fknz860fPPW0lxl0v0zLL05qLu
                tq81rtLmDzDtqwm15S7Y2cRE+vStex9YhpyNtIsVXLWHs6CN4Xamc+3sYuqvUmVwhbTOlK5F1jVlIYxS
                SRE3Vdipd2skAd3slMMUJB88OcBMZT1V1/FIxjH9NsmggXsmiQpfeWCCjLNCStfmGxHcZMMXDB6gcoCB
                kXBDEE5BMAgmuicSrt1ydlUHCaSyZiKEIYCLXf0leOFJ4f8ABbUvGHX7haRrmmV7NWhsLtsk1kLbOys8
                7uFrt0ikks4Ki5slns0vKkZg5cJRLRy2hmayjGNamHZRkVeHyIN9VyDcFCrFQu08iCpf2qgJtYlPzL8T
                dinAPIOxh7gbv3yVWEWKvsjr/Zi+xb7pR9n+Zfzr98+2H9b1fb/YvYfY/ZvDw8f2T1vaO/3vDv8ADMq5
                F0xyF5clAxylE2oBKUBEAE5vfRj9idx7mHwKcw9g/alH7wDkosImYp2dtiG1q2j0FGD6x2ieW9mrlRhw
                BSUllhHxBQQKRYzVmCglRM49BwodU3ptWrkxFQJlbIq69apWjkbuSyTJSrvaQ1rlarSK/wCyBHMJBq9F
                4uzKbt6R1jMFVDKFIJie9npAUFNx2MRdmF15KlS97qahqqkePZf3AlbEk7GVsBQP4C8M5OwM4APIfTK0
                MsYwgl7L6vdMfrC8j4yx3Gi1CMgXTSQsbucjLRGzSikfOU+Th2ntHsjhh7MYHRHRgOVBwCrcpgSUKcqb
                lFy2RkzkQNiwMYw5RaanWiaKL+eazacoVMClM4UiIp8k1ergAAJljt3gNPVN37osUSAP7F2Ail/nlLzY
                1KhTrLaU2hH6kBCvpUjI6xm5HRmSB1gQMuVJUyRTiUCicEjiACP0M9XmL92f3I9j/wCR85/MVcIvS0ax
                qW+nVq0qNCMFJ+FYyp2RFjOCNTPUCLCgVcySRlSkEwlA4pEEQAPoZ6vMX6T/ALkeuP8AI+D/AJilmUMI
                sU1PY61l2LsaiqRSTRGie4wSkivDLqSQyzU7kwqNjN0ytvQEvh9FdbyD6Q+H1jlbIuatOT7YXkEmJigo
                YKacqYiHmYqcYJTmAvfuJSiqQpjfUAqFAfiIZKPCLFOpdjrbMirJJLxKUSaAuUxVSJJOzPAckim0a4K9
                Mc7duKR1hfmKKIFOUgJAJVDeRgLlbIv8Vf3K7F/zwW7/AGdXclBhFgzee0LNq+Fg5GtVM1mWlJYWLo5y
                PFGrFMqQKJpqpsSCv7XIHMZNmYTFSKKCwnIqYU0hzJGO130bHvnDJaOcPWLN04jnIgLhgs5bprKs1zdi
                AK7VQ4t1R8Q7qJj9EoD8OfjCJmKvsjr/AGYvsW+6UfZ/mX86/fPth/W9X2/2L2H2P2bw8PH9k9b2jv8A
                e8O/wzKuRf8A/O5/+x//APnMIpQZxni4tWjpyBQOLdsuuBBHxA4opHU8RN2HxA3j27/e75yc6+W/tVJ/
                xe9/myuEXgtRbAW2dRYy4rxacOrIOJJAWCLsz0iQMX7hkU4ODoNzH9QEfUEDIl8REQDyAAEcm5G3iccp
                tJ10CmKYSSNiKcoCA+Bhmnx+x+37URKYpuwh+1Evw+IDkksIosSCLjZ3IyNaKIrGqemI4JNRQ6ZitXlz
                lfSUalTUEvZY7IU26qfw7IuoR4UTB6vibJO8qEbYeuJyGakMabZJlnK4dITFXJNxRTrt00DEEBKo+RFx
                GgYRECe2+oH0yEMXL2MIo98baa/rlCGxWD1VbZsF+vbp5y6L4uzFfnOpGor/AEExA3syppBRMxCmReSb
                xIAApSgHn7Ygvrjf9Wu7RFf5tbQZFp1q9BMTot51sCJYWTcAUPFP1gLHoesYoAi3bSip1g9YUxlJjCJk
                a+SL+WlISt6trwLe+NlzzSKcuE0lFE2FfZroOJR45UT+CKQLGZ+oBhL7QxTkkyd/AQNJTGEXQsq5DsK4
                1qaDMhoFpDJV8jFUfIp4xNmEf7OqYAKY/qtQEix/omUE5jgPkYRyImh9OTVb2jaXliO8cxGtQdVqgneA
                IoihYFnUyZ6zN4gmY6cXLqC88BMBHc0ugBxFuKaU2cYRR45IVmSf06PutdIPzq1lMNbbEHIQTKnZt1kf
                e7UAAe5kBQRQkXKRR/qkkWDcQEFhKOaaxPtbTXYWxsiKJNpqNaSKaCwCCzYXKJFFWiwCQogu1VFRusHi
                X9lSOAdg7Z32MIvL3OyoU6qT9mcJncEhot29TbEKc6jx0QniyZEKn3OCj14dBoQ3YCkOsBjmTKAjmJuO
                NTfQNCGxzxTmtWw5J3c55ZYglXN7zUOrHJHAQAxAFocH5kTlBRu5knSJw7lDJA4wihHuvTEvYtu1lWEM
                7QrWzTs2F+Bt5lbFGqilJKOHZigCaSjyJZpljA7lMpJsFRMp5uhKpLucrMVO1mSqbpumSHkodxCnbpEK
                Urdms1FqmVsQS+CRmxfA7YQAPROkmJPESF7ehxhFHXjhLyqVVlteWIixbBrKadVtVRZNQCPIj1nAwzpB
                QwARVuQiLli39ITFBkyaqiY3rAYZFYxhExjGETIv8Vf3K7F/zwW7/Z1dyUGRt4yxUpE1m/pSsc/jFXO1
                7U9bJSDRwzUcM1mECRF2gRwmkZVqqdJUiThMopKCkfwMYSn7kUksjtuimWgk5U9t69ZFk7fR/Xav4ID+
                mey1d0Cou41Ie4+bpt7S8M1QIQVlQfLnbFWft2LZaROMIo2NeVmpfYxNNvpuuzSJCFd1uSrsyaUbuhKB
                lGvm0ZrsROA/AhlnTcTE7HUTRE/ph1tab2Pc+xIDYk3ASdW17RU3Tikxc4iDaYsUzJJlTPOvWQHN7Mza
                JpILMTd1E/USbnaLuCrvjJyeO1bKLEcKN0DuEwAqa50UzLJlAREAIqYonIACYwgBTAACYR+sRz98ImdF
                ZICPtMBM1uVIY8dORruMd+mIAqRF2idAVkTmKYCOEfMFkFBKb0liEMPcADO9xhFD2m7Hk9DskddbgjpZ
                KFhVBZ1TYkbHOpGCk4YTmMzZvitiKuWbpkkIIpIJkcrpt0yN1kSlapO33oZ3eiWwGruoaPZytosMsiZi
                pZzxkhEVqpNnaZknEvIvpJq2cg4aJnMoybg07LOCAKR3KhEWLyT50yKkMmoQiiZyiU5DlA5DlH4CUxTA
                JTFEPgICAgP38+qSKLdMqSCSaKRe/imkQqaZfIwmN4kIBSh5GETD2AO5hER+IjhFF7iKxcR2rpBm5SUT
                VQus6n+yJGSFQEmsUmChSqABvTOYhhKI9/j3AB7FyUuMYRQg2S9s1f5NxdrgYN/PNq9r5u/nI9ikJnb2
                AM8kY+VJHFMAEdSLNN8lJN2YKEOuZmJCiHkBTSboe1KPsoJH5nzBpFWIBoMm2WYyEc5Zi9IoKJToyDVs
                ZUAOguioo29ZEiyJieqPkmJ8iZ+ZEUkhOKaSaYqnFRUSEKQVFBDsKhxKACc4gAAJzdzCH1jhF+mRe2DA
                WrXGxz7opUM5ssPMRiMTserR4iaUWQZkTI0sEWgIGKuq0RasyrETKZVP0FhMUG8i/dM5Q4wijh9tXp4z
                QDpyc6vKiIplraVZmBmzOQ7gLMAM2JFi58w9P0/egFE4gXy+vMJpq3+y8htT3m3Qjqux00pOtqzXHJTn
                ewsBFxDsUnEwBCFI2kJZ3JLuDorAVyQSESP2bptEwnoDZsC4uQboA5EPEXAJJ+uJewB4ir4+oIdgAO3l
                27AAfVn74RMxjugh1dTbFTSIoooeoTZSJpkMY5zCyVAAKQoCYxhH4AUAERHt8PqzJ2eD2ZbpCjUmdtMV
                BObG+ikEDoxTYVAFT1nSDdRyuKKa64NGKSp3joUUDm9BBQTCmn5rpEXW6XIdLU2uk1SKJqEqEIU6ahDF
                OQwMkgEDEMAGKYB+AlEAEB7/AA+vMnZ4LWdukLzSYK0SsE5rj6VQXOtFORUEU/RdLt03KArJILi0fJIk
                eNRWRIb0HCfiKifgur73CKBhHN4q/IbbV3rUA7skTEmgmdngWSRhlpODk4tmY72BTMXwev4h5Gori0SE
                V1yLKN0wBNVZVPLshyo1kWPOECeesNqVKZBhTmtdm28utJiBgRYrnWYgyTMCpQK5Fs6erJpgcyDdyoUU
                Rktn5A3QKsZwVBEHByemdcEyAscgePYhlQL5mIHiX6ImEPol+HwDsRYX0DSZeja9btLEmRCxz0tJ2idb
                lEpzNn0sZICt1lC+RTuEWbZom6EDGKmv5olUOVMhzZtxjCJjGMImQAW3bS2/Ita7KEnxhUdfqVo5Swbo
                z/3inLCsYxWQD6xmniUQBz+1EwgHb7+T/wAiJsOa+xpyCitiT0RNuqnKa+PWwlIaNUkStJUkos5M3dFI
                YgkMCKSJylKYVFCOimTTVKi49Aik/W7AwtMHGWGLByEfLNgdNQeN1GrkEhMYges2U7nRP5EHuQ3Ye3xH
                vnMlu4xckAdxEY94AAACIiIt1ADt8B7j8fgHYREfgGddWLE1tcDHWFmzko9rJpqqoNZhoMfJJppLrNym
                cNBUUFH1fSFZEBOYRbqJKGAhjCQPQ4Ra/OPGzianoqLTY7KTiKlOSElJVizJxz9+zSepKixk4CSQYtl3
                bF2ZZiR/HCZsdJ0k7XOKpATN2njES8dOxcfNRLoj6LlmbeQj3aQH9Nw0dJEWQUADFKcgmIYBMmoUiqZu
                6ahCHKYoc5VJJchk1k01kzB2MmqQqhDB3AexiHASiHcAH4gPxAB+9n3AAAOwAAAHwAADsAAHwAO38AfD
                CL5xjGETGMYRMYxhExjGETGMYRMYxhExjGETGMYRMYxhExjGETGMYRMYxhExjGETGMYRMYxhExjGETGM
                YRMYxhEz6m/e/wCMH/bjGEQv77/GH/sz7YxhExjGETGMYRMYxhEz6h+2H/T/ACExjCL7YxjCJjGMIv/Z
            </property>
        </structure>
        <structure>
            <property name="name">icon_par1.png</property>
            <property name="type">image/png</property>
            <property name="data">
                iVBORw0KGgoAAAANSUhEUgAAAnEAAAG6CAYAAAEQTSBEAAAAAXNSR0IArs4c6QAAAAZiS0dEAP8A/wD/
                oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9oJDQokO81/ohEAAAAZdEVYdENvbW1lbnQA
                Q3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAgAElEQVR42uy9eZgcV3nv/3lPVXXPvkiyNBppJMvySMbhkgAh
                gIm12WEJGBuwjU1uEsINyS8LYEMSyIWQAGZJwhJnJRu5+d0khC0JOHuwNgcIu4GArZFkWRppNNpGs/ZS
                Veec+8ep6umetWemZ5N1nmcejWZ6uqve+p53P99XrLWWq2tey1+OD7XWIiJYazl69Oi83mPr1q1orWlo
                aFg24clSIC8VFkBPT09N37u7u5ujR49irWXnzp1XlvCstfT09JSEt1ifsXPnTkZGRjh79iwAO3bsWH3C
                qwZlVkAZsGIQq7ACYsEowFiU8sFo7BzlnQrs2LFjGGMWXYiLgrzphJbquewvvRMeO4p4CpQg2mKiGOII
                GxZ5320/wrrsUV77xj8CzJw+u7W1lQ0bNgBw5MiR0oNcDCHWRHgp2mbTZ97Pvhm/rx9Vl0Fl6yHwsOKB
                iSGMMYUCZiwPxSIPPX0732g9SWtTIz/3tr+c07bfunUr2WwWgLGxMc6cOVOxvVeM8GYVnPWxKia77xWo
                5kZUYxOquRFpbECCDFYUxDFSLBKP5mF0CDOSQ48VeeAlz+fypRO0qGP879/6N0DNeQunqxyFXV1d1NfX
                L7/wZrWeVhPseyXS3Ijf3IJqb0O1teK1NqMaG7AAYYzO5TCXhzCDg+5reIwPv2wP/f3naeErhGGBt//2
                wTlt44kCLL9WEeH6669fkCFTiyk4sRD88MuQwMfLZpGmBie49evwOjvwujrxt21Fbe3C27Aeb207qqUF
                1dCA1Gdobm6moSFDNlNPEGR5z5t/GNT8b7a7u7tixxw7dmxByFOLJTgroO74Mayn8PwM1NWhGprwWlvx
                1rbjberEv+5aMtdfT7B1M37Herw17aimBlRDPd+983bq67NkMhm8TBbf9/H8gA/8yq3zvsYUbRPdqCUR
                XrrDq/lAsaDOXkBEMJ6gfA/JekhDFtXcgnfNOoJt1xHccD3+pg68Ne1IYyPU1SFBhpGn78TPBHQ0nyLw
                M/heBs8LiAtFFMH8b1ipaYU8Vw2maq7jEiPh774jedoeIgqjBBEfxEN8z23lpkaCa9YidfXYwEN5HtLY
                xJn3/ioiQn3cQ+A71OH5Tj8pxTve8IML2m7t7e1T3tdc9Z+aC+qqjUNjL4bhQYxorLVYa1CxgTiGMMTk
                85iREcK+MxSPHMVcuoweHqXtnb9M8K63UhwdpDj4LcT3UH6AeD6e56GUQjy14GjlmmuumT8w5pMYmEsA
                r0wSZWjrfLhIY6MYWywSj43A4BDe2TpMIaLhp14DGBqS59jz2GEGL51FRCZtMREBs7iheE9PD93d3VU9
                IL9mW7XiTRXWCmIsomNsFHL4zT/Lls1dbN6yiU2bNhGYC6Cy2OgyErQC8N1vfYEwjDDGoLV2IZbRiDVY
                azHGjGdkktBuWp0rUmFdp9LdMwGlmojEr7XgALSNyfvC2276AdZv2MifvXML9/hnkaAI3kVktBf8FrSf
                IaKbwtggA5cuMDR4jkJ+lEJulKhYQIchcRwTxzHouHTTWusZBTebgMbGxqoCzGwC9KsJ8OeeJPTYeejZ
                fC7TDqoOTAFl6rCmiFV5iEcQDJ7J8t2T3yMOIwbOf4eoWCA/NsJYbpBCIUcxzBPFRbRxAjQmxlhdlaM8
                E+r6+vqquo/R0VGamprmLrxqYtXplkERi0VsBDYCU0SbHKJ9BMF4GiUR/7DfgrJEUYTk+4h1RDFfIJcf
                JD82QjGfIyoWiMIYbSJM7LZymjGZ6dqne/BzAcSZM2dmjIX9WhiIScITwIYoXcRIACYA7WFRgEVsDHGB
                EyeGUUoRRpq2zDmMMUTFPMUwRz43SiE/RjEsYOIicRyjTZwIzsxL181VDaUAmm77+tNBe0Ehr8SIjtES
                IrqI4DlnGTBWo7wQkQynTvU6YRuDWncBYwxxWCSMChSLeQqFHFEhT6GYI4qKiRGJZ0TeTIIrTw7MN0c5
                q/AWmvkVq7CmiBih9AjEABqxGmxIrBSnT59O3I+Y9qCANhFaR8RhRBgViYsFwqjgBBdHJQvszePajDHz
                vqfprO+UWZVa1BmswPbhn8WqLKKyiGpEVIBRGURlEDy0ynDLT32Z2GhueppB41wUG0dEcZE4DomiiDhy
                VlfrCGuF93/0a4u6XavJ0EyJvFoVaMSC6IL7HoPFIjbrDIguYpWHihXnzw8A8NnDMbc8S2Gs25ZxHGJi
                TayjxEjEKKvQ6Cm31XR6aSEVuonom/hw/Lk4j3NdJ9r+imsv/zhWafAMRkWIDbAIYlwW+XufuYGuF30N
                awz5gkWs8+OM1YmzHJWcYyTm/X/07YrPWLNmDevWrZvy8y9dusSlS5dqVpuZcdvWuiyYhs/XDdyD9QKU
                ZEB5IP6E0Nqw+SWPoYxm17PCxGDpktCstRg0v/nRb826lRb3Xio/Uy0W6sq9vuNr/hZPR1iTA53DxGNY
                ncPq0eQrx6mHNvPTt7dw+FsNaF0kjk3JLVGWkuBSYS6H4JYBeeNCvO7SK0DVJ36amvR7aw1iNVtfOcJz
                ugfwfFBW8d4//lpVBZxa6bdqkVcS3lI9LYBtF1+Op8Ba58oIYK1GcNtV25jrX6V5+JEDVQmt1vqtWgEu
                i/AmujQbhn8ZT1v6234riULGs77lafNaO78LFd6yNPpMdGnON/921f5arR36+VpeEZk5MZCqw/T78p+V
                B9nTGZuJr5/qd0EQsG3btil1ZLleLA+RpqoVW2sRApB40YWXy+VobGx027a3t5d8Pl/xgr2792Gt5eBh
                p3f27LqldEMHDz+MtZa9u/clN2h48YtfzNv+91uTv701CYcshx45iLWWzs5Ompqa2LRxC2fOnip9TmfH
                Jvr6z7BxQydnz/WVfnbTTTfx6b/7VMXrUmEeOfJY6bXla8+uWzh4+OEl27q+tXaS4KZbqSCttezb8yMl
                wZQjbMeOHVhrOXvuNJs2bqkoLG/auBlrVAV60t+JeGzauJmjx3sANSn4F/FKQp+qpHjP3fey1H2a/lz0
                xZ5dexGrOfDIYay1s+omOyH5IcZy5twpOju6SghJa6fWakQU3dt34IpkkzPFnR2bEBEOHNo/SQf19/dz
                6JH9S4K+9CHNqfTY13+GM+f6Jwmts2MTnR1dydZy+qqzYxOI87t6enro7NhEQ2szR48enVLBiwj7Dz6c
                OMGTf3/m7KkE6ZKoi/F1/5vejGHpUJdev5othtuxYwfd3dun+GNTsZ1FLB6pElelCtS4oleMjYyyZ9fe
                RF/eOuk9d+7cSV//mUnJzhSdxhg+8Ym/ButVqIpHH30UhROqiCT6eQm27cSLXLduHWvXrk0uTNHZ0UVf
                fy8iQmdHFx7Cw4c/z6FHDrJp45bkdQYRj4cPfx6Feyp/+ud/wp5de3nnO36dRx99FBFbsd3Gb1BNjBTp
                6z/Dna+8q/T/48ePs/vmfSilEiP2MG96w31861vf4UUv+hHEWPYnDnVqsNIHdOiR/YumC8Vaa2eqVS5F
                yLNcQf6Cre10F75UFzxb6LUSBTfltjXGLLjtaq5rqTvYayq8altil2MVi8UVLTy1nIKbzU88efLkyhbe
                siYFljigv2KEt3bt2lUrtGmd5Nmc5lqgxVpb5kvO/HkrcVUdnk0UVi1vbrowDViyrPCCt+1SP+1q0LuS
                hZcaOrXafa0VrfOurhXqqlwxwlu/fv2K0nl1dXUrUmBTdgy0tbUtuamfaW3ZsmV1bdultLr9/f1Xls5b
                Sqs7PDw868NaaQ7zxNTdio5tOzo6VrbLsty8KlMVs1fD8pdTYKdOnZpXvm7Hjh1VHTC5YhB39uxZRkZG
                arrdu7u7k3rv0vKpLLrgwjDkySefXNSb6OjooKWlpdQhtXbt2kVPcy2a4GZq89ICnnXbVSGlmqs7fOdj
                JcYgpbLlXAL0iZnwxdrONRfciRMniKJoWi/IWk3dS+7B8zxMoMBYrDYQR44KJCzyvj3CLz3wEEIWJXpO
                lf9UUKOjo6XzZOmWrqXxqangZqp5GDT1L7oXVV8H9XX4QYD2fcRaiBzpjM4XIF/AFkLe/iPPpa7wCG99
                /78vyO9K+/SstWzdupVMJlMT4dWEO2W2wrc6+gTZN70d25BFtbQiTQ14dfVYz0OsgTCEfIgeGUaPjmBH
                c5higbfe/Gxa+Bqv+4XfZ+3mbbMeBZ1OeCkZVy2376Lzpnjv+yDewS/htbagWtrx2ltQbc3Q3IwKMmA1
                5AuYwRHM8DB64DJ6eBgzPMx7XnQzF/vPsK7hMXY+Yw933Pu2qv32icI5duyYO4dbI/qjeUcPFy9enFVo
                WsD790dQdRmkvh5pbULWtqM2dhBs7sTf1kWwZQuqsxPpWAdtzaimZqjL8t2bfpDGxkaC+hZ8P8P3vvnw
                nC534rWlPYDl7BtLRvlRflEDAwOzYNmj/nkvBk8hQRapr3NcKO1t+Ndcg791C5nrryPTfR1+10a8te34
                LW1IQz1+to4Tu24iW9fAtnWnyQR1+H6G97x515wt7UQUTuznm6/wFofuAwieucedpfUU+B4SZJC6OvzG
                BmRtO37nRvyd3ahrt6CuWYfX2gYN9Ug2w3cf+GWCrE+rfwQ/k0X8AKUUSjze8cab0FXKbqou1qmK5/MR
                nloMoYnFOWppMK8EqwRRvjuA53lINuOYepqbnFA9HyuKwoffjcKDkW+RyWTwfR/f91Hio5TCU4Kq0kjk
                crma39ucY9W5vLEVhTEWz5KwVRjQMUQFbBhjx3KYgQHCnuNIFCOjozTc8VKaNnUwePw4g/3fwAuyeCpw
                ApOUH8WHqIgQV/XM5xo9zCX+rerRzbUDKnjWbpQFjMVojQ1jdDFEciEMjxBfvETUewbp6qTuh59H/V13
                4Hd1Mjw8zOkn/ith8UmEVWrclvSp8Gu/8IIF6bpaAKQqxM1GajDl3whATKAtR5/9DHKvfjlbtmxh06ZN
                tLc3IdEl8BowxV5UtotcbpTjj32JOA4hjsqOezpey/Q0I2KxxIvaRzwwMMCaNWsWJrj5KE4R4X89ewcd
                69by0n1b+LEfvQYJ+rD+KCL9MNKG9ZqwZoyCWc/I4DlOnvgK+ZFR8rlRimHBndDWIdok3AA2nhMbz0L8
                tIsXLy5McPM11S/c0Mzjf3AN1msF5WFNhLUFlMli4zHECtaE/PeTzZj4BLn8MCMXzxPlR8mNDlPIjRAV
                845UJgrdiW0zgZHHMmcy1Vrqu2kFd+7cuXl/6GOf3Jac3IkQKWBNgMQB1rqPMzZCSY7jRy9hTIwdcx3q
                xbBAITdCfmyEfGGUQjFHGBUxUYzWukTpkTaJT0ftUau+5KmOtM8quKGhofnHr0RgQqyEoApgMqC9Uriv
                VMiHPj6EUj4m1rQE57FWE4cFwrBIoZgjnxsmLOQJC6MlggWtdXJSO8KKYbHXTNGoX8stmq7h4GZa4y9i
                lQ+x55zgRMGL1Rgvw+knT4HysdayZe0AxkaO5yksUgzzhIU8hWKeKIomUHnE/PqH/nNeum0+9zXdll2U
                msPF7D20RIdBF7CeQhnBxiAqxtoQtM9H3ryGu3/5May1tAYjYMRxoERhBf9JsZgnDseFZq2loaFpSpu6
                mEcHJubyFo3CA5NzQbVWGEDQYGMwRZAArVSpQH3utOUHnxFiE9YJHTqLGkVFx32iU+4Ti7JUHDxeCqFN
                hbpFq60+0fJ/kDgPJg86h41HMHoEzCiih5F4mIN/0s3Fixc5N3CRwthlCrnLFHKJUSjkicJiQtPmrKqx
                wvs++o05Ce3IkSOLcn9qUdCW6jr/6Vg9BjqHmDzoUWw8gtUjjnXCDPOtTz2dsbERPnsgTz4fOoOQWNNy
                oVlredPb/6rCBamGhaJWqfKJslnUav75xjcjpogxOax2lB3osZIAJR7B04Oc+ucbAdj/ZShGRef8xuP+
                W7o2dt1QYe2W8zhUKQOsteb48eOL8iHXXrozIYoRrPiIeFMoX82W207jWeG53zeAiOdCLCBT38a7PrK/
                FJXMxHgdRREnTpxYNIEtOeOEZ2HbwJ1owdHwTiE4haXr9kEUmud+n/Mj3/vRr6NwmdvW1tYZe0qW4oDM
                slF1tOY/y9rcx8a1hNUlxxicr7f1rgKf+MQn2LDhGkSE5ubmWZtwlur6KwS3VEc0p1rtub8mG36LfObp
                DNe/1hWlk9pAtYH6Uh7FSrsESudel3ulXE033HBD1X/T19fH6Ojokl9rd3f33COHcmaIidwns3nbIoIx
                caL43e9SVM21yj6xVrqUa0ZSmD279paoONz/Ha+JFTh06EByVn/8rP+BQ/uT8/V7SxaxnLqju7s74TDp
                Lem3zo5NvOWXf4kP/faH6evvLb025Top+YODI9yw8/uSYoapuK50vfxlt/O5f/zskglvTohLL/i+N96P
                tZqDhw9N2v/gWCC+9KUvs/vmfYmgxtemjddyuu/kJCrclEfg9OnTk9zLnTt3cuTo47S0tEyJNGstw8Oj
                7N29j/0HH16S5sQ5CW7v7n38zu8+yKOPfptjTxyfcVDa85//3Ip82Thdxzh9r7WWixcvkjL0bNq4hQOH
                Po9IpWDOnutj44ZORLwSi0+5cO599WsQcVQeSyG0XC6HqqaEll7MmbOnueuuVwFUCC3lMklv6N/+5fN0
                dmzi4OED9PT0JIJSHDx8gAOHPj8lXcbv/O5HsFazZ9ctU3KZHHrkIAcPP8yeXbdMEk5//3kOHNrPwcMP
                s2/P4lNxnD59Gn9iprece6R7x46ES85WbIvP/P2nS1srl8tx4NB+9u25pbSNtm3fUnFzu2/eA6gSeYuI
                mlKx9/WfqeBoGt/em9l/8OGkCl+ZwLzvjfeXdoO7PpmRcKtmWzWOKxm2xsMZxaaOruSGekt6KFXOItbx
                MCXoOHh4f0UceeDQfvbu3sfBg/tJibLSNTIyUiKAcbrOY/PmzgnCG1/XXXddGcEWJcKtg4cP8Og3v8PB
                RyqphnbfvI/D/3mIXT+8e9FoiOTIkSN2Jm64y5cvc+HChSXxxlea2zEj4sovOt2ig4ODnD9/fsmcydW4
                /IlPdyWtFU/4slwXuJznFBacAV5pKFs1glsuxTsb2tKBkStWcCv17FQ1c2+Wa23evBlVDafvTBmQ+WYX
                ljuFtZDV0NBQPeJqebhitk6gpUgLLXir1uIJzHVV0ym50tlx1ErYOitxO69IxK3mtXnz5nHBXWXCmZth
                KAluqVE3n57iFblVl1qnHDt2bFWqh3Sie4XgljpuXI0Mh1u3bp0suJW2qp3FuuxbFaDaKKIWa9Zp7SI1
                0YW1UgmVeUu9/LwjK20ZY7h48SKDg4MLipaUUmzevHnFEm4tq49+pYMuBU6xWOTJJ59EKbWgeZK1WJ7n
                sX37dvr6+hgbG8MYw4YNG2htbV31zMBPSdD19fVVcOqsloeYmqBz586VeM/m2vR2FXRLsE6fPj2n49Cr
                4oFMYJm5ePEily5dqjjAu9qBuKpAt5CSphC78xI2g/fRPyPzd/+KiEUrUHFyhDg9WBxZEENsY35/z3Xc
                +JxnsPu2n0+6o2wyNcpbknBvIktPymI2sXlzpq78q6CbwxoeHp43P6lYQFmyt95NHHh4vg+eSjgSFHaC
                5hCbcGVpgzUaIo01McTue2U0//CsG/jK2layxS9gDPzqB/4FrMJ6MqfD3HPVfGvWrJmy+jDdJlRKsX37
                9hULwhUFOmstx48fX1C4LyJk996BzWSQjI9kM+AHSOAnjCfK/d9TWJU8FJ0cYNcxJtaONivWEEeYYgRh
                hI1CTBSiteU3b7uFsbERioVB2v3vYWLhbb/1z4hVi3oAfi6HssoLvCst97QiQNfb21vyzeYqHKME0Ybg
                fQ+iPn8YyQZIxkfVZZFMFpvJoOrqoC5AZbKQCVCBj/V8SLu6rcXGEcQaiTS6mMcWI2yxiBSKmGIBE4ZQ
                jNHFAhJpfvOOWxgdHWV0dJS12e8g2hDHhqc/+xZe9uq3LJr5NcbMeEDk2LFj027a1Awvd4C1rKArZxmc
                d/rhyHGC178JEzhQ2ToHMq8+i9Q3OnaxujporEfV10N9HZLJoHwPPB9IprVHGhuGmIJjU6RQwOQKmFwO
                k8sj+QK6WEAX8xCG/NFdtzEyMsTw6BijIzk6Gx5z/ClRTGxC7vrJ99D9P25y/FFLrPVS8JXz6E1ca9as
                Yd26dVc26NKPWaj5LL2fGDLPuxX8Omc2M1lUfQbqsqiGJlRDPdLYgNfciDQ2oZoasU2NqPpGvKZ6JBuA
                HzgfKDbEYQGTy2PHctixMczoGIyMEY+OYXNj2NEcNp9H54t85nX3MDI8yNDQEMPDwzTzbWLtqFNKLCCR
                QWvNr3/kIEYlPmaN10xms9r5d0tNrbwkoEtvPqUcWLBaV4Jowf+hvYjvTKlksti6rDOpjQ2ohib3b0sj
                XnMLNDfitbWiWlvx21qgpRnV1Iiqq3cmK4owo2PYwSHM8DDm8jB6aAg9PIwdHobRPHF+FBktcOjnfpLB
                4SGGLg8yODxEkP8GcXGUYhyhQ3dofhx4MdrE/MaDX1iUKnOtD60uVRpm0UFX+4MMhuBZPwK+h/UVKhMg
                2SySrUPqs0hTg9NsjU2olia81mZUawvS3obX3o63di3B2jXIujV4a9tBCXpgEC4OEF4awA4MEF++jL3k
                QKcHB7Ejec79yhsYuHyeS5eHuHR5gNy5LxLmcxTjHMVinqjomGh0WExA5ygudBxhtOXXHzwEyqtplFuN
                iZzrxM+l0Hw1pxFKS0w173g3FvHAf9YejHio5GiVtS4QkIRYSIxNGBV18vPkZ9pijcFGIbpYRI3lQAmI
                OHrK0JECpuxigmbdh97N0GCeS5fPEA+MEBtFfuCbSH4M3w/QmSxKxwSBwcQaz3hoz0dpjYjzpwQFEvOO
                X7yJ9/zBf9WUi7Ga7tdybuRqgJcCdKYTWSsOdIs1eNh6QnDP67FGgUp2sHEkYtb6WG2QJKdmwiJe4EOx
                iBkbxSgPz1eIgNKaqFBADQ8hQQZrNV5siPJFWl59R8Wp+mKxSC4/zKljXyc3MkhudBDlB3hegPgeKlJ4
                gU8cK1AegssDmiQqTolrxQpKhPe+ZS/v+OCBmslkIvXxbBpsLg0M6YD6xTC7NQPd2NjYoh7/UNbAkWPu
                YVqwxgLWacBIg4qwkSJWjpLAJoX9aPu1bPql+6C1aXyKDpRpHHeOu36CZsjlChz97iPk83l05IjalPIT
                Rig9Pq3CuurFxIdbkaROVrGQX3J/bqLGm2+WoZbgqwnoZhotUjNNh++OdpPw6lrLN7o6+PebnklbcxMt
                LW00tjbS2thKc2sDL3yOpbkhQFQWMV/FDmWxqgH8Oix1Ll1iFVgL9ZsRHIlToRBy8omvExcL5AtjFPN5
                ojBHGBUIwwJaOxpGE8UJrax2QNQxxmqs1Vh0CXzlIHTEUg7kC1lBEMyr7Wohzyg1u7VINC8IdJcuXaoo
                Ri8q6MRw2+a1eHWK5voG/vzdO3jF1gx3EIBSCAXwAKURNQZeA9Zkx4WttfPzKCKSQ7RH/+gajPaIzSni
                2BCGIZf7v0ecBAJRXEwIUXMUCjnCKE8xnwCwWCCKioRhSBwnLLNaY2MHQgdEkwCxHHyqxHAx32zAtm3b
                5q2tFprySgPDhQQb/kJU7pJmtY3lm3/bhagAVB1IjNU+ojSYCEQBobN0IqBx5GLWYGwEksVIAd/4WPHZ
                /+0MngxgUSWQREOPo63jRbWRJdaONDuMkug0LDgu6CikGOaJikXCqEAcFoliVyYbB2CETvhTtXYablzj
                yby1zXxMXK0p+FKtN19z688XcOXoX5LcjghiI6xRCCGIQmzoSMO9JLCIDSiNtQblabARYkMwAVZ8lDjA
                nuzL8eRx4+qwxqKt00p1chZrxVFAxzFiTSnvpsOIMCwS65A4SliNi4VEI4bjqZKUd1abEphLVY9EY4ux
                MMcyWdpxMp/AbrGO8fT09LB169aKUyM1B50xhuPHjy/TOEuDNRGiwBqn2CwBWINoC6JRYjE6QpRz9q0I
                qCxWAkQUQoCRIf780+dLQybKTd/6lguIsSUWe60dKXusQ0ysHVOqDolDx5oaxU6z2TgBpnavMfE4obvj
                JzdJIKLcbC2Zm1mbrylbCnaLU6dOVdR0awq61H+rSVVhnut4859y/ejPYLAoY0A0FqdJRAVYG4P4YGOs
                +CABmCIiPlY8EA/jCWMjZxkcNpNAV7dpGLHjoxPSL23cQA8TuyBCm7jErm1sPG5SozB5fTzu1yU+nWfh
                3b//X3O639bWVjZs2IAxZk7pkYGBgdKzWnRfO5HdXMxtVRWJ8hbq5V710eNsLP42kC1REosKnDYjcKBT
                HqgArA/iYZVC8LDitJsSn5f83LcR0SX/yhh4zo6co5YtA6JjGteJ1opKgYI247z3pvSzSrCNj66A9/7R
                N/GUqcqfW8iMylo0UcwXfNX6nLOC7sKFCwwMDKyofqzG+BHW5/8iAZlXpskSXmyVcekQJQi+S7eIYJUC
                mwDPWJ71mq+XdQNbtI7Y/WxJ5gCoCo1n0WXaL66ITsu1op0QrfoKHviDR6se/ZFWAeaSxC2PKlcCucls
                7sCMoFts8vEFJYsRtg39eGJGPUcnS4AVzwk+AaNz3l03iSRtRraMHdVaw/U/+qVxnl6jedaNPu0tNgkA
                kvxama9nKQfZeAt7KVhIQGvE8P4//DquLqem1WrzPfOQktwvh2ZbSPJ6RtCtZB649IFtv/hjWM/DJKaT
                BGAOdAnFpHjJQ1euGiFSVpNIwCRw3Yu/VfbwDPt+0IAdN5HloEq12lRVCIC2det56wP/WtOqQrrKtdpK
                PW3Q3t7ONddcMzfQrXTAjVcqFJaIbUP3oIzTeCKCtgql/BIAU/3owDr1aAonEMOW205gkmYBMNz8jLFJ
                1YWpUkYighjLA3/yjWn75xbSPLlc/lqttd2UoFstgJtYscBYNo6+i6b4MQxSptkmgk6m9Y1KrMVWY8XQ
                9ZWlINUAACAASURBVPLzybv4PP/GSwlDk49JfDSFweDz02/8E7bf+AOTzKiIsG3bNnx/fnn4J598kjAM
                V93zSKktduzYMUnek0BXnotbrUssaN+yduRvaC18EqXFJYKrqHna0ogUkGS6qbExz/yJIgOjFh/FD93o
                Sn/3v+shrlnfOTnCrq+nq6trQY79VEcNV+WzmKJFahLoVqOWm00Djps6n82Xf5GMSXr9rMKKcZGqQ1yF
                tjPKYLULWsLs9Zxu/SN3ftZ6FVMFrr322nlVCyaupWicWA7QTTyTWwG68gTwU2eZpHvFDQSw4qoGQozF
                Z+KQgFr3lhljFq0HcUVs+inydxWOxsWLF58SBC4Tky+2lLpQiIXOzg6ampomCa6W60rUatNpumkDiTiO
                eeKJJ2Z9k92796ISb+fQoQOTHsyeXXsn5aBEhAOHKqdwnD9/nnvuvreUoXe1SXjonz5HY2NjWR5N2Hfz
                7tLBaBHhgQce4AU331TVTZePkiqPHK21dHZuRqziLW+5n7f88pvp7NjEmbOnpxTUpo1bsNZy003P41Of
                +eSMgCmfEiIi3H333XzkwQ9TzVS6cjlONWpqNa9U25U03YkTJ6oKx9MBjTItop2z/trX/WTyXqZCmHt3
                7yslYj/y4Ed45jO/v/Qen/7kp2hubq7svBWbAE7xO7/7Ee5745t4xzvegTHud+XzwSY+vE0bt6Ak4Pbb
                7uCxI9+bnN6wif+mxq+9s6MLlKWvrxJ85QHGzGBz959e18jQKH/8p39Sta9cvnH37t5X2qxX0vLTB1Tr
                aPW1r/2JCm1nrS0Nonvon/6Bpqam0mcqpdiyZQv/+x1vn/E97777Tu6++84KzTPd2tzZBViMhaGhIZ62
                88ZJwEv/fmBgoKSB3Il/YcvGa9HEHHrkYHLYyKs4PzEdYKx1jQT/+s//wot/9CWcPdfH7bffVpV8xwGX
                +JfW/f/wfx5a9SzD5ffvzyTEhazdN+9DKYW1ms985lM8/wU3Of/JWp71rGfNaJJSrfOZv/8kz3/+8ye9
                9mk7b5ykeQYGBpLZdSoBt+Lg4c+XTOzw8CjP+oFn87ef/Pgk7TxemHfg+p3f+TD33XcfgrD75n3Jz4XZ
                xHTm7Okyc7y5DDw2Gfw1syVJAXfg0H+UTYsUdt+8Z9VrPBGht7eXrq4uZwvcw5o/ejdv3syOHTsqIpSz
                505z5uwp+vrPJIBz5lBEeOGtL5r0Xn39Z0pfqZ+3du3aCrPU09PDpo1bGBwc5sEHHyzNAuzp6SndgzPf
                lgOHPl/6u4OHD2Ct5ty5c9xz972z5umsuMlvDkSm5FvO1iFireXkyZP09PRw4NB+9h/8jwQsir27b50W
                cKkVsFaSIY9Suu50A5b7yqt1FQqFcU1XzTmH8qJ0+trLlwYwuOmYN910U4UJSDVX+XDJM2dPs2njZv77
                v79HZ0cXz3zm95cc7LGxMW576R0l32+6MXsHDu1nz67d3HffmxMN8nCiQZy/mJ7UmjyEUiEGzp27wD13
                38vHP/E30+7Irq6u0r2mvtlkTVy5brjhRoYuDyfztRt56J8+V/JhQejoWF/K0k8kOHRDLdWU1y2iUNZ1
                30/n462W0lh6jZPMa3oD119/fWIeK9MFBltKtr7ylXdWaKqphl+mH5ZqrHKh7dm1t0wDGH7xF3+RO+9+
                1TRgsKV/Dx4+wF/+5f/lL/78Y0mU93Bp5uShRw5P6/Rba7ll76309/fza7/2axWBT7lQpvr7FHyvetVd
                U6ZQHnros1hrGRkZ47aXvqx0X3fddSe/8IafL8n1/jfdx6OPfrsU0adDQR/8vQ/z/d///dNet9tQlt27
                d3Po0KESONPxtqsqb5fOSV+/fj1tbW1V/3F/fz9DQ0NXRK5poUyWV1oVZ7HTJn41WfbHH38cz/Om7Kq4
                EtZC6BOuDoycZ8pktp2bmtkrbaVnEOa7rmq4BYLuSulqqHatW7duQeMXr2q4+S9VvmOfKoALgmBBgLs6
                ZGgRzOuVvuZDy3BVyy181dc7miJlra1qWO2VshbKuXZVy81fbl1dXQ50IvKUAV16qv/qWvpVLnf1VNpp
                tRiP2dvbexVB89zwk0C3UD9nNe20hay0fnh1zW1t3759MuiCILgqmatr6c1rORqvrqurVmtixasCdJ7n
                XZXQEpnpp8qaarK3mg2VV9KqxamrzZs3X0XSHNaWLVtmBx1QyqdcaasWLd/19fVXc3VVrulyomo6waZp
                hitt1aJI397efhVRVWi46VwRNZPzd6X6LwstY61fv/6qbzfDymazM/IQr6px6lfCeip18ky1/KsQqATB
                8PAwQ0NDpYHHabQ6FVDSn5WfT0jJrNvb2yvowMpf+5SO/J9KGq6cQHBwcJALFy4s2We3tbWxfv16jh07
                RlNTEx0dHVcBdyWvvr4+RkdHl8WsTfy8bdu24XleKW2jlGL79u1PDT6TKxVwq4H9qKOjg5aWFoaHh+nv
                75/08yvR57viAJdy766mB7Vt27ZSnbs8fSMidHZ20tjYeBVwK2mdOHGCKIpWtW8JsHPnzoox8+MMVXbe
                87+uAq6G60o5cVWujTdv3kxDQ0Ppd1Nx1U18zVXALcKDSL+fz+yKlHHAOsIlN4RYxn9X/hlIjDWOgV0h
                7m+sBlTyt1OzFNR6TdRmKfDKZdLS0rLqot1Vo+EWOiTFJjSNjI6SfcX/xHoqAZuHSoaOaGMwWiPWoIzQ
                11LPx54xwhve+QnqG1oTUMqiAy7lMyk3sdZaLly4wOXLlydpvNUEvFUBuDmbzkRLocRNsEFR/+JXYT03
                hkm8ZLJhqu1sMm7dWAc4o7HGYGKN6JjhbB0P7l4P+Sd50zs/RUN9G0aKiPEximlnQSyGpkvlMVVQ1NHR
                QXNz84oOllYk4FJhzt9HM27G17e/TeZXfgNPBYjvoz1B+V7F6KWyPApWG0RrrDYQa2zshsqR/P+Bl+2F
                3JexZpR7fvo32br9+92wkyqYN2sNumKxyMmTJ6t+/VXAzbB6e3vJ5/NVv16NT3AAI4iyBC98NZ7vQ+Bh
                PQ8JfMQPwFOgLCIBYsEoQaxFYjdV2kQhog02ijCxhjjCRjHE7v8PvGw3Y7kRms03ibTm7b/5eUfzz+LS
                b00HovKD7xOn85QPelspaaIVAbhyYaTO8Xz406xA/evfgj3ZC4HgBXXYjAOaZHzwA5TvYZSHUgojbu6b
                tRarY6zWSBRBpDFRiI1ibBRB6L4n0mhT5N0v3kMul6NdvkFoI9Zv2M5P3/eHLNZBuVQ20/WanT17lpGR
                kSll2tnZWcH6/pQHXCqY+YzvjhF8tNNqHvi7X4lkFBJkkGzG/VvnQVCHymQh8FBBBuspUC4Stbgx5ak2
                M1ojhSI2CrHFCIkidLHoQBcaiCPee/te8qNj5HI51vrfQZsixDFv++DDLObpzLVr10571nimyspCplxf
                kRpuIb4auGgzu+cV2EAgm8XLZLB1AaquDslmIZtFMlm8IMBkfZQXONClpsjEzmcLY2wxhCjEFgoQhphC
                iC0WscUQE0aoYsjXr+viH3dsYWRslPzYKBsbH6MYh6jI8LYPH1jyIKJ8pZWWqVZ5RWO5llpOzTY8PLyg
                5K3FB2MJdr8U4+NMZuDMp2SzSKYeqa9H1TfgNdZjmxvxmlqQlib8tjb8tha8liZUSwuquQXV1IhqbkAa
                GpH6emw2i2QDyGQQ30f5gg081o2NEmQzZDP1eIGPUj6ByiCBxwfuvwWLQlF7f6maQCo1u1OB7sSJE8te
                X1bLqdXOnj27IEdbMAQ3vxglPnguQCDwsNksKpNF6jOoujpoyCKNDXjNLaiWJry2VmhuQFqakdYWvJYW
                vOYmVHMj0tCEashCXT2qrg6bzULGxwQe+BmU8nn4ZbdQl8nie0LGr8dTQXIKzsP6lgfuv7mqkefz2aRT
                fV+tFnSTt/WyVmjUcoEtDQzmEznZ5LKD570I8XyMr1Ceh/JcYOB8uCySqYP6DKqxAdXUjGpqwGtuRrU2
                47W3461dg2prQ7W1IW0tqOZmVHMjKgGde48MXpDFy2RRnocJPLwgSxAEZDIZPN/H932UJP8mAcm77v/h
                5GJr3+NazWimqXy2cnkvF+iWBHDlu7EWN6qI4fCXnABJRp57CoIk/RF4kMmg6jJIXT2qvhFprEe1NGHb
                mx3I1rSX/vXa2pCWJlRTM15DPVJfh6qrQ9U5oEngIb6HzWQ4dWM3QRDgJ0ALfMBLweaGESvlgxK+fOjT
                WBUvmzZpamqaEZg9PT2lHsErCnBpqWahYNOisBJjUWR+5Z1YJe7L8938VaUQz3caLvAh4zvTWpdFGuqx
                DY34La14rS0E7W14a9firWmDtia8llZobkQaG5D6OqSuDpvJIEGACQKs7/J3j7/0RfiZAN9XZDyfDU0n
                8Tyn1ZSklQzwRPFv//BgUnutvTyr6Vbu7Oyc9TV9fX2cPHmyokV+1QNudHS0JqR/njVY6+H/4D6MFVe6
                UomZEAc2fM9FoL7vnP1sgGQDvPosflMj0tTkTOiadtQ1a/DXrsNva0O1NOM1NUJ9EtlmMqjARwLf+Wee
                z1ff8Rb8ADyBwPMQXwgy4CnnQzoNp1x9VikQ4V333bQoMh0cHKzKslTDnVcsFjl+/HhFzm/VAS7NqV2+
                fJm+vr6a3YhCXCE+6eYoJYmVgIwD0NVLPaf9ggw2cCaShnpUSzNqTRv+urWJH9fqNFtdNgGbAxp+gFaA
                p+j7+dcR+KBUAkDfoz04jpIsyhMHMM9pOaWSzhJRWJN0qdRY1NXOBJvL8yq3QIul6RYNcEop+vv75z2m
                aboVPHvXuFAEV9ASSqCTMtCRgABPIYFz+CUbIPX1+K1tqPXXIG3NTqsFWSTIQFr+EoVVFuV5jLzpZwk7
                NyLi4SVmsz4+Mq7RlIeSpKUpIUdUSuEpQXnCb7zhJjyWr6xUbW21fHznYmm6RQNcf38/w8PDNdspxrOl
                RG86ynLiiE5V8pdU2S5XJT/KjcN02kcnDUul95fxMZ6eBWzyWR98L3FnR1IrFWw8BIX/RnngeUGi0cYD
                hlTjKqTUdGfFoKW2HcmLAYi0nLiYEWzNAZcmdIeHh2v3niiUFuSv/g5rQIwFMaWMfqkearVrR7LaFeKx
                oDXGxlhtsGEMUYjJ52FkjPjCBfTQCOQLSBii4xgVx2ijUHX1tP/O+8FojDFoGzM68D2iseMu76YCUOMa
                beKXlXGQe6L4l0/93pKb1PLXzhWgiwW6RQFc+Qmkmuw8HLj8D/9BIjiDjROTmh6YMRbKv48NKjZlJasi
                NgyxuTyMjGIuD6AvXsIMXsYODcNoDvJFTBjR/qtvpP033kqkY2KjCY3l4pmvokwR8dLAQE0C2yQgKKfl
                rBW+dPCvl82kisiUVFqzrcWoStQ8K3n06NFFUffWq8yyq6S5EmNdP5qNwWiUcf1rVsfouABRBhWGUCig
                R/OQ1E5NoYCIBxh0IabuB26kfvs2KANMlC8SFjQXTn7FVTMY57NN/y0HW+rTEasJk6pr3xo01+k7a9eu
                5fTp03MO/M6dO7egST+LCri0grAYWlOMN8HMarAKrHUt4hrQmiiKCCKNjkO8YoANCuAFGE+hRNA2Qsch
                dS2t1L/wZsDH2LIJ54kfE4YhuZEBzjz5zUl+00Rqh2keV/JaD0FjkgnUtfJpW1tb5/T6+R66GRoaqimB
                j19LsC1aikUJ/kf/zyQQKmMRq92hF20gsigvgiCE0MNITPbel9D28pdgxSA20TxWu07dBBRKJhzY0YZL
                53s523cEYyJnttGladQTQVP+//EHo5LfaRDXEfzPn/oQL37V/cvSCFnOlTIfq1WrLmJ/wZpnQa3g1Tua
                8scfc9ZOLJ5VaNwJKqvBegbjK774hh+naf1G2lsbaWxto7W1FWluJZcr0NhYD/EFjB5DpB5UBlEWrSOM
                NOD7DYCH1ppLF3q5dL6XOO0CjiNnpnFt6MYYjNGTiunu5wbElM5J2DSyRvOFAx/nJXe+ecHyKCfJqWWi
                eDaF0t3dveDNsiDAiQjnzp1b9N2pDPgIsQgelhiLGMW7X/nDtDa209DaTHNLC41YZGyEGzbH7Oi6iHj1
                KNWAjuqxQ/XgZ0DVu4SIjhPt1oAXNGOtJpfLkcvl6D/zBMViER1FFMM8cRyjdYTWGp1EvSm4StFx4vPM
                pAFrwQhgrZ3XbLGxsbEFp0tqoekWbFKHhoYWHXBWDMZarA9v7O6i0N5KU30LjUVDzg/5tTsLtLVlsR4o
                ZbGqiFCXpEdClPWdljECRrB+iCJAayG064gLY4TFmGKY53zvtwjjImGhQFgsEoYFYh0SRVECOnewRmsN
                RqNNVAKah0UnoJo8ndok1YeFaYj5/v1CfMfyv+3v71/QkcQFAS7tLl38+pvHL6xt4WxzPVlRXKNiPvOB
                NeBlsZJBVMb5dNZgbIiygXvgNgLrYU2EOKuGiEZphSHm3PBaYn0Ra2LCMGR09CK5/Ag6igmjAmFYwIRF
                okKeKA6Jw4hYh1hrMDZ22s7EYCzaTNR6k7+UXngWarlPZA0PDy8P4JZyTKa1Qo9nePuPtfITt21AVAA4
                04YIgo/FgUtIgaaweGBCwJ1dUJ5grMFqn++eygKXsdYSxzEmtgxd6nFJXh2VQBcXC0RRRBwWiaIiJooI
                owIm1u7vDAnwErAlwQXGlsA3Xs3QywKSWvvYPT098wa+Px/VWn4afCmWFcPj/7AdrI+V2DU1ikaIEetj
                bIwYD0OEoDBeiDIKUIgSV6XCmTlRGQTF5UthKXGsI0NsNHFuzFUl4og4jomiiCgOiYoFwihHGBWJ4yJx
                ZIjj0JnTOCoBLv03rXTYJAouaTgLInbe3cDzmZq4WM/o2LFj85pvNifApdpsWeaLWg2iUMa6o+5GO83m
                OWoGiBHruROqNnYazygsIAqsMVhVj9IFPnNY44lCxKKtQccC8RASDyWUD3ESIERExZA4DonDEB05bafj
                InEcEyf+m7HJoWl0KTqtNK26DADj6Zi5gGY+J+qttTz55JM1fxQLUTb+cqvnKjNxiBGsWKyyIJFr/cHV
                t1zsqsBqjIlciUt5DmhauwcsAQqDtpbLl4t4okpUD8bE+PYknk0CFGPQUeyAFsfoKCKOi0RxalqdL2fC
                mFhHmCgs03BxYlorI1ZrLdfu/EGsjZIKx9wecDXNlFP93WLQmKX3NB/TukpIpRUDmVtpjx4GGyNWwBgQ
                jUEhKnS9cAhOAbruM7F1DqA6ea11JndwcDDRcG6nxkbTFoyUcmmAS31EMcZooihGG2daU82mo9BpwtBp
                OW0irNUYQ/JlSu/nHpDh9ff/8ZIGCkuhHOYatc4JcMs1qtviM1j3ctaE/w7iYW0MEqFQKJzPJDbGGlCi
                QFKWowLKZrB4GOOOTQseQ0NDpeZNa51ZrW8cdcFFopWMcakP56fpkraLIxc8xLHTbtrGaD2u4ax2wB7X
                bi7xq+ZpgtJhLUuZd6taDSjF0NDQ4gAul8st44QaAzFYa1BWO7/MRhgSfjcXWaBEMLaAUOdoRpR2JS9R
                KPEgCrC+MDw4VCq+u6NzltZMHmUrk7cmdiYyjmO0iYjjEBNrtBk3pTqO0cb5e7F16m0ctHHyPZh5NmDO
                dyTV6dOnFz2DYIwpVZqqrUJUDbje3t5lI0MRDKI0YosIrkEkTYEoE2MSjkALiARYCogNEBuAaKwEIAYP
                jdEeIyMjpXkKqdmLWsdcYrisYpBWFdIAwsTaaTXtuEdSIGqtHVWE1hirJ+XjFJr1W582Jx8ppVida54z
                baBM723JnlGV11gV1UN/fz9DQ0PLz74jHtuHfgarFFY8l+IQH6TOtZNLgBUfIUCUj8FzHCIEScu4IEZ4
                9a/0jPfVWYsVWNdcpKM9LhXqSxpKJ8GAdXk3tMvTjYMtIjIaic148lfbCrNqrfD+P/lqCdCr3W+bLW0z
                E078anbMigAbIMQYySM2m5hRZ15t4qu517g0rzUGUZ4jDUS7NiGjQDw+9q6t3P2W75R8OINldDBmTUNU
                EVW6/G1U8s/Q8XjOrUyziTEVlQZj48oKAxprpSqjmhLPrKQu3WrTJDUxqefOnVsxjIpWw0D2x1ib/xR4
                FrER1j0lV1lQrvUcfFAabIAlQpHF2tidj0VozgpjYyOl23fmM6IYCZ41xGniNs2hJR0i44V7Bzzns5UB
                zZgyv83xBXvW54GPPursfRUrTaauFrDNNU0ya3FvKYrz1Yc4iuHsC53DpkOs0a50ZTXWFhEbJWWt2P0b
                F8BEYPJYW0B0jOgi2hQ48OfPYGxshFxulLHRHMVcns9/MU9ULKLD8q+IKC4SxUVinUSqcZzQe00GW7nv
                JjqYkx+1devWeU3qTn221ZHgmmHV8iBMbcIi9yB7m9/vOn6JwRqn6WyENVECwALWFMHGWBMmYCtiyIMt
                IjpCdJG/fqCbfL5IvpAjVwyJwlHycdodoseBloAsjkN0NB6pltqV9PjBnXEzYxGlee8ff6NqzTbT2MfZ
                NFstBhHXYs2maf3ZgoWVSFAcetdgCV0BQTSQRbAJ8WqAxZ1zEGVAi6s64CFGu1RKck87tnps67B870Qx
                aWPX/Ot/xvzID3mOmNqKy9/ZygZLS2UUmvps6UOX5DiZV9/kcoSzVBbmGiCkwF6qbp35mNjprmnKKHWp
                OnnnfUMJp+51Az+BSagVEA8kcCGDeMlDVuMVCBSeuN+V1Lt1Sv4Zr/wKQ6MROnHrlTXc+nxV0qhpIb68
                cpD6dxNbkNLr863HAx/9elUBwmqLRmdbQRBw7bXXTgk6NV3UsbKnvLg66PH2/+u6RmzsIgpTABu7k1sm
                RGwRa0L3Mxu6CoUpOrNrQiwRxub51t89gxu2Z8ru3+PUWeNybiauNJ8TaqZTdfl6xud9H/3GooJtJU87
                mKl+q2ZS2St1ScLvYAX669/rMt7GzVfARon/FrrGSxsn4IsQU0BMiJgiYoqgC4gpgC7yz39wPb/xMxtc
                QILw+Ekw0TjAxkEWJzVTM0mzpVWR9/7x1xJW9all29XVNS+wFYvFJe1DXIhJjeO4epM6FSv2ylwGa4Vs
                dJIto2/DKM89fBWUNFWaME73VqU/5eqcac1TrGIoF/L0u5/AS+qqz336GJ6qPJMw1aZ0uSjh/R/92qzJ
                0fmA5dSpUxQKBVbTmso3nRJwq3Fomq9H2DL8OrQSPOsAloLLIKXv05ak6TW7QaHZ/NKzCQ2Y5rlPG8NT
                GmVBo0vgTX1AjUYpn/f90VenTYquW7eu6sMv6SNZbrbKha6pNpfiilgG7bfwxNpPo7R1rOQ2SlIiiY9n
                imAilIkRW/nlcnXR+P+t5tRD19C1wZW9vvxYM0+crcMVbccD+7RSJSK89w+/MvWVGUN3d/ecTlqtBGrU
                Bbk8ybVPdTRxkoZbjaq73LczaK4d/Hk8048iSCYIqir3VtoSblCASVIj194xXPr9828cwTMJI5KCvS/+
                /3jR7T9T06AAIJ/P09vbu+pVwUSzOglwq3kGaXpUwLMuI3fthdvwvCBJ83gzwkyRUsPGpZ+q2GA81xu3
                9a4CCo9rNwzTscYV6D/wp990EwoXmFebuOYzJGW1AM6fS9JuNWi4JJQA4OS6h7DKY/v52zASJn6dTUYe
                jc89VWlAUAE/nTRyWjxruP9Oxe9+UtPcaMsCA1NToK32DT/VyuVyFbwmFRpueHi45lRbywtAhcGicGw1
                megEmwZ+ocK6ig2wElWwJo1HwNpBTxR9bX9IGGwfn7taFhDMp29tKl/v2LFjS3oabjm0XAXgrrTdNbsJ
                NtRFj1If/zcNhe9hiAmDZzKWeQaFzP+YcYRRLceA9/X1MTIysmoty1wA5/MUXsooCsEPEPo/wGCdj1hH
                x4AErvOEyiNx7e3tXHPNNbUB+4Ty4ZUKtona+ikNuHSGvbHWcZKkQCAqAW3Dhg20tLQsSurgqWBRRIRL
                ly6xZs0aRGQccCuuFWkpNV1Z/382m+Xaa69d9M+sZnzRlbIuXbpUGrtZAtxcabdmc5LL6SBmF2waGU7e
                HRPV8pRcuhP+Zi5O9zVr19G+ds2ChTqxOjCdPNLAbHaZKOZ6Qn81LH86Wzvd2rNrLwAHDx+oeMjGGPbu
                3jflw09fWw6Wl7/sdoaHRyte29Gxjo9/4m8rHlL6ee7/wsaNG/jbT358WmCV/+yWXbfy+UP/4eYq1Nez
                ceNGfN8fn5bcsck57f1neNUr7uQzf//pKTfIhz/4ET74wQ8jIvSeeXJSd235Zz73Oc+jt7c3ORXmY62m
                r/8MIsLJkycJw3BWGb/8ZbfzuX/87JVpTWrxJ+MPKSGQkfS43cTXaY4eOcaeXbeUzXAwgEHEcv7sxSnI
                /FwdVMTDQ+jv72fv7n184H2/Oek6Wlpa2LFjR/J1PUYMd7z8FezYsYOuri58368AvlQU9R0Ap9I849dk
                pm3lFhE2bdxCb++ZZPSRX/q7zo4ujh49SrFYnHFjp589MjJUsdGupOBhUYKGF774RXR0dLgkqxnPWY2M
                FHj96382AZhw8PD+UpdF+tqJDzzVZAcO7ecv/+L/5y//8i+wVviXf/k3/vwv/mxaE9/Z0VXhm1abJ+vs
                6KKvv3dOebVKsmnNmbNnyt5vEwcPP1yVBbHWcs/d9yafreblIqxkP27dunVuexeLxZq++Ute8iJ+6qd+
                nNe+9rW87nWvKwnzZT/6Uqy1bO++jgOH9pch30x6wNlslm3btpU0y86d3bzvA+/hzNnTpQdx4w3fN6Xv
                ZEua2AUDT9t547Saq/Ln7iFv3LC59PNLly5x+fKl0jXODBg9aUen91lt1Hzu3AXAx1ph3817r5gk8MDA
                wLiGO3/+/CKEw15F4PCZT/1dCTwf+9jHxs9sKsWaNWtKUUw12ugFL3gBX/jCFxgcHJzydZs6NpWcbsFn
                cHB4Rq1y9OjRCi4OEUtXxxYePvz5Ult5tZrGWmHTxs2c7uuteoxAer+vufs1N60Y7QAAIABJREFUyffj
                RbbVXGqc1iHL5/M1fdP73ng/e3btZc+uW9h9swskfu/33Oif225/Od3d3ezYsYOdO3fS3d1dAbb0gc/0
                cL74xS86f8qqabSMKgUDiEbEsrP7Bnp6eiq+0s8Zf6jjmtZIzL6b9yatQl5V7u6DDz5YchE2d25iz65b
                OHv23KxATcF8rs+dAXZa0W2YfXtumTH6fQoEDdW97XjAEFeUNqZiTezs2DThq4tNG7fMmkb55N9/AnA9
                9L29vRw5coTNnVtLgUhPT0/JpI2Ojs6qLRy4LA899BDgYwT27Lpl0oaYbt316jvp6+/lOc95NuAGvd37
                6nt4/f/6mVkBc++rX4ORhAlKhIOHH64qDXQVcMCn/+4TnD13mr7+Xvr6z1a0ZX/kQx+e8XJSbVLhm1nX
                WvTCW19UBkTDunXr6Onp4cSJE05LKylFteVpm/T97n31a2Z8cI7iS9HU0sjn/vHvSxvmgx/88CwPvDIc
                /+0P/Rb7D/4H27dvQ8Tj2LEnZvXd+vvPA4qDhw+UmXEPYwz7br5yIlY1351TnplPUxEzaY4vf/UrFZ2s
                5auv/0zy1evOgYqg1PjpJFFOW33nO98tDUubyhnft2sfWKGppbHi54cOPQyo5KFWt7q7u3nsyONVBfLW
                jvPKlddG/+xjf5poLMujjz46rRzvf8P9yVmMygT3/sP7HehErXqTml6/P58b8fCq7mZNgdnVtQkPD4Oh
                s2OT869SwPX1MzIylOTaPIy1HDh0AMpImQEOPbKfPbtuQUR4+ctu56F/+lyZM29K4BwdHpkiCa3ACve+
                +n/yt5/86xlNdXNzc6l++njPd7lhx9OYrhpSLkyXAjlQobncroamhsYp/TalFI9+8zvupL6ViusWY5Nu
                5ZjdN++ZoLVXaR6uWg3X2NjIpk2bHPGLwJe+8F9YMSWTddNNzyu99s5X3lXxQWfP9QHQ238qyY/JpIdz
                76tfw7lzF8rec+qyzj/902d56UtvZ3Q05w4qJxjYffM+lPITDelNAQiDsYazZ89OOS1mHASwcePG0rW3
                tLTw2JHHedrOG5mp1JTm/fbu3sfHP/E3dHR08Jq7X4OIh7aa7d3XT/kA3vSG+7AYBDWpJc+K4CGY5DB3
                OafdalxjY2Oza7jykzfWWjzP+RWvetVdE8xib9lDU+U2u6Ir4tChh9m9+xZEvJK2Ko8OrbUceuTgtKBr
                /H/svXmcHVd55/19zqm6t1tqtSRrlyVZliXbLLHFkmHYbNngsYnBSTDGEEKACSGZbCxDIAnDDANmSwzY
                gcxkYUjyZt68gJ1MAmFwJgnGAWwgkwAJm92yZO2ydqml7r636pzn/eNU1a17+3arW+pudbfq+Xzu5+73
                Vp0653d+z76or9BGt217cUauDUYN4svfHS03XHcTiufnfvZN/OH/+IPswnW2mRyNXIsXL8qQ7mljmjS+
                /A9/z7brXoQqvOqVrymOX8TyyU/9YesYrr+xMGSLCP+SodunP/tpVq9e2f24r38xqsoN19/Il//hQbZd
                FzTXrVufzj2/c++cmXAjIyOjOZyqEsdxwcvKE7IV8+9H3XL7UTBL5K856EwlMOHi3H7Hy4v/Ux9W7Ze+
                /GDHhDFtJpL84j70lS8VE3XbdTdw20tfBha8jO/s/sL//hwinX3dfXsn5zH8s/39/fzwh9/tior5gnro
                K19i9eqVba6zBx/6OzZv3tzWZTD/rw994MOoCce8Zs2qMbehBx/6u5IWPce5nPde86a6URSNWRNiPJnL
                cV35uZ5L0435cP4zKb29va0ttX0Vnl1ma+WecyGzS5curSbbDEkE3bONuk2mboM7HwyS5xI2Pt9cTjM6
                4cbbao4dO8aRI0fm7QCc61aac7f5mGV1QSbcfErGHUviOD5vlKom2+TGKroYJ1ourfCnyct8KMMw07Jg
                wYLWhGs2m9PSeW4+8bayTHWEzcUgPT09YcJdTBlEuZyPZlrJuUm9XsdcyJZGF0rON890shlulbQ4sznX
                bnVzVUJ22Orz+o2LOYf3fMUsX778otOUzvf7lWY6+UVeTLiL7eTPt6RWZew9v0VuquGYnMxE49t5vaVe
                TNvDVJzrvn37qllzHmNvxgp5mejFOVsmeedvd6sTMlNS7q48FVxuvi6qaUE2Y1oIN1b06/lymm6/3Zaw
                PIODo6rtpT/PcbKfrWjNbCLos0lWrVrVQrjJlHSfq3A+Ve0dK6Xh3CS3fRqA+W4amct5APPuWlwMJ3mx
                BCPMqQk3nxFgKrfBCinPb8wuGjtcT09PxeEukFx66aWjJ9yGDRvm9QpbuHBhdeUvkPT19bXscPkFmSoE
                qEwFlXQb+/ze5E/m80VR1coldYEmWyfnNZ3mg3mpGRkzZzskzvWF3hks0TbDutVumy8nXmmXs2TxX2xc
                opILO95VeNIkkbKSiY/VZZdddvYJNxU9Py8mElzJ2FKv1y9uhJuKOiB9fX3VTDqPhWkupkGdiiz7stW8
                krHHaawKqV0nXF4Bcj4OxPk0QakUj2nSUufzwO7atWtKFIdq8o29KMeLrxyTw81X5eF8J4qIcOWVV1Yh
                T+MsyPH6WpiLcUDmSxHB2aYx55HV4+XIiFZ6fiUdE6Mz7+Rsu0L+mTNnzmCModlskiRJsSOMjIyMuSPk
                vXZrtRpRFBX/tXDhQrz3bXkokzmmSiop5lgFchWoQahAdurUqa4tZsstIsqd5cs6lPd+zPSR6baZ12o1
                VqxYMSrsMU3Toi9zJRXIVTKP2FdZGo0GR48eZXBw8KJjP7mhJtedDx48yODgYMEqa7UaS5cuZfHixRUz
                rECuktkMbseOHePo0aNdyx2UGVb+fL4u6Imq1mvWrKG/vx9VJU1TDhw4MCpSN8+/WL16dddohEoqkKtk
                ihes9549e/bQaDSqkKkpZHqqyurVq4uyFHmj5N27d5MkyZjAmX/nQhZqqqQCuTkrJ06c4NChQ6MWYyXT
                L7VajY0bN456PW/QlANZzojLDLler7NhwwastdVAViBXSS7Hjx/n8OHDE1a3Kpl+dgfgnCOKojFzG48c
                OcKxY8e6bkTl61ir1Vi/fn0FfBXIzX+1M0+Y3bVrF81ms2t92qq43exVaXt7e9vq+HbKnj17RvXI6sbA
                O50hlVQgNycAbCzJG+nNpLppRHEokTekEoGkqBdqAg1RbH4Yj+/CfO1r1L79Q/Tb30PFgzrAIAoqHnUG
                ox4lwROhC3uRW25k/4/fzJrLLsepoEYwpKix4eukiOSsxYffm0fqtohwxRVXjFsupdFoFA0UyyrtWNLf
                3z+qa1LF6iuQm5XivWfHjh0Fa7sQi1sxoI5ox+PY934EOXQE1OAFTAZK4j1Yg1EBwrE6FDGKesEoKA7j
                FC8G4xSnKQKoOlQFvMN4xePAC/fcto3G0A/wyUEWLV3JrXe8kw2XPzUcDx6RGA0oOOdZXf549erVLFq0
                aFxAUlW2b99ePO72m50xhsuWLeOSSy6pQK4CudnB4g4cOMDg4OAM/rMJbEkNiEcBv2MPPb/wNowxeBMB
                ikQRgoLJygViAsCNsxgLtVlB8eADAFofAFxVQR3igwcSVfCK9ykGUOfxKH+y7Tns7luAHf4BkhxGSUA9
                r3nT3ay/fCsqOQtKw/F5QcTOSRAUERYtWlQwsc6A6U7ZuXMnSZJMaAPMf2PTpk1VUHMFcjPL1rZv315M
                wLK9bbp3Xo8iosjgEL0/+TqcFVQssbE4sRibsQ1rwICKCapjDm7Z8XrpvqCMUgAZvgV63nuMV3Ae1KPO
                I14RwLkE8Yp6H8BKk+L9765fx19svYpGMoImJ+jx3wfvQQ1OmvzSr/0piy+5FBEH3gaVeQ5vemvXrmXR
                okUT/s7OnTu72mfHU1mXLFnCypUrq4VYgdzU2tuGhobYu3fvKJVl2o9BQNSgkmIe3UX8H94GFoyth+OI
                DGINmABkmOy5WLAGjAQ1KAO6zGjXVvd5VAVRH9iZEhgbGbgFEMtYm1fUpajz7e+7NPucA+8z1Vb56K0v
                5kyS0HQe12xg/GF6o93gAEkhdbzqF+9hw+XXYpHMPhgFBjgH583mzZsn7E3N59mjjz7adk3yuTaeRFHE
                5ZdfPiG7XwVylYySM2fOsG/fvjGbJE432BkEbzzx9S/F2DpYgzcWayMwYGyERgZvBGMiiCxiQWw9A77A
                8kxkURNYnEpe2N6OYqGqimiukmpQSR2gCeJ8BmgZsDmP+hRxHucc4lxgb2kH2GmCdwbShEeuuoIHr9pA
                o+lxjSZN18Qnp1jeuwN1HqcJPvWIWN763r+kr2cJqcw9kMttbNbaCZXW7gSnfN6dzSbY+T1jDJs3b66C
                kyuQG18ajUZR+GsmGJuIxXpoWo/xDohQ8cgX/476h38HjEWtQUwENrA0tRYbR8XrGhlMVIPIgDEQ1TGW
                jMlFiDUYY/G5bc4G21znOUpmf8Nr8K66wMbwHvVNSLQAOp86xKW4tIlxgk9zIEwD28vfdwkmze15jk/e
                ch3HbI1mc4RGmtBsjtBsplzSM0AsI3gPTkDSERTDdS9+LS+86Q0Zqw0OjLlm2rj66qvPWYsYGBhoY3UT
                mY+qShzHbNq0aUyVtwK5i9DG9vjjj7dNiBkdEklRbxGxRO+/G/O3D4LEQa2MAsiZyKI2sDIii7UxPjIQ
                xdlrMUQWE8UB/CIL1hbflwzsRCwqUqisxhi89yF6XwEJLA2vqE/D4zSwNNI0exzufZpA6rLHAdQ0aaI5
                2KU+AF/qwm9pwv6lS/l/r38OSWOEtJEykjRJEkej0WD5gp3EjKAOHM3MieHw3vMjz7yZH/+pdzBXS9Gt
                XLnyvIoAbN++fcLFCzvn79KlS1mxYkUFchfjie/evbtIyu60hcwgxKIq2Af+HnvXRyCKM7ZmChU0gFjG
                3KIYYouN66gVJK4F0IvqaCRIHN4nipHIIjY8Fwtqa0hWXLDlZQ3hIl6Cc0G8hrAQl2RqaVqAGBmoaZpC
                4tCkmYFcgk+z54kLoOaSDBQV0mZYoIny1Wc/lX++YgPNkUbG4jwjzWGSRqg/t27RdpxPCk+uaopPg8dW
                XMJTf/RWfuLVv55N3GCznCt2ugULFrBu3brzUiPzUJRzqdYqImzcuJE4ji86dndRgVyz2WTXrl2j4pIu
                1EWXwUHim29HxWKjGs4QgM0GkCIyWBPhY4tEMSaO0DiwNqnVMHENiQ1ENTS2mFo9gFpcC4AYWSQOwEls
                C/WVzC6Xq3+5Ha7sRNBmE/UOaTbxzqFNjyQNNAmMzSdJAXaapEiSoEkTl6RICRxN6kgyNfb/+emfZLgx
                RNJIaTabNJtNRkZGwn2zwbqFA4FZahqAznmc5kzTk/oU4wz/8YN/RU/vklmvvnbW4evp6Rk3a+JsNrvc
                dpqD3US/W64+k1dX6dZYqAK5OSy7du06r64OUz/oYH/m5zHbd4WMARPhI4OxwStqbM7IMjYX1wqGZmox
                xDHENSSOMbUIrdUwcQT1egDCWg1qcQDLWoTEEUQxaiMktqFcNBY1ucMhs7epK9gYaYJP0gBySYImKTSb
                aDNTS5uN7HGSfSYN38nep1BnU1yS8r/e+FqGm8M0Gg1GRkbCfTNjdCOOSA+xpHYQ74Mzw/mkCF/xPs3u
                HerCaz0Levm19z8ANsX6nhCUPAdk2bJlLFu27Lw31jybZrL2uvzz+Xc2b94877ssz2uQe+yxx1pN2mdB
                Xmi+o8bPeXEAmSjY2wqGFdngZCgBnER1pGYCO4trUIuKe2oxtt4TnvfESFzD1GpIvR7er4fvmrgnPI4s
                YiO8zUJLsuMKISEecQ6XpmiaoI0GNNPA3BoNaDSgmeCbSQC7RgOSJr6R4JvNAGzNZvadoLq6tIk2Pf/n
                V97AmeEhkkZgbjnINRoNGskIvjHEktoOUhdUVVwAtVx1zYEu9WBdQuJATYI6eM+9XwsBysSzHuhyYLvy
                yiunTHvIe0dM5ve6gWK31LIK5GbRxCnbOcoe0lkhXgGDWoc5sB/70tdjIsGJwVqb2eAijLWozbyoUYTU
                oszeVsO3MbYAZNoTI/UYE/ciPTFSqyM9MVqvBeCr1zE9GbjVapDdTBwFVdhErfgqdSW7mqLNYbQRgEwa
                CW5kBJImbngYbSTQGEEbAQh9sxFeayYB9JIUaTRxvoH3dR7+pdcwNJzQGDlNc2SEM40mjUaD5kiD4ZEm
                xh2kR/eSOsH7EVzq8erApTjn8BruVRXnArtTFz7jVVEnvP6X7+ayLT86J+ZqPk+noktUPvf37dvH0NDQ
                lGzCxhiuuOKKeWW3mzdM7uTJkxw6dOiC5Yx2nYTZHFEv1P76bzDvuRsxKd4EYBNrMBLCQHJbHLHF2GCH
                y9XUwNxqmFo9qJ61uARi2ePsufbE4fWeHqS3B1uvQ28P0tODqdXRnloARwn/n4MGSRNtNPHNBgyP4Eea
                MDKMH2miwyPoSOnWyNTVRnYbaeJHgr3OpwmmofzgLW/gjChDww2SM8Ocbo7QGG7SGDnNcGOEdOQMUfo9
                NHWk3pGmKZoBm8vUU02Trowut9d5D54U7xKuf8m/58aXvGnObMxXXnnllILIVKYX5rbELVu2zAuwm5MJ
                ceWB73ZxZwtuixLCNb7wRfQ9Hw6pVxJBduwGwYvHiA05qBKCJLSclZAF8VpjwGhQcTPV1phMxbU2gGFk
                M1tdDoo16O3B1HtgQS/a04tZUMf29AaGZ00I+Uia+JERZGQEM2TwakJavYYkfOdSxEeQWjSKUZciaYRY
                jzcuAHcUYZzn2C+/kVOLluIbw5iRIYwIxEKUQGrAWstC9xhNGcZLhI/ApIq1Fp8FIysZ+NpwHKoRKkkp
                kFnDGOEwKoip8dAXP4VRy7Yf+9mQReFKWR6zjVmIcPz48XEbhU5mHeQl3VV1Snp55L+Zm3vK7ZrnIujN
                SZATEZ588klOnjw5qwddxSN7nyR6z4cxyCiLUZ6BoLm6nQGaEUFF8RICho0JAbxGLHnpovDZUqqWCaEh
                ZDcxJqi+xmRsMDgtTL0HWdCL9C7ALOwJaufQmaBSOyB2EKeQRCHY2CQhKFks2AiRJEv2zyqQCKgoyXvf
                xZCmNBtNdOQM0vDZuYSztmrgzLexaQJWUXpJaKCJYoTgBLERRhVVi5e8TFPmIcS2HmdAByZL/QqpbA8+
                8PtcvuWZbLzymSDKbFRRpnK+5r+T369du7YtgHgqxBhT2P3maiPmWQ1yne5zgNOnT3Pw4MHZ2VJcHc5Y
                jA/5lxbB3vpqnBi8CQnto84PU7wuXqFIkjcZ2/PFe6oOUwp7KUI/sjSsPAykeD11qA9BuZKkYFN83Ahq
                stdga1OPbyRoYxifNJFUQ3qWC6oh6kPJJXU47/HGI6IYJ/T8xI+j//aZjIw08UND6OkzIaXLeTAaIGjo
                CM1TA6RpikSWiBBCJ9oM+Z3etrE3sgDl3FHkAcnCH4Sc4Za8hBqh4sIo+og/vPc/8L6PPzJrN778uKar
                UvCWLVva8mCnyu4HzFmwm9UgV75QeYzbbKbMxoQYNMQhRNit14XXvcNnTATxmbpqAyCZElCVwM5rCMxV
                zap/RAHI1DlwNqSB+aCW5ZkFJA6iBElisCmIQaMGKoJTDQDpEmR4BI3iFpC4EPNGs4kOD2U2tiYkCTRT
                UjeCNBJM6ln6q7+AW7wEC4w0hmgMN3FJkzRNSb3DqUcdHDvwTXwzwaVNxNRABGvASQAw46PA1ozFWsVr
                Wqjonbe8ekoOcmAwRvHetalX2FD77j//ynN4/yf+Ec/sNTcvXrx42tfOdJhtcjVWRIrwkwrkzpPKe+8Z
                GBhoe33WqqdeAmiJwfz9V4qJFsBPEQl4Js5gLHgDVikAzYtHnAQ7l5os2d1n6VZpUD+9D57QNMUYixiH
                mjSkaEkDMYIny+RQF5LuU4dpprhGI4SZRDHeWhJRIpXAsvJc1EYWBtJMoLfGop+5LaSNlVKqIkIPBN/0
                NBNHI2ni0xGOHnqUMyf34hqKxaDGgrEY47BCUK+tQbxpMTERvGqmjvqsPJQEhlsqvSQi5JgVxtWA8YCA
                Kwe8KqqGf3rk8zzjuS+dlfMkjuNpWz8AK1as4MiRI9NKPFSVgYEB4jjm8ssvn93mrdnmXS0DXU6P50q/
                0LDALAYlftYNIcQh7+aUHbrYEIhLZkMzkW1VCxknEFjiHiTOQkuyQOA8dMTU6lAPr+dxclKPs/CRKMuM
                CFkRklUvCSWYYgwpvqeX2jOuobZm1agF062Mj3OOkZERhofPMHR6mF07HsElnmZyOmRzJcOkjSZp2iRJ
                myRJA5eEhP0kbeCaCc6lpC4wwJwJOp8UXtY0TfEavK7ep2jqQigJ4d77BJ8V71TnUTypT7A+ZJOpOu76
                3X+clZrJli1bpvV/yoHCM3FOqsqll17KwoULKyY30UE7ePAgp06dmhZj7XSKVUOKx+0/RNRhMww5omQq
                qkO8xeRleYwNdigRvEkx3mQ12QR1TVRqWElwRrDN4IwQMnu7U8QpzteInGLUk/gU43qINm4i3rye+pYt
                6OJF2FFVa33B0EJV3vBc1ZX6NLQz50ajQbOZcuLoXg4f3EUzGcIQkWojTCffINMiR+VY5jmp+TG0clR1
                TDuQiAQ1ve09H9R90pDDmnlxDBYvivrgid058C0u3/KMbDefHbmuMwEEM7lWyrF6nZ7YCuS6SF4RZK6G
                7qU+1EMz/+WuMa1Bqor44JEUr8E7SROkFryxKYDLjPFgJQaaDK1ZSeOaaxh60fOpL15KVK+xoDemt76A
                qLeHeq2H3lodG5vRLCzLBRARPBrCOtShmiK+CRpu3jnExFBbGdTq0lpxLlQLOXX8EEcP7SFNs4BfB67I
                UMjzTF1wWkCpXp1rAVteSr08Ltk5jwWKmbEyc8xIMUYF0y+VTg+l1JU/+723866P/H3mwZ4dc2rt2rXT
                vnGfOXPmghGURx99tOhdO1uIyQUFufKFnkw5mdmrrlowDvm/30bEAIKTsIRjT3huNMsbzUoRmYiTvX18
                69lb2fnUy+mt9VLr7aHWU6ce1+jp6aFWi+jp6aFe76WGJx0eou4TvOvB6hn6bIOFOoI0JUsRq+GxgEUl
                Qk0cqppIDaOEysHBmhXKIAFa68fU+jpAJiTSJ4mj2RjmwP4BSBukaXg9dQlJs4FzjtQ18UkT55NMnfQ4
                H1TU4KkNifcB8HyrZ4R3bYUSchqotBLKKbG9tqIKmT3Td+0N4RkeOQF4vL9wuZllU8t0q6m55H18L9T5
                JknC9u3bueyyy6jVahc3yInI7EvDOh8mmquaEAJ/fYoiWAGnhi+tXcZfXbWROLb0xD1E9R5qPTG1Wo24
                VmNhwzPiR0hEuWJdk61bYtavGERMD94IQg0lCuXOJUaoYTLPpRJe8xlTFLGgMRKiaUOyvDSDM8CX6rLF
                vRCtQlRDtoFzpKknTTOPaZpy+MB2fJpkr2VAlqSkaYLzCUmziXNJBnRp9jgJ2Qmpw7kAfGRe4Ny2Fqqk
                l6qOlNlece8CyOXstnTrBL1O1TcwPsOFIhTl4+nMHphu0L0QWT+d1VJ27dpVeGEvOpDLB3/Hjh1znr21
                n1iUlR0XmuJ5zeY11G1EFIdqIPW4Rr2ZgFFWLXW84ccjnn3VAlJrsRIhxoYAYHwI/zBZtWBNEB+j4gJD
                VAmLXpoB1MSSm6pEsoKXUkPEhe95gxoDGoN3iA2FMY83NqDDDeBYkTLlnGZA18R7OHTguxg1eA2Ah/ck
                ScghTdIGLlW8axRMLk1TUpdkDoXsPqsq4p3D+1I+aon1tVK1srxU7xEf+ky4NtALqm/O4jptePn7OZsT
                sXifXphSWtl/5n0YZkLKTZYu1LouP/fe89hjj3H55ZcXXuWZPr7oQgyEqrZV4503ycDqQC23rOzDxhFx
                0kBVee3NS3jza5ZjtBZKKqnBSagG7LWBkJUK8k2MxHhSjGmF1OVTR3IVE1/cA5ktTUEsmlnYxWZqcZZx
                INjQr8E4hk7XOHBiESLHcNpsY0GFqpmknDr6aABTH1hBUf6olFOapmnB3pxPA9NzLmN6zUKVdS5UE84f
                u6TZUTsubf13lpDvcwAs1NyWbS+wu+BV1THAzqgpNtELMcdEhEsvvZQoimbk/0+fPt12vrPDhBNMBTt3
                7iSKIjZt2jTj1yGaaZQ/cOAAp0+f7rrjzXURsXhg9SWGBz+5mUgNqQ1Bt0ZzddaiWQyYqIRS5+pafVQl
                xRAFtkIAuNC1KzfQU7wu2OxxFlMnNgQii0W9C899E4xFvKBe2HPY8OThCG+PtV2XsoronGPkzF40HS4a
                3OTv55VBcD4L7wiqrc+cDTnA5Spq6ppo6vAubSXal0AyV5F9yY6XVxyhBL5tntg8dATtAnC+45rkIzbz
                izuvxDtTtu39+/fPzr0/uzZpmjIwMDBjtskZB7nc8zLfgK3T2C14HvrDy8A7XKR4b4kkJdUU43tCtpaA
                0RpqfNasOdRHE/UQ2pJmYREgCDhFDMWiVlKMjfEaQM2IxYtFvYRO9VmOa97EWTQ4IfYeVb67QxA9gxIF
                9ldSK0RDJV5Shx95Eo9B84xbFxwUhXqpLTXTuUbozZCpqTmABftbS13N2VyhvmaA2notZ3MBRHNALdRZ
                Ldnl8G3A1/2We14lmABmcFFv2bKlzUY1XfM9B5A8pnTWKztZxsTatWvp6+ub+yBXjonqzFqYvxIhTlGb
                go+x4sIiExv0zyw0TaUZ7GUm5IeGx6HPamaSy9Ijghrqs/AUJEbEoF6RzIngjUVcFJibpngTIQrGRKgK
                Pkvq/4f/22xlyhoZxeTIbG/GHSTS4RZLKqmELUZX8pr6tI2ZBYDKmJsj3Kdlr2tSgJnPHBEt0GwBXLuz
                ITTU0Y7YunZQc23mD5cFBQsG1VbO63Rv5p2G9umc9/namg1FYSdzzPv37y/U1+nOQ4+m+4KfOHGCQ4cO
                cTFIUCs9iV2O1SOhQTMmxMSpQfB4IqQAOhAf4yWzMeV9AAAgAElEQVSEQ4jalq1NfVDXxIUkdCwQYt7Q
                kDKVA5s4V6ipXsC4UJlDNUXU4A381YPDHD+eYrL8zzYVuA0ohEXRYRLVUNpJpUj6L4NIACRQAmCJz+15
                LTuac65la9OyzS3BuxSflTLP68fhgmOjG4Mrx9f5Di9sG8MrgfEdr3tvxmjBiM+8rdO4vWXNnmdKUxka
                GmLPnj1zJiOoE/TTNOWxxx5rY71zAuTK1Hy29VaY9ounobzQ/t53sm7kHRj1eE1AQ3S+qsWYFI9HqIWA
                XAHxUcbiPIopQiYQh2gI4BV1gbGpzRCyBGxZmlioAych/5OQ14rWIVW+P3AMMRmY5m0JtR3gPME2GC3M
                6vOpGW3zygGpYHU+s8ulIL7kKU1Lqm1aqKZ4VzgW8nLnRSHMNAMzWqwutwO27HCj1dQc0Ivr4BWM5ZlZ
                7mrIipg+ddEYw4YNG6jX6zPGhHbu3BlyjmcoJGW6mWi5sklehWbWglw573QmbBKzS0zoKiULUPWoBq3Q
                Z3nkZDuuNxbjm6BRqPdGElicWtQ0QE32XPEiCBrUVJeCRJmdKcrcr2mw26nN6s0FRwRiQhkjGSZCOHXy
                aJGq1XktCpATEO9YZIY7jPktu12GIm2OCu8ATQpAcs51BbzCsZGBVwC1tOVJLeLltA3cVF0gtnSzwZVV
                VItqigo867k/NmOsZKYN6QMDA/NLA8qAbuPGjURR1NbhbNaqq+XmGvPXydBtxqfBoC+WnQv+O1ecflMI
                5xDFAE6TkPaVhYYE1TSrHaceFQ8uCtU4NKhpYmz2nhZ2PfUGMZ6sqiZeAigqpihJFGJPIrzx4CNODp4u
                1NNyt6by7hmumbC8dyQAaAfQtdTWEJTXBnQlBlYAom85J3KbWwFeLoBbmqaIUZx3bQHA+ffwiqKtqsFd
                AK44F+dDJq54XvHa/zytixJg48aN08reOusp7t69m0ajMa/WVfn8du7cyerVq+nv75/Sc5vyKiTn0j1o
                PtrlIGLlyKfoS74WwkQgC8g1GVhZQLKu9pkKKhaT3ecqp8+q4mJs9l2TBQzH4b/Iv5uVc8LgxRRFN3P7
                2z9//wz3/Om+USWrOtVR7z1XXnqGOBqdTZCzuLG8md6nLbUys52Nyl5wLaDrBEXVwAJFWw6OnL35UQ6H
                didDKwg44tfv+hz9y9ZM+fzL/6ezvNB0e0/LtRRnS/+S6ZRLLrmE5cuXz051Na9IejGCW2vXCGoreA71
                vJ6Fza8iJMFrmimToRiJZkCXFcyU0O/Ba/iu5NVAjEUIBSJFBPURYiRjdzljM2Q1xIEYISnUZ28Fccqz
                r67R09Pg0JEmoh4xNYT2RHlPiEH7px8KW68cDt5dWvmXLTD0bayuBXKgpKVE/PA8B7aC9Wk6ynHQymXV
                Ih+1G5CWGeQoFirw7OfeyuLlq5mK2LhOxpQ3oOkMYJ/q+V4+t7yceWeF7Hm7frL+F2maTlmLxPNicuVd
                tNMGd1GpqePt/Bg2Df5MaE0occHYQNAs6yG8FqoFB+aVva4mey5Z9oJpvWZabC1neeE/TVG7DgLTC+ET
                QW2+/Ve/y6kzSahUbAK0ta6nQ1Uwarh0hWPNinTUwivARrqwuQzUxI8O4m3PWtC2uLcy++u0u5XT/orP
                d7LL7PmS5ev5jQ98PpSokpRyoc/zlc2bN0+pMfxs66q8ni4G9taNFS9evJhVq1bNDnU17+pzsYPaaMnq
                s4ln8/E3IBIDHmfjwPhyJwJBhc1tarka6wQMecWQuAC7AGyZquszwMs3lQzs8gq7mZ6c2eqCfPRPd/OZ
                Bw5kBt4Afi2fgsNLYEXXXO7oXxRiXcSHisVlFiOaoBmilpleJ6B1K7eE14I55h7TMngVAcoio8CtfB/q
                9Hn6V6zjN97311N+BfNKGjM1t+dKUO9MyVQ0vT5vkOvG4CrJmZxm6ayK8YaNp1+HcQZvMyeCZtYCsYGB
                FSBnCjtb6zmZjc4UQKe5aaDM6DJQKzNpnzMC71Eb41AiPM96xdfxobUMqjZL/M9sZxgg5Yo1sG6txWi7
                3a7NnofratvrqmKW1dyOvNN25uZHgWfnHFNVLMLGq5/DG9/yibZCn+creeyWjio0OvVqaZ4NVGlCozWh
                3Ea3bNmymQG5zsbN882VPRPM7tLT76bH7QKNUSNtzgPJ+q/mgJe3HwwMr6UqaREKYgvbW1BnKVTW3D6o
                QonddR6P4cOf3MGffP4wOF+ouQWgeBCT0hML1z3D4DRTf3EFEHZTHzuDc4t4vA5Q6wZgeQWRbuqoqsMY
                g/URqSRYH/Hvf+332LTl2Vmsjp4z2HR2tp8JzcR7z/bt2yuSMAEpl1efbBzdpJlcfvHznScPhqwu0NnF
                IIg6rNvD2jO/jiXGZ6ppYEQl5pbZ7UJwL3gMFpsBkSmV7ZUsfUtLbK/1j227opoOyHXEKqTGcusvfYfv
                bz/dtuCMelRNCPgVz03PjTG40EQm+4U2IHK+A5S0qJQyXh24Tntb9/fDPBMf+mUo8OHf/ye8Zg26/bmn
                bdXrdS677LIZmwdDQ0Ps3bu3Xe2u1tBZMedc7aLnBHL79+9naGiouiiTvloRSOispc5z2eAbENdAJcpy
                VaUIDSkztRaT05ZjQVtMLwc0bVNxunU3a58gmm9SZDF3xvOS//BDvj/QwEcpbR4MAFIW9QjPuUZQn+eE
                5qEl4wGYdmVs3UBtPEYT7G+GZz3vVm5/7XvOm2lddtll056lUGaEu3fvZmRkpLJfn8dYnksPiUmD3ODg
                IAcOHKhG/Bwk0phUGqQSbEnG1xA5waZjb8RJHqQbZyBm2xdC7oVlNJPLO80HbtUCsjLDG3viCMb4YJPD
                4wRib3jrR3dw39+eGm0j8U0wNX70KcMs7JH2PgslW107sPki/YqS97TTa9jttXZQ9nzwv30nlJjX0aA9
                Uda2YcOGGc3Gye3WbaXbK5A7b3vptIFc5f2ZOhEldKRXQ809wYaTvxli5UzWQDnzinrK8VimYHejXlPJ
                0sQYxebOYd9EjPL9gWFufvNuUINJfSj66TMHQmT4t089TWQhChFybYu4s+rzeF25Ro1NBgpWPUrE+3//
                m2cFtcLr2wGUxpiiMsh0B+7m/33ixIkL2mthPstke71OCuQqgJtqycpz44L3EkM9fYJ1p96OI7QsDFcp
                hJ6UVVjfBmBmdD5ql9fGBokuYCQe8IF9aooa4ZpX7mJwKIR+xN6SZEHLiOPfPnUIa9y4ANbZRWwscIPM
                q2qUD/z3fyrCaCY0oUvnfCE6vD/66KOj7GsVc5t6WbNmDYsWLZpakMvtCZVMnzgxRJriVUAsVxx/ZTD+
                47MCmKZDfe0ALxVyJ2xQec8N5NqoZmYLU1Wc8Vhn2XO4yQt+7sjoSHwVrt1yigWxIia0JlSxqDosFjeq
                LaDBisOpYAgZHOKFrS94Ka987XsKtjoecyoD20x1c+8874q1XRgpVy45b5BrNpvs3Lmz2o2me/EIWLU4
                DdH6xhg8jgXpD1h78t0dkCRjOxQyxhcq2E3eOZQ7KT2uTek1Ggp0oknoU0GTB74xzC98qIFxiorHSwAu
                Y+AZV5/GeA2FQ4lGgWnuSABoqvKRP/h26CjmIqzxAezPInlC94xdoxLAVUHwcwPoJgRyeTxc5U2daQkB
                uaIR3gTgqye72HDiLYGpeUVsiKmzeVf6kj3u7OqqH5chtb7VaUtzBRgGHAoFPq/56WFODyWkhHp1NnPa
                Pv8pp/E+CdVGxISwFZS4ZynvvefvW8y0S//UPHQkd2r09vayfv36GQeX/P/27dtXRRbMIlm5ciVLliw5
                P5A7cOAAg4OD1WheUIYX0sNEQ5qX1ybOhm5UqwZ/l77G34W+D0QZHE1ljmW79Q81aFYAQNVjjMUTyrpb
                dTgxXHZ7A/UQGSU1cNklI6xZPoL6iJ99y+9x5dOuLRiiSowpXBZmFLAsWLCA9evXX9DxbzabPPHEE4Vq
                XAHc7GNz4216ZwW5vApCJbNQSuwnsCqP6GnWHn83df945kCIMSRZ+XRCPqx3RXiJ4ELaV1aefWwmE6oe
                m1LXMIwiPlQ3VhfS2IwXEknY8krlpptv5Z2/8fasmKUbl3nlk3TFihUsXbr0wm4q2Xx/4oknSJJklJpa
                yeySs9lixwW57du3z6/mz/MN4zJ1UTHBQSGtggBFILHzmfFL6W9+g4XDf8mC5F8AEzIFMnBUbzFytpi6
                UKUEo9jUoqbJcP2ZHF9wByO15wIh/MV4KUDNkDXCJsoKAbR6EfT397Nq1apZU0FaVTl9+jQHDhxoC4Gp
                shFmsZaTzZnxYudGgVynYbWS+awGg/Gh0YsTT+RBiUGS4HzQGG8TjAdf0iRN3otijHlTjhfLAWLFihUs
                WbJk1rGh/Fi3b98eCnZedCX755fa2k3GLJpZAdzFwQTzXrFWTVbVOEGwOOMw2sgCljNwywAxlFvv/ptL
                lixh5cqVc4IB5Nk7eQDxdFUbqWR6N6jOLJvO69dVXc2rI1RSSTfp6+tj+fLl1Gq1OXn8lRnm4mJzXZnc
                7t27q9G6SHfFHMSWLFnCggUL5g2zaTQaRZ+ESh29OObxuCDXbDanTiUqGXDHaqJyrieQ1zQ7m9cO6Jpq
                8+SBgzzwwAOtzxnLM5+5lWuuuWbabTPnG4pgjOGLX3iAa7Zey5o1q7qMTcselr/X29tbAFjnOJYLTt5+
                +x38+Z/f15X6jyd7d+9h7969pXMz9PUv5OlPf/p5Xufw/OsPf4Ovfe1rPPLII6xfv55169bxpje9iUWL
                F8AYNsKxQqAme01FhMGTp7nvz+/nDW94XYUms1QOHDjA2rVrxwe548ePT+lC3nbdDUXncqOgRnnwoS+d
                dYGLGq6//oazAIQvJreK56GHHhx3Mr/s1ttKEz5rGNNR/fVP/qj83RD68IpX3sEv//IvdjkSj2g07nG2
                gDYc6/vf/z6e/8Ln4Zw7554BIsLf/s3f8aEP/Rbg+cGjP6S/v29Sv3HpmnXFdRER3vof38Lb3/627LSU
                NavWIaLsP7hvwr/52c/ez0c+8tu0imkanveC53LffZ+ZEKiUbSwA3/vX73PTTTdl10GLSiutah7CRz96
                T3EtVFvH+/jjjxfViM/H1pZ/d/DkaW677Ta8h/6+hbzilXdUHtdZKGfOnDm7unro0KEpM8C2T4Ks8uwE
                54WKHxewil4IeSm0jvppIVRBGRjYyc/97BvD61lPVADvQ1231atXc8sttwDw7W//C9/+9j8XILh58yb+
                8H/8wXh8KgvXkALEckALY5hmfR1aY/Cud70b8Lz3rv/Kddddx+LFi+nr6yuqnp5dPPd95n7e9773FQv9
                6iuv4gePfp/FixdPki2ZLCzEjBrbcIO1q9cgYtl3YO+EfjMAZ36hPaITZ03lz61dfSlFGXh8UVnqaU97
                GrfccgsPP/wwDz/8cAZu4f/+/H/9xSiH2fl01CoAbnCQl730tuKaf+IT/42+/kXcfPPNFarMQnV1ZGSE
                np6e8dXVburdbJCP3Xs31157bduELaf8lFOAjDFc/8Jt2ZnnPRFStmy+ik9+6vdHVZxVVV7XRV06W2nq
                MhvL2cbe/bvb1L/v/et3uemmm7P/UlThP/+n/8rH7r2bO++8c1Jq8cMPf5M3v/k/Fr8fGlEbnnLV0/nB
                o9+dFNCdfcbYArAC6DApZpdfk2azOWknRRHnl43717/5Ddavv7R4/228tW3MyqmHU9UjIf/9l916WxgL
                yRm58IG7PoiqFhtkJbNLZS0HB7eB3LFjx2Z5vXlTsIwc2Mp9AkQkdGcHtl13Q+s7JtidvvwPD3ZtFtJ5
                rmWA6+vrY/HixSxYsGBcm1FgLpqxItv2uaf9yNPZf3Afa1aty7pjBVB965vfxp133jmBwpbhdx555Bvc
                /pM/AVlgbf5bOWu6+sqn8OjAD+nv7x9lZxvPJjgWGLRKl+fszLNm1TqMgQcf+jKdua/Hjh0pMS9b5Lie
                mxfWF82iUcu/e/FN/ODR74/61MDAQLGpTX0DGMP1L7w+awaeZX0UYwEf+sCHEYWbX3JL5ciYBZKPf6dP
                ISovosOHD8/q6O5P/M7HWbhwYZvdJj/WX/7VXyrqh91w/Y1tdhxVz0Nf+XIb47vkkkvo7++fVPnrTptR
                O2CMDST5/fOf//xMxRpbTRvrP7/+8De4/eWvwJhaoRp/4x+/xn2fuZ+77/5owUivvvJp/ODR7xc2uqGh
                IYaHh4v79oq9rTE8evRooeoNDQ2N6RgJdjHLtuuuB+Chr3x51LGqnv8m+Y1//DrP+dHnFS0JT506zdrV
                64tMirVr1/KRj32UNWvWTMtCCQC3re28XveGn+ElL3kJr3rlq0OVFwMf/OBvo6rc/JKK0c0GVVVECgzL
                r2XUyVxmszF1+/Ydo4tDqkO94fTpU21qdmguH9jOx+79GFu2bDnr73/07o9NyMaoAnfeeUeROH7WCrfZ
                /SOPfC1jXRYRpb9/8YQW3dcffoSf/MnbQ4FNnyJi+fRn/4zh4WFeetutfO973+OBB/5PwayeevVTePCh
                L3VVq9ttb1qA8+iqva5QG1WVu+56L+9+97tRbZ8j179wGyLC//3nf2T58pVF6pfI+cWhrVu3jn0HdnPq
                1CluvukWdu/eWxyPiLB//0F+6lWvKc75BS94Ae97/3vPG+BydffGbTe0GZBf97rX8vrMq3rP79zLm3/l
                V/E+VGX+8Id/G4xwyy23TGsLw0omDnZHjx5l+fLl7erq3PAUeVRbQObR0OHAKuvWbWwLBGwBnfDpT3+a
                O++846y/fvfdd09IhQHPc5/7nAlXx3jqVU/l5MnBbOG3VMgv/s3/HrMmWX49nnzyMK++86eyhPqggn7+
                C3/JokWLCvb2zt94B/sPHuA73/o2IKgK179wWxvLOtfg1/w4+voX8uBDX+L0qUFuvfVlWGszZhzU0mdu
                fVbJLtpSVc9X+vv7efjrXyNJEp544glUlQ9/8Ld44IEHsq5h4fi++tWvsu26F/GGN7yO173hZ87rXG/c
                9qLMHhk2lF/85Z/njjvuKDzGW7dew2/+p3fxwfd/KFPNDR/+4G+xevVqtm7dOmtt2hcLwOWmt1EgNxPl
                lLrFyY22bYXUoBUrVoz6/v1/cR/Pe97zznqSz3ve83jkkUcKW803Hvn6mNS2LGP99t69e9mzZ18GFinW
                xm2fzT29eUjGwMAAL/2xlzE4eCZ0tMoWS94s5nOf+zz9SxYVtoOxdvxDh47w6jtflXW390Ri+NwXPk9f
                /8JRY3bvvR/j1Xf+FAcPHsT7sMi2XXdDyQ7pi+ObjE2qFaYT7KF9/Yt46CtfZuHCRfzos55dsCvIYxZp
                a1pzrpO0PC4DAwNtY/Trv/lO3vkb78Bg+bmf+zkGBh7P3nF86lN/PGGQG625GG64flvGRBXB8s53/hq3
                /NjNpeMJn7/55ps4deoUv/vxT5CmHmuFt/zqW7nndz7G1q1bC8Zdycyrq51SgNzJkydnFGkXLVrEypUr
                zzlWbLyJe/9f3MeaVWuL3zYm4tI16/j6Nx9h3bp1Y4LK/X9xX9vzoaEh9uzZx43bXoRqQt4A+vnPf+6o
                xto5c8zDSD7/hc+x/bEB3vjGN5VKDQVvZf+ShWN3pMrY2ZMHDnHnna8u1G6RiJe/4uXcf/9ni8BlvGtb
                rDfffDN//MefwpiYPIxl23Uv4qGHHkSnQHXy3rNkyRJWrVoFBE/r4OAgV225eso3QlXlzJkz7Nu3b8zc
                RK+OP/jk73PD9TdSDgb+znf+lWuv/ZFJAqrNVO/W72/deg0HDx7kj/7ojxANoF325oNhy5YtDAw8jmpo
                oPbWN7+dj937UbZuvaZCnRmWsdZ14XjIjc3nasfotlBbwZgmM0aHnXCitdknor52KxCpquw7sJ+nPeWp
                nDhxKjtGz7959nMRUb773e/iNG0LfG5fSIYzZ87w0h+7tcRUwn6wZcsV3PWB97Xb6NruW2Ox+cotPPjQ
                l4pFmNurrn/hjfzKr/wKt9/x8q7jeeDAAV79qp8qQDN4bZX77rvvrMwrHGu56bOwbdt1fOnLD7ax54mp
                U75gqfV6vWvPy0WLFrH/4D5OnhzkKVddXfIsn7u6mgcqByeH4dOf/jNWrl7RMlMUGTTKbS/9iYy5tuyM
                OcCN7TwZ/fq2616YzdMQH+i951vf+hbf+ta3JrMaAHjrm9/Cx+79aBHuNG6bxTE6jFUydVI4Hs7VhlC+
                SBs3biSKolEGb++1ABowXLpmQ1c6L17Zd2jsoNM7bn9VG4g6l5R+w7P/4D6cc5w4cYKjR4/yV5//S1Q1
                87ZKpkrB059+TWZ0H2sBtPdPyL20n//C5+jr65vUOIkIX/6HB3nXu97N177yMJLFnX3847/Lxz/+8cJB
                kI//wYOHeNUrX0OrfLnnGc/YyrXPuOas6mYrKBnu/+yfc/p0vnFF3LjtRTz40JcmHSKUA3en+aDz+4sX
                LzpvZpfPpf7+/kyzCJ7VwGhHp9nlgdfGtIKxH/rKl9pY34c/+Ft88YtfbAO3XIXPPxPCjVrzqK9vES9/
                xe0T2mTz/q/f+c53+Na3vpOp7fDWN7+Ne+65h2u2/kgxj3KPdC5bn3kt99xzzxyyic8tGRoaYsGCBZNz
                PJSZwIYNG9rCL8bSh733CBHgSjYNzVTJDgZoOvMVtSPftP13AzC0vIRjlYfKJ/XH7/0E999/f7YgbDEh
                ix6fRHgUzRwaFuGmW/4d7/yNd4xJh0VN9v9lG1TrcX7873//+7JUteuL98WHcJfPfOYzrFqzktOnh3j1
                nT9V2PHAcu211/Kxez86qZ1eRHj961/Py269jdOnT5fYyg089JUvFyCQs1ZrGZUyVRwjEV7dKPvaWKy/
                k9lNxgyYF6zMN6f/8u738NWvfrXYdAI7bHmEwwYXTAF//dd/TV//wlHz8MCBAxg1YE3IctH2zTyw7Hat
                4K//9+fPKa86d4jkz9/ylrfx/33mf7J69eoxMLJqWzidMjw8TG9vL+K9VxEZt8x5ubxwp13kbBdnchcv
                TLRGo8GhQ4cYHh6esA5erjg7lp2rm1rdFbhKvT8nM/G6FY4825jltrqzgdhEx7Fbja2zBf52qksick7N
                mLs5DSb6/f3793P69OmOa+U7WDUTUv3GVVXzaspjOL3OJXG/s/BDOU5rKq5pJecmCxYsYN26dWOndeWB
                td0CXyeyo0/k/cOHD3Ps2LHzUpUn8j/j2WbG+91zmfBnezz6PTshJj3Z/M/OczjbueaPN23aRBRFYwY+
                T/YYz/Z9VWXv3r1FT9/2a2Xo/PrZYhLP9rmcWU52Hk9kDnYe/1Rd00o4r2sTlQe6m0PgfIMbVZUnn3yS
                kydPjiqJnb9fZhyVzKyUQTHvejSTsnPnTtI0rS5EJdMmBZMbKyOgk/53C1rN30vTlL179xYdjsb7nVy6
                ReJXMrNSLll+PlU7Jiv79+8vAK7yLlYy7SA3WXVEVdm1a1dbQOtEbCKVzC7ZuHHjjJcxz8sXlZ0i1Vyp
                ZMZAbjwv6Y4dO8ZMD+oeM1bJbJbcPDHTpgLvPQcPHqwuQCXTKnlNuWgs1ROC+z3fbSub2fyQ3CZaNk/M
                dEL59u3bq7lUybRLbgqLOlXM3bt3F56usVTVSuam5Newm/11pq7vzp07q+T1SmZE8jjeqGokfXGxuLIH
                daY3LudcV6dUJZVMh/T1hZqKBkK8WrWzzm/2Bi0b3GTj36ZSTa2kkpnYzNvUVgiRwVNdDaSS2XGx81ue
                wXChjqPRaLS9VjV3rmQmNvY2kKuY3Py92MuWLbugm5iIsGvXrlENiCqpZKo303yOledXNdMuAtqeV0i9
                UP9frgpSSSUzAXRLlixpBzkRmfGA0EpmhkFdiFStTnnyyScr73wlM6a5qGrbxl4wubzaayXzR3p7e7va
                KGZ60s1Eaf1KKhlrrpvOBXHs2LFqpObBhVbVCTfaOXXq1LSpqpVUMtPqao5l+XPTuTgm04e0ktkr1k6s
                hBOEjlhTDWb5jnq2moCVVJvGVEt5cxeRdpBbt24dCxcurEZpHiyISy+9dEZU1bP9/uDgYLVAZ2CcKxl7
                U2gDuTLNq2RuLoR8McyWa3muDZIqqeRcZNmyZaM2hVEhJEuXLq1Gag7vXrMtXCMvxVVJJTMJcmUZBXLd
                mjpXMrdkwYIFs1Z1qKSS6ZK8tNJZQa5SW+e+yjrWxa6kkvksGzZsmBjITSb0oJLZqbJWKVOVXCxzPbdD
                jxcVYroxAQj9MyuZm0yuUg8rudjm+lgsbkx1FWDNmjXVKM5RqWLTKrmYpK+vb1wP/rh6zdq1awtaWLGD
                uUPhK5Cr5GKa76tXrx73M+ZsCJnTwirWaW5c8Px6zSaVYrYdUyXzZ75v2rTprHPrrBbqbg2nK5mdUq7C
                cOTIkVlxTHncUqUJVDJV8zuXOI6Jouisc2tCbriz0cFKZp/MlkILl1xySQVwlUypppJLzuLOm8lBSODO
                E74rmTty+PDhWTM5K3W1kqmUbh3nzgvkVJUrrriiGtk5JsePH58VquJll11WsblKpozJLV26dFKb5oRA
                Lv/Byj439+TRRx+9YCwqn5S9vb0VyFUyJWKtnXTq6aRD4yv73NwSEeHxxx+/YP+dg91VV11VXYxKzns+
                nYtGOWmQ6+/vP68ii5XMvDjneOKJJ0YxrJkGu2reVHKu2kDeGP1c5JySHFevXk0cx9UVmEMTpdFosGvX
                rjbQmWnJtYDKCVHJZDbI89UERCtjSSVdds58ck03II31H52vT+ZYKm9uJblE1RBU0k2t7AYS+Wvd3vPe
                MzIygqoyMjJSfM45R6PROOv/5vXvVJV6vY61tu218zmHCvAu4vlcMbhKxgODoaEhRkZGOHPmDENDQ0X5
                Ju/9uOAxmSoo3T7b+Vr+P729vfT397N48eLqolVSAVwlZwe1NE05depUAWLjqajnUr5pOks+iQiLFy9m
                2bJlGGOK402ShCiKKotjjDMAACAASURBVOZWAVwFcPMNsMaT4eFhTp48OS29VWeD1Go1Vq1aVVSzPnjw
                IKdOnaJer9Pf31/1LKkArpK5rFZ2gtzx48c5evQo3vuLZ1JnYxLHMevWrSOKIprNJnv27ME5V4xPX18f
                y5Yto16vV3a6CuAqmQvM7fjx4xw7dgzvfVHvrwx+xpiLLstAVbnkkkuKiPhTp05x8ODBUYC4cOFCli9f
                XjVSrwCuktkijUaDgwcPjumpvJhKnotI4fwY6/16vd5WDvvEiRMcOnSo61gtW7aMZcuWzcpafJVUADcv
                GVrOQA4cOFAtuPMYz1qtxuWXX942vnv27CmqJudgmT/u6+tj1apVVbWdCuAqmapFWGYNuVpVsYmpHd8y
                0OUyODjIgQMHxvzeokWLKrCrAK6S812AZ86cYf/+/W2v5Ta0qtvW1I71okWLil4luSRJwo4dO8Z05Hjv
                Wbx4cdXMqQK4SiYq3nueeOIJ0jRtW0xlQLtYnQVTOvFLYJU/V1XWrVtXZFDk4pxj586dOOfGZc8rVqyo
                wlAqgKukmxw5coTjx49XoDULQE9E2Lx5c9fP7Ny5kzRNx83kiOOY9evXE0XRKKZYmRYqgJtXqs94E9p7
                z65du0iSpFI5Z9E1y9PRVq1a1Vbqqcz2tm/fXjghxrOLLl++vOhZUYFbBXDzFuDKj4eGhti7d2+lbs4B
                iaKITZs2dd2wvPds3759TJAsh6z09fW12fgqwKsAbt4B3ZEjR2ZNJ6xKxlZTuy2JzZs3F8yu87rmG1Y3
                e2k3wNy4ceOo36qkArg5K08++SQnT56cgcWpqDOoVawKThQPWM3eU0EFrAoeRQVEwaMYlLwGau4hVPHE
                anEZ0VABk2V8eeNBawgpBiExDusNqg4R21rsavDGI2qAuZ0utnr16nGrEx89epSjR49OmJ1dfvnlVfHY
                CuDmBkMrM4BcDhw4wODg4AwfjadcrDmAmMHjMAgi2bF+5ZuYh7+J2bEdeWwXiIC6Fsi5zIsrFlGHupT0
                WT/C0etfSOO657Jq2XKMiVB14XsSZyCaj4UpnqsqhgCuc13q9TqXXXbZuKpmOWB4IupoGegq1bUCuFmn
                enbKhQE2EDyCxaMB6CQGdZhH/pH4jz+N7HgCNYJXIRIHXgJvEyFFUXVExuBdAEVVBUlJEaIEvFXENcFb
                nKb8zTOu4J+W7GXVyg284KY72XL1NjxJC0Qx2S0FY8HP/amWq6BjeVnLMXIDAwMTAqt8CW7atKlidBXA
                zV6gO3LkCEePHh3F5GaOvCkYAbGY3/tDoj//IiKKiMVbxXiLGkgNRD5XOR1oqKOmONQLAoh3uExttc7h
                NMWrIKSQCMYCSQDSf91wKZ//kZUkQ/+EeOHfPP8nuOGlv4CIRUyCd1EAOcy8uuZXXnnlWa9znus6UWZm
                jCm6SFVMrgK4WTHRBwcH26pTTNt/YTAabGNlsAhGbYf5268QfeTjGGz4jAkFH42CFwL4AWJbXlvRjpLg
                Ptjm8Ip4BVU8DnUei6BZlZL8fcUFYHWe/3n9s3iivwc9842woF2TW+58B9c++0bwMSIu2AExGBoollA1
                34fjmIPreayOT52ANjAwMMqcMd6c6pZCVkkFcDOqkiZJws6dO2cwhs0EFVCjAAhGQBN67v49zN8+iDcW
                rMVSAjQTVConktngpGSbG60mGQWvrsUIfWZXcx4BvE8DsGkAP3U+2OhUMU55sr+f37vh36DNYUzjqxgX
                HBpXPuU53P4zH0A1wZs0czpkx+gtqgkidk7OiauuumpCDC1PvessYzXW7xpjWLBgAZdeeumE7XmVVAA3
                JSCXB3rOZIBuy+vpsGqJ3vFfkH/5AWIUTByOJQM0bwUrmeopGcsrLYzOjlXFosqfl4ANUcRpOF+vqPeI
                JqjPIvkTV6i3iEdS+MBtL6LpRtDmk9Tcdqx6mt6x/vJreM3PfyRjoL4AbYOd0/OhG5MbKwB4165dE2rE
                U55bZ/PgVlIB3JRIOaWqvJvOBNAJMakkxP/tj+j9iy/QjCwigsVAbDHGkIhijITgYTFgbGZfaxnIvYzB
                GJTAytQVACeqSOpJ1WMVvG+ppKjL7jPwcyl4h0cCyP3kDTSbKUmS0Ou+h9cTGDWopjztmTfz43e+HYcU
                YStzeiFljoeJtjpsNpvs2rVrVC5sJ7h1Vm3O/6NicRXATak0Gg127949rSBmCAvdk8eQeSBCJcX4CN35
                OL0//zZ8nuMYBdaGGLAGnwEbJoAdJUYn0lJXfWa/a3GoTCP1PrySAxjgnQvH4VuvawZy3vt2oHM+A0df
                AORdL3sxmjQZcQnaPM0i86+ot8GWR5OfftM9rLviadl5hv+0TnFW2lTouSDn4iAop3xNVAXt7e1l3bp1
                FchVADc1snPnTpIkGVN9mE5xYrAK8WveiBw+DnjUxlhrIDJgDGJtUD+NYGyMFkAnYE3wjMa28LJ27Xeq
                JbUqByxAnS9YmroUvM/YWgA5ScNz4x3eudbj7HOJtXz0x65jJFGS5hBJ4lhqvoPXFNSQ6AiXLFnLL/76
                nwRAVkElc2jMQa9rZ5zcRFTcEydOcPjw4QnPrfz99evXF811KhtdBXCTtq2UjcIXatKYg4eRn34DET24
                GKy1iInxBqyNMkeCARsFtTQyhfdUbAA5FdvG4II9zyJGC/ZgtGV7Ew0AhVfUpy2WloL6FHG+AD7NwExS
                j/qsyobz4B3iBfFNPvucZ/GD5YtIEkcjaZIkDZbbH6IM433wAKsqb3zzJ1m1blNQzTqcIHPJHjeZsknl
                uLluea3dPlsGQBFhy5Yt1YKtAG7iky1XHfL6X91UjukGPeMV/d3/Qf1/fTEE52Y2NrHhXm24iTWIiSB7
                TBQXoCc2CiqqMQiU1FXbdh6ZLpq/0HIueAWfojmg+TQkLbi0YHMkDvUhjES84l0Sjt15nAY2py7lt37i
                JoabnqTZJEkShpsNVvV8D3wTR4qkFlXH057577jt1b+GEiFzMLUrnxdXXHHFhCv+lu1sjz/++KQ6oOXf
                Xbt2LX19fdUirgBu/MkyPDzMvn37ZkT9DKlMYWGH1CaHaIQ3ntodP4scOYpag7VxAWbGWNQaiCxiIyRj
                bWLjQmXVKLA5ydVUEwXAy7ypTmljAmIIYSAi+NThNcW4zFuagRXOB3ucS5GsHpqmrgBA0mbI9HK+YHkh
                pKSBpjEPXnMVD1++mqTRpNlMaTRT0iRh5YLvQhFbF9hg3NvH2+/6XJH5kKLUVYqc2LkiW7ZsmdQmmIPV
                7t27GRkZaVNHJ7KhVmyuAriuk6psa8sr6c7If+cBtQWrCqpgfN3LggPBAiYKdrXIIMaiNkIigQzUctYm
                NjwPKqpibByALXNI5Opq2YuaL55cPQ0xbfnjFNRlqmcAM3UppA7vEiSzv2maoM5lIJeWmJ6H1BUBwd41
                +NDLb8GNBIdDDnQ+HWH1ggGcNjFOaBiHST1eHb/52w9iIgkFBMTPOZW1VquxcePGYJecZPWQEydO8OST
                T47Z73Y8kNuwYUPV+jDXhC56hBchTVMGBgZI03RGbW2iwXMqalAaKAZ7/a0YYzAmgBtZmpXY4CmVSAJz
                szEmshCFe4lraGyRKMbEvWithsYRElukJ0bqMdTrmFodqdUx9R6Ia+G+Xg/v9dSgHkE9wtRqSFSHWg2N
                YiSyEMfYqIaJa1gbQ+boEGtDdoS1GYuMEMk8uZnD15gasTWYOKImFhNJAC8bMZIuwkqEt0rkDWoj1Bo+
                8Gs3BJVYHEbcnJtbzWaTkZGRSc8pVWXJkiVs3LixYG8T/Z6q8sQTT7Bnz54K3SqAg8OHD7Njx462CTJz
                4kNpIfGgEbUX3oJoDz4yRU6pZKoouWpqI4hsAW5EFh+He4lrmFqM1GuYOM4AKwCa1AOoaT08lnod29uL
                ZOCWf0ZqGQjWY6QnhihC4ji8HtfwtfC/GtuMOcZIFNiiWIMRG5iiMfgoeHA1MqTGY+Ma1lo0Cmp3TWKs
                GI421iAmwkoA9Agl0hoiyl1v24aq4nVuBgLv2rVr0gCXfz5P15po3Fs5JnN4eJjHHnusrQF4BXAXmWzf
                vp0TJ04UE2imPaUiMUgKeKIXvAQVQSJFsKjYEOJhJQTrZjY4NYHBqY0CwMUxNoqQuBbU0Vocgn5rcQC8
                uIbUezMQi5CeGNPTE4CtFiH1GFOPMb0ZGNYDuIXfroX3auF3NWNgJo7A1ELoSRQXDg7JQlTEWNRkMXhR
                GNNILdbERFFEbAPQSaRYG2OtDcn7JkviNxaMQ6ghBu56242ImsB0ZW5NWxE55zxlEaFWq3UNO5koYA0M
                DDA4OHjRho5clACXJAmPPfZY2852IXY4r4pDiJ//EiJjgx0uC84lC+0wYjN7WuYhjS1EtmBxJs6ALooC
                mNUsxDW0JwOrnhqmbrPHPdBTQ/5/9t48zLKqPB99v7X2Gaq6qydoe2LuAQcQNQ5AEkCUIQY1ytDERAWj
                5uaJMmluDL9cM5gI3osiJnl++QUUNDERRGOcoHFCExE1kUERewK6m+quprvorqqu4Zy91/fdP7619nDO
                qeqq6qrqqu6z+jlPnzrD3vvsvda73296v/TRAVvpAKrVjOVVq0C5jKjakZqzqJRAZTVbU0Arex9gSRkZ
                ImVuJrIp4FmxXlFE01bKxsJa/yADYyJYqzl7Q/F8GPLiAGqfq+wSGZABPnr9eXDkPMglqXDAbPfvEhH6
                +/snBU55X96JJ55YmK/jZXQBYLdt29YGuCN5hInR29uLp59+uskkPSx3OEpQumg9hIyaYPk0Du/fksiA
                idM8N2vU52aiEFktgUrKsqhsQJE3MUtlNUPLFTVLy2VQpQyqVEGVKky1A6ZahlRLMNWKmrWVClApg8oV
                SMX748qeBZbKygBLygxhczl3PiWFjEkTjskaoBSBTAQxgsEF82BKRgEtIpQ9izNGKwBidGrZmSl5n50H
                QNLtOsP42+vPA5Co2MAcCKnmAwQ7duyY1FwLIFmpVFKp88nInddqtfSm3ga4I3Rs27YNzz//fGGChecT
                yT2aqlF5+7WwA/thqAwxPkpmjQcMA4IWyxvPmpQpGW+e2swsDQyqXNZHJfK+tRKk4oGtUxmcqVZBLR7o
                0IeplmGqFUhZAxNUjjRgEXlgK1m/T/W9kTV6fCYCfJADoQ6WBQDBwuLB889MP2utBSw8wClwR4gLroJ0
                ERvSbYgAJLjtI1d6JZX6nLqxDg8PN/W2nQhIAlolsXTp0nHP1cZ9EBE2bdo0rkL/NsDNgUnV6G+r1Wqj
                OlxnhMGxpLlc5psPgLdshiNvihlS8xTqZ4MhUFSCGAC+KoFM5J36Pl3ElFI/WMrayt4fVyrBlsup2UmV
                ClAtAdUqTIeartTZoY9qFaZSTSOtCN+JKmlwISr7wIKtaNTWRloiZhVwQ0pLqKAga0AlA2MIYgT7jj8O
                kVHTNPKmqjERIjIwljG/EmvuXg7gyGZ/i7UgGPQ/vxvf3XAHIJH2mhBAKJnVZV1hbvX09BQCAZOZ14sW
                LUK5XJ6UyRs+t23btlSY9UhndEckwDW2dpst1FyMBYlABgZR+sgt6eJ1BgX2ki5qYpDx6Rgm8sCikVQb
                ESSCZ3IRpKRsC6WyB6rIBw00Amo7OmCq8xB1doI6qjAd8xTsqlVQnr2VO/Q7lRKoGkzSCFKysFEZVCK/
                T/W9pewyBEEiBWIhgpCBswbbXrQuBTXrKzHSVBhrQKYMGyUpwBmKCmVJ2cOCDOOhDZ9FfXg/HEpelbgM
                I7O/6qHRFzfZeR3SRya14D0z7u3tnVSEtw1ws2gMDg5iy5Yts+YiGmEYA1TOvxSOtP6TghClMWnkEYbA
                xhfSeyajNaWkkUzjzVRvElKprHlqUckDUgm2UtUARAgulMve51YBdXSAOj1L6+iA6ejwAFhVU7ZSAZU7
                QCXvuyuVQKWK7q9U9uaphfH5asEHF3yIJmVxBGMFj158Hko+mJB/gCIYE6ESqjWM+h6NMWnAoRDhNrqo
                2QA33/hGCLnMxTAH5JZCi8GpsFCC/txESwbzZWH1eh1bt25tA9xcNE937dqF7u7uWUXDWSzKH/iIX6i+
                ThS2YLaEonjVc9P6UQm5ZTbyCbUGsBbG+mBE8H35ZFwqlZV1VUvqk6tWNFLaUYXpqAIdFX10VkGdVVC1
                4j/TmUVSq1YjqGVN/EWUpYQgzYEzWZ6eVUCG8aBHFgYGT7/6VWp2U5G9ERFspOVhSzqfTsGeQvQ4Z66G
                17TUrANWAAHhrr/7I82RM5xKLc32ublz585D3kY4LytXrpwQuDVWRYgInHPYtGlTG+DmCrAREbZt23ZY
                ulo1AVq+16gAMrQf8oMfqFklmoDJxJniLnw5VfhOrrwKnuERWc2LiyzgKxrI16Yab04q2JVAFWVlplrR
                SGm1AqlWEHV2wnR0wFQ7IR2dQEcV1FFW0Cv7iodSGVIuZ4ytrGVfFJVgbEX9hZHXovNgBCMa8KCSms+G
                sPWcV6ES+eCJBSIyKYAbKqMcJYiMg3jwKwQayPdrSEHOgJCooCYE27c+hv7eXSDhOSN3fqjBrDygzZ8/
                f0IR1bFu9EdqhPWIY3AhmDAbhiUARrtaJcagdO7vwDhJ/XEpeIXcNz+BxZujBnmZI82RQzBZfcQVJasm
                YmSzR0mjqCaKvD9Ok3tR6YCtalCBOubBdHbCdlQU7OZ1+gir+vCkXIatlIByBBt5H5/Pv9NeMSWVSbeZ
                7pyBpnhE0CbQD133Hg9aFtb/z1Zy/jeHJdWnYKgEa5p9kOozipoYbvpgwSf+5lKQmLQh9VwYU1nvPFr7
                wsmMxghrPuI7V8FvTgNcOPGBcuelZmaD303Ed4gXB/Ozn3ogswAxGMF/lLsEOcYWgC9EE1PTLg8onvGI
                LeUK8UvKvkqaNkIlzYVDpQLbUcoip/PmAfOqMB3K5qTS4QMUFfXh+aResiWILStTCPWwqUxTiPhqQm/I
                i3PGYOe5Z6o/z5Qzv5oxsBTBQAAqYbHZAZgOkCmrpLpPixFjs3Pgm9OEcxXYLsSnkojFIz/9up7XOTL2
                7ds3pdubyl4NzzzzDA4cOJDdbHMmcRvgDpPjNuT3OOcOa2VC07EJYL0Eeek9H1RBcqOmV77JSn7qiO9X
                CqOqH0Fe3BloPSqZtNJBfJUALEEin1RrjUY8rc9XK0fgsibvoqPT++A6YTorsJ2doHn6mi2XtTa17Avs
                czWv5IviTTCHA3v0NachABIAd2TFMdh1ztmAEVgQrDGIIL5HqwJi1TwHY2MYX0hvqeifE9PM5orMzmig
                BoSvff6jKsg5R8ahRlMbx7Jly6YOEIxBd3c3+vv7jwh1YDPXwQ0ANm7c2NJHcdgZHAFMBuWvPaARUJis
                mYvX/hGCAkZQ3SUpONYDeFhQoUNWqBZgSzDGm6kWKbsKKiMoafmUlK2vZtCUEXR2eHDrgFSV4aFcSvPo
                qGRgoshrz5VgDDw4K1M0YlKlYM19A1gIXK1g+x+/WwMKVNW4AwTszWyyQIX2oYN6fblW1kOCiFIWB5iW
                IBeusRZzGYAECTn81zfvyN0wZre0Uv5GPF0sbjLrIM/Yenp6sH///rYP7nCPTZs2zdq7DENgxUL++mNB
                NWjMSSgiaYABKJraYlTfNpiuhYUf/vcmpFCQL4pAtgJT0nw2lMu+YqEMmt+pfjefJmKqGnm1UTmXmhKq
                FBSAlTUGP6HAwAtVGp1K3FnGzg/fAEtGWxYKA8aBxYJ8lNS6fSjJ7oKJHSLGrXIBm/1vegycsnQGcQkP
                bLgja6voAxlz4eY8Vdtavnx501w61LFnzx7s3r27sK255oszcx3cZvOwQuD/ecTLd5uDTnQiU5z4aeDB
                pm3/8oudCWn2V9oKMLC+UA9Kwby0PnfN+jrUKtCpKSNUKquopo28OrCXZfJmcro9X04WcvU0JaQMwxbS
                UUHvX3zAd+3SJGUYC7ACmLUVmOR5GO7JfI/Eo4Ja4bfCtsiJIxhLIEQACSxbPP7w172IqDsq5YHK5fKU
                BgSCUEBeDWWumaxmLoNbPp9nto7o3deAckDUZMbm747jsKsyCetcyU+uSJ/EtIw6poDni/RtqG6ILMRK
                2olLAGWCDRM6TailzL9ofJcut+4EDP7VjYBE/gOMCApMYkogqiMeeRo22YmIjFankibzGoo8gNmmjl/Z
                vlsHEASkkWoiAA5f/vxH9XxSCUfjWLFiRbGO91BdLL7f7cDAwKQlnw77+pvLzC3vM5gtPjdyArG5/Dff
                dLkRJEzutbQsS+y47jn6ndB5KteFvmDqhhaA2sjZsMA4Ta0ACziug9hAHKtkOQs4fM9xuj0WAVh9f46A
                CAQRwMGAjCB6+xWIV68GDQ3BkEvNxAQEUAIjQNy/GVE8iLrJAgQC4yMnLmVy+tud98P53DZifQ6b+i21
                hY4+XDhmYwEG+vc9h4VLlqHY8XX2jOmcr401qlNpSofASKMp3GZwUzAh8mPjxo2HRfljXCeT1ZwzKOlx
                /8mN2tAFgM3VShoZ6/e69NJkhI5TwMortOYJn4ioeq5/XYHMwaMRIALnYrikDqnVIcMj4MER8EgNXIvB
                zgFJnLYLtKxAR1CTzzpBxJqo6lhgOiJ03fYxmNNepH2emb0oJXxVAQNMGNj3ExBiiNXfZa0tREKbqxZG
                Fx/NbgY+ONPi/Ttu+6Pm9JvZNEeMmTaAIyJVTJ4mi2ZgYGDKI8BHPYPLT4bNmzcXKPhsM00ZorULEiNy
                FvjOQ0igSa0Mje4hRAg9u2r6HZR7TbRhS2BkKXvJgVgAOwMGSQyIhbgYxCXtiuUSkEvA9TosEdgQwAKT
                lMGc6DEkMaReBxIHimNtl8is7DBh9fWJQJBARNC1/s2wr/o11IaH1N8mDkQWThhOEkDK4Pp+9Pc+jhIM
                Eqgku7WMJHEFP1rIdRstWpoPqDCPrgSjsuYOfc/vAkMwWz1F0z1nFy9ejD179kwLiIoIdu3aBWBqc++O
                aoALHYk2b948J/JybFDCeO5ZgEiZm5gsCNDKZPFmIYw+J8l8diIC66OVxjM4A6Qt/Yiddr1yvvsVMywL
                2DmY2AGRg6vHIEOQkGOWMCSqqzmZAOxqQK0OqcXgWgyJ66AkBrODEQfDDgkD5VPWofq7b0EE7Vovjj1J
                FDAcmAFhi/79GzG8bzsMnKbHREDkGHWnDIY5BA64wMwamVojKISbW5JwwfTPf88xY/eOjVi2at2smyth
                /jZ2o5/KsWTJEuzdu3fayIaIoKenB5VKZU507jKzbQI03uGMMdiyZUtT2cisDCx4dkRIYG75R/VtIetr
                KeosSvt9KmEzBeAOZieJAhiIwQwQO40OIgM2RRQBse9bmjhQ7MCJA+IYEsdAvQ4Tx8CIA4+MgIdHIMPD
                SAYHIYODcCMHgJEaeKQOVxuBqSXazLlWh6k7uLiO6ITjsfhP/hjzf/ct/o5o4JwDcwJJYiTs0tyuvd3/
                g9rgc9q60KebWDaasJwGQAig5oqTwOpSh2YLFh/mRKhqCJ8NgGdI8JV//siUOdqnwxpZtGjRjFk90+U/
                3LZtG+I4bjO4Q70w27Ztm7U+t5aTgFhP64MPAmiI/rEUIqXK3lid6pwFC4TVf2W8iUqCLEHYN2IWyzAu
                AVyk5mToQ+oSNTljTaBln+JhRDS2mbi0QJ+9qcsu1ibOSQwX10CxAlbHa16G6LSXpKZ0fjjn4Bwhlhhg
                gkvq2LX9JwASRATUTQXAcGFhGGPgPIsjHh3A8n8r4/NBCGkxX3JRdGUYBrt2bZrVZmpXV9e0AtBM3fyf
                eeYZrF69WoNGs9S6mlUA13iSdu3alarwhpM4u8GNYFgjok4i2DE0ytTkJBh2muUffps4ENvU/2acgGyI
                hioIgnN/Jw5kaypVZA1cYmFMqIAAyBAMGOwY5CJIyQGmDvb1nvAmLmKBS+ooLX8BOs58ObhUUT+fIocP
                ftgU3JIkURaXOAwN9qJnxxMwpFUXRBZGEh8N1bIx5+KWfqixFG6JCA6tFq0PYjR+3uu3MGvxvRxljaRm
                GmBEBFu2bMG6detmreto1jK4AwcOpBGb2Z7rFkbJCZwF6Ns/hIYuRzeT0m7ylPncSByEI1DkUzTgwGIA
                5xA5AzgGbAJOCNYakIkBa8BJ9pziIJTpAIpVWIjLIK4DzkHiRHuWWlJmKIKOU9bAvuI0CODDJAq42fVI
                Cmw0SRLEPhixZ/fTGOp7Lk1dCYm5DlK4dkQWzPGEukGF+0Ora9/yNY4AJBBiPPTgF3DWa6+cdXNkJvxW
                M82mNm3ahLVr17YZ3EQu0M6dO+dc1jR7H5r5whe0TrIR0AjqeyLyibqURVPDg9R5T0YgDrBGy5HUdE1g
                2YJFTUjDBsQJyBlIYiAmUfZGVq1KcQAlEMQwSQVcskC1A9GLX4iOdau1T4M/ck2QJVX6APmcM0qnSbgU
                9SRGHNeQOMGOpx9Dvdaf86kZiJC298tHi/0+gp+sGETw5ylX6SG+wUw+Ny5706TfI8p0fIUBkAMEILZ4
                7EdfxpnnXa5KJzJ7cuKmM48sr/wx0yC3efPmVGW4DXAHuUCzub50TIAzAOBA//0EEhJE0lxriqBc61mb
                iKhpF9I9HKmfTgRWHJwIbGwhhmFNBDgGGasMLTZILMFQCREEEiVIEkJJaiifvAqlU04BnXQS7PErm/xR
                wUcVUmdFEhBsimni02mbfG9xgjh2ePaZRwAZ8bl5TiPFrKajBkEyYM5fW24IEo2l/tLS90qcnkPmhvQa
                8bcZEjzb/XRa4na0MLhWVSAzOXbt2oUVK1Yc3lacs91EzSuDzDkfiABsLACHiAmtEIIkLGYfMDCkpmek
                gQYmVgc8OzARSNQPFYlDnWNEiWjKhwXM4mUon/NKlE4/HfNOf7GvMhAIcSrHlM+hy2f3h1fTElZjPKP0
                qXritMA+Bzb1eoJ6vY4dT/8cRoCEi6kcBgKXBy/vK8s7v5uBjDPgym2rkYEUgwwGQKLBhwK4BbBmx2N8
                AAAAIABJREFUNbZFQJg9Sb+l0pFdQjYwMIAFCxZg3rx5bQbXasz1Lj8RCLE4WBg4EoxLgpFFs/zZSyWB
                YdhAWJ/DOVhOsP9Vp2Pk1b8GOe0l6KiUUa7MQ6VsUOmoQqolJCM12ErFm5k5cMuZmpLKpztYMFhiGI4B
                GYYIQ7gOU3oBYDsLoCAiiOMYST1B97ZfgsQhcbHPhVNzmaUOZgZL0oKZcVqBkQewVv60RgAci+ERkQZI
                0KrfgPE1rDxrInwrVqzAkT66u7tnlT9u1gBcb2/vnG9Im3i24MTCUAznF54VaBlVJBCIBgwsh6pLwFkQ
                Oc2Jc4xn167As2e9CvHJJ8F2dKCj0olKRxnVcgXleh3WqFIHmRKonvV8AIByuQoyDLghkBuCSE3zz0zJ
                SxJZhIABiQASK/65OqhjJYCy95d5oU3nEMcx6jVG9/YnAI615Ms5OPYgBwfnpJCjmH+kliaxT3gWQNQs
                Tj+XKzMruixcwcwUX1urjJFS71zR7NX3e559EstWrTtsEfhGYK1Wqy1fn459Hs7fO5v8cbMC4OI4ThvR
                zuXBcCj99FGQdRBRhzu8I1wMq3wStC+BZcCQA8HiybUr8PirX4H42CUolUqodFTRWS6h5IBykiA2sSrr
                kq8+oE6AhmBNFQuq/VhAw6hwDBmJgFoJzpRgyQJUAlEZQhbCgCHSgllf76rmnebOUccJOdam/ydJgiRR
                s3TXzo1wPAIX15SxeZDLg1MGaElDQrYyOPbVFwEU00VI2d/S5KPLPIUT9e1s3fRzLFu1zn/PoFVqyXS7
                XMJYuHDhjMh/H86Mg/zv2rJly5T2i5jTAPf0008fEfRcyAL//RjgBBYWlhgJexFL0TwtA0JvtYpvnfZi
                bDtpOWy5U03NSglll6BEBogdRiICJQlsXEI9qmNZh+D4pQlWLfP+NfIMjiwEZYAib+ICVhKwlxBShqYF
                9LAR4ASAg8CBEEGQAOXj0qhvYEj1uqaCJEmC/fueQzIyBPaszTlG4ispHMdwHAPsGZ2DN1W10gEe0DJf
                nmtiYvlIa+a7a2h6koukjleWvj7Uk1Y0MLvDajZNpaz4WGM2FMNrAIjR09Nz2NVHDjvAbdmy5YjxP1hJ
                YAaGALJgJEgMwYpBDEEclXDbGSfjuUVLUIlKqFQJ5BjVpA5XqoJjhrMJ6qaErsoIXvPCDrxi3RCY6l6i
                W8UliSM4q7lmWhmhQpRgByIDIa3/JI68pJJmvBIYInGaZmGIwMKg6vGeYSVwTtIEXhcniF2Cem0Yg/u7
                EcexVxJJECcx2NWROP2sOHX4wzHE1VK2JiL6mq+hDc8b2VoGeDmZJuZR/XUyRiQ2/9mntjyO1/rkaDoM
                Cr+BTeXFIRp9hVM99u3bd9h9juE69PX1YfHixYe1ZjWa6R/eqPseFsJcb24RTD7e9JSvSrCoJMCXXtCF
                rx53LEqlEmypA6UkQclYxK6KUuKQWIdjOwWX/LrFK19UApDAGAvQCARlHx5Q/5mIg5BKk5DRdjZEoU8o
                tLqBEhWeRKxKHKIF+CrPphUODgLrgMSsQlIbAjmLRBiQGEnC3u+mdah7e570PjZC4rx5migYOh9gSJIE
                4mIk4pmbuJS5Jd7PhpzZGgAQ3ABW3FDlwE4jzQ3MLfU55syxVmxOWzSyNqI+DLlw4ZhOOOGEJhNuuuZ7
                rVYr5MIdThYHaDnX4ax0iA7HjyYixHFcoNNzpVphrOFAMKSBkk8tXYj/XNABW7YoOdFmMJyAWRBzGee8
                1OC9l3WhhBLqJkIEA0bsmx3nFwjBEKd+KFACobJPhmWNFsL5vLUYRtQ0VWHdunbiQpZG4QBEEAzJYtTr
                MZxwKnDJzJ7F1eFcjNrgAa1Y8MEEZWse1Fzdg10MlgQuSSDOgZ0HNo7BifMyRklu+w2+NriWDK0VW2t8
                nZkbUkSKY/PmxxTUmDTIchg6bxFRKiU+U4t8tqylALRbt27FmjVrDguROWwm6tNPP33EMLfMRCXsMRGu
                Om4RKka8rJBONuccfuvsDnzg918AWAuHsvfNGVhhCCWwKGkBvFbXa1MXJApJ4iAgEJdgiCHkPLvT2gMD
                qzl1Ih5qKXVrGcpKsCIB2FnsH4ogMggSoyVhiQOD4JyyOGbGvt4tEKcCAeLYp4MkKXPjJEbi6uA48SZu
                AscJmOsqpcRJCmpOnOankdbFikvSgARAmZmLZsWYPAg2gtSYyjIU+4Umhw3cVq5cOWNgs2fPnnH5Jmea
                wQKaJXHMMcdMq3k+awDuqaeeamJ1R0KTECHGzV0dYBcjpjLICRbOF/zLTSux4ljVAGMCjBgYqsNSBQwG
                pOybIedqNyH+n5dEIq00EGgAwYLVpLMWEICReLl0lWCCiDZQFgYjBiSCMREEwJa982DMoA+mJhCxEFE9
                N+dqcIlFvb4fcS0GmSwCGh4urnt/XAyOEw+KAdw4NV9DXlwAofBaCC7odaeCSrEGJ3y0tQVrCwm8oZxL
                WMYAPJPKnIebxEwv8M7OzhlbzM8///y0+/gmOoKeY29vLxYvXjytisazwgc3ODiIOI5nhZ9g6gEOgDg4
                JiypOHz/n0+BgYWhki40MVpySg4k1mfiO4DqGoEFg8R5TTRR/5khQBw0bVi/Z0Ihv4GvOPBUjUh14ggA
                YtWUg9UEX4kBF6OnrwO1wTgNQITzryq+hJgd4Go48PxTEGJwnIFPYFnMDE7qSEQTfdPABGeR0yxXzkES
                NW1ZklQoU0TgOE6328jEHNwoDI2aBEHzn1O2pgtr5XEvUv9kOOczPB9OPPHEGVvMqaTUNPv4JjryunxB
                eeSIYnCNP6a7u/uIMksLJokYdM7rwr/+1XK88qULIMbAOAOHukY1UfaNG0Jxuk0ZCbFnbcZpuRRKCOVc
                bHxqiDgI1SESKYhJCYJYKx7gzVBSRz9RSdVJxGrtqpcG376bAQwiFL8XzELHKjvuBPX6kPrvxGkJWvCf
                Qc1TONa0ERfDceLTR9TUTZJ6FkhwDGZXYGmhK1g+2pr3q4m4lME1mqyNFRH535AHPCJCx7zOw9YAWkTS
                6OFMLOht27bNiTXS3d2NVatWHTkMLn9ht27dOus6YU01wN31oQEIl7QxCxhCBJA2oSHDINFenmn/TjIe
                9KymdJDASHju/Ocp1TrTHvfBdFVfm/iaCACpD0+lz62acZJAmPD0cwa14bqarN58awIPByTxANg5SJKk
                /q98ki5zAvG5cC7nZwvglvjvOU4y1ufZGydxGqRojKoKmsEub+IWTNuGXLlWo9K5yMs0MWiGyu7D3A5J
                rjM11+eCui4ADA4OpmbrEWOiBtM03GnngnjlZH1wJIMgVFJ/mgYfGGKsLwI3GgkVUkZHntHBR0TZeHPK
                AKQOdmLt1k4giAlVCAQt9oI3Q+NUHRjwfjlfKaFAx/jV0wSgBkuRl1GKWpRVMXikG+xq2c0ox8BSMGIH
                Jz6QkDgfeIhTlsexj6rmwC34wELSrgJq0sTO8v63VhL1rSOrarbnTbUVx63zQQyGkJ0RNheiptbaJh/z
                VANd2Ob27dvn1DoJpuqcB7j8Rd25c2eTGXEkjmGzFlXeCgPVfFM2RWCBgo83UY2UFIAYIKNqwKm+BxFU
                LSNrekzex2ck4yKGrKqCCNJOoeLlhHyVGIQSCEUYGhIMD2syCVGsir+S1f5ykoEO1w7AokW6BorBBhEf
                feUkq00VhiQe2NgVTFf2vRuybSQ5puYylubbEAZppBTAgqx7Q8lVvhQrbyGcsvaV2saR7YwWaZ144olj
                WjJTbR2NjIzMHRLg59TOnTuxcuXKaWe50wpw+WS/I9UsbRw1sxbz3FYImTSPjVPqEFI3NPXCgFJZbSOq
                0QYPegzAmKDappEnVgFvXfNS9iBHcOK8CWthxMJRnLUoFN3Hw48nqNVyxeyGmgHMKbMsuXoKCAHY8p9z
                ToMDAdwy/xwjSRLAuSyVxOfZFUAwdOTyXcDypilray4fUeWW+W+tWFyr9JHV604HoPp6MyVhfswxx8zo
                PJ9Layt/nAMDAzNSmzvtJmq9Xk+jpkf6EBgMl14IxN/wcj2Z+Qmf4kFCAEW+dCrHtAy0HEvIN4/2Dn4A
                LAqSBpGPuqpeHAx8Eb2q/AaWR2Iyz5zTHTyzc1A7XHngDYs96NMxRFsAcgKycfoeo6FmlLOC+tT3JokP
                JjAkpIhIDOd82oeXVkr9cJ69ZdsKAYkExALHjcX3bkxJpcbXMz9dBNUoloLe3HTe0EOu10yMOI5Rr9eL
                jXlms4+6IcqbVx2ZLpCedoB75pln0h90JJumys8Yg2YNtD0Lgz3Q6D/nY6Yln3SrAGWEICGyKpwzLbUr
                VtpghbX8S4w2pWEkmkYCzjpzheCD98NZWAglMGwxXBvSZjDIusOTFH1ajhwsjyDmYQCmAIB5oMlHPwO4
                aYUCF1gaiwYV0py58L18uolkJitJUWmkqSDfs8lmvxw3sYQA2pBEAd9M//xbvXr1jM63p59+ek4F7RpL
                NQGtnV28ePHcNFFDF+yjxTwlMYiQAFBlXt/dACJqgsKqmWnE5tJFvK9OBGIYRoyXE3eayGvgKxo8A+QI
                YpymynFos6pNXYQYYBV6ZHGqGUeEkZEEteE6yJpUiLwVwDEEJRpEOUqQlxcKwaHUL+bZGgCwDxJkib11
                nzCcFeEHUzUPbnmfnjI3HkVPLifFxAxBq2ADpS0tjBCY9Dymous+N266WAkz45hjjpmRyGCIQM62qoWJ
                MLg8FuzZsweLFy8e1ZSd1QA3MDBw1LC3wCSYFJC0REqbExMAZwAr4s1W68UdBWI0Iz843sQgaxqTsjny
                lQkB1SIE+XGB9VFU1naD2rBAC/6dmi07e0XbLxJgvZBlaFLd6M8ypRoSJE0goiafyxRBvPpHWt3gk3aZ
                fUJwLpiQsbfEV0wEM1a356DoFCKwTaZpvmcsWjX+DrW6Cm4igrPPv2JGF+6xxx47IwwogGi+amHOEoJc
                E+kTTjhhzBaSsw7gQjf6o4G5ZVeMQRJh0JyJefww4P1s5KOfWhwPwKd8qC9No6iabW9Sv5cFKzMJTMtY
                EJN+xtenEqnPSzFLKx0A3+c07UZlsW3HEEZGRooOXUMF8zOwA8vDqNhYVTxGkSMKwNZYSJ+vP80DmziG
                cAJhVnDjJGN0oc60ofC+KQEYkhbWty7C198bnp99wdtn7LLPVMpDuHZztSlTK8AWEdTrmhgeUmtmrYka
                JmeSJIVFcaTmvTXxNw9QvZU3Yd7QTwERGBN8cSq9bciAxWXJvMZ3CzQEksR/BmnqR2pOsgc5ibWsS+AD
                GcbrvDk1Tb0vDiFCK4x6vY5abRhEtuXCyANFxSRw9Rh5Fd3sWkI12+AaZI8a8uQkKfwtXPS55fXhfE5I
                FnH1TC71O4YoLmfsrZm56XOTZgYyliw5DjOh4BtSHWZqbN++/ciRF8vlCG7dunVabhTRVB+wiOCpp54q
                sIWjwzwFSkJwwojNsYAwEkuwbJS5kfXRUl8rSsGU9CYjO2V2QXUDJUBCBn6Urmci68UtEfq4q11LWScq
                Cd2w2EJMHexqGKnX0mY0+cWRvxExHKpUQ2zrTV2uGoFQTccisAlcU56c1rhmuW5Zwb2kwNcoghkaxTAy
                v1tjcCEFyQJSG82MydWkTufo6OiY1g5SjU75oSFl4kcKYWj8DUNDQ+js7JzdQYaBgYGjyyzNjQSUJuyy
                6UCUDHtAIxhnfBVC5EGs5P82vg+q1Rw4eP8bHEAlL2LpU0BCRFUiCIkv47I+KBHMUoJhhiMDiwQkFmtW
                MuojMYiSln0NMiUPQhzVVILcm8iFCemyfDjm5gqEvLkamJ20ZG4J0PC9PFCmAY2c360lwDYsFPaR6Dde
                8Sc+SXr6mIeI4LjjjptRp3x3d3fh+h1pxGHHjh049dRTZ3eQoaenB0frUPUOjT4+V3k7lo38o7ImDuVZ
                xpdgqc2phmswVzXB1xnA+uoE8QlyxCXPSBQEhcQHFEzBpA1xW20mrQEPYsbaEzoxUvOlXC2YdQYQgv0D
                Dl1VLW9qjLI2Ps+ztnyhPFi0llXU3xY+m+W/ZYGFPHPLV0ek+wKPqvkWIpjhf18zgrNf9/tpY53pADYR
                SVUxZmps2rRpTPZzRKwfIvT29mLJkiWzk8HlO2MdPZHTnEfIwEtjMwZLZ8AMseaz+ZaAGldQ00nrMQkW
                xrdE1dQRw4AY0ry2kH3v/W4k2sAmVfNF5Jmb+MWtDJDJAWLBQrBMEOtQrw033RWJmqsZ4hrBLYm1j0HD
                NUzz3lqwqda+uOLf5BvVqHnbwldX0ImTgzyam9BozW8JLEkqAzodJlUopJ8pS2Xz5s0tWd2RuL7ywpiz
                DuD27t171JqnAHLF3BpsqEeLYN0+kJQ0NwsAc6J+NPGNmMnBCDRdhCNNmBMfLSXy0BX5qgYD/ZaqlJAk
                qjGHbL+qI6ey5cYrBoMFZ6wu4cdPHgCRwKDka8OkoQeCwEHALoZws/+0oKzLBEHc1FshrwqStQp0HtA0
                gEBELVRCOJVsyte+Npul7H2UzSyGAFz69g+rwADRtAhcrly5ckby3YKZtm3btpa9To9k8rBr164pa5I9
                ZVeqp6en4PxscgAfhWNXx5/6mtB6OikNgqoG+0XtW/ixQBArW/MNYJjr6q9DotuRGCx1lTEPOWPhO3Ae
                KBwgiUYnyQGUgAn4wB+cAB52SOoO8cgwkuEEtVoN9XrdR1lrGK7r38Mjqu+WuHraFjD0YHAuVkVfV9Oe
                C76KIX1wTtKcsxrUoPQbhC4bVYLzZWC+cKxF5yxu2WQm669K+LVf/x2NNE8BAOTZEhFhyZIl0xpUaNz3
                7t270yYyR4s1JCJp/myjS+SwMri+vr6Cf+doZnJhJLQElgFIWQMKRgMImmPrvBOc1C9lvOwRK/ugkLCL
                BBCk/joCBfFeH2UNJqkLWcLqm/NacgJAFZaqsJU6Bof8jcfU4NvMZ4yBCc4keOpZxprjXSERuHHChXwz
                BeiQxEs5czMGMRWCCQrI2d+N6SDZ5wTCKAQX1M8mo5qNRIST1r0ChMSnyhz6DTZf3zlv3rwZSeYN++3r
                60N/f/9R5+oJ5zuwuEPFEZIpOHs9PT1NAHe0+d9a3o1gsKD+XRxbuwugim91ZwFfD8owvnGz5rMRWRBK
                6pPzCrww3sw0XlUEFky+LyoAspFPlPW9N4P5JEH73pu6xOgfZFx23WMAIhjJZMH1eoXrpjpvZ70kSeU3
                mgAOPIafzKVJwgpgBoI4/VtZJhXqWoME0mhpII1+t9FaBd78v3+m7RWnCOACuFQqlVQCaTpz0MK2BwYG
                0jLHo8rFkwviGGOwZs2aQ661nRIGl08NaQNb/ooxBsrn4djhz3pzkXxFUQQw+STgwMaCT64GES9aCfEJ
                vhqEEHGa8saqxstEAIf6Ludz5MJkCY0L/FIXoKtqcMKyCp7aPgymxDOw4IzXv9lp6cSzvQ4rFqrUkL+w
                o8gWZVHQAGx5sUqWWg6wQkQ1pxIsymbDdvMVDNm+XEtQs4jgUIcVg0XHrsoUUqYowZeZUa1WC/pu02mZ
                EBH6+/uxe/fuo5MQNKTA7N69G8uWLTu8DK6np6fQ37Q98ifXQIixuPYdLK593i8+6wMIKlap1QcoMjlo
                UEIrD6wGElLT3wOkZ3MAlNGFhSe+/jUk+3pmFxz7xhic9fb/8eanSZ3xgcEROyQkMI7w66/QTlsW4q1Z
                U+yHwK5lr1JBa8DK15YWe6NyE2sr9llwLcvGrK89JY5w8z/+FG6KsSewiJka/f39R3WaVSvAO9S8uEMO
                MhzNib0HP7teEqbyWpX9NioJZCUEGnTRh8CDBhIYghiG9XXmBCyJpoD47u8Qp9UM0N4HJKrGQey7cvn3
                VeAt9n487aSVMONzf/0icJwgjmPEcS33/zCSJEFSY9TdCHbuVsaVCEMSgSRx4ZHWnKYBhjhN/WhU7i2o
                97I2t2FxBbmkxmYyIWjSCtyUlDrAGXQtXYbEJFPKIiqVyoyC28DAAHp6elJgb6+pLNByKH7IQwK43t7e
                psnZHtlwzGmFwa75H4KNGYlNvO8rNI0RfyEU2BBAjtSkM9AHSaxpGdBEWZAXmpTYVwzUNfUCHuwk8Q/f
                rk9UycPICFafWMZpazuQ1EZQryvQJQkjjh1qSYzExYhjwWObBeJqXoI8KYBWE6hJvSkqms9tCykgaWoK
                S0ufW2B6+UqJRrM4BSNSBvehj2yA4WhKFlToqdBKdny6WEpfX1/qcwt9Q9vrKQu2HArgm4lejPxk6+3t
                TSdF+47TisCJ+tUADEUvAqMTNgnpDqHRjPMS3QxVTorT4vnwevicASv7Q2BpnCb9gliZmmd2aeoIkgzs
                nAMxgVyMO/5yHcqdBEkCe6shSdg/EiRJAnZ1PPKklls5jpEIUrB0kAaFXjSBW1AWEZeTKPfNnVvnuKFJ
                vTc/76wgJ/FuABhc9Mb3QMhN6l7dOGdFBOVyGSeddNKMzZHnnnsOzz33XMvfe9SvH5921ugCm8j5mbQP
                bnBwMK2NOxKbOE/XOLnvnZpja0o+R85m95o0wpr55RBKu5Cl33BQ2yULSAQykvre9PWGxZ57rzCBBDj1
                LT9WefTEpdHbLHqpvrRzXmFQtrltUgKwBcM1TTj9boPqLmet/poBLWNv+TaGjdsVL+pJrg4EVRSJ8ZF/
                ejT1dabCBRMEuTCHu7q6sHz58hljbrt37277r6fZF2cmszMRQXd3d4HWt8FtPJybsK/yZo2oou5PaI6x
                NPjlimwuQWgSbTzEkTj/GZeyOoLKD8FLgIO58F7hQYKN//4quHoNiWTMzeW61Usi+M5PBkFpN/qasrsC
                S/OPJNbGNZ6x5btgBSWR1iapFFIEWt2lQ1ADZJGQJkV/+NYfwsCCJJoUuGXASnjBC14wY+AGqOxRG9zG
                fxNqTHgeL96YyeysscFFu2phnD45K9hXvcwvRvWTwYMNRP1vxOqXC6VLxlcoBJ8dJPHvqU8NlKRARxJr
                ZBPeXyeJB7fES6Bz4RE6zj/8hZdD4nrBt8asjZ1rLgFzCf/95AgS1LxpbbzPLWnul5p7ng8ijCZk2bKp
                c4vEYvL+NjGESAhnve4qVKvz9RwYd0iL54QTTsCCBQsmvHgmy0a2bt2KWq3WxCDbY/Sxbdu2SfniJhVk
                CKJ7o/ky2qP1sAKAGFsW/YtPsYg1adYlvqjeaWvAEAn1jE0BrBHoMh9dFm10SCRJPx8AL/jwAvCFB4mD
                QYxFXQ7f/NRpcB7g4PwxOWj+GzN27QP6+2M4aK+FoPMW2FqoIQ3ABpKWYJYHrfS4xI3xmfzQmtxo3nxc
                cvkNYJ/8PCGfTM5nTERYt24dyuXyjFXhbN682SdA503vtgU00ZvEeK/RpAAujuP2WZ4UW5A0fePZ+TcD
                bEFSgyGG8VFDytWqKohJS6DL6k7zQMcp4wv9DwRxGoXNgE8fjmrKAFmw5lTgm3//IhhhJFL3+sPF8fDj
                Je15ygnIcTNTywUPgjlajKjmI6uuKTUkbxG0msAWAkgJf/GJ76mU1CQXBwBEUYS1a9fO2A2amVPJozYh
                mNzYsWPHhM/fhAEuKIa07ziTWVwESxFgCCPRcdhfvVBFMkV8sxqXy4dz3mxNUtM0mK7kfXQKXMoEieq5
                73HOzGVfOVBkeiIOFFiYMMhZvOSUEh790hmAIdgWRS4kjG//RJtJu1GioaOboI3vtVYVHovRMBl8+NZv
                q9/NTV6/f8mSJTj55JNnDGiGh4fTHiV5M709Jn4eJzomDHDPP/9822dwCADH0GigYYPeee+AoxO0ftIH
                CwwkY3BAmueWpZQUGZt4NgbHvubTm74Sp8GEzKRNCg8iguO699MJLMVYOI/x5N1nwLUodwq1+Q/+jJCw
                G9X31tq/ljOVc8ogE1nof3jDP6Gjc6FGW+3k/G6nnHLKjDZn7unpSZlHo5ncHhNn33mlkSkHuCRJ2mf5
                UE1U+PQL39Vq+8L/Fw4VzYFDlgjLeTAgzqoTUtnyzE8XHkbgmR2nUdhgmkqDeUriAK7rZzkGSU3LWuHQ
                1cXYcd+LQESw8OKbvmBfiMEOeORXJd9XwWiwwUmLQMLolQitAgmNPl3r/wGMK9751zhx7cvTG8VYUdNW
                ddHGGKxduxZRFM3Y9W6MlLZB7VDXDxV6LU85wDXeidrj0O9IVgy2LboDDh2aV+YYFpqkayApowsRU4Rg
                gWdBeYYmqSnKzQofDeZp8dGoBKLb2Pb1kzFvHnl9thpIAOPUsT8wQvjvX5XBEivIeYYWfH9Akc21LqJv
                BrZGM9UR8Moz34iXnX3JhPxd+UDCsccei9WrV88owGzatAkjIyOHrGfWHq3XzbQEGeI4bl+sKR6GHAQR
                nlr8GQiqIKM9SaOcM55YYAk5sIKvVtASrbTEK/XXFc1RgozroSJsuW3A4OdfPAFXvH4+BAYWWvzvSCsJ
                hocJj2zu8Hl9XEgXapY6Gis6mk3cfKmSGMLLzn4D3vrOv4EVO6lFsHbtWixZsmTGwC1JEmzcuLEA2uE3
                tcfUjImorYyrkiHYvnmlg7Yf7tAHQ1KZc2NUWvy4/e9AmWu+eX0oTciqHbSSobG3gtXqiLSRalAUoXHe
                z7gZHHw7QsMOrmTw48dGcMWNu2E4KIswhAADi66qw2mrBwsyRa2m1UQ6QhERLn/HX+HlZ13iKztcThL+
                4PN16dKlWLJkyYzO04GBAezcubNl8nt7vUztGG8P1XGXam3evLnN3maCfhNj5cBHML/+CyQelCwEYmxa
                lp8HNnhDNQ9ihZaAhHEDQ2tAKoLfiW/eBjCBWGAs4IQAsejqSHDa6kFY3y8hxWYiTUmR0Rd3HpyNqFjl
                +//Xv2LZCS+csI+GiGZMBSRvSm/fvj1N3m2P6R8nn3wySqXS1AFcY9uy9pj6Qb6YnIjQNfI9HHvg78Ag
                WFPJ9T71irUpiJmmRc4EtCw+HSeDyx+QkTwbU1HMN7y/F798JgYogUNhg3BMAAAgAElEQVQEQgKLEiLr
                8Mp1BwA4MDGCnqrxUM1N+1elFeP3zzAwAvz5rT9AZf5CGHYHBbS82Xv88cdPeePg9tqYnSOvsjxpgAtv
                9fX1NSketMd0gpyWchkexCn73gkYgpP8os6AQnJMrhWQTcQsaj0VcmYnYhBKICT40eMJ1v8/fbAMJOSZ
                DLR132tess+rffiIqmldr6zMTdWJSRxsdTE+ctuDYCHPSceXzDt//vwm/f7pNglFBPV6Hdu3bx/j3LXH
                4TZTx8XgNm7cWOiY1R7TMxgOlrRwnOHrTDnC8X1/BMt7UthiNJYUFZlRAL3JJmQHk5bhCsav+GbV5BzE
                N7s5/e370ddfBwzBoKStBwl48XFDWLxoCOQsGBZk0KKNH3tgjHDeBe/BhW/5g/S3KGiPDXDGGKxevXrC
                QD4V4LZ3717s27evPWlnuZk6LoBrU/DDM7TYvoTEMDrrP8eq/j+HkFWlX+16mgGez6ub2mbHjf1Hpbh1
                ITiq47P/UcNffHYElBiIcYikjMTGOLaTsfaEAznGZsCk5qzzrRJjsbjljv/x4GfGbZKO1wczHWPLli1t
                gYk5YqYe1ERtjJ62xwwCHEE73ZOBI4YVg+UHbkS19qRP5iU4UqBrXm40jigqH9RUNWiULXK5PWjSsRPG
                pqcsLvzggDJHr//mDOOEY4dx3NK637fvM+Hl0197yf/C6y9ZDycJSqK/pRHQGqfncccdN2N+tnzUN5jb
                oeSqHRGdHQTg1FNPPTQGt2nTpvYFnQUgB0RwVIOBheFBnPz8ewEzCDCBrYDYpgByKHzNNLzSPD18zwAA
                7NNJdJ8OTzztcPENdVhyEI4AOLCJcNaLekGIAFODsMWxq16ND374f+e2HfmOY25UgDv++OPR0dFx2K5D
                f39/mkXfXguzB+DWrl2rKVajjKh9mmbzBXTahcsSwHWf4Auw6cDWY/8NJdeDVfuuhuEIRupgMl7ifHJm
                qu9e2MTu0uUsxjdjZgigrNIJyBLIMV58IuFdbzS482sGMA7ERpOHoT0kVp1wFt73Z/8H2hEsAVCFYERr
                S1Fvmo7M3BQZncmbLTPDGIPt27djZGSkDW6zbITSrVWrVk2OwQ0NDeHZZ59tn8lZz+4GcHzf+xAlvRAY
                GF83Guo1CxeYNIE3D2bUwN+KU6KFGcsCWAZYI6ealZLJnJ90aQJCBDEOa5cP4TXnXoJ3/9GHcbCgQT6v
                7JRTTjlsPrZGC6Y9ZvcYK5o6JoPbu3dv++zN5jtYyJuTLmxbeBfYEJYMfg3HDP0fFaoEeTBLwMZDkQDg
                JKuOoBgsJWhixmh5Z74+1Julhsj3WVAhAGGCkQSslbN48ckGO/bOw9989CN42cte6nufmpaVDvms/9DN
                ajaobdRqNWzbtq3dc2SWM7h87fKEGdzGjRvblHxWj6wjfca2Is+qGIuH/gNLhv4RAgvjCGzZF+yXwD5F
                A+JgJPJ5wVkX+xa0DSIEoUShSqyXSzcpc7MC9C74Q/TPuwyOtQZDe8Fi1KYwIoKFCxcW+iEcbp9vvpl5
                qI9tg9tsdeMIVqxYgQULFkwM4EQEmzdvnjWTrj1aMzg2KKSHEIlPlGXP7hiCCJYHsHDkK1gw9BWUeBCO
                ADEJDEcefA4+kYRUzskAIFgkUQf6Km/Bgc43IokWawmX6J01JkEkJRiJkZDRLvQ5hkhEWLVqFTo7Owtz
                63DPs61bt6aS4vkOY+25P3tZXD4fctwAt2/fPuzZs6d9Bo9k/scCcC/K7llU3WOIXAkl9zM1J32P1uHK
                y8FgxOVXom6WoV56AUgERliBNNfHoHEqtWpQ1NXVhRUrVsy6GyYzY+vWrenzNmubW2Zqox8udS00Alx4
                o+1cPQrovTcbCewl00lNXInV30ZIO4ClPVdFwc+BYKhZy63VBCyXy1i5ciVKpdKsArZwLAMDAwUhxTZb
                mzvmaZh3o/VNjVp9oT2OFhM3giNGJEDkIm3LR9pQSGBgOABXhODrC7WyVgAWZTp5My44fcvlMlasWIFq
                tdoEeLNpceRTQNqm6Nxjb+H/3t7ellL00WiTrx01OhoGp/JGziiAiVcHYcQwMBCUNFKKSN83ifrrjOj7
                uShjFEVYtWoVyuXyqIAym8AtlFy15/rcZnHGGOzdu/fgABe+EBrLtMfRMLJiLI2qBgkj4xPkQuVC6AWh
                r4mXUerq6sLSpUsPXvR8mMGtMZCR73LVnutzm8WNdfOMWn1h//797TN3lN4ND8bejTE49thjsWjRojnj
                o8mPoaEh7Nixo22KHiWjZaJvvvN2exxdAJdnOSGSuHjxYixdunRO3t3zz3fv3o3+/v42uB2hY9++fVi8
                ePHBAa49jk6qD2jH94ULF7b0Z4xlCsz2ANUzzzzTbpp0hI++vj4sWrSoMA+bAG5oaGjKJmujqdOqX+VU
                LJLxOonz2x8tibPx9bG2PVOLejK/72Dvhb/nz5+PRQsWonP+vOLnAdAYjAgTeG86Tc7xJAlPVcqTXgdS
                cYA2UM66Ua/Xx04TAYD9+/dP2WQdq7NSPr2g1UIeT6JlHozGO0Hz+/j5Y4/jZz/7Wab3BcFv/MZv4NRT
                T037eI73XIz22fz+Rns+2fN4/nmvw3cf/E4BtMf67QsWLMDChQubZIek4TfcffcXsX795YU8o/Gch4cf
                +lGhLSDZCGed9Zo0cfZQABoMfPqOz+CJJ57Ajh07cPbZZ+Pss8/GmWe9ZlzgNpmbUd5MFxG88Y1vxle/
                +lU0yBe0xyweTQB34MCBKdy8wXnnnFt45Xvf/+6YwBQm4XXXXI9HHnnkIEyGQVSCiMMPfvCDQinQaHf4
                v//UP+Dee+9Nj69x+5+9818QIodXXfUOXPWuq3Ub1vgC8+LnX3vu+drAGQQHaflbLrroIvzZn/2ZNlDO
                gcahjA33PQARwu7de7Bs2dJCgXpXVxcWLFiAjo6Olov64x+/FR///24BDEEcYAzQvevZ9LM3XHc9ABRA
                bjzjrW+9DEQ299sYO3u6xwVuowH0j374MC699NImoH3ooYcKIPTkk09iwaKubGbkxCknW5WQP+7BgSEM
                9B3AZz/7WVx11TvaOaOzdDjnYK3NIdC0mxTW78ZMwswxLR9hm4Qs3+pnjz4ypnn3X//1Xzj/vNfh3nvv
                9WBg0w7szQ+t6bzrrn/Beee8Vo+LZUwgZ2o+TmZAhLBhw7dw7rnn4k2XvPmQz2dIor355pshIvjD97wX
                p556KtauXZs+li9fjs7OzoMsQKNVCd7sCtsPN54brvsAvnj3vRNmmsVzOvnfCABnvvosXHrp5SloNh+L
                zgVmxgtf+EJ88W69cdVqNWzdurUA+pMBo/z5eNvb3gYiwp2fvqMNbrPcDzcmg5vKpMfMV8EFkBuPKdba
                LHN+YqlUj0CleogyPbJWvrZ3v+s92LJlSwt/m/V/c4t96+sP/uB7Bz0n+jsbD5agGruMIB/e39+P1557
                Pr7//e/liuRbg3y1WkVnZyc6OztRrVYLDEYXsgERo6+vD/37B9Dl2ct4Fh9Jdj5bm/AqnXTddddBRHDF
                lZejld5vK8YjabvCyQlvhmO/8PUX+XQOA2GAjC14B8NPzOYEcMstt+ANb7gY3bt2HtTEH/8NWnCgfwj9
                /Qd8YXcZD9z/LVz02xdBHLeBbpaNAwcOYMmSJa0Brl6vTznITe0wKZCQ1+9XsWyBFduw0BRc3/zG30F/
                /34PWPp9IgGQQAR4+ctfgTPOOAMA8MMf/hCbN29OZb+/9o2vTsA/ll/YABmv6pGyD0mfn3fe+fje97+N
                jo556OzsREdHx7j7DIgIrr32Wn+Mep1e85pX4cmNv0Rj0+epYODXXXcdYAhXXPHWCfvkGn2O4x39/Qfw
                i1/8IjN3KUssfu9734sFCxbgnnvuScVYw36+9Z0HUnCbijlMvh3i2972tsK1/uhHP4qL33AR0Aa3WTfy
                ZXdNADcwMNCk/jCbxlXvemdDEMJ50BIsXbG0CXQuueRNGDowDBGbmk1EhDPOOAO3/d2nmhhM2P7gwAEM
                Dg5iwYL5YwYxjDE5MAUIBgLGHZ/5NHbt6saX7/1370c0DYse+PpX78MNH7x+DLZaBJPw/4b7HsipdEgK
                CAN9Q+haOH/cLG58C1wZ7nXXXAsRmbBPbrLj6quvTq+r7otw6623eiap4wN/cgMA4C8//Fe4/fbb8atN
                T6Knp2fKfJyZi4R87pxNmT4R4f5vbsCFF1/QZnCzbDQFLvNqItu2bUO9Xp9SkDvvnNcVzJUHf/CdcX3v
                umuux6OPPl54rfG7Y7GDO++8E5+765+ziSoEQYI7PvNprFlzSlPKxMFM5lb7EBG89tzzc2adntydPd2F
                z73mVWdix47uFJCCb7J71/ZRga0VyAHAyuWrGkw/PbcLFy7Ekxt/Ma5z+4lbbsUtt3yi4CfLH/PK5cfr
                zcDf/wQJiAif/OQncfn6y0YFuVUrjiuYqEQWz2zfOmHp8RXLVsLCQgylZmh3TzcwCoPcs2cP9u3bN+Xq
                uyKC313/NuzevdsDrivMhe8++J22rNIsG42dtkyjiTrbHajBZzYW8JAAn7vr855ZkU5MEnz9m1/DmjWn
                pCeikNLQwhkdFkvjPrq6urBq1arCiWzsOJ8/4T/+6cOACcdCY/qmGvef//9HP/px7rtJ7hgFfX19GOjr
                LwDfePL3xlqcAoZ4ABUhXHvttbjnC19M33fOYXBwEL29vdixY0cOcLN9B3Abd6AisFxDhesz2jXq7+/H
                888/X3j9UACnuD+rrJCN9/XZ9GYmIthw3wMFn2Z7zA58CK62JoCb7eqlIiG9xIzJwIJzPHuPcccd/4R5
                8+YVKGyrbeS3ValUcMwxx2DNmjVYt25d+lixYgXmzZt3UF9PnoHdeuutTe/fd9+GCS28yy+9rMF8Qgo+
                AOPVrz4TIu6g56jRNzYeNqtvWtxww3X4u9v+Hps2bcLWrVvR3d2N3t5eDA8Pj8l4xzOnQt+Hs88+O/Vb
                hvHLJ55sOsb+/n709PRM6XzNn4/1l1/h/an54zfpZ26++WY9nraVOmvYW+jl3BLgwoWbrV27jWm+S7di
                WI888ljhbt/VtRBr1q1O5Y1b3ek7OjqwfPlyrF27NgWyE088Ecccc8yYeVwHU6QIILd+/eVN6rdPPPHE
                qL6DxhGSaAsLcP3lhWs3MDCA/v6hUROOWzG4cCybNm3Cxo0bsWnTptGbvpDAOcLHPvYx3P/NDQcFsskw
                KRHBrbd9MveCBmoueN3rcdlbL9c+N0To6+tLG5JPtYkYFoqapmH7BhdddIG/gSQp0E3kJtUe040Pek0G
                BwfT16JWTtmJRMpmclz7/utGLaX65Kdu1WMWpGkOoZv6P91xexMzW7RoEbq6ug6ZsY7F4FqVFeUBJn+e
                D5YMe+ml6zVlIvUDWdx62y245557oAkpMZgtznz1a/DLXz2RmpAHDhzA8PAwBgcHUxGF3t7epmNpPJ8t
                i7WMgFiDJB/72MdARLjoty5smiuH6gM7/vhVWLiwC319AwA5Hzk3eOihh7Fq5XEQEVx99dU+CdtNeeQY
                AK5c//u5G6G+/qEb/xT3339/zu9G+NhNN+Piiy9MO5y1x+FncPlIahQu4tDQUBMzmm3j0UcfbQIII0gr
                CIwxuO++DWmuXIhYnnbai1sWjx/qIihGOcf+Tl9fn7IRE/xjjONXHddkyraqq/zxj37SAJwWD//khwAM
                3nrZW/Dle//D10gS+vsG8cj/PIp5CztyibxjJymLNLbz49SflvkWNecwe8/ipptuAgBcePEFOcCknDdt
                Mv5VHU9u/CVWLl+VpuwEv174KXfe+VncddfncNFFF+BDN/7plPngiAQGJfTs2pWZyGJw9bt+HwDwyU/d
                huuvvQFEnPpUN9z3AC58w4XabYzbuXGHm8Xlr3+aJjI8PDwXDt8vWE2eFRAcHOCjbcyc9nLNT7Lxgtsn
                brl1zPcZGeh84APXT+jIL7rgYoAcAAtmTaG64orLU5I0ViH5W97yljRNIUTzhoeHsXnzZrzvfe/Dl774
                ldzCFlx55dvwtW98BYIskDLecqlm8AOIGGvWnILNm7emuWkiDhaEmz52M4gI77vmjxtA5tCvdveuZ/Hx
                j9+KT9zyce/gLzanFhHcd983cP/99+Mb3/gG5nV1HuIeFZzWX7Heny9OK17eefVVEBG87GUvRZYuosdy
                8803K5NFu4fqbGBx+TGnAC5lbR6lCayGlGTdrRcuXOgn38Tv5Lfccss4zFFlMTfccN1B79Qh8vaLX/wS
                27dvz5mCknpA88A2NDSEAwcOoK+vLy1Qf/Rnj6WLOrz2b3ffXWCRF/3Whdhw3/3pfgcHB2Bg0+qOyS66
                7PcJbv/0P+E9f/B/YdOmLZk4ge9Mc9NNN2HpshdkrzNPSQ4sEeGDH7wBH/zgDbj/mxtw9dV/gAynQyBF
                Gd5v//Zv4xvf+AY653ccgotFAV3z6dQKEGFcddU7C5/65Kduw3XXXJ9jlYLHHnkcZ7z8pdPiE2yPyVsC
                Zi4BXHDwqpOXR0Xw6cpNykDFjiuLncjiRz98GBddcGHTNv7hH/4OmzZtwpYtW7B582Zs2rQJO3bswP79
                +9PfwMy45pprcmzOYsGCBVi+/AWF7d1444fSdJEwrrzyyoLJNjmHf5w7ZoM7PnM71q1bk3s/892FAv1g
                Jkz1WL32FHz/P7+LL9zz+TTBOw/eAHDJJZeM6v8c78K47prrc+dKWdxV73pnwYn90peeVkgSJ9IUmtFY
                RHscTptvFtDJfGQzfa/F/NzZ042dPd3YtXsndvZ0o3vXs+n/Ybzh4ouaCrJ/+YsnMVZe2FgAFQr7LZti
                8TZaR1CJCDt27MBffvivsHL5Klx26frUP6a93gm/+Zu/iZecfloBfFpFLp977rncuVFA/5d//eeC/y9s
                46UvO90zGt3erl27s/MLwuSK301hIYsI7vjM7Vi7djVM2qWewaw9UkN+WADEydzAWo0dO3ak2122bBke
                /MH3cPun/9H/1rxYAOFbG749aYATIfXz+soXgin49/LX6kM3/qm/rjZ9/7HHHssBPLfR5TDiSoikHlaA
                y5s0YfJUKhUcf/zx467NbBwvPu0lhaRbEcG73vUu5PPCRgO6oDGWao2d+WqceearQSRwkh3jWWe9ZtT0
                EBHBnj17cPvttytAINFu86xgcNLak/GRv/3rUXuI5seVV/wuhDOA6+qah/nz57cExdtuuw0iLpdIzPp9
                cXDCU3apRdRcffHpLy6YiTQFCzovtRR+Y4gCN7K1devW4atf/4+me/Wdd945acZ67fuv8QfijwEJfuui
                ixvYux7DxRdfjEw1RS2Ga99/Xe5GatpIcxhxJST7RjO941Z5bIsWLcLSpUunLDWFOckphSgDAEsajBht
                H/d++YtNrw30HcALX/hCwJrUf3b++eelWmOZfwtp3eT8+fNx6aWX4ktf+ncA1vsNlZ18+tO3H1QyShnY
                Ll9oLmBWk+zf7v5CE3vLf2/FihXYtfM5kFEn/+7du0FU8s75qRvr1q3DA9/egIsuuBhPPP6E94RODXg2
                Ki6HhsyNnwkdvVasWIaenufS87Fr164J+Rzzn3v88ccLgPmnf/Z/5yyJZlZ29dVXe0DNPBaPPvoLnHHG
                6e1I6mFibsE9FVLJopn0GeSZx8qVKzF//vxp8Vl8+cv34rLLrvQTkrxe2Ivxq01PTuhY9+3bh18/6zfS
                ci9jIogwXnfB65vklTRHTaOYIaqowprGn3hKBTffd80fjxo1DeP3rnhbzuRUcP3SF+/JPkMlEJLCjeLi
                iy/GZz5zV2rfixCuvGI97v7iFwq1socy1q5dmwY77n/gPlx84W/h5z9/Ysqdw/fccy9e9rKXFiZt3kwM
                fy9btgy7du1Obz4iE/ODhbSOa95/Q+5aehdBz27ceednVVVE0CIFJLgtMp/v9ddeh+99/7stAbE9pp9A
                hesQWH80WX/FRO7EmcSRpNHOg9UYQsyk933Wr58NhlOPFynIDQwM4N3veg/u+MztTeDCzNi3bx/6+/sR
                x3H63l2f+Sz6+gZgBGB/8pYtWzZq4X3j8wd/8D0vNoC0fOree+/FVVe9A/MWzlMBgIa8QxHBcz174ECp
                jym8f9ddnzvIYs3n5un56+np0cVJDBK0vC4H80uF4MXatWubRCQ3fOt+XPj6i/DkL570+YjszTsDmuS8
                uf7aG3D33V/EjTd+CBdefEFL1hqOQf1e4XULkaTlPBzTqgDj548/DpEQodffcNddd43toRQD8dp02X4I
                jz/6c5z+8tPTGtWxXCPtlJLpGSGv10xVYXKrUSqVmnwqo/mbmjfuJnUcYbuqxV9MJfjmN7+Jiy64GAMD
                A9ixY0damrR161bs3bsXSZKki/rGG/8cd911l/rPKCtqv/uLX5jQHeWaa96XasGpqRrhkkveBBLTsoqB
                iHDllVe2OL9cYC+tHgpE7PcnqS9y/frf8xUe0iQyMF63wpo1a0Y99xu+dT9edNqLpsQnd9011+Puu9VV
                8NGPfhTXvv+6NO+u8ZgzeaRQBO9wzjnnZABk8pJLPOqcvfaaD+TOMaWBpYOdbyZOz3k4vlSvT4ossVUp
                3mR9he0x/mGIaNIpIo2Rv/D3qlWrsG7dOpx00klN7//ohw/joYcexo9++BAeeqjx8XBhcjaOVSuOSx8r
                l6/CqhUrsXL58Vi14jg8/NCPC5Nm/vxO3PDBDzQAgOaknbr2hfjKl/+jpe2+4b4HcN455+KH//lQGhUM
                E/+qq66a0IQUEbzl0t9BV1dX+j01cyze/a73tLyz7969B/lC+rCAMj/Q6I8gb0RklV34m0RPz06QZOe0
                VdR6PL6NVnWm4Zpv+Nb9OP3002Fk8i6H7u5u3HPPvenNhMjiscd+jteeez7u+sw/F+bEo48+iiuv+F1k
                wSQ9jo/87V83zdHAnlt1FgvbyuT10RC4GP0RIrjE5KPKmZLKY4883lQCN5ZJ3h7T4xI7ZB9cAI8lS5YU
                AgWNUcZQPnXppZfn/CWNhdqCZ3fuGJW2Fz9PWoPp1V7DGB4ext69ezEyMoI3vekSPPHzX2DDhg0gNhDi
                dCLfdNNNuOmmm1p2usqieZyCzOrVp+CdV79jQuZPGF/9+r/jvHNel/rSAGDLlqcKyaFhrL/8isJCExG8
                46q3N8iBj2qk+mVp8bk7P4dMB4+xfv3v4Qv3fD4F2Ylc8/EsTqL/n713DZJsu8oDv7X2OVlVXa/ururu
                6ud9SH0Rw4AkRkBwDTIg8GAeZkACJEC8ZgaPxzFWAAaHZmyCMQYbw/AwimGMHQ4Nb4GAGGEJwYAREgwB
                BgTCRtZF0r3d96q7q7urq7vemWfvtebH2vvkyaysV3e9e38RfW9VVubJk3n22fvb31rrW/TImtylS5fw
                0z/7f+Mbv+HNjZ4Z9rnf/vafxtvf/tN9mpyLOZFUG5n2b/0+77Wf3/P7qz79lfixH/ux+vr94D//l33X
                XvFN3/JN2wxQaOzVwXj729/e4yT9lre8Be97/+/V2+embX7C+97/u3kW2mNNrlDVemu2lTbSzziYGU8+
                +SSKothcT6tvtI0mq973UVUoba1PiAawAmCH6y+9iNPPnVonIP+jt343rl69ire97f+MEyH1MKLuY4Cq
                9L2nrcpf/MV/G//ord+94Q3edHsd1KkLIPzoj/8Ivv0t/zA+z57zlre8Bb/3gffXr11aWI7sC3V/sM95
                7efiW7/1W7c1oTbb873zV38Ziw9WgMiEZmdnwXDWeYw3tzJq6m7N893OgGpqcrJDglJVFa5cuYR3vOMd
                eNPXvAng3jrUQZbsaTEYHT1RGy70bk0b+YpgpJMiIpAy3vve34KDQ6iZunVT2yluzt7Ab/7Gb8exRHVe
                3Ctf+alQVXz0ox9fPzbUyv+yaeYeb1G36vjdnxE/MTGBZ555Bk8//XTP5Lbp6yk0tKHB/3q2uopNul51
                uzbZePXRUWPwFvr1X/1VMWdKerSppma1vjGOvce/f8+7101u/VucxDSa9aL95/HqV78azzzz8lovSluw
                L/uSL62P87VveqPlrSHU5/X93/dPt38xGwzi53/+53v0IUB6su2bMkD/tU/b0eb3tJPOWl1Nbmca6vPP
                P2+BnPNn8evv+fWoawXLIVQXS9+6nbsSy371q1+J9/zGu+pJLeldSQ5wcWxQ32T+A//i+wEIhLp29r/4
                S7+wYxmCiPDWt761HsfpvFNeXbfKpHf8NhfxvF3dowluM82rn+6fO3cOzzzzDGZmZja9QdZvm2RdiH/Q
                v95JYzuDrJto+apXfuqmEaqJiTH83gfeh194x89jfHwcRKFHUG522Lp69WV497vfjfe9/3cxNnZiWxpk
                /03X/3kB4Kf+7b9e97ylpaW6T+vy4lIPKzlz7uyOLHjS9UhNnsfGxnq+g+TGkibPEDYK+si6a7HdG7Cp
                yX3yp7xi26+5d+9ez/uMjp/A+97/u/iWb/kWmxworNPAxsdH8Y5f/iX8yI/9HxBd74RsE35VW583J+rU
                36J/7M3MzOyoj2vz+/1bsYqGuajPIeXxWa5gv463/YBdxkNuU0VEk6f9RukP58+fx8TExIb60+YWS9Io
                Vdreajg/P487d+5sqXdtZe3Ubc5CfToL1du5Zk5Vj6gOeiR/r+2F//vF727u1CD7pJ2yin723fzMg46b
                /vayl71sx4GIh0Vq1JuMNgdFxNfnHNKG33W/X+BG16J/bDyKBt0/Bjf6DBuO0+wltye4evWq+cG12+2B
                X/7MzEzPxLaZwLwZSdxqDFVVhTt37mBpaWnbIvfW77vxRNwfCBl4w+xCBGe7BLr7/jLwXB9mch10Hk2G
                N+i5IoLp6Wk45/aFUagqnHN1P4dBZW/bueZbTYCbdS3bDSH7YR+rzyVPbnsXZGhqa+kGGB8fr7ehe4Wl
                pSXMzc1hbW0t6w8HPAgS42FmTE1N7Zsm1BvXwMgAACAASURBVLSJymMgYy9Q9G+HNkrofNgVunnsxcVF
                zM7Obtj4JWP/0bxGV69e3fdr8sILL2STyIy9neAA4PTp0zh79uyur9ArKyu4efNmX2Rra10iY38nuMuX
                Lx/INUmtKjMy9myCS4P7YW6MjfSQ1ER6My0iT26HY4talmVtT7Wf1yRpbzlVImPPGdxOJ7ZBgzFFYzOO
                Fnt76qmnDuT9m92P8uSWcSgmuP6BWFUVXnrpJVRVlb/NI8jeLly4cCBb01Qon5FxqCa4hMXFxXVmhBlH
                C8652pNvPya35iS6sLCQAwsZ+zvBbda6Lv187969Ous842hvTV/2spftK3NrpoXk8ZOx7xNcf3SzOfjn
                5ubyxHZMJjcAGBkZOTBh/xOf+ETW3DIOZovaX+azsLCAW7du5W/qGDG3QWkh+znZ5UUy48AmuDTIq6rC
                888/3/P4oLrNjKODdN1Onz697rH9uqZzc3P5QmQc3AQHWA5bu90euOrmye3ooznB7Tfu3buXL0DGwUxw
                IoKPfexjeQtxjBncbler5O1pxpGY4BYWFjA7O7vOaSPj+EBEMDExcWAsPLO3jP0Gp8mt26Eob0GPK6an
                pw/0+s7NzT2SDVRGxo4nOFXtiZLmVmbHB/2OwlNTUwd+Ptt1y83IeJRxNjIyYhNcZmzH+0InZ95UsXBQ
                DCqZquZIfMaes7bGIsrJyjrj+CE58zZrTg/KuePu3bs5Ep+xbwt7csfh/s7qGccP/QvYfif0qiqWl5fz
                BJexb6i3qAexXcnYv5UMeDi/v91Eqp54mAY6GRk7HWsAUJZld4JLdC7jeOKgrm8abNm1N2O/FvSkO/dM
                cInOZRw/DA0NHfg5LC4u5guRsedIUpuI1AtqnuCOOZqGlgeF+/fv5wuRsedoTmwJRZ7gjjcSVT9IYT9H
                6TP2A4P6vXCT2mUcz8ntINGfbJyRsZdjrX+iy1HUY4yDLqxvDracGpKxH2ONiDA+Pt47weVJ7nhidHT0
                wM9heXk5X4iMfYOIYGxsrDfIsFEbwP2acftX+c3Opfma/kl50Osyc9gZvX/U5/Q/r99XMONwXdPjyOLG
                xsbq+aFmcBMTE/v+hfTrM9upk2y+ZlCDnMf9Ijd7LjzMVnKz7207z+l/3tLSUp5pDlgeeFw/MxH1TnCZ
                7Rz9yS0V1586deqRJvfNxsJOSq6azZ0zMvabtdYTXE4VOR6rV2K3iaYfBDNoDrKcIpKx3+N/4ASX2VvG
                XkyAOQUpYz/ZWzOC2jPB9a+8Oap69Ol5RsbjhsnJyY0nuOHh4W1vQzIOL3PKrCnjcUV/alTPnZADDccD
                yb03I+NxR88Ed/LkyWwnfQy2qIfF/ipvmTMO1QSXJrYc+TraW9Sm1HDYJt+MjP3cufBmN0rG0ZzgWq3W
                oTif1dXVXIuasW84ffr05hOcqh6K+sWMh0OTeR8WxpSZW8Z+YdDOZd0WdXp6On9TR5jBZcaU8bhi0GK6
                bot6GCyuMzJjysjYyXgfGhoauKjzRi/KDCBPcBkZh32sp3lqo53nwAlufHw83yhH/IJnZBx3NBPaU+yg
                3z164ASXdbijiTy5ZTzuu5V+b8uBtaiHJc0gIyMjY6tJbrPKHd6IAWQ2kFlcRsZR2KZOTU1tb4JrYlDS
                XMbRpO0ZGccZm2V+bDjBpVlxOzbiGRkZGYdxQeetXpwiFXnrc3RwWBq95EUxY69x/vz5h5/gmu23Mg4/
                0mK0urp6KM4nuZrkxTFjL5A6aD30BDczM5Nzq44QUi3q4uLioTyvjIy9mOQ2I2GbTnDOuS0PkHG4oKqH
                hsEdVL/djMcDqXPcZmNsS2/roaGhPMEdsRXtME22eQeQsVeYnp7ecmxtOcFdvHgxe/xn7Mn2ISPjUcdW
                f2nWjie4oijyID2CmJ+fPxTn4ZzLGlzGrmNqaqqWQB5pi7rXTYQz9gZ37typr99B4tSpU3kHkLFrrC39
                f7uFCLydg54/fz6zuCM+KA4K/X0qMzIeFg8zB/FRuEkyHg6dTufAz6Eoijx+MnYVFy5c2N0JLu15M44W
                XnrppUOx4mYNLmM3MTo6um02lye4Ywzv/aHYHudG1Bm7hVRYv91dwY7U3ywWHz08ePDgwM9hO/lKGRnb
                weXLl3f0/B3NWE888cSOZs+Mg8fs7OyBB4hysnjGbmGnJGtHzy7LEkB2iThqEJEDuWY93viZ/Wc8Is6d
                O7fzCXGnL8ha3NFByva+fv36gbDu5ns+zODMyEgLpapicnJyx4t1nuCO+cAgInQ6HajqgUUzRQTj4+P5
                gmQ89EKZxg8z72ixfqh9w8jISN6mHrEBcv369QPZJjZNU4uiyBcj46HQzH3bqv70oSe4dNCdRjIyDpbF
                AebymwbGfjK55mp75cqVvDBm7BhlWa4bN3uSJtI8qHNuR2+UcXDsLeH555+vaf5BIFU15DGTsZMF+sqV
                Kw/d8Y80L6kZGY/lxNE/UezEu28/fP6Oi5dg/+fYzuc6bNciIyPjkG5iMonLyMjYDaInIj2uRgmdTgch
                BIQQ6qZv/e76a2trEBEw875Itbvpx1qWJcqyBDOj1WrBOYfh4eH650clXJmkZWRkZBKXkZGxLWIwSDla
                WVlBp9OBiGB5eRmq2tOFl4h6SNx2iFP6eScEZT8JTdMcPb3noyqYCSMjIxgeHsaJEycwPDy8Y7L3MOpe
                RkZGJnEZGRnHAImUVVWF1dVVrK2tbUkEBqlXKaN7KwLXPEaTwD0KuTookrsVId0JoeonYglDQ0MYGxvD
                2NhY7RWVICJYWlrC/fv3QUQYHh7G0NAQnHMYHR3NgzsjI5O4jIyM/UK/0tO/uO8E3nusrKyg3W5jbW2t
                DlNmleZoj48UZmZmTE5OYnJyEmVZ1tc1KaTz8/NYXV3tCWuLCEZHR+sQ78jISO0StRcENyMjI5O4jIzH
                grhtRtoGLZadTgdLS0tYW1vDysoKQgg7Vn8yjsjk3Bei7lc9m9d8ZGQEJ0+e7On4qqpYWFjAgwcPsLa2
                1nPsdJwULi7Lsg7vnjhxYp36l4ldRkYmcRkZGVsseklRWV5exurqKjqdzrrS80G3bDreVn/PC+7RI3D9
                13RQKHfQ88bGxnDq1Kna8K6Z47e0tFT/a/6tWVjSPF5ZlhgZGcHY2BhGRkZ27NSXkZGRSVxGxrHB8vIy
                lpaWsLKygqqqHolcPUwuW8bRJfrpb0BXUduoqrep2BVFgenp6Q0tt6uqwv379/HgwYMdGUkmFW98fByj
                o6OZ3GVkZBKXkXE0FtjNFK6UgL68vIzFxcX8pWXs38Q+IFTfr7C1Wi1MTU2tI3XNcey9x/z8PBYWFuC9
                71H8mLkO52+E0dFRTExMYHR0dJ0B70YkdVDlbfNzZGRkZBKXkfHI6kj6OYRQE7Xl5eWe5+6kcjMjY6/H
                7Waq7MjICKampnDixIlNj7GysoK5ubken7+NSORmod70L7dTzsjIJC4jY89JG2CFBffu3atzidLfN8pf
                apK59HjOScs4TON6UAGFcw6nTp3CqVOnesZ1/7gVEYQQsLCwgPn5+XXK3EbvM4jcOefqPL5Wq5UvUkZG
                JnEZGQ+/yC0vL2NhYaEmbNvtJpBz0DKO4gZlUIpAwtjYGGZmZrYVEhWROgTbLMzZ7L7YbGMzOjqKkydP
                Zg+8jIxM4jIelwVpJ89JLaDm5+exsrKyof3HoKq9jIxjvUAMUM9GRkZw7ty5Wi3bTuXz/Pw87t6923Mf
                7eS+HhSOPXny5Iah30H3/GYkNSMjk7iMjAMmb9tVFrz3uHPnDlZWVuC9X6ew9S8cedLPeNyJXLoP+tMC
                xsfHcf78+Z7nbXWvJKXu/v37dbHETjZj/cdyzoGIMDY2hunpaRRF8UibvYyMTOIyMg6IyA36/cGDB5if
                n0en0xlI+vpVt3xLZGRsTer677XTp09jenp6oIK9WRVqp9PB/Pw8Hjx4sKvnV5YlTp8+jcnJyUzgMjKJ
                y8g4CkRORHDv3j3Mz8/Xj+90F54n+4yMweRoO5XWRIQrV66g1WptuxNJUzVfWlrC3bt34b1/qA1Vc3PW
                9NBj5rpYI1fEZmQSl5GxS8Rr0MS+3Q4DVVVhbm6u3sVvt/jg0H83BJAylASkZrxKABRpQQJYFEIAiULY
                ARAoMZw6M2vlEG9yBtjZ62BhMUeKisj+BgAQEAe4D78IWVkBKSAcgNt34G7cBbQCmCAhKizkwaGEd4oi
                BHRe86lwgSBEoJc/CTd2EhUEzIAGATlAoHBaQqAA4gJNJQhGDEQJhXp45nie8fqDARKQAtACRB0oOztu
                raSGhgqTCfhhub8nJycxMzOz7Y3SIEV8dnYWDx48WFc9m9qG9d/zO1HTJyYmMDU11dNLNm/iMjKJy8jY
                ZVKXHgsh4O7duz2Ter8KcFyGNJGDBwHwcGpES1GAABA8oAyAoQSoBgQCCgHUEVgA/sv/Av7gXwAffx50
                +zbor6/bMZjAgQAmePWWUxQEwgQlgIMRKEcMgSJAwen9G2E0JoUIQHAgCFgUgQCGGNkKHfhCgSAQFLg/
                MYGPXDqD/3RxFP5kwPTUBM7NPIEnnn41zsw8gdbYGEQABiEQQBpAKMFEEEm5iwEA1+RTNUAJABMYvQUo
                GYdhDJsaNjw8jJmZmZ6erDstNFBVLC4u4vbt21DVHlXwYe77/rAwM9d5dWVZDiSUmdxlZBKXkbHBznvQ
                xC4iuH37NhYWFh6/HTITNHgwnKlgyYsuKnT42DUUH/pL6B/+McoPfhjKAUpGcMQpSOJ3C1PhiENUshgE
                hY+U0Cd1QxUUzYmFBS1xCFG5YwWIFJ4ULAFKzo6vCgUgJCiDosMMlkS0AFWy18LDQ+GkgKjZTggUq2WJ
                D1++iD96+iTuF/PQ1buALkODx8zFZ/DyV3w2nvnUZ3Hm/NPdxRYU1bqoUKb3iSTPVMx8bx2GDVl/SBMA
                zp8/j7GxsW3nzG2EdruNW7duYW1tbVv9hR+G4E1OTuLs2bOZvGVkEpeRsZX6ljA3N4f5+fkt+zf2v/ZY
                qXBqIdVAQHFrFu63PgD8v78NN3svflYFmEBeUBUODAYrIKRwiIsnC0QVjAJKQCsAHaf18cEESDxO/Nqk
                JkqAU6BSgZIFcp00SLYIFARCqNU7oagVBoYggCCAxIWaBBAFCUGickiq8OowhApBLQzaKQj/8Zkn8Puv
                +CRotYjQfh6uug2WAK8CBWPi9BRe/l89i1e96nU4e/EVdmwIALb3YyORGYf3Hh9E5rYibpulXIQQMDs7
                i6WlpYc6r0Q2kyK3EbGbmprC6dOn80XNyCQu4/GcuAdhZWUFd+/erXfUx6NNlallAkYhAFgR1D4XRzIC
                8iApIMRwUHgI+M4d8Ht/D61f+3XI8hoKo0lQZyQNLioaJACRKV6Nhaj+/rH+sR1dv6hyQXRd2Kkmgek6
                R8UvQE0dk0aIShvhzWhTkY5bjxHx3WOl2SgYH/uTl1/B73/Sk2hTCa+roPZ1cLgJlU5N1BSMoRMjuHr1
                s/Hsf/tmTJ4+C6aAIGwLsthx1RFUCCQEcLPThkYSCEgkwFnJ25/5QVVx8uRJnDt3bteOLSK4c+cO7t+/
                X7e9a7a/26irSvN+2Y5P5FZtynZjbszIyCQu49Ah+UTNzc31hE2LotiyofbRubEYwgKSgOAIRWAQOQT1
                UfmycCP/5V+CfvoX0frQhxFibpeA4UBAYd9VQQxlAqiIC4kCZORNmdapBSmvf6PvUQC4AfmGGy44irgQ
                Fl3fPInEh7QmbU3yRo2iC6g9t0n4+gmdPRTA8fUeikLEcvMEWBly+PVXvQJ/NXMWBEEIClTLcNXHUGIB
                nZg9qFLCaQdKwJWnXo1nX/d1eOJlr7b3JwstQzoglFHB6xaRpAKJpIJm7A+ZS6HWiYmJniKInZCdRNQG
                PX737l3Mz89vmX+XxuOg4qhBdkTJoy79PjU11dOmLCMjk7iMY4OUv9JutzcfkMcoJKoEsHRVOZAD3boB
                /r/eDvcHfxyT8R1YgcACdYUtABAoO5B2SRmzZYDZ77ROfZP657iQ8WAlLn2zWy0xdbVnQ0lLYdae6xMV
                NcRKUYXUr1G1EGzAevJGEroLZyNJXYPUVNOqTMUKHJSBAEAC/vgVV/Cb//VVhMpUvxAUkDW48Am0cAte
                7PVOBQpBLO7F5Ze9Eq/9wm/Epac/DYEsd69/Yc8+gQewCDWugapiZmYGExMTmxK57Vav9+PevXt154iN
                VLiHPf8m0RseHsbZs2frQo6NSGZGRiZxGYcWCwsLuH379pa5bRtNzkcbRkIYDvSr78LQz/wSdOUBwC0o
                GEwUlbfY/Jssb80KEgjmIUJgcF15GcgIIciBuI949C1CgxQ68OYEpRki7VFKFFCEdYSuSbqoWS0YiV1S
                3ijajKg2VLv4OkWoyV4idPba7vtxcPY8EqgQoPaaP/zkl+N3n3kaEipAPCphBGmDvMNQuAZ2N0GxmhUS
                oCjq17ZOjOA1z74Br/1bb4aigKJtBSRIti75/j1oXLp0qQ5VbjUvbIfU9T/nzp07ePDgwSOnb2yVAuKc
                w/T0dG06nJGRSVzGwatMA+wBmmHSo57bttX5kzK883DSDZ0WwhBW6OIq+Ffeg+Knfw6OCgQiEAtYGeIC
                lEfAJBZWTUobOQs/RrJlSh7VvxtR427FX3xuk5zZ765+7Tq1gAYQtr7HGEBYl/+WlArtkjESQBmUlLhE
                2rRbtNATLg3d0GsieFbo0HheJFh11WvjeabIdd+DhIyYseDfff7fwEtjoxDtAEJmEusVIh5ePUb1Glo8
                D3EC9dIYw4SgCtKAz3rtG/DsF3wdRoYnQK6AahVrd6VLZrmAiM+hsn2cY5xzePrpp/dExWqmcrz00ktY
                XV0dGErtVwofZh5xztWpIhuFXbdjuZLz6TIyicvYXb1JpK4mPa69Rjf6PBT90ITNkJfe/g60fvZXAA2x
                gKGADCH6uTm4wiOogzrq5tcQ1yQthUqbpI2Ze8hdrSQwWX4XUJO+5t+lT5nrCbUO+owkYHSvX01cmt9B
                I0xKjRy35t/6SZ1qiIUFXUJWK3QAVKXnsfRaktA9lwaRs/dSQBkqHoUSOgCenzmFX/7MV0NVseo7Mcxa
                mZ9YBXS0jRIeE/wciAMCAlgZJtTZcxklKnTwma99A/7m696MkZHRqNLF3D42zz5GCUHIN/8ezyvNfLP+
                fLm9Qrvdxo0bN9DpdB7K9mSnzz116hSmpqZyqDUjk7iM/VXcbt26heXl5dp0sznhHof8j81aAzXBH/iP
                4B/6MbjlFYAVDGdqHAqoCyioQCAGuVhJSYySGMJRQSPqKmhMQJ/SBiaAi9pXjZnrxxNRI3IxZy6enzLU
                9TnYo7/izgENlclep/HaodstoVlh2ihcaBYhQBrkrC8UihBz2zSYcpZIWEOhC1AjwaE3DAsN9pnDerXP
                Jq8ACh5BCSCHNjHe9qV/A21VBCV4qSA+IARCEIGEAA1tgNqYKl+ApwAO5p8nYudjVigEQYCq4Iu+/B/g
                M1/7FRZOhgPYRdsUyZPDfi1SjfnnwoULGB0d3Ze5bm5uro4qpL/v5FhNVS8pcs3Pk+bIpPiPjY1hZmam
                fvxh8/4yMonLyBi4M7558yaWl5c3JTZbebcdFefzjQxjXVCsra1h9K3/DPqf/nNsGWUkKhBAXCJ2uQLU
                RXUMUMdwCqhzRuBgFaLqLMdNOfY9iCodHJuCxw1lrg6furoyVdEbVq0XjFShGtW6QTYkTbLdDJ2SIrbG
                Qg8hMwWu+3OX3IU+pS10q09Dw6okETMJgJiNCYeughcgoCA9eXP9ylyt8AWrloV04EXQUgevHmuuxL/+
                26/FMgMiHiFYl48QKoRIBr0XhBDgsIyTI8+j1IBKGQxv4VgoXPwOFB0gMM5dfAW+5pv/McZPzdTtzzIO
                BiMjI7h8+fKebNQGPd5utzE7O4u1tbVtE6rthl6bZK953NHRUZw/f77+WyZwGZnEZWxrQumfhJLf0nHb
                DRIpKAiCc3WfTkIJhVXPdnsZFDUJcX/xIdA/+X7Q6opVS6YQaAqHcmFes8x1RamCQIUzUkjdggUiZz5v
                jhuhUmdEzXEPcQM7cCR46FPutEnOmNbZjpgK1x9WXd9yyH6XmqSlZDnSRqutRhFDTe4kES22IoIUEhXf
                UOeAIJXVcEgsgEh5b8H3EMCk1nWPE8OsCOvCrvYzgbSyHEUoIB3cmZjCz3zBa1ApIomrGv8PdWN17z0Q
                BKOtmxgfmjc1LjigWIN6B0/Bwr7KEHioAgEeX/U1/xif8povqkPUhA4ErfjdVbWFTMbe4sknn0RZluty
                1nZzjuo/3q1bt+ruMU0lbS83pidPnsTZs2eP3EY4I5O4jAMgcc0wwqPsMA8/GEQWRiuJEVQhjLp5PDOi
                p5uD+6VfR/m2n4xN5hnqChRx/jT/tq4yBqaavMF1K0k1ETOYapeeC8cxTGfkTVIPUDZ1juJCQY5rkmdk
                jXvy55qFCxrPoXHRenb9A5XW5OlmT+w+v2nWGwkYYsUpgpiyFrrEDqLgnuKFAEijMlUD1Ed7kQBr4RVf
                qyHmFiohRHKXQqz1QhmfByCqdtYxQiQWlighUBu/8Rn/Df7q4nStxHkJCCFAvL1/JQFBBeIDquAxTKs4
                c+K6tfPyAk+V9ZcFELQCoQWRFShKQD1EGZ/+mi/Gl379d3WVQ3D8l0Ot+zVfnTlzpi4S2K+NZurhOjs7
                O3DjuzubzN7Wg4BtCk+fPo2pqalNIyBZucskLuMxImwJS0tLuHXrVteva8AE0q/WHfXPX5vXkkS1pTKb
                CS0AV6H4vh9F8ZvvA9jMZ5lagAsx783VuWYoHZgUoETGonrHBHIOwjCrEWbzf3PdwoSkuimRhQcjsdNI
                3JSc5RsSGoUQzpREl0yAaV3VKqgbRm1WoA4Kz/R3Y0Ddc1V68xyj8kbSW6SgqqAQjIgpgcXCn0EEUMtp
                s5ZGMewayZ/5vtlzJT6Xgq+PqSEpdg0SGEOspnrZMRQVKCSj3gCIw/Uz0/ilv/lqBBULn6qHVgqpPLwK
                vFSAD6g8I0jHwqu0jHOjL1gdBRgsBEUHqiVEu10lzK7EG6FXxae95svwd970nVB1kNijNitxe3//pvHd
                arXwxBNP7AuJGRRqffHFF+uWXfv1vkRUty3b7HkZmcRlHGN0Oh3cvHmzNuAdZKtxfCcFBlK4VBRUeGgY
                Asij+IF/CXrP+2OeWwV2pREIVxjxYzVVDDC1LSlfsbOCka9IrKIal55noVUxQsgEOIC4MHJHkZBxCSos
                JNsN1bquckew7g0NFQ4xxCq8Pj+uJ0duA1PbelFsFC/UZE57Q5wEyzcj0R5SpymfTaShvkW1TAQsVlEq
                4mO41TzlBAEUTBVLRFGDt6yzWv0LPUUUIoIiBPtcwQigBNTk7sbZk3jn530OOsHbmPZtdESBKqCjFcSb
                SbD3axAR+ECAF5TlHUwPz9U2KhwIHa5AYt9XaPjadcRqVxUCCYpP+6wvwd/52n8IUFlbk2Ts093MvOtW
                JDuZ+5pkbjcUuY3m4kEWKMPDwzh37hxarVYmcJnEZRxntS3h1q1bWFxcPCY9Sh9y4EMgaupXpYICBPpX
                Pwn3jn9vNQUk0FhwwNRVu7SIXm1wQBEJGAEErokamKGOwIlo1XlvRR02VXK1kkZsViKpKML+zvVzU94c
                pTBsfG1dAJG84XrCuQ0Cx25dh4ZBC00dTo0kDf19TkXBEuoODCm0akQurCN0KlX0c7McOXvMFD3xwR7T
                RMo8KEhDfVMjdZBuCDeqcv15dYIAF7RW/lQVH3viMn7r2VeiiuSwqiwfrg6hekHwaxDhOlcuBDunM2PP
                o+TQE8ZN6qD9bhW3pIygne53hA4ClXjla74QX/nG/xWKbksvgaIAI4BqC5qMXbiPI9lJ5KZpEHwQm9BO
                p4Pr168jhLCOcA1q3bVb30E63vj4OM6fP7/hOpCVukziMo4QWWtieXkZN2/e3LWd4tEf+Ja7pI5QvOu3
                4X7gh+ELhdMhgDpQKhtKWqNgIOa/1cpaJFzM3bAoucI6MXBREzV2pYU1me3vDRImYDjnYk6cHYuZrVKV
                GXCF/T/ajYgzJTAVUzQLGij6ytWKBBMI3C2s2Aw9xruyzruNg8YOC8H81WJYVIXqQgYLkxpZQxBosEpU
                y43rJXMkMWQaQ6jiQ10ckUiaiuXJ2XFiOBUCDfE8fQdQhqiHCwqJZOudX/55mBufhIig0+nESlVCCO26
                OjXlypkNiRU++KAYH7qFyfKBEbfoB5fCZd0qQkGoApgLhNjXS8TXFc2iAV/xpv8Nn/JZX4RCABVXd+dQ
                DbUpc8bukZjU5P7ixYt7ZkOy3bm33W7j+vXrPfNsvxXTXnwHTWVyZmYGo6OjfdZCmcBlEpdxaNHvz5Zs
                QZaWluoJbqOS+kEy/XFGIIAXVtF6/TcCyytQAI7FempyC4DUBE4HVJPWXm0cPeC4ADMsXy2FXKOKlpQz
                NHLeKJI5I30AuDR1Lb5GXWHvXURSR0YIrULVdUlgfU6RbDo2NY+KrnqnCmXzhdt4Eu92RGi21EpFCJBk
                9WHKGEei1c1vS491oCHlzhFUOqba+WAqWgy5agjQ4BtkzsfQq4I8INqx6lcfoJH4JfsTTccSQOBBnqAS
                zCLEA//lmafwgWc/A1p10BYfSZoVMPQQNu+t4KHyEEGXxLVuY7I130PamjlxpjQCgDcbkkb1bp1LqgFQ
                h6GRFt78934CM5eumvJLilz8sDcEqmk2fvnyZZw4caJHpdussOdR338jMrewsIBbt27t+jy72Ua8/1z6
                /ecyMonLOMQTmqpiaWkJs7OzPaGgOrTWIHLbNbQ9jnD/7EdRvPs3EJwD1HqZkovkLlWLNkKYqXtCCo+C
                okLmEIsSosJGZK4k5Iy0FQwwx+IEhrou6bP/O6DoqnLp78RRrUv/jz/XFavO1eocNciluhjejefqQAip
                sKKZX7N+APWQGPd8CwAAIABJREFUFBLzeiM1xS0pURwVNY3FCBQESMUIidQFAQVrgWWKnIeEUCtvGgQc
                8+bEV0bkAkFjrlwihuq76htSVap0w6lGGo1kcrD3XzrRwv/zNV+JVbShlQC+QjsIfCUI0gYqrYmd90be
                vO9YXpy3/LlTwzcx4hbr8GlS5JqkTtVDleufAYIX1EqifccCFQYo4MpTn4Zv+l/eZtYzYv1ZM3Z3/usn
                SJcuXcLIyMihyPFN1iS7qbwN2pRvRO7S97OXZskZmcRlbEKmtiJcIoLZ2VksLS0hX1JTlpQsgkWIxQSi
                kL9+Hu7Nf29gOytNIcqG91utpNUhVDXixa4uYLA8tBjyjISrznlzUXFjArvo+M8MLooYWuX6eSlsSkmJ
                q8kb14ROXW8+HHEBcZFEMkOIwc7VXnFcWNiu/qyxarJ/bDXNfusKzBRObRQxNEkVIiFT6YZQqS4kiISu
                GT4NHgjBQqFqKh95I4T1ewSBhiqqdd3Xp+KFHsUuVBAQ4AksHqoB7/zmr0W7EPgK8N7XvnB1+DT+bKqc
                IoQ2QifAK+BDAGMF0yPXuubC6A2lrlPkmu3F+pQ6pRDVQgXBQr3f+j//BC5d/fSenqxEVIf3A1nunCDf
                w7uBp556CmVZHuj83az0//jHP75uc70dde1RlbpmuJmIMDExgTNnzsA599ht4DOJyzgwIjcIzaqojObA
                BhQlAldoiVje2ff9MPjdvwNAup0RIlkz25DYCgvoUd0SueNYsAC28KWFPgmgJoErusSucF0ylpS6mqS5
                ntApO7eOvLFzgCsa6pyDRmWP2VRAYQJxq34NYnsvKsp1XR6a5E2aje/7KlKTFUiqBDUihVi84GvClkhW
                ImwqlVl+iClgifBJqIyExfy3EALIC0RCXcwg6uvnIHjzmgvd90ihWwo+KnHmMUd1VweP3/z612NhdBhV
                FWqlLRG3fkLnvSB4gQ+rkeARKhGcKq9jxC03iFuvArexMtdL5KzqVkGoIMKoVFGKqbZXXv4qfNPf/3GA
                PKAWuhcEEEpAFc5Rvp93icT0248c+NZSBAsLC5idnd1W5eluKpOD1hTnHC5evIjh4eE8aDKJy9grEjeI
                zKVci37nfQCPXX7bIPjYulwJcPfbKL7q64ClFXjuoKVD8DxYhQN3Q6i131odAjWfNnIxtJq6KTgjV0l9
                s+c2ChjizxLz4dgVRvCYoEUZhb2hqMbF1xel5bgV8RhFzLUr4vGK0s6zaIZmqaeYomj0aE3KI9Ty+0gU
                kkJ61G2jVXu/iYACrMI0VWWGRODMcy2pa9ogaEl1g+8+l7zU1aiIeXY1GaxiT9X4ekqh26i4NYmcqW+J
                9FVQL9bJovL4vW/+aiyfGEVbPCrvzQ9uExJXVe1uHpwHQgg4UdzGmLuNqkFqa3870XU5cutJnJoCrAov
                QKkCDwGkMDKIWI1LhOGhcfzd7/p3mDh1Noa6NRZISO1fmLE7G+CJiQmcO3fuQIlc/xyeVDnty0PdbRLb
                fw79KnxTLTx37hwmJyfz4MkkLmOvVDgRwe3btwfmVuSK037E5PH3fwDld36vUTr2cMTW97KntZXrKVbY
                DomjZMDLLfN6c71kSslZKNMZ4VIioHSgGIZF/JuRuVbXSqQo7dwKey4XriZqXJhayK4EtYpu1WutwnXD
                sYi+cklRFOLYCYLWhXl62lyp5bpx0FiYUNV5bam4QLwZ5dZhTl/F4gOYAhfEwqY+QEKoVTn1VU3CEHPh
                1Acg5suJD7EKNXTJYSJykfSRj0qYVwgqrI2fwJ+88fVYKgmhAyCsouMtlJpsRfpJXCpoEB/QqQJUOijd
                LCZoHh5RAYzhzhBCnSPYVeMAkF+vzjWVuxhOte/WUiirsAaHEVMWyV73xV/5HfiMz/9qMDxIY1eOqOhl
                7B7Onz+P8fHxQ7URV9W68Gy35/F+65XtkkQiwvj4OGZmZvKgySQuY7dudhHBiy++iLW1tT3pD3h0Yc3n
                gwqcGlEBAIo6HP/Uv4X7N+8AU4CSgqkESABypkr1NJZ3dSi1cA7iip5WWuS49oKrc93IrStU6FfhEEOo
                XLi6iIGZIaUzMpbCpQ3CR8xAEQlh6epwK1wBFC6SOQdXFt1cunh8juoccQHnHEK0kSPE0OyASRuNYoak
                wiGGLRPRokioJASQ99DYwoqCAFUFCVVt2ItYOEDeFLkUXtUgQGVtuBA8NBI5VJEQ+qS++dqixAVFFTpm
                M+LbUCns/Vjw4Mmn8KEvex1EBKHdQVsYISzDV0AVusQtVB37vTJSFnwnVqV2UIliQl8AuxVI6EDhYkeG
                bjFHjxoHs1TpDatap4r+0Krq+s4WiRyqIL5HgU/6tM/GN/wP/yJWEXdDrBm7h6GhIVy5cuVQzZtpHh8U
                VTkMGB4exqVLl3oiOxu5G+T1KJO4TOIG3Ag5321zpU0QTF2CNbTXALATqJSgv/sdcB/8MwAxbKkKYoWD
                VW/Wpr1RiUNsX8VERoyo2+OUYlhTCA2Sxn0qXVGTO278TJF41VWoRawqLWN4NBEwx3CuhES1DmVU8lJY
                tWxZtwdXgFuJ+JVg5yBFrH51ZR1udQ2FzipaC1MRGT2ecQqYPYiiVuG6BQtGvlhhhMsHwBt5g/e1omZk
                zps6l4iZMan4t1CTvETYNBip06pjYVmfct6C/U0J0Apoe7CQtcVSD98xBe4jb/oK3L9wEb7TRgiKypsC
                F7w3yxDfQcdLNPXt1FYi3luLrU6lUF3DBD6MQAoKzuxRlBC0AmqSJQPDqj3q2wb5cT1hVumSOAvHKgoK
                8MJQAc5dehp//7t/DoIqqsgZuz2/Xrx4cV2bqsMy57fbbVy7du1wkYOG/96VK1dQluWGxXWZyGUSlyeZ
                xk2QdmaPo3/b9gducsMHhAVOSwQKoEDgr3gzcPNFMBWQwmweSkI02y2sPRXMUZ3guuSs6QPHvd0WKPVK
                jYUF5gfXLUygfuuQwtWWH0lVqx+P+W0oyrqYwZWR7CUFLoZVKRI5+/9QJHwAyhJoFeCUd1eU8dim5FHZ
                svMs0+fqtvUyHznubbWlWnu4Scp9a4Q9a1IW7P9GzAJQBbD3EO8RQgWqQk34KHjLf/O+5/c6BJuKHurH
                TIUzRa+KfnHeeq+GAE8Vlp58Es+/4cssVFp5U9g6AeoV7bAMrQid4NHxVU3YfCcghApVtBqRUKHQ6yjD
                fUjMbxNVIHjLSxPzchPxdUstqUlZqLtV9JA29HZ46FYgDlbkSBUeZKbBUqGQFnhkCN/5vb+C4ZHxfIPv
                wfx64sQJXL58+VDO+6qKqqpw7dq1QzPfD1IGU95cvzKXSVwmcY8taRtE3jK2M3A5NnaPViJirbLcl38D
                cOuWWWmQ1DlwxIoOM1pK0GgTYsUJzpSmopfEIbbc6nrCdVtqUZ9/mxG3AurQKGYo6tw5FLGrQqsw9S4R
                ModIyiLRKzgWMhSgsqiVNyqckbICkdCV8bH4/0jgUJRA6eCKFoQLoIy2JlH1s8rVWBjB2tvcPmitvqmv
                wDFcaupbBaks/AkfiZrEnLfKA1Xj8UYeHEUVzFQ7BXwHLIpQ+fi8yhS8KtRqXFL4RARUGfEL6qGuhWv/
                0xuxfGIS4hUd30aoPDrVCtqiQEdQhU4kbCn3rQNfEXxoowodhErA/h6gz4MDdYsTPENRGQkVQkVta5UV
                UhFDl6ClMChFn7z+Qod0b/dXt9oX3SyMCCCwFWgoQQUABQwNj+Pbv/fXMDySvbx2m5CICK5evXooTW/T
                OlBVFV544YVDQeQ2Ko5gZpw7dw4TExN5YGUS9/iqbc3fb968Wfcyza7a24XAWI2pHY4BfOnXobg5i0Dd
                77Cn/VRsBM/M3Y4LQE3o6u4M3M2Ha5K4ZClCdVeG2Pi+KLstuCLpUqY6pKnOQqNNUsYclbdmzltRWBjV
                lfH/XWKGRNTKEq4ous8tW42/GdmzYogCXBZG8ErXE+4VdrBuqgRCJGKpgb1PSptH8B4UCZdWnZrQaafT
                G1at7Het4t+jWqc9JLCqK1gpKnqS8uEQwG3zbYN6UNtIYtAOQqvErW/6elTTk1hrVwgqCG2zCOl4swfp
                tC1Xrwpr8J1oHxIqVFVAFToQr5DOLOBfAmlACG0g5bUh9kxFww8ueCNu0iBkkB5yJrHva0/VKsJ6hW6D
                /DhB7D4RPfkE1lEjoEJr+DS+63t+EUOjY1AlMKfKwjSuc8eHhyEkADAzM3MgBQ7b3cgD1n/1hRdeWEdA
                D2PYcnJyEmfPnt32OWXFbvdR5K9g/0hb/+BNjeibO5yMnRE5goDAcF/yJujsHQuNQqwCdbuT+4BrJAQw
                MVDn3MXnaPfvxBT95uLTYo5caj6vTdNgxPyz9HPD3iSRR278TEDXp44JxNaTNXVpsHZcRW1L4goHRNKI
                ooBrDVlf1tKUOiN7Dlw6cAoNE0BewK1Qh0rtfAOksjPW+F+SMpKWAlL42AJLrW+qK8z+w9nvKg7MvlHh
                a8Q3hSkDB6iWUN8BAXDCCASABeoV6gRheAQL//3/iLWzU8DqCiAMZgV8BU8AYJXGogpiq44lcnYOYQ1K
                CiIFyRxa/kUEUYAYXgMctSDkrcBEuxV89XViAourLViSSXLqo9ocD/WwUI1GyoPIFQPxtUo2DlTUik0Q
                TBnWClAHEodq9T5+9H9/A97yve/EyIkxqBZQrcCslisIj5w3t/O5GLDcs8NC4rpjqJeclWWJCxcu4BOf
                +ETP2DyMBGhhYQEPHjzAxMREXdG62Xnm/LlM4o7k7m+Q8rawsLBu8cg2ITuRkK3QQJXA3/YdkFs3TVki
                ty2VQinRM9TeXQPqruJ12WTB7OuA0GxxBgCERq/VRGiipYk2xklSBpvtvhLRQtMCJVXMRnUR6HZvsH/W
                41UIYMdwZcsKHMoCXFrhRHoMqoAPIF9ByQNV/A4UcFLCBwFIrBOEs9ZY1vnBxS8v1J9DiaHw8VwFSiUI
                prIlY+FEfDmQqU4cICBQ8HAgdAC4ixew/PVvQGd8FFWnA63adv4isHewXMbABPEOQAVO110FBAeGg3Zm
                oWvX0VKFoACoDTbLZ4A9gAIhVLHlmpE5AgFkzenVKj2smLmx8HTvaReJmfbc76QOoEEWIb2jyxFDICAC
                xKeWadbqzEGxsvoAP/mD34pv/6fvBIUAphICARNBxHzlMnZO4g4Ledhog58eHxsbw+nTpzE/P39olbjm
                epXI3OTk5JZkLhO4TOKOrCI3Oztbe7z135CZwO1chQMB/MNvQ/mnf4YQyREHhZS0JY/bajLsEijUC6aq
                Wo9V5XVWHapqYlx9TB5IGOOZgwdca9IGJyABUHYf7z+39Hjj3NKb1Koep+qyog4lg43kgZ2pmKIQ5Uge
                AFVGUE2C4zr6wcx9X20vQdUeChz7mmr3cqSwoJLZwzgJVj387OcAX/4FWO1YlSt8FclsC9AOOJgSaZ5z
                yVNtFWAH5TWQOJB00Fn+CKTzwAozmEBCYAjIlRBUIChUzYsthdXTAmn3YAxfpfFBDZIN6kuH4HpsWEuj
                pA47KHzfPe6g2n3MnJQLqHoUTPCAqZpkOrJTwv35G/jFn/ouvPHbfggqASwEgY8blYyH2VAflTlWVXHm
                zBksLi7Ce3/oCFyTFDe/04WFBSwsLGSvuUziji5Ra/6c/n///n3cuXMnV/LsZNKFAMrwDJRx0RWyRvWQ
                ADDBveu9oF/4NVMohMDOuhAEYfCAHZ8M/MqjUtYgRyAxhU9jSav2EW0We52iJiPERux6DHRVwapQUSDl
                NanCaBA3Bw9Uu3+HKigUEMDCg2wEUeu/iSlufY+RFzsfFihHfzdyUF8ZKUGw/rGuiioeICFZigSI7wAh
                dVZQC0unXK7QW3Up4o3cRUsSDkbZiBWCACcVArlI5Sy06UjN5JYqEBzc00+j9bWvRzUxho5vA+0ApK4G
                YsbDiOa7oQgInQBHBXzKMUMBICCsLWB16UVIZw2sAeScnUuw91UGOACqBYR8VwkjQKSqSZpZ0DiEEMxq
                pkHGUki1SeiNGLM1vYeR/eZ93+yZaZ6GjablWoCh0NgnNfVSjbZ9sbuG4sMf+n384X/4OTz7um8AAtmw
                yXu9RyZzh/U8+h+/ePFibT1ymNaMQaS4eX6Li4tYXFzE6dOnMT09nde8TOION2nrH8Dp58XFxR4Tx6bq
                lrHVLOGgUDgFAgVT3dSbUgKG3LiB8nt+CE4DKlegIIIF5wAmBen675i1S+RSUrlCkQKpGskUgcw3LepJ
                CrF2VVivsrHCCgIAqANYuam3dcONaefaUO1qAhaVuS7xC5bTR1ZNqgiAmAktlHsa06tQbEnFdh4c+nzg
                Oha2EwFCDItGBSpAu43tYyEDBwuxSuXNfNf7rreb73ZSsBQ2s64NULB6UFAEEbAwAhVQ6QDSgRPAK+CU
                UTx9GSff+NWoTo6bTUg7FkdIB0oKUYdAFQQBIqVZjijMb04FXi0fTLSD1Qd/jWpt3vwBxQNOEDzgYOFQ
                +z4FRBzzySxvTURiSJrAygNVhUFkbFBuUjPE2ruR6z+G5cVtX3GPih4HvPdX/xWevvoanLv0dFRnc2HD
                w87XJ06cOFJkc2hoCKOjo1heXj5yZFlVMT8/j7m5OVy4cAFjY2M5Jy6TuKOxo1taWsKNGzd6JhALt0ge
                vDuYdGsipGyO/c5BPQOFoPz2fwJxAaSIITkAAQjsLNIaCxzqzPMY0hpEwNflyzSUs/5MuZp4iUIpKmfU
                pXbNvxMpRIK9b3yu+YwRiIOFZaPKpVaCWFc7kqjZb7DZGZvCRqaIkeVuac9YTBWQDEZpdFEEEAb5FuC8
                edZRZaQyKnEmLBlJ4+Tbliw/Qoj2ISESuipWnFagEODj70UI8OIhEsDBgyoBqYcED6eME8++Bq0v/Fxo
                a9jOkQhaVXCVoEKFoAGVGDFhNa+/RMBUFUEBYWsiUa3cx4P5jwDtTvS7s6IPVYYGB5QB6CTVTGIOYiNH
                UV2tijEzgjog+KiOrQ+D6jpCt/3Uh/XksEHk+uS0dcpGVDFJGUEFP/dvvgvf/b3vQgUF5cKGh95oj4yM
                HLnPcPr0aSwtLR2pSE6/Qnfz5k0AB9f+LJO4jG0N2k6ng+vXr284weddyE5IsiWqWzq7VeZBWiCugJ/5
                VeC5v4ZDAQGDqGOEiBFVLYmPP8LkP0DFg6IOfVlHAe37F9C1PVlP9qgmYMluwgNSQilY9SURNMQChxii
                U26DMQTlEN/b+FlsAtbNMSsU0BJQU8c4wCxHPEGKABDXHSjABBUjNj6edzKw5dhay5Q383ozYmfWG6h9
                3cygt6gEVWzRVVaCSgF+8hxOPPvZaF25VJON5rgPIUAEqKLXmoigEKCqAkQ78CLQwBB04DVAwioWb38U
                ndV71ssU0U9PjHAFNgJWxkh3m70RZVAPieuqoa7bjB4WLWfm2mqkp4BhQAVhM0y6WXJ6z3iKCq+CttWB
                xcYYgxEAZtyfu413/dqP40v/u38A4iEoqjxJ7JDAHcXm7ol4tlotVFW1pYBwmMkcANy8eROzs7MbdoDI
                yCRuzyeDQX/z3uPmzZtYXV3t23ljY7UnY1MIAggFQIJSLMdJNVgr0h/6KbPagIA01NWjFi6VWEFpig9i
                CI1iewdmqtPcKL5GlWtiRQKzCYmhVcTHlC3syI6jnUZU7EhBZL0zSdjCf4g9UNUWYlKxOG5d1OmtXyvM
                kJjIFDazHWHLbSusGhQUiwCqCkwt83BDJJTqQVoCCssDDGLELbCplBVDYhswOIakYodIE0BUh4JN+Yvq
                XgggCQhiLbVc3RLLWlpxCKi8BwWP0g1h+KknMPxZr4JOTERl0oNiUcYggiMiCKGNoECIqpv3HiICHwgi
                HiIey4s3MDf3Ijg2swc7kAicaB1MJHJgtYbyIXYmtXw3AamDsIXWiRKpFxCrkbxI1hgEUekhePV9S73W
                It0cyfUh1k3nkVR0Aq5JuopaLqUPXe8RNMKvHFMD4xj//37nF/A5n/c1mDx9Pk8Q2yA//UT71KlTR3YT
                PTExgbt37x6L9UNE8Pzzz9e9WZ1zuX1XJnF7OxlstrtLRr1N8parTB8dtrAGsJKZ92plXRF+8CdMjdvW
                bKHrKkPrvDeJ7iAU4u9k3mLOmXrGClaGBDGTXqMHjXy2AOWiq4ZFxY3izyISvd48OBRdlQ3WpUFFQBRA
                QesKU4JVH6JwQIAdz1sIFFxA0THjXiRy6SBKoCBgKaAsljvHRn61gNmD1L5wDW8644GxqTvgY2UlR3WM
                RVF2AioVy71TgcKh9eQTGHrqCeD82TjmoxIYvxcz6ig33PSkbgohmGGutcZSBBV0fIVqdQWzdz4Mv7YM
                8YpCACUH56wVFxNDyBQ4JoegvraVsc/VzRezEOkgNbzv98bPSSUbRMyajzUXnWQgnYx+iQgqXW+4rY63
                US4eUm4kLAzPJHjPr/wIvu7bfjjPMdvcgCcbp4mJCZRleeTITvIOHRkZOVZpOUSEtbU1fPzjH68rWTOB
                yyRuXwndwsICZmdneybTdNPl3LfdmMA8GCWCUxSiUDjg/hLKn/s1BFarHN2GgtpcyJMfHDf6rlpo0ghK
                704whkwbeXJ1JhNJopnx2GxqXLD3cCXVKh0HBbkADdQtOAgSiYhCqQACYIGzAEKI720hOCkUxBrfX0zp
                YgFpEcObwRS2ogQVBPIFlDvWJaKyDg11CzFKPm9UF3loHLcFrOrXB1P6aGYG7tI5lBdmQOVw8yZIWfsx
                VMwIAFxqlt1nM9K8HtYKy9ckLqlvoQp4MPcSHtz/hDWvD8GIIVUgJwg+emRRWdt0DCJCiHlugJnj1vdh
                f8hTB6s23Wu/ubJmBJIb3l1W3IFNiZVE2qzYTlECkUJC9N4DW5WxMv7zn78PN198DjOXruZJYptETlUx
                NTV1JAloz8a2z1f0OKylqoqlpSU899xzmJmZya28Monb25uKiNButwfmvTXzZHLT+l34vlFAyYOkgJJV
                iOovvgOeFIU4KMm2Jgpp5LeZx1nDVy3yscAAQQGFkZC6SjWAtYhVn4nYcW8OXMyNU/GxdZc9X2OlrBnh
                GlFEALRhJVETQEU8lpraB3uRihUqkBDUeai2QAGQAiAxhZCcAC6eo2coS2wPFskds4Vuk5lwfHMdG0fr
                zBT07BTK6XPQsSFw/U1JV11rKtGIqmY0tFMOZhWiXZ84ABi0xDQJXFVV8BJQtZdx++YLaK/dh0iwsCEr
                IAISgOEQQHDcQfAejhRBFKHPr62rgFNPE/pNld64QKY8uEFKXf97NMNzItqj3PUrKPaFWXFFs6jBVLVe
                5Y8HqHQCK5hhsdCwKsUUA8Yf/IdfwOu/8XvyJLGN+z8RuKTCHRUS1H+OR6WqdqfracqJBayD0e3bt3H5
                8mUMDQ3lAZxJ3O4OOAC4du0a2u32wIkgm/buLpgULITgxHzgtMDQz77Lemdy1wKk/zqkx62bQyRwbNRN
                oqM/tJsbFyxVrTbP7YZLU6gtQNWZ8hcrTkEKUmv3FcjDSQlWheeAIqh1TvAx3OqHAFKIKhgeTFyHJqUA
                ik6ALwRFXLhJWwAcKACuKOBFLJeucCBpoyo9CrXkOq064KIFsAe7EsoO7vxJ6MkRlKfPw02dhJuZBsVm
                6t2QXWrf1PjeuhQNPZWPYn0+mbnR4SLmk4G7hHSD+0ZEEFRQdWLY1LextDSHe7dvovJrgHSsgldgTee1
                0Z6KAIQAFbICFwpGuPtSFmpFDF2/ti7JikUlNQnT+jUp/GmENXS/o9g+q/kezTQJ7fd8gwOJb+TpUVRx
                qz4lDgBSRxGJ33TvfKESm52ptXMTSnONgtVBVPDBP3o3Xv/mt4K4ZQsgU4zIS+oXl+fs+J22Wi1MT09v
                SI6OEuE5bmvLoHVURHDt2jUMDQ3h8uXLfV1SssdqJnEPOcDm5uYwPz+fixP2+xo4rj3T+E8/iLB4H54U
                pe6w2bJovbA1c5CSb6+t2QJhAoMhHHPmKLVdMrsLgC2UKWYMqwEoUCJoBXIlnPfwRQEObIUP3pL8AQYK
                OwfvPZgdOFqCCBt5qowKgENl5/XJL0Nr+jSGpqfAVy6gGBoFXToLNzRch4Ubkk5PKI/ITGQRQ7I9nnWR
                tKwfwgOsVIhQkUdRTxPRD6+h2W2ERJJMfROI97i/MIv5OzehsgoV830LYj5uwZq1mu+dcmwa32gcTwIK
                CgeChJ5Sg5q01RrWgNyzLmEbtJhL7wJJYgbNm4yrHlKng0Kp0kMmBql96/6WWnbEDUQIoaH6pfO05/z+
                7/4KPvd1Xx/HJnrtT/LUUV/fs2fPbkkcjsJnWV5efqyiPO12Gx/96EcxNTV15ELhmcQdohun3W7jxRdf
                3DTZOWPvvn8NAikJHAT6rvdCOKAMJeAE0B1OxKK1BUnyf6NkGSJWCwCYYhZT3mKBA+pcOJbUED5AleEc
                EMhbByVWuIpBUIRoCyIqEOchrVGEJy/BX30KfOYceHoK/MkvhysLEBitskRRtFA6gitLUOlMoXEMZ0Zl
                dWg2fQ4LDNtY9HB9NzJ3yR11CVqPGW181EK3qbAiFTAEsFSACoqwAjADxSjAE1HtVGzm3+K9h/gAL5b3
                trhwB/fnbkRLFY/gTalSIUhAXRmaiJZoo2tD/L5ZYe3A1KxWzKhZ+shUGKieqUgP8eovPur5fRMCtxk5
                5EZRU60Kav81UTT7rQ6ysmnOM/3+dNb2y173kT//HXzOF7yxr5iq2FaaweOCU6dOrQtDHuUN+OOYb50E
                lBRizQJKJnHbxo0bN3qqTjfaVWfslRIaoLEXKqlD+b4/QKAhKHmwbq021In7fe3QmtYQ0ck1dl3w1ocT
                jUpRkdg1wXK/6t/jgrp09hSWZs5i+fJFtM+dR/vqJXAxjCFyQKvAUOHAhUNRFPaP7WfXAoqqsjwntuw5
                LwpfMIqgcIFRFgwOBbRV9JItroOY9YJepHGpFaxNlY8KjTaUKTUyZjE6y8GjBoFTK6gg9UbRswTDAAAg
                AElEQVQ0pA0Uk6ChswCV6IYAuafit6dKUwQhBOvE4AlLS7fx4N5NaKhMPUu5g+RRSUAQb0QshPhaqVtU
                SR/5QlOV61PDNvu30QahuRj2H3Mr8jbouU2Vfn2enKwT6uprgn6ihjqU2j2+2GWrz1lx/aN/btdCZZ36
                lwGUZYkzZ84cm8+ztrb22NlwNKtxr127hpGREVy+fDkP7kziNkez20Jm/Qc8NAlQFRR/9heQpcW4SFm4
                DSQIUBQgaCMJX8iaupv2EasyU0cHdbY4IsSAYDSETQUFGsyOlUssnxjF7QvTuHvlIu7PnMfCzBSGuQCX
                LXBBKFwLRVGAnaDVGgYzUFaCQgXtIsB5I0iFdnOvxFl+WBEcQlnBe0FRMESM4Il3kCKAPUNbbRTwKDoV
                CB0Lv0YFkIggXKLbkJ3rfpwgV/vmITZKNz+62MEhynBGEhiklTVjJ4KEjrFfngTKcyAuuqpeI0+uDtlF
                ZcwaO1SRiCnW2gu4d/sGgm9DESDeR+83if8UQQJEFOKlkZ9mKmAIal56kRiKCKwwt/t7V4WL5C5IXdhQ
                /4shazvPeHxViDbIoYReUqbcQx5JxRTbRj7celXeA9jYS1Kjr1wzPEypfVxSIbUbINa66hm1Z1w/0fQA
                rv31n+LJZ14Vjz+4GOXYq/UbEPUnnnjiWH3W1HbrcYoG9YeOV1dX8dxzz9UtvDIyietREkIIeOmllzYs
                XMjY5wlarYk7CJBP3AI7AXzsiYkAlRigImtqHvsCmKoWfwsIcBJtNZB8tywRPaDAx8+fxotnz+H6hbOY
                PzuBkkqU7MBlC86RkTRmuLJA6St0SgV7RaktOF1BhRIFWqg6K+CyhSCMFlZRSAmRFaAcgoYCWnqMDQeM
                DXuMDVUYHiacaHVQMGLlqDMLCRCUHAAGy1Ct4BA5gFxspyVAULj4vBTZFCiIfB1gtarX1JGA6rypyOqS
                i6wpQRCABFyehvLoBmO/m+MlYnzQRzNgI2gWRp2/+yLa7cXaE46i75z33ghdImHBOkNI6tqg3roohFAr
                c83QqooghGoL5S2sI3DdMGwfscP63DaQET2Lj0c1uJFL1/+6pBqi9nJrvo9uaQS82WLc/56D8LGP/Ame
                uPrKSObdYxdq2+i7uXTp0rH6HtrtNlZXV+ux9LjkxTVzANMazcy4ceMGWq0Wrly5ss6G5XFcux9rEpcu
                +IMHDzA7O/vY7XQO9zaMor0CQ29+AipsNh0CU43IvPUVHbCYGicEMEJsjsBgBeaGW/irc1P400tncfPk
                GAo3jMIRuHBwzv6VYBRtILSM+nHoQIlBgRBUYvpdYYarRapidWCtMHNKcfYkMDnRxpkJwakxhndmC8LM
                UCHrmNAgaCBnFYVwMTfPxRClgiRYtYVE8gauSZf19XSx60KVaCsAZznx4sAU1SRWCJnfGqHblL2ZC0fJ
                qLY8AdAUwBpbQ3VzBxNZaYZLu4qakTMGodNexJ3bL0aVqfucEKp6Qg6S1LUQDZEDQhAE6UQ1LdTHV4So
                1kUlLipVRvhCrexpEKgIJB67ec6plVhXgfPrSF9NynrIHUHVrycMpNH2RRsWCX0Er+4bgYHEbzMislGX
                l42KIz723J/jCxptzRhRiVZ+rObv5pw9PT29qR3HUVzkFxYWej7n47A+JbIaQqg7OqTQKjPXhQ8zMzMY
                Hx9/rLs9PPYk7vr162i32481kz+0u2wydQR/9heW48YACUNIwSLwUJTEEAeoV3zw5An80dQpfGhqEigd
                CnYo2YGKEmyFpfBUAWjBqQeEQMrwDqBQwVcBZVnCVYpCS4yMtfFJF1p44mKFp84zxsccCnQQ2BvBdBzV
                vwLKQ0j5diRRCxQFkfUrlWBmwbF1KlTUrFPYGbmQ0CVtasFeSRWJYmFlclF5gwOkshZRsTpRiaMCZ31S
                SaP/XCS3aeGHWvGG0xJS4v9n793j7arKc+HnHWOute975wIkO1cSCFhFQD2tghVsv5abl36fhIRqq4hW
                j+ecQgJ6vBytp1gFKpegp9/3O0du2gsGUL9alEDtaftDRM/pV0FALQZCSLL3DiEJ2fe11hzj/f4Ylznm
                XHOtvXayk+y9M9/fL7+svW5zrnkZ4xnP+77PAxb9iDkyLFnVSLuwio38ilIpEOfYNa1q0EzedWFsbB/G
                h18FqRgM+xoMowYkWmxKKejYFPdrpRArDYYDY7EHU5qNL6un/HScgMeQbXNsmNJ+3xL9vzSAq2PTNHmG
                DzmAlW0K1gHHkF3LBVkBsHPHOvyu8DPe3SJHYy773saWfwSBSdN1rZ0O3YkD4NwxDifvvr4+LFq0qO5Y
                5vnbzpUxkJlx8ODBEy8TE7COISPnmDd3HoeGhnDgwIFcVq4AcfNopZY3IGZr37TWkFKmTLCLmA0nMbIe
                ogzJMMyHVHi5FOHBkxbiX3pLmIzaTNpTSghZRklrlCoSKGtUCRCxQCRhmZcyNFdBVIZUGue+RuCM1QKv
                ObUDK06OwCI270HZyjlYhX6hwVyBJgnB2gBKtur+BNNUYFNakgiKE201VuY5bWv6zLdKw485Zwcn8uve
                wTXjucoCJMh0HVprLysmZksDBYiMP6gmAGxV70QVmiWIBVgywBICsbWqkJhQHdCVTiiqAJgwiFEbQVl3
                vyRCnNriKZ36Ryxw4MAOqMoYhBaocg0kNFQMz2x5YBQAQp8+9X/HJr1qn4d9HLMGVBywb7aeTcXQCOvj
                lAdE7vMuwu2Fv4t17IGXeb2+gxU6AVohiDMeuwqC2evQ6Rzglw5bS+dURFJSN+Z3ZRst0jZfKvNtCtVJ
                c96MiwW8I8iJlFZ1x6e3t7dOTmQuHwN3fbgMUSNG9kQCdI2iWq1i+/btvlau0eJnvhI00Xw/+Xkn76WX
                XsLk5GRqEA3bt4t06iw4dwzLMgAkFFgL/HVfO/6up4zxcgkCDCHbIJggtSk8JwIEx4gjQiwVREwogbD0
                pBjnndOJ3/qNbqxdFkFyO2oCABgSAhoRIEzqUXDJMmpVAATICFqxXQ0aoGVSholjgen0FEnHJ6T500+8
                DEUSgq1UiSBTb2VV+QlkmypgAIGdjI1GHcA8aSzIhIaABFibdC97A1j7N5JkqDIyJBpGeNisZIFKrQ3D
                1QUGeOoRa+fk3CjYS3toKJtWNPsWgjfDetUwfGA3OB4DE1nGC+CqKVZ0oCwF5MKaODYsHjFsbZxh3Nhv
                J3nM0AHQMhIjphYvnUZ1QE2BLRBUKX043UBqhJEW+mWOfTNDolPHXnokZN7SIsBqyu5ZpFKx2qM6yor+
                TlFHJzWwa9e/2XFOpsYy5yV7IgA4IkJHRweWLFkyryZqIkK1WvWp1GJOmhrIDwwMoK2trWFTy3xd2ETz
                /QYPT16lUsHOnTtz8+eNhUCLOC7njzQUIpREDZ9Y0I1fLOmBkgQJDaEdozUOkp2mk1FIaF3FW97UhwvP
                7cQlv9lt68Vc56aAhmke0KRQIiBWBCWBCApKl6BkBaTLECJK6sJiZbs0te8yNN2ZGoJLtqEgYeKsmJtJ
                Z5L09VHGEUGYuiVtatsI2mjQsbDvMOlXAQFiCU06sdskBaG1rW4TZvLXBLIdqxBWJBcmLcukwVoCVIOA
                BHGMV4a7MVptB9EYgAisycgMUxUMq/6vVWBN5oBBDVqLhO2KaxgZ2QVdG/dabtrBJ4W6JoIQuLFKM2Ih
                82be48AZbGo1ZP/iABymgaXmOFW7R8HnHHhkVr6GLt3pGqRRtTIsHdLpUp2Tlg3BmDnueTVLzjM1w8tZ
                ADdV80N2P5Iwfr1p4WC3CD0xpEaYGZ2dnV52Yr5JcOzZs6cAcC2EI2AcK/fcc89h+fLl6OrqOiF+f3Si
                3OyvvPJKrusCpyx5CuP6WXRrQrI2MIdrqEIjUmyaA2qAlsDKk9vx3st68O4LF6G7KwKx9IBJMYEsO2fA
                kTbqGTqCIgPapLB1XqQAEEhJCME+pQhYuQ6rWWeYNQHBAiwM2yEAaCv7YVw9AebIWH3Zsj4jKCzBtutR
                kIRGDKFNty2gjOcpR4apIcPSuYYEQsn4xzIBXDV6dkz2l7paKHLo1+6nBhAZNwNW2DnYg0qswJhAiQlK
                VKwWn60j0bEBPpYVNP/Cui4jjqz0BMbH9oMrw1DuOGkBgoLSZHtda97Wy7NkcS3FiFEdu6eCzldl06cJ
                Y5eALPcZlYBMhO9VaYHfAMCZBgmb/gxedyUUrtlBAIhD4Ik0g0dO9LmBbp2uq7Mz11eqBg/1DCFyvrPR
                JK5JgxD5fSYq2fMe4UTRi+vq6krphmUX7XM5hoaGUKvVimlgCraykU/ynj170Nvbi6VLlxYgbq6xbtkb
                WmuNF154IeW6kPe5oqFhtoWzuWIoxRCaUSWFD71jMf7DhpPR1UUwMrgCLGIwl3z3pkYE8tIP7mQLaLK1
                ZSwArkGT9VGFtJMi+ZQXeZcEAwAZMOCNAIXYNg1YLwdhvVaNYznAsQE2ZFOqwmnQOZdWZQrQSZmGBZIg
                LUzHKUlb7GaBE0nzvBK2K1WYNKvHulYLjqVtYDANDkSme7YWa/xyZydqqgIhDKCscL3hRR4gMfVWlpnT
                DMVArXYIamyfZ+vyPusFhjXXpVNJm+djDtOtIfsW1z0PzdBKWU26oEvVfqdrgmCtDAh27FtY56YQMHBI
                ve732wJAnUq1ZgGWOx66qcBwCORg3UGcuLS5xrKCvs1q4fK7VtesO8fcJ8Kk2Imk0b2LhGdI58MEnceu
                9fX1zbsUqotXXnkFw8PDxRQwjXk/T5B/eHgYIyMjOP300+f13D4vQFyjExQ2L2Tr3oqYA+fVTnwb3/Pr
                uOxTY+jraoMmYXXRJGIolIggtESMCiJqh1YxqCSs36RVyifbog6nUGKBnGYvKAwSnkkjy8IlAMw4Gmhh
                0ryCyzZlZeQ/SCuzT2xkSUytHPx7jBOSYauYIiPeSsqID1spFCVi25QAux/SDVVW205Ztk1AC2nqAE2L
                o53kbE2d9Yglzagx8P89V0KsqhBkPGilFtCSc+Us0oCGk7Sq0r4OrTaxK11kr3NSfaTr6880eRDnmDUD
                dgxwy3aGah1bGRKdqn0LU6YOwJkavTjVQQvS1tJLmRRxpqbP1dklIK9+H0IGzrF5pHNsvKDqgFyWJaiv
                nzOp8ixQaSQrkn1eWpFrI3dDYMQAlSAkQ6u5P8Y1A2YLFy5MuTHM9RRquO+HDh06IbtRj9Yx1VqnpEgK
                EDeHTp6zzcoKJBYAbo6cRzKslwSw8dx/AlFkasRgWC8JYavIYsQcQRIQcwySAlCcUFVkUo1sHQrSQM42
                FZA1vPfXiPbeoOTTlgRhGwmYlN8PY01KzhELmqo2ratgTU5BHg6RFeC1dWykAChoKtkmBm27FA2z4irp
                LOVmASmDFNs+VwfupH+PN2UgjceeZChdM9e8lrZ5AyCOwBTnggRnum46YUXghsDQ1X1APA5FSDGdYUOQ
                c8tIAEw9YxU6LrhthmK9Xv8tSKmGOm8+/ai0T5+mat/A0K5DNgvOoFJdpiGAS+0jBx2v9rOk643vw2aG
                9PE0DFooKeLBW2asClOwWQDXTBfstDPOARMgSEBrAUH2ewQB86SMKis1ccopp2DhwoUtL+TnEgkxPj6e
                6kYtYmauG2bG4OAghoeHsWzZsnmHAeYliNu+fXtdo0JRHDoHWThoMAsoOhkCI4CYhNQlaGv/7myzSCgj
                6UHS6mQZWyPXKOC6D5EFcm6ytfZUxm9VAzBpKcECWjjfUXh3BGIFDZcu1SAk2yAWYGEAHFk5EE0SZOvq
                XKpWgKEtQCTUrEyJYeaMjIgFaB4sKZvSlaaOLTBFN9u2DRxWb+6Jp4HxYYKKFISOAFHzzRYaE7aDsZ7l
                SR7XwCxtowMZDbh4L0xNoIa2TRPOQspp2rHrro110CCRY1jvatesJyirNGBKs3WJJAm8vZZKATjXmZqq
                sVO6DsDVdcxmauSyADOUFMnvbG3u25p0paJh3Vs9eNM2ld543FJg9C1c6a9kEhG0rvou5Pk0Ebtjs3Ll
                yjoh37m6MM/u9/j4OHbv3l0M/DN4fENnC2bG2NgYnn/+eaxdu3ZeacrNKxA3MTGBnTt31gkCFjGXQ2As
                Og0L4p9AqQjWjsHUv8GkOp0PqmlAcHitZICgp0Cs/IcHcqZLlSxggzAsCblaNgq6Q601JZPwDIcgWKkP
                m251KU3P6rmPSgMAyGi6JSwcgyBs44EBowZEMkiTZ7lMowB5dlLbL0+kTSSIGKwjKGgIIvzqpSp27bUy
                JVWAqBYwnG6CbCxcax4LQNegODYNF/oApIpBQiNms++NJDEcYEsBuDpwo3y6NGub5Vk1laRaoRzDp9KA
                y4EzZTTiDG42Ir/aiiS770unS1WKZXTsW6pTNXR2yIoBZxi9EHCaRhN4gOsAXAgOG4NnTkA71wOZMJau
                OMNvUwhY/zUCJM35mrjwuAghsGbNGkgp5w0DF+738PAwhoaGCrLhKC0Awr+VUti+fTtWrlyJ9vb2eYER
                ovlwoxMR9u/fjwMHDhTAbR6BN0CDSaMizoTmH0OS6eLUQKDnBs88CEFGHkJEXvLBgC/yKUID0GIwR3VA
                zoil2u9jBgvbH2qJMXJjgiBfF+a6T2GbLGDrMIQfPGwPK8MwV/byFFpCCxHUxZGvizP1cDZl60SBYXTh
                TDepAnENWhjmTUgJRhUgoFqT+PFTo2AZuU9lDmumsYfT95JP/DI8gGOuIsJ+22CRfw/m/e/Amv9bs29M
                CF/LOhsk6Uzl5TNMmjZxZQgttEz9nAHxKg/gpRocdKpZI9uBmgVwrhbPpVJ9w0IGwLmGDpNCJQPwmzZI
                NAJwjdOqYSxc2I9lq8/0Cw8H8o392vwBAu3t7V73az4CnFdeeQUHDhwoSn2OIbgjIuzatauutrIAccfx
                pDjrrOJGmD/BZAAEoYrh6N/hlNq9iHUJkhSkjgz4sqyawylOf01BIWJvs2pSnCHgYwAiBkNAsLQeo6bD
                04A/GLbLgz5rlUWAsF/ipTlscldbuMTapFfBCpzBTdp1sNoUqLPFAmoGaGqXgo09hciBwboBjdqDRVi/
                TOOrqiGVxE9/NYmxyqQXgCXOsBXhzuSAMR00SmgQoCsQiCGjMcTuc0KaekQHQATlNka4cEAoj30K05yC
                kWt9lW42UEHnqtuWzsiEpMGbB1la5Qv+5tTtGdsJI+qMlOivzmUWkQJpKmHfcgBcI2AG6Nzn8z7zxvPf
                YVlegIU5TsRlMFWR6sqew5HXwDBvxjdmDA0NYWRkJMUUFWzczDJx4fEMFSuICAcPHsTExARWrVpVgLjj
                eSNs37491XFaALl5chNyBCCGJqPLNo4z0YFfmfolUQNY+iYEoYVhpexEKK3orWBpNNoss8TQCUCzoMx3
                rdo8qJH+MMXxAnYbUFBkjLFYx1YGxNShsdBGLsI6ODCEqdjzDQrKAzHTnWpTQuw4MmVBkE2hketMMHpf
                hpWLoW23qmPpTFOFMF2WBDCVwKjifz1zAHFNgqnmQVw4gPl0asjAUcLKhaBEgQClEckK2nQFsZSQWkOr
                ODhPIYCmpvVeKaZN6xQggjIMqwNuBpupph2g0JwCiEntnPINHmF9XPJ3GsDlATt4xi3Uo6sFAsiu41an
                2MZ8kNq4Fi55Tjd4Pn9MW3Pmr4O0uXYUGJE2NZHK1Bekzu9cjBUrVvj6t/k4pr/44osNdeCKOWxmsEGj
                4xnWyk1OTmL79u1Yu3atZ+kKEHcMTg4RYXx8HHv27Mk1yS1iPoStBOMITMCh8oXomHwOWlDSyWlRhEbZ
                i+SCy4BzLYAKmhWEZdoS3TcD5LSpK9MEFi5VSSA29WfGlsrVrukEfAlbKKcFiCIj0MuJMIi2dU0GvDnF
                OcBhNLI1dRrC1sCx75KFA3cupQwBQmy/i1NHiGy3BUFh15DCoeEJRMI5SSQgzt0bzl8zDdjqgZa222dm
                dMgx1MoKHGvr/5pe8eZ1Vqb+J53b2elBFWJrd5VOg6YAXwDAXFOE66RN1alZP1MiMuxcTkOCc0tI+6Va
                DTvOeqEmdXkOWHrmzaVOYay6wrSxDkR980BZ/bF3i9CEkSMyLiTSij2737ly5ZlYu+7fmSuB2agPEsCo
                2YXD3BvPXeTZJs0nQDM2NoY9e/a0fDyKmNnrKzs2CSF8nVy4cGj0+dl4fqK5dgKICIcOHaozBp5PditF
                wLNVIFMXN15+I3hyMYj3AZYhE6ShtUlHku1MNYK/7lpgbzbvWBViaQEfAaR8CtUwfob5chZS5r0qYTZY
                QJuiI4g4MmksQ/GZBlYr6qsJEIG4byIw4dKilGLnyIoNQ0cBhUJWyoSsPyrgZUYs6yhYQDNDUARNwAt7
                XkV1UiEWpuZLUgNZHUHW/kvnrlo9Y2eBV6ltAjUxmXQ92vOSLbpPpS50vhZdAvjSUiRax3Vsm39dpxsf
                XHdqfW2cTrFvLs3MOp3a1KzBmusaKlI6b43kSFyxPSyoR5A+zgLYBgDOgUAHklMCyan3KGsBxza1TyDN
                OO933z9vbnG/uGDGkiVLsGDBgnkLJF5++WUcOnSoGNdn0bXnyB8A2LVrV52ETTYtOxvxRTTbL/zsgdu3
                b5+3zwoHgAK8zbOBj9JsHFjjlfZLcfLEPcZs3rorCDJsFlsTekLSUWpkGkynoPaep0ZKxLS4MqwiiWUz
                bBoWBNhaOUIJFpUBpCE4aEJAIoViujnNvksvMGy7VTnhblwDhGPn3GRvpFFqXuRXWYkJS9n5OjV2zB1p
                MBvPCq0qECJCrVZDtVoFLGuXx2Q0WpU2A3FlxGijmu+W9INb9jOpVa5O3cehtRRg9ehEI0kO5Wvqwlq3
                hLlT9ZZVujEgc40S5ntMqpW8mLH2oNOxcATT1NGMPdPgFPNWrx/XBCDbDtRGAM6Z2EsydYmayaTymdF7
                8lK88c3vxFy31grHdykl1qxZ4yfT+TaeMzOef/75hhZRRcwOjEFE2LdvH+I4xkknnTTl2FmAuCkiz05j
                9+7dmJiYyH1fEfMriEVikWVByXDpfCyc/B4ifsVqu7m+TW07QGte8405aWSgQCQ4IrLsitNV04AQ1t/U
                pWEZQGybHkxtmdAC1ngB2ncEGncG1mQkHtw+w+jCOcaJvUSISsBj2HDgNOVgHAaMjpwFepaF044Bg7Zi
                xwQlYwM+BJmar7iGiclJEHTq/glr1ZrdL6maNSSdq21iEnFk6+D8OUmvVBuVMTj9tqwdFRFBq3R9WwjA
                QkCjU/Vp9dZWoeF9COw8wKMMqNOwDQtx3XacbhxTI+03bbeHhHlzqVVf+4ZUHVw+G5cwklkXGbM4dale
                ASE0lGWWL3nnx+bH/W1/7+LFi7F48eJ5O6bv378f+/fvT675HPvHImYHmHNx8OBBTE5Oel/e2X6u5kw6
                defOnajVainUXNS/zedwDQsJk0Ws8UrHFVg6/hfGK9LXwtkEpWBEWkJZlwT4zlUCsQFomo2+HChOfEq1
                duRe0L0qfXMEmKGIPYaxyNH+LSDIejKwM63X1h7MCfIa9wnD8FkZETKq+qYcjhM2Dw54unosN7ElsiOG
                BdOgWsluw9TEnbw4QmVy3L5X5y6GpgJwIVOkYQSCY1mBarMG9iwAinPvv9TftsbNNS/UMVFaNQU52dRq
                mPo1oCcNAJFxPmBoC96yqVOG4Aa+py59CvafCdnBkElxsI04AW0JI9ms9q2+6SPr+5jo9CnjrGEdOfpX
                nIk3nf8un8adC0Atz+bQjd95oqvZTsK5GrVaDS+99BLiOPa/t7B8nL3XafY+nZiYwI4dO7BmzZpZzwxH
                c2EQ2LlzJ+I4Lm6CE4qJM+CHrP2UsKBmtPQGjMrz0a1+DE0GkLkuT6Gt7lsgL2LAhLKTfNLwQOy2YfTg
                jJ6c+dvpy3nyy4I1IkrkSAIwx3BCvjqRHrHAwnScChg0SgE7ZwV/tXNmcFIn2nemptCiq6VzthEWKmgy
                HaQkJF6/rh3VuAKoCCR0y8xGQwFaK88yLmN0tddSADt0fMgDYQLZ9CBN0Z1Zz7TlCQQnwK2+0zRk3Ehb
                SBYAN5cuZWTStLYbOUz55qV5U8dKJ9+VcqIApv1/tjnE/daYIkQwrh8KwB989NY507OQVwrj/l6yZAl6
                enpyr8u5sjjPK/dxjwcHBzEyMlJHOBRz19wD4i+++CJWrlwJIUSRTj3cG+WFF17wA5yUsqgrOEFCkbL+
                prbui213porxcvtV6B77GYjHQRQbeyjbcakoRkS2oYAT3MSaQSJKRHptTZcnwsBJ+jKUabBokEl7XTkA
                VqfOiLrCyoNASBDHpo7OGZxTUDfnEKEILB0gErcHLwcS9oBaD9agOcJoqhFQqoCUhBACMVchWODNr23H
                P/7Lq4iEbBnENQJjDky8GhMW98QBOwSfLm404cYZ8JYCTE1ATbZOLJQ+ya2fCzXectgzL1+SZepCtk+n
                wVR2+4nzQqIZF26/EShtDNx0Q9/U8L2CjIyJFlX83vpPo/fklfY6qGEuasG1tbXh1FNPbXrdzBUWLmS4
                XXH82NgYBgYGpgRvBaCbOwuRSqWCnTt3YvXq1bmOIbOD8Jilyx6HgouU6YnLxLEV2hU60Tdzf3eqp3BK
                ZQugSr7b0kh0SOPHCQHpxB0hUjppZNcu5jlh2DoRdJCy+awiDaLIgijhOiIsU+Y+b3S6BEUQrn5NUorG
                MwxeUCALCZdiTf52gC4R9nXQMhlUHIC06VYtzVTu5VAIo5MaH/3cL+176lOpzSaQeoZIGg9TMM7on0Bb
                u2s0Ebmfcd1ejqrMMuetAB1fL6bzGbkQOAHIZc/M5lUu6NMcN0zhpqVS0uLBfn8oqasDTY99I2dQb5nM
                VH2g1hlhUgZpCU0xlq08A3/8mW+bEgDL9s4lHTghBFatWoVSqTQvwYvLFmV130IQV2SR5lbkMaxr1qxB
                qVQqQFyjgxX+H8cxduzYkboRso+LKGJR9f/FwvG/MwK6wtQREVB7fWMAACAASURBVCIj+4FQuFFYQi0B
                SwxYwJSAOdOS4ICS8ACLXV0dkW1CIPuceUyQiFmDXB2cJkgnGyICcV+/P2Rr4URqH52GWwiSvIeq3yYS
                RGsBndQGYGpEIFb48c9H8Od37bSpZg0NBUFtIDBI1MCBN2seiDPAV9mOWWPG3lFmrFs5YRhPTYkoMfL9
                PZvVgjl9vmx3ZzOgpzOgqpFBffY7UjIqGbeFLHDM/V7GlJ2nefucTNqtujVknxMQiNHW3otPfvH7aOvq
                tnWAswMI5AET12kaHvP+/n709vbOyVq3qTTCmBmDg4MYGxtL+bwWc9T8Y+RCIBdFsyuBOSuYuGYALivi
                WwC5IhBgmf6x/4YO9a/+2iAdmRq0VGu4sKlWkWK0mAlknMN9g4BjDpzEh2BhWC0P5hzQsg4KgsGuKoEN
                k6azINLWuDGJVEcqyOrSZVk63wEqMtsUKXZDa20bJqRh7MgwRoIYf/n9vXjw+/ughATr2OiNsTLCxham
                NbqPXD2c0VkzQsNaA2uXaSzsNsxco4L0gJ9I14/lvK95fVxzkdyE4YhtzVtjVi6UJGn8fRkQyIb+Dfdn
                KqCZl8rNNi1MCXC9arwGacLHPvc3WL58HURkpG6y/qrHe2LL+x1CCPT09GDp0qW5jMZcBXHhc3v37sWr
                r75asGvzHLy5hUp4vTtGrtHC5Fhf57MqnVqtVrFjx46GB6DwlyuibqCFwMqRzSjrQ4ZdksoDIFP35q3o
                E+88ZMAcuZQmpZg5B6q0Zd1M3V3IjNn3s9kPJ8JrrLtkwJY5Fi/dsODYNWPtJT3gdAxb8iOzRbVJHR2T
                Sf8K1wEHa/2lBe59eDf+6rtDiCiCYECBfVcnWR27/IHHsEDgCLFNPwpF0KUY565llMoG2jWTFmkEWvzj
                KVKR9c8pD9TCJoncejoKmTLtrbLAok7yxIMtbmKLNc26N/e9zQBbIzbOhSTGez96B1577ttN6pRisJBg
                FUOIcurczYaJzi20y+UyVq1a5f/OAri5Xg/mhObzZHvcwqqYn+YfC5d9fOqpp6JcLhdMXBi1Ws0DuGzX
                VrHaKaI+BEBVCCWhJGHl8CfQro0eUwyyTFEC1lwnp+B0+jQF5vz7s0K5VvqDpH+cTY9CULoGztteWTbN
                193l+PNxFKQnM2ydx3EEBPVxEoDiCKAaBEuw3WaJBGJtdORIMB56/AC+fNfzkCgbP1ehoFimGLO642pB
                iGayXcFWHw2EDilx7msmfF1hIzCSm1Ylbuinmvecb0LR+WAva/dlGDfbgVxX49Za2rTVOrep08aqKfM2
                1US/8ao/xTlvvgwQ5Du1mTQESrMGwIW/o7293XfxtcJozamFIjNGR0cxODhYd96KxoV5TBBMcR5PO+20
                WdHsMCtAnANwhQZcEdMFcsTGlkuihpXDmyAwYdKiwrJNmky60XWJUmR6F1IG8DIF5hygc40LptYlqgN9
                qXo1a7HlAKDrfE2aIshDJolgO9lJz9XcQfkGCAe2mIRJ6zYdXCwbCAVFEoIZ23dO4IOffxZaSZhMM1kg
                EHx30MxggJOxDzPvC7p6NaG7M8brz7BgVGlACijN1kKsDEYVYc1dPlBTqYVaeuCUdTVujTxZG0t76MZp
                WE4cF7LgrdV0bzPmLa9GMPv7Jcw51p751GAqgbmGDR+4AW84792zno1wY/Xq1atnZcF3q5N0aL2UvbeG
                h4cxNDRUDLVF5F47YWr1eAH34w7iHIBzB6YoDC2itdAJyyUIrKsA2rD20GYQHTSm6iRAumwmdEke9IFK
                KdBT3wBBdSyed4cQwtfOpd+bpF9TNztRHbNm0qgiYMJE6nPa1b+RzmXlwpo5s408KGdq6xRpSBYYHWP8
                waefwt79Gsw1CxJLKeYtvXgyTQ3SeqxqMj6tJBRYCSzqUjjrTAmlGVIYT8+YYwghIFhAIQt2dAowSgtG
                G7F2dcCJpm4mCFkwB9RC4NaUYSOeVs1bPfumm74n+5xPLWq7aBUKpDQu/9CX8KbfeAdmQ/9Cs+5KIQRW
                rlyJtra2ece6MDNGRkZS4C18vSAZigjjeKdWjyuI01qndOAKIFfEtEAclUwXpTLMm9QCVQmsGvk0OmoD
                YBLQ0jBOwhrdG4YtAFop0drGdXNpds68NwR0hkGzHamhb6kDZ2QcJlza1Euo6AAckqgHYjksW4LpqCFQ
                cGbpmtoQkTWLJ4X/fv8Q/vuDA5BagqWG1nGm+F4ETJ0Gs4SEkebQXHKjBrTW6GwHfuMs01bhRXTBlmnU
                UzBx9QLAzYBa9rP1wEo1/GwugENg2TVFd22zmrdmv7HRa+E1LBzQ1xIfvu4vsPaMNzcE5rMB0IU1b42A
                0FxMJ7p9HhkZyU2b5rGSRRRMXOg+QkTH5bo/riBu+/btuUKXBYgrYmoMx4BgMAlEGlAp8CRw8vhN6FbP
                ohQLxEKCqQqp26Fk1bBzImScQjDn/FgNW6bthCogM++nOmDlWDk/kdmmCMHwNlyOUXOyJcnnMmwbMrIi
                qE+7pj7rWbwE8Almv30WZD1XgYNjMTZ8/Od4+eVhsC5Bw9p4UQJWJCQUVArcGVCnPPPIpFEWhLecDZRl
                hBqqKENAkfB1bI0AjksZc44ocEM2LjguiYyFygd4OtvFmgGVLaRP04/rAWajCT2v1i8Eyu6zbhEgEOMT
                f/Z36D1pGUKXktkE4Bx4awWkzUUQd+DAAbzyyivFuFrEtEBceC/n2cjNCxDX6IZ+8cUXUa1WixVOEUfn
                uoPASZVvoW/iQbCMPDFEAlBaQ4hSnU6bA1cJA5buVm1UE8dIBH0FJ+8JJ26N+g7ThMELnhf14DAPvPl9
                zex/6zc+8N1/2IdPfvU5CI7Ago02nopNCpXqZX3qQZYCaYKCwpvPKqOvW/uaPUYNhJKpN5IGlIT6YVm9
                rVY11EIpkBTzyE3YM+JpMGzcFLzlPc4CNH8qnWMHEaQWiK2tmrCpcE0aC0/qxx9/5j50dPYi8c89NiAu
                FGjOK84XQqC7uxv9/f3zbvJ1j19++WUcOnQoJY9SzENFtLKwyQqdl0olnHrqqbnat0dzUXNMmLjsj9i1
                axcmJydzNViKKGJmLmzzf0ntxLKxzyBi03ygBUNoGTg0wHePhrVwDogxYGvQwsaFENBRigFkq/0W7EnC
                HmWK/c21L+uBHfJEf8MUG9UxPId3kCRIMz751e341t+/bI+btk0gUW4NVwhuNBiCy9BcASjCyn6F166U
                vlNXc7UeZLIAo5Fll04xf9kGhUZAyzkqpMYRqu9OzfuOxiCusc5bK38njQoK0oJIDWF19zQilnjNG38T
                7/3oHSAAJGqmS1k5gehjowXXKPNx8sknY8GCBfNKIiT8DTt37kyRCEUUcSSAzjXHlMtlrF69ekoSa86B
                uDCcOXDBvhVx1EPYzlIdYcXoJ1GOX4SOlEmrgutBGItcdosYgJBBqT7VsWpcx4iFjQhUx6xlASNg6uP8
                pCnyGbY8cHfYAw+sJ6gQGBmdxPs+8Qv88oVJKDF1Yb7RnTOpVQlGbF8qR8AFbyghKsXQmiAoAijO1J6Z
                3t1mQKgRs5b7mKbHsjV6PflbNwWN4diVx2Ilv1NDWIs2TdqwtKShEeEPP/bn+LWzLwTJCFoJSAGwroI8
                M3bspQuklFi+fDna29vnpMNCM8bN+WDu2rUrl/kNu1OLKOJIgNyxFro+aiAuL2Xy6quvYt++fVPamRTg
                roiZCQ3JgJIS0Ao9lR/g5Im/tGyTsCnQFMWVoxmXSbfC6L2J1OUZNER4ayxR950e8CHxXU0PBCEDk1M4
                Tvl2WY3eP9Wg4+4x1/IhQXh1rIaN//k5/Hz7aMP7OtliDIUI5A3djTSIIoHXrxLoXy4BqoB0ZOVdFBCk
                aZs1PBCsP2kOeNJag0R9zVyehtdU7Fv6PToAcaJl5i1vvBIswEKBWYK5BiIJwcDS1Wfiw5u+ho7OToQS
                L5IFYhIQpIIaxGPDwHV0dGD58uXHpZ7nWEQjmZA8oFpovBUxE7hn8eLFWLx48TG5po4ZE+datrMq10UU
                cZRoOBBraGFASqwjRKTBPIwVI59FpPabxJZ0TQjC0j8ySBvZyZRD+6tM+jN1HdenOZ1HajMGzqVhw/q4
                sL4uD0ymoWoLkC6bmrUaZUICUICgyEA5wdBM+MWvRrHxk89hdLjmfwdDQLKGIqNy1vToMyAjxlvfIFEW
                ykgFU2TSniIGa9EYHLnWXb+vraVFmzFs6ddUU3CabYTIDtCtDJmCAWYByGR/jP7bZQAiHMt0aV7JSuhr
                2mzxPZcYt+zfQ0NDGB4eLgBaEcclli1bhu7u7rkL4sIdr1ar2LlzZ1EDV8QxBXHgGiBNbVekBGJhwIuk
                CN2Vf8DJo3eCJMA6BokywDVoIUGIUh2ZoYuCB3PIq2UTrhU0e5sFWKpeM24qJq2eFcy9lad1dDSZTlVm
                A0y1rhmPWZTAOvZiyYdGq7jiE7/Ev22vGI04LaGdT2vzLUBa+d/+k2KctZaglDKF9MwQEKn6tekAtMaN
                FllWLahHtB6rjWrcWtn+9MdAI37cv+p0/PFn/goCEloAQh8/CZFGrNtc9DjNgmqXMh0YGECtVmuJeSui
                iKMZx0IM+JgwcWEnarEaKuLYDPAWMMDYFkkGYgHDBElYc/cylozegp74J4ghERES3TcgYOds2pXstcuZ
                BgjrCJEGYw78ufRsPtiqkwjJq4HLBXhHlvoyHqrJgkq7+5Kch4BEjTXKzIhJYWJM4PJPPo9/2z6BmJT3
                kG0G4lx6WOgaWLbjrDUVnNTnHC6ad302A1jNJUnc91JqXxp9fzNbvyMZGgU0yh29+KPr/weWLT/LHFeq
                gnQEFhI4BtZZjlGUUqK/vx9dXV3zavwNr4NQnDePfSyIgyKOC5UgBE477bS5nU4dGBjA6OhocTaLOLYD
                fEAWSdbQQkIbiwUQNAjapEKZIXgS/SMfR1kdMGbyQni1fzcl59XPNQNZafZM5Eyw0tfG5d2BeTe9ngZw
                q/+8yDk+CcsYmsUL6MQOigEtYkMwWnHlT966C1v/fngKEBODIKFY2Po142laohhvfK1Ce0k3BU7TqW/L
                drBONaS1ChbDYzndYdKkTt9pj3sM732qTSr1WDBxYV3OdEDRXAmtNfbs2YOJiYmG56kgDYo43tHW1obV
                q1cftWvxqIK4QkCxiFm8RgIhhoUuKCOC1C9ixfANYB6BT6WSkSPRGigRQEpCCe39WHVYB4eSZ7KygKlR
                +tQ1BISvMQhIgchkG65xQvD0QFsLU2LLwEcTIDWw9Qej+MKduzAyTNBk0qcxCFIBJE2zBFi6Vg5oae3C
                NNDbWcPrT1OQUoHI1OFFYLACOBItdKa2tr+tDG/N3tPI8FyCEHNsRZGNt65g4IJ3XI2L3vWxo7PingJM
                EhG6urqwdOnSFBM130DM+Pg4BgYGcusWC+BWxGyM6S6ojguIy9ZUTExMYPfu3XWr6+ImK2I2RNidp8EQ
                wmS4SiQg4hfRP/qnIB6GcEXoVIJQBB3VQDqxz/KA0Nt1GacHYp0BWBnGC1EDECYSAJkDPIMPTHVrT/eI
                TD1YZFgQwcbWbPdehY/csAfP7qyAYwKJ0PZLe6DDFEOgBK2rBrhSjO72COecVkOEClgKD+bqvVdbA13Z
                1xtZarU6/jSSn2AyDC+hBEYNbzj/3Vj//hvSDTEzeI2GvyV0oZBSor29Hf39/YiiaF7fr3v37sXw8HBT
                NYM8n9ciipgNsXLlSnR0dMweENesEFZrjR07dkApVZy5ImZnaAZJY3vEAARraKFBbIRutdAoV1/EiuEv
                AHIEQhFYCivBX4Ng6Ts26ycM4+sa/FUHxshXtzeZ7FkEDg44QqbtiA9YzjPG1itSAEiDNeHr3x3Gn9x5
                ACCC4JoRvNUAiRhaWyBLRj8t0XjT6OxgnHPqBEpSp/xnZzo1erisV7Yhwmm+veeqG/Cm8y4D6XawVCDG
                UQURbr/a29uxZMmSpgb082GxXKlUsHv3bsRxnCtKnDWmLwBcEbM1pJRYs2bNjEv5HJV06u7duzE+Pl4U
                lhYxiyOpVUpqwQyLlpjUGwP4Eo2i/9DnUdIvmec1m+L0DI/VXKBVeAsmT+W4V5zdJ+U1NTQBeDg2XY5k
                AUsWwEVMhjETZGoAWSHSCooIAy8zPvqFAfzsRWWYODZAjpmMU0Sgh0dagQQjZonedoWz1o6CKL+TtFl3
                aaPnj2TsyQNz7e3t2PD+L+LMc98WgPXYNHsIBvPMOS6E1lhdXV1YsmQJSqVSU5A2H7xNs/IgeefFEQaF
                zlsRszWy41V3dzeWLVs2u0FcI2HFIoqYUzcfCyiqQKANTBqSJWpcw7KJ/wcdE/+ICARl54qIIsQcW7Fb
                hhZ5Ir55IDIfsOU1UGS/z7ktHK0JK39Y0FPA4qBuzsqQCAVs+8k4PnHHfgyPCmiKwSQMYGaChICCBmkF
                FgRJxnW1J2KsWz6O7k7zvLGvMm4VMbFJbZMBT8wEIQyzR5rBJIywcLN9ZRhNPA1vRG9K9mKAIygolBAB
                pBFDQQA4ZcWZ+Mh1X0NnV9+MLEgbpUtDVmnBggU46aSTIKWc8/fUVABrqlq3IoqYD3HSSSdh0aJFM7bg
                mFEQV6vV8MILL0zNIhRRxKyfcSIwajBCcgoQBGJT66akRFflaSwduRHEo0ZbzsuYODBQb3YfNiNoMZ1J
                WTjOKtk9QhowHcUQmFpTLQvwBKSp3xJVwxqyguAIt90/ii1/PQIW0nSsatPYoUlbhs4Zx1s2VDNOXzGO
                U/o0FJQV0SWAbPcrFIhKVjLFPPY1d01DW9BNIGJrIeZAcgnMNQiOQELh0g3/GW/9rd+3ajPatp3MXEok
                BHNEhEWLFh0ztffjDeKYGXv27MH4+HjBohVxYhAERDj11FM9oz6dhc5RB3E7d+5EpVIpzlIRc/9G44QN
                YcmWHtOQVIbiKoAIJAGpGD2T92HxxAMANBRLSKIMpKEGCxvjBgHKpIQAr+F2JNBrenH47IdnjzJpV80E
                SQKaYyvtogAQlGBMHmJ87q5xfOsfayCloKU7RmyBGvv0smBzfDrKjDPXjKAstamxUyWUhASj5uVXjBvD
                1L/dMHEShsmzHcLK7rsEVpz+Jlz9H25He0cPWGlEURmKYwPieGYBXHt7O04++WR0dna2dpznINDJTk4j
                IyPYu3dvinUrQFwR8wmoNYNWTnZkZuaqGQJxBw8exL59+4qzV8S8Yg20aV2wk7djaZRlZaztlv074nEs
                mLgTvRP/aF4LJlydAXR5N30agKU9VLM3KWU/G1iDzdTvd+Cuta/VOcfP7L1r1FVSQYBAVidFERBp4NB4
                jOu+MoYf/IS9kDCRsrVl8N2ezMp6kjJW9tawdMUEJMcQXLJWXvVSLM33NzK1d5pBgrF46etw5Qc+i2Vr
                zgQ0GQkZJmNOzwqgEjTHkOAjZuIWL16MBQsWTDtNOleBjruedu/e7XXdQrHeArwVcaKBulNOOQV9fX1H
                fO3PSHdqrVbDjh07WkKgRRQxP0CeAoQEcZJeU0KjxEZaQ/Akuifvw8KJ7xsPV2nAixIxSroEJZy7u0SY
                nKsJQknVg5DmN7rIASgz2QGlm4C83KOTu1chMHRac0xOry8CoYonngE+euMoDo7boyLYpjytZIlUAJcA
                zYAATumq4ozVI9AKgBQQmo29Ght7NbIMqjneAgISiquIuARQjIVLzsKVV/8Jlq9+DYiqIF32XcqtDs4A
                ci0Fs00JS5cundcyIFMt8Ivu0SKKQGpsWL16Ncrl8vEBcWGErgzFqqqIEyMEQFUwt5v6LNYgLkOLGNDG
                ncAU75vbq6fyP7Fw8m7I2ihImsaJGAKSFWA9NYkZmmIIKoMa3Jb5Sc+jfb9xHVwMQU7IABodM9XCGKD9
                nmtm062qCZACrDV++UKMKz9fxcFxtzBUELoELWo25RqBECMWAqwJv75uGFFZQYBtw4TpnJUgozpHEgIa
                lVji7De9G//n+zajp6fLSswISKHBWoNgm0aOcAzr6OjASSedhPb29hNyPKxUKhgaGkKlUkkxbnkyIUUU
                cSIGEaFcLmPVqlVHNEYcMYgLu1ELFq6IE2YlBZHYd7GAJmFlM6xPJyIrrTGZsDUsIYgh9BgWjd+J3so/
                gVADE4G1cYaIdAxNZTSuUXNpWm76+pFHfXp0up+hnNWneQ+DSIC1hIYBfOY4xrbJAQAbGZIH/uckPv4X
                GkIzwAIqYhALqz1n7LYkCAu6K/i11eNQTBBaQUlpgabGilPfgv/jnR/Dma8/x+i4MUGSsjp1pRRDZBhW
                nnbdW0dHBxYvXtywri3bgTrXgV2j35AnDZIn01LME0Wc6ADO3QP9/f3o6ek5PiCOmfHCCy8gjuOU4GJx
                gxYx/8Pqy3mPVguuEPv6NGKr/eaL4Q3II3b+mSZdKGrjWFB5EL3j34OkCWgmr6NmzOKPJlg7MnDnJ/Rp
                vN/tv2SFGAwB0/WryVUgwh9baMb4OPDmj8UYHnPuD0ltnBlrBN542jDK5SpYRzhl1Ztx0e99GGef86Y0
                eFIaJCMDHDncN3MedMyQshSAzeag7aSTTspVYD/RshHj4+MYHBxMzQMn6rEooojpYigpJU4//fRjD+KY
                Gfv378eBAweKM1FEEYfFZBhNM6EF2OqngQ2j11X9F3RWH0Zv5V8gtEIsALAw6UFWYOcW4b9QmLQukUlL
                OokTFmAo04BB2osEI+iyNAOASU+apo0oYys2HXAWDi4AE1tAKwGtwJZBNC0j0jZlxLbejazAstGAc5Is
                pBm7XiG87WMxFGqILFNZY2Dlqn68d+O78dsXXoauvkXQNA7WogWJkdZYITfI9vX1YcGCBYii6IQAJXmd
                sGFa1EmDTExM+OeLBXwRRUxn/E+EgBctWoSTTz752EqMxHHsNeGKKKKI6d7EKgdoJKlYEgyKI4BqhpGi
                GOX4JfRM/gM6qo+jrFwnuPNlNbVg7rtNR20C9JIC/Ng01Fpg5bTPHLOooUEkWi7sZ9a5wAhOeFe42jRb
                7G89R8GmEYS1hNAK2mJPEgyhAQ0FqSNoERupvjjCl/72LCxeeRkuufS3jUOGT3naBghoaJa+k7jVQdTt
                s9YaQgi0t7ejr68Pvb29JzyblO0gHR4ext69e3NdNNzxK4BcEUVMP9asWZOrHXfUQNzAwADGxsaKG7aI
                Ig5ncqQkrWpNrCwki40PKdxrAtAWipHt4jR5WgPuOILgA2hTv0RH9afoqjyNktpuWC4GSCRtCS49CRAk
                w9TiUQLEyHUokKqT0GgOYfJ8VWsgkpA6ggKngJXi2PoHmt9GxJYtlKiW1mAyOhuTpTdgovx6AIugRdUK
                8yp/XAxgcyUcEsw148mKNoArAE09GBIRoijCggUL0NvbOy9cEY4GgKtWqxgcHGxZA7Rg5IooYvrR1dWF
                5cuXH30Qx8yo1Wp48cUX654vVmFFFNEqiAtvwjQY0jB1XpIJArD2XsKmGhkQWbZJBJ/XAJcBMoLE5vs1
                JF5BKX4JbfG/oVTbhbJ6BaR3oqRetfVlZFK6TIiYWtBZS+77PEAnOLI1bhWAFqISrUMlWgwll6MavQ5x
                tBIKfdBR2XTzsjC/i9lKjli7Ms3G+koAkW4DuAYAiKWG1K7O0KZ/LSCEB8DpKJfL6OvrQ19f3xGZUJ8o
                zNz+/fuxf//+aXm0FjVwRRRx+LFy5crcOtvDBnHZG9L9vWvXLi/YWEQRRczBoBiky2BpROkIGkwlgBnM
                NRARBErQXDWpxgBIkhMWJgniGjQBkYqgBAzIsgb3DNfgoSFZeFcFLeKkHm+KxV84BmUZnmYOBp2dnejt
                7UV3d3cdYDtRgEaz39lIaLdSqWBgYAC1Wm1OO0QUUcRcvE87OjqwcuXKaX2+qfJkHoAbHx/H+Ph4cWMX
                UcScHjmsph2btKZxT1DQQkOwhIaAIgWCBIhBumTYPS5DUc04L3DNcoYlxLICoSOwleyAFgjNx2IBALFJ
                8XJka/h4SgHYEMDlPV8qldDd3Y3e3l60tbW1hl9PkLErr1at0W/ft28fDh48mGpSCIFyEUUUMfPh7k0X
                4+PjmJiYmBYbN+10asHCFVHEPJjgrb6dsQdzDRXCd7AS4DtUmdkLF5vJPWmkYAhEHEMREoYOsf1fGAst
                RqbbtTVHiRDglUol9PT0oKenpylYK9J5zY9J+HhychJDQ0Mp1q2ZFVb4fAHuiihi5u7LMDo7O7FixYqW
                x7NpecA4lFhEEUXM8QEEwqiSsPbCxYJhuz4N6DLOYEb+BLCaH7ajFcwAKRAElAOCggGmJFVKtmkj6HZl
                QurvEBwAQHt7O3p6etDZ2enB2nSAWQHg8o9JyLC9/PLLePXVVxseuzy5kCwQLKKIIo4cwKWFxs1zY2Nj
                mJiYyHV7yV1cTcXEhR/as2cPxsbGijNQRBEnIAgI69dCX9BGGmGNnouiCN3d3ejs7ERnZ2cBvI5gEmi1
                uWBychJ79+5FtVot/EuLKGKWR3t7O1atWjUzTJz7gkql4iVFigGgiCLmLzDIArcsKGt2/7v3tLe3o6ur
                C52dnakVZSvjRzHGtAasG52T8FiPjY1hYGAgdT6LY1tEEbM7JiYmUKlUUC6Xp3zvlCDO3fSOfi8GgCKK
                mJ/gLa+RKQ9UMTM6Ojp8yrOjowNSyik/02wbeQCliOmdP1ckrbXGnj17Ug1oDowXMlBFFDE3FmkHDhxA
                f3//lONl1OqK+NChQ8UquYgi5umAET4ulUpob29HR0cHOjo6WloN5n1PK+/Pq7UqxpfphQNm1WoVu3bt
                qgPMzerbiiiiiNkZw8PDWLJkSaqzPO/ebUlixPmjzoWbPxyw8n74VJIG2e9SSnmW4XD2JdxWo/qVbJ3R
                dLbVbBuNapKy73erdzchNDo+2dX+kex3dhIPiztb+67EvDx7zrMXfXgtH0sWotFvcfv14IMP4oorrvDv
                ner9U03C2feFx5WIIKVEe3u7Z8/a1Ii66AAAIABJREFU29t9e3v6XjGdp+Ex2717d0q/qBUNskYArzXg
                FwMQfj/y7uVjMR6F10/j7bXWbZs9PvXfl1zT04mDBw9i3759ufud93gmjll23Mo7Jw888AAuueQy9Pb2
                glk1vE6LKKKI/LHx1VdfxcKFCxtKLQEtSozs2LEDtVptVv7Qe+65x2hWZSZywMkdaFx99dW5A9rhTsbb
                tm3D4OBg89UxDPAbGhrC0NBQCiyZ7yIAOmdiUtiyZUtiYD7FRNDstexg+fhjP8Jjjz2GJ5980vsf5rEg
                ZuKXdRfNOee8HuvWrcMll1yC009fa4RccwZkI/Da+oV6zz33pCdLbw/V/PguWbIE/f39WHv6GjtRuAlF
                AtB1xffTBfEzMcnlTaJCCFy54X0YHNyDSy65BJ/6zCdzQVde00AIAIQQKJVKaGtrQ7lcRltbG9ra2hr6
                7z3xxBN4/PEn0udVu2tAQ4Px1vPOx3lvPb/us5dffgV+/KMncPsdW7Bhw/qWr8XDjdtuuR233nprHYhK
                7kUCEeO8887Dg99+4JgC8/rfakDctu8/ggceeACPP/44hoeH6+6fRoDwda97HTZs2ICLLrkYq1ataGnb
                WmsMDg4e10azcF+yYPyeu+7Fvfd+Az193bjvvvvQ3d153BZTRRQxV6NUKmHNmjXN78OpQNz4+Dh27949
                K38gM+G3LvztYHDQ3gTcPGcG/X9+7J8Oe+DIsjnEAtdccw2efPJn0/pco8duEEwmfIUtX7kD55579rT2
                Lws0x0bGce+99+KBBx5oymQ0ZnGkNWmnOvAQfqarqwtvfdtv4qqr3p/K37fOIEq8/YIL6xi1qUKi/piy
                MH/39PTg/7r8PVi/fj26uzvrJpjjMYF4YM0CGzduxMuDLxurK1ZYv+EK/PEf/0e0t7dDSumBWBRFaGtr
                856e02Gh8l6/5ZbbcPutt3mmRzODMsfk+k9ch+uvv9a/x33P+vdcgccff9x/5x133IErNq4/6iAu7751
                WnWAxlve8hZ86zsPTsFwzSRgS/Zn5NAoNm/ejG3btgXXomyYFs4DO+beTzPifX192LJlCy6+9KK6bVer
                VQwMDKBareaOAcc6U5JdFAlI3H333bj33m+AIABidHd34m+++dfo7e0tOmOLKGKasWLFCnR2djZ8fcrG
                huHh4VlZq+LMvV3aRbA07BszNGlISCgGAD6sdEJ2YHTpRjBDcCKQ2uQbkFiPJ4+Zw+82YIRAgE5ASJh6
                aGWicfs4PDyMm2++GY899hgESn5Sse+02w6V20NgFu5vwmYCyb4SCf8Z0gwNYGxsAsTAsqXL7ad1i/ut
                QGRsnBLArVsGWcod1uTXgWzqbXh4GF+/5xv4+j3fAKBxySUX4VOf+XTd8ZrpCV5KmQJfpVLJg7IoMrfa
                m3/9LQGAM9/xwNb7sXrlKlz/ieuafn9W76sVliTFXloGSwJQQkNqAgtzLhNhX4VG6TyzXQNSNl+zGdde
                e20KzM0koDPniYL7J3wNIMsCG8Y6nc6cqXGq0fe89NJLuOSiS3Ho0CF7fwkQpcGmEIDWKnXODFhLUqbp
                1L+A1oZFPnRoBB+66kPQpHHPPffg4ksvQqVSwa5du/w41IhFP1ZMcyNgevfdd+Mb93wDIOMADE0YHR3F
                H33oI9i69b6GcjRFFFFEPgl08ODBIwNxIyMjs3LlxGRGczOpEBTYDOZWKV4hfzJq9bc0FLokDU1T18CE
                gCl87F5LJiYCoMBCehDjxFKFEFBKNU2bCiHwq189j+s2bcbIyIj5XJCaDVNvSinLYQkwx/Y1XQcu3bbN
                hEEWvCUACExg0li3bh2+dtedYFZg0g1TiPkXqQEDbp42EzYH4DEPvISA3AE+aY6PB+xuP5Jj/cgjf49t
                2x7F+vXr8Z+u+Y9TdkgKIVAul/2/Uqnki/1bAXSNGLM3//pbsHv3bjCRtaRiMAsIITzr5IBcHmN75DOu
                uUeUdVLQpACGd1cwx1Q2uV/cNazNgoMJ1157La699lrcfscWbNx4RUtMYesLqbzrQfv7Rmuyv0kctUVm
                +lwCt996O7785S9DiMgfs4QJj/w5y4KbPCY+We4JD/jcb+zu68W3v/1trFy5HM8991zLx+9YsnH5KdR7
                ARL2NQJbY7ahoSFceeUf4L6tf5V7bAqrryKKyMcfbl5vlGloCuJGR0dTH8yrMSqi4YxZx8CFA547hprI
                qOQHDJYDNtnmgYRNMY+ff34Hrtu02dbfCLiUpNm29kCJSEApl7JlnHbaqbj40ovwtre9DUuXLm1SKG8+
                //hjP8Rjjz2Gxx9/HKOjozjttDXY8pXb0d3dnUq5TmeFnQdQ8hsxGForO0HqDKCAnUQBEtICUQlKgWy2
                72N861vfwqOPPoonfvJjLFzY1/TGOJzJLI8lqwNw9nyErKeL2267LQXkwmsla+J+/AcZ8oCPmbH52k24
                btNm3Lbl9hSYywMWM8XUhQzd0QIv4XfeeedduOWWW/y5cEDFsNM6tWi6+NKLcMMNNzRsBnnmmWfwwAPf
                wv3f3IpDhw5BCILWChACt2/ZgksvvRhDQ0MY3DtUd6/MlrE3ZG0f/t738fWvf90C7/Q97v4fGhrAlRt+
                H1sfuN+D3+zvCce8IooowJzBXMPDw+jt7c29/5uCuOHh4Vx2pgBwU8cdX92Cc845pyVgk9elmX0+23V5
                9dUfxgvbn7cTRylT+C7s8wbg9PZ24/3vfz/Wb7jCgCJwqvEg223qQKgBTQK/ecFbcf5vnjej6ZpsUbTb
                rJ8YmcB2oCeS+Md//gGIyEtelEollMtlvDy0D9/5zndwyy23BGDZgaQQyJpmh5GREZz/lvPwi3/7+YxN
                jFOlONe/5wrs2rXL7gOnJiuTQkvOdQjksvs2u7rDRebalGCu4bpNJs361Tu+kkqzHg1wpfWx6U51v9HU
                EwKkCbpB587111+P6z6+OZdRCu/ns846C2eddRb+63/9ExARnn32F7j//m/i+uuvx+DgIAYHByGlzGXi
                Z891YJjIRx7+AW666c/tczJ4TQVjhnl279692HjFBnzz/vuaCkoXUcSJDt7Ce/zQoUPo6enJL5NphYmb
                fYPH3KJD8/7Oey0vLZcFPdu3b8cFF1yAF7b/yoMTA9gUwm5XADj99NPx0Pf/Dt996G+xfsPlcLVDxGjI
                QiXbF/7yCAFeHlg53IGXmX2uP5tKYWgQsWfjzjjjDKxbtw4rVqzAKaecgoULF6Krqwunrl2N6z6+GQND
                e/C//uV/o6+vz38mYUQNS8JMYCYcOjSS6lh2223lHE3F1mTfd/nlV+BHP/oRBAuwDldXke+wdClDVxpw
                662345ZbbsllYGbTBGf2x1x75n/p4B02X7MZy5YuxwNbH2x6fI4IQgiB8fFx7Ny505YKHJ3f6P43guei
                Cauocd3HNyeVsC0IGbu/Fy9eiPe9730YGhqasm5stozBRIRt236Am266KWBnyaYSktq9sI6PmTA09DKu
                vPLKTA2hKCaNIorIGXcA4+DQ6L5vyMQVHqkzf1Ka6Xi1ohH25L/+FNdeuxmECOwHScdcCQAxmBWWLFmC
                O+/+mpfdSICDsGCmXoJkqkmjrsEj5zXAFPeXy2V0dnYiiiJ0dHSgVCo1nXgSKQ03ydu6K3aNFbql1cqK
                Fcvw81/+HJdfvh4//tFPIIS03y0ydYHAw9/bhmee+TnOOuu1uZ23hztxejAKYL2V5TA1mgwh3G/RYI7s
                NkUdwCEi3HbL7RCQ2Hz9ptyUcyv706imrtlvneoYGEBvmNOkXk0ELKgZVliYOkVXM3fTTTfhkssuRnWy
                gpqKUavVcnUY3W87cOCVFNuTZX/M+4COjg6sXr36mKyIe3t7MTIyglgzhHCd8E6Kx6Tzv/a1u/DhP/pQ
                y4ve4eFhL/eTvk+Pv0VWNhMQXgNMwKMPP4qbb7zJnxdBwlzflNy79WOMYeeGBvbi9ze+F/fd99fZvpWC
                LCiiiJwYGRlBT09PPhOXN3A7y5Y8uruI1gfAcHDOArUsE9YMwL08tA/XXLOpcQ2ZZZ4++MEPYusD3/Qn
                OwvY3OM8AdlcMGL3ub29HQsWLMDSpUuxYsUKnHHGGbn/1q5dixUrVmDRokXo6+ur0yzL1smEq3C3rekC
                pvRzwLe//aAHh3mTg/v3yCOPHPaEMRWjdMV7rsATj//IA5CQachrHkgmuoTVuuWWW3D7rVtygfPhLBwa
                Mb5536e1xvj4OEZHR7F//36vExkKQ0+9fcMsChb41Kc+hTec80Z85zt/izjWdYAl777JG3dase06Gkw6
                AFz38euD5h0RML1JfP5zf4LXnvlabNu2ren3Dg8P47nnnvMakkfKah+NCBm08DkhBB79vgFwqTEEOvf6
                zp4vt2gbHBzElVe+N3dxW0QRRdRjsrwQeQMjkG5qaGaKXUSjScBoWWWZk7BInch01wnkp5t87ZlmfPGL
                X0x1v9WDLYWrr74a77/qD3NXztnBlJkhpURHRwcWL16MZcuWYc2aNR6MrVu3DuvWrcOZZ56J008/HStX
                rsQpp5yC3t7ehu3OWZAUAolmTFIzMHm4cf7550/J3NUDqNYnj4aTrWasf49JoSbXQf1+bNi4Eb/4xbNY
                sKA31RySBQcOyOWdv6meq1QqGB8fx4EDB7B//34MDw83TVsxMw4cOIDnnnsOv/rVr7Bnzx7s2bMnBeJa
                b7JICv2dNAkgcOONN+LtF1yIRx5+tOG5yV4vjRihY7UYc/GRj3wYGzZsaPI+4QHa1Vf9EZb3r8Ly/hX4
                tTNfg02bNuHZZ5/F6OgonnvuuRT7NlvBS7qBI9nHhx9+BDfddFPDpiBmRk9PFx566Lu46KLfAWxpROIE
                ktSp7t27DxuvuLIAb0UU0QITlzdH5qZTa7Ua4jhuuIosbrapY/O112UmnmxKCBCcZrxYMG6/Y4sX+nWF
                zU//7Gd46qmn/ESIVCrVPO7v78f7r/pD/13t7e0ol8vo6urySv7TYSEadVlOlxmbLvsx3Q7XRtt0F3wr
                Qr8zWTi+fv0G/ORHP0FWFiNp3JDYsGEDbrvjFhCAR/7+UbzlN85D0s0c7oOZ7G699XZMViv49//+Ixgb
                GwMzo1KptGSrFl5ftVotaHzJAmdKsWLucci8Jecnva+NFzFm4lasfTMukYTWMW7+0s340pe+hM9+9rP4
                3Yt/pykjHcp2GGkPqutOzWO2Zwq8hXH7Hbfh0ksvxQc/+CGAbWOKcJ2a4f6HvtMjuP+bD+CBrd9Ofptg
                XHTRRbjssstw7rnnIqwhmz3dp1zHoG3b9ihuvunLAEvL/rOtP03KFnp7e/HX930D3T1d+PR/+RTGJsbx
                +GM/TF17gpMu/KGhIVy5YSPu2/rNYm4poogGZIHWGtVqtc7LOndJ7SaKImZuIHSF646dIzLadooABYYm
                gDN6V65+61+ffKoJADGpi/f+wfuwbt06z6KtXr0a/f396O3tnRaAmymQ3qzmqtH3T7e42TUFZEHy/d/c
                iqefftofM61j+16V2v7Fv3tR7v4ebjp3/XuuwBNPPAGFxMrKMBCOpRF417vegf/yuU9hz+7d2LFjByYn
                x3Hf1r8KbtR8xvIvvvrfcOuXt2BychKVyoS/qbPHL0+DKwvYnOZedhjIY0TT50sHx1n735ccC43e3u7g
                tfxOZiEigGIIIfClL30Jv3Xhb2Pb9x/x72tv78TChYt9DVUinyObCmEfCwkOIsLFl16EPYMv4Qf/8AhW
                rV6OxClGpIbU5LkcppoFHnn4UWy65lr81oVvx7vf+Xu4//7768ot8n7fsR6b3fYesTVwBCe07uo7pW0a
                Mgzcfff9JXp7F/jP/dmf/RnOPvvsFMvsxK7dGLZ37z78/sY/qLvm8oB9MTcVceLhBxN5KVWRN0hNTk4W
                R++ID77yk5x7HHZKusGM3P/EACuUShI9PV1YunQpTj31VJx55plYtGiRPzeNJqru7u4ZncSWLV1+RP9W
                LFvpHy/vX+UfP/HEEzN4lEVdGnLr1gewadN1KZBBiHwax52PjRs34qyzX1e34pmqq5iZMT4+juHhYezf
                vx8DAwPYuXMnLrvkHanf5lOkdoJzzhHXfXwzDh48hPHxcW+d1N/fb1kI9qAvO5Ebj9m7bBpS1E3qx1qp
                3y1IEoN6c01/4QtfwPe+9z2sW7cuSL0m/9y9oCGgdQJ0brzxRlz4trfjpz99CqtWrfDNDjOtLzeTYO61
                Z/0afvK/f4yBoT3YM/gStnzldqxYsQyh/EpybYrcTv+wRu4vvvp/48K3vR1/9KGPYHR0PJXOzDY+HJvQ
                fvuPPLwNN954Yw5jmOxjT08X7tv6N+jq6YbWcbCfGnd89Ss2w6BTxyds7HI6cmFNXd51XbB1RZyoMTEx
                UZ9OzUuRTkxMFEfrSOEFi8RJgGGstRi2g4utebxMpc0AwtJT+rFkSX9uii9ri2Wseky34ODg4Ez/giME
                sU5PQwJU78U6Y9OMBQqHDo3gisvX45lnnglYOgs2iI2PozHrwvnnn4/b7zCaX5VKBbVaDZVKBZVKBdVq
                1YOrPE/K+mYUwp989nN48sknDaj03ZMKRGWAGFrFuPLKK/Ef/tPHUgAvBI3Lli3F7Xfchk3XbE4BQVcH
                6d538803GxbR+moerwnNgbbQKxQwjiZdPZ342l3/A6PDY9i0aROef/75IIWr4To60+nbCMwKm6/dhE3X
                XIuzzjqrZXZ3toC6K664HBs2rMfo6CgGBgbw5JM/w7ceeBCPPfaYZSyT0gp33Ex62N7altV84YUX8a53
                vBNr167FXffc7Z1cjr3oswAR48l/fRo33nizXURGKSbXLVC6u3sMgOvqCu4dFQC2GLffcRvee+X7MDg4
                GIwHabA4NDSETddciy1fuT11bI+nP2wRRRxvNs5d82NjY/Viv3k3RF49XBHTi7/85jdwwQUXTKvbMr0C
                TkCDm9DyCrudbMjWrVvx+c9/bgYHOH1En/b7GniiAgKve93rZubCBvDsM8/g9lu3YNu2RzNpa5fKDFJZ
                iAEGrrrq/fjgBz/orYyaMVjNXCXcczfddBN++MMfQrCwKXENggCJKBBmvhpXXf2BhjemA6Pnnnsutnzl
                Dmy65tpgu876TAIw6eAbb7wRGgqXXnrpcW80chO1T3VyZGudNLp7u3Dn3V8LwNyOlHMJcw3OeSM8FoKB
                Z599Nvd6ml1aedqziw6Uvfjii74J5Nxzz8Yb3nCOP0Z7B1/B3XffiUe2/cAubBIGM+UDbP2Zn3/+ebz7
                ne/Cdx/62zrQe6zipz99Gps3bUovNpnsfW12ekn/Kdi6dWtmjEpcUwQI2p7j+7b+DX5/43stkMtoQ9pt
                PPXU096X10UoRVMIAhdxQhFCIs1cZxdzIjth5dF1czEa1Y+04p6Q9/lwsheRnHL7bW1tkFIeJqgSYKX9
                ibv44t/NB0jB+4dfPYS7vnZ3QyAy/XMqmv5LmizqPycRNmBoECI/2TnrkOzvqT9OIRgj7N+/H1deeaVN
                z67A8qXLcdHvXIyHH344YwDOAThIZDvWrVuHhx56CB/44FVgagymGl0/2e5JJuCmm/4cjzy8zWxLBP6u
                qEJrwwZ+4APvqwNwxGgIys8992zLQiTiv2EtmksL33zjn+ORhx9N7xcfW5YmBDOJ1I0GsdkXl/rr6evG
                nXd/DX/3ve/i9NPPyP2OEIRrEj7N6oBCch7oiFnimVvECM9G7tu3D9u3b/cALl2XaB6fsnQxPvPZT+Of
                f/gPeOih7+K009b4z6fvKWG9oAVGRsZw4xdvanqtzsQ4mb0fmICnnnoam665NnE8cTcOKX9dLlu21AI4
                XXcePXtG6e3ct/Vv0N/fHyxAQq3BGpgVfvbk056Vdp30zDQtiZsiipjL+CU7d7vrPlvuJrIfmm+p1EYK
                6c2oSyEEenp6sHTpUqxZsyYlt7Fu3bppNwoc1n5LkQINN9xwQ1BbJ3KtmD7/+c/jxz/6SUMduunEwNAu
                DAztwp7Bl/w/99zA0C7sHthpH+/BwMAevPWtb03ALrltl8xEDA3mGj760Y8CMClMpz/20ksv5YJM17Qg
                RAStNfbv348//f/bO9fguMrzjv/fsyutLruru3YtS7YBBaadBNl8SwOEZKYYkiZDCAE6nWI7JP3QTrAN
                bbCNpzNpwDZpCzhJ+wVjGU8bX6CZ3MCWyDSTxE7ol1gmV2wYbGxj+aKLV9q1hLTn7Yez5+x7bquVtCtp
                d/+/GQZbllZ7zp73ef/P8z6Xb3wDT+/4prWpGBtLAGbum65PZ+5NlRUN6O6+ET/6yWvYs/dF1EfqZnUf
                1PwjZ5+9Z595Fkdee90h9KXy3iTWrVuHDY9+xSV2pNBybsqrV6/Gtm1boOsfAphWxJwijEUAO3fuRF/f
                G9n3K5bW5mZuuOZ1dnffiF8c+zn+8KffO45LteznaSueWNR3n9d3TU5O4p133sHw8LDNxlizkT3G6Om6
                jrpwLfbsfRHP737B45p1myjq7+/PzEcu7pGy+jy+9Zu3sPFrj9net0Q2oi6lREdHB7538L9tuXGABliN
                rKVvhPvF3heVxqWZZt8IQsqAZeMGBgaw6bHNSpsknceppCLwOh0y/+4r4szFMTk5WfbK1vx7fX092tvb
                sWrVKlvD2u7ubsRiMUSjUVRXV89aCBaDR7/6Zdx771rHEdy0K7fqC1/4ghWRK0TLD79ImXo///3f/w3H
                jx9XhEpaGSeVfdQ+f9/ncOrUKZw5cwYffPABhoeHLafBafT9kvVvv/12/Pi1HyEebzeMv6Y7IoTSlXsX
                iUTm1QvOOdVi5zO7cPTo0UyYW3hG79ZteATrv7zOVsQCaIAmMpHC3M/S2rV/ia1bn/IUE2o17rM7d+HI
                kb6ib/DzeX7i8Thuuukma4JIQ0MD+n/ahz+dejsj5nTF8Ugvuffvd1+vXLlijfxyHvc6c9jUZ0jTNOvr
                a9b0oKenxyGi3J/5u+++W/DP2K8i+8SJk9iUOUL1E3rxjjYcOPQ924ZjPpcSU672NM6fD9dFcPDgQfs8
                SKuSO2g93ydPnrSEHCGVFInz24+cFaquPnHlkg+X7UkENDY2ora21jXFIJ+b6PW9C17in3k/L/XuxQP3
                fwnHj/8ampbNhzMiNebQdyMid/DwAXz/+99HNBqdswE0N6Lr16/j+vXrVvK/eWQEANu3/zOO//KYFR0U
                cgowq8ukyPTQmsLWrU+hvr7eOEp0TINwFm34bTLmdUQiERw6dAC9vb3Yu3efkiSuQdcNESB1QGgSp0+f
                xqc+eReee+F53Hbb6ln1oHMuJikFdu3YhTeOvqE8G+YnFIDUM0dI0PFy73683LvfN7KTjdrZjwvVNiFO
                EeHs2Wa8psC3dv0rhATu+cxa87ZDyMVffw0NDYjFYt6VhTKNaDSM/p/2KUUpf1jyBnXz5idw4MABbN++
                DXfffXeOghdvAeiKOEv7iEP7hJVsJaemBWecqToXp9beg08zBNzGxwE9m86gtnkx3+OVDy7jk3d82uP6
                03k50WZUOXvPlHsjRSbqF8gIOeNo1Sx2YE4cqQQR52U7vL6uOQ3VYhyn+vUAmutQdSGMUT+mkWhvb7fN
                HMtX1Lib9Bbm2tSh0Hldj/L3V7//irVZG9cScG30Ukr88fd/wp/d8ufYvPFx39dOpVIYGRnB4OAg3nvv
                PZw6dcr137vvvovz589jaGgI4+Pjlsg32yEc+8UvbcZdZgSVlAIQaej6NLZufQr3fGatlWuTayB6rv5y
                6qaTljrWbViPl3r3IhpV26tkZllqRv8q8yjy8U2b8dTW7Zmn3r9dgVNwqJHAHU8/g76+vky+Uvb+Wwnf
                QuZQTzrsbWbs49jUMLpb4Kr3QGSvUVnQu3btyvZa073fQ2ErG3WluCZou2+hUAi33HIL4vF4DisVUMRe
                BH1vHMUf3/4DPvrRWz3vl9p7buGcwOz93fTYZixf1olDBw4iIILY8fRO3HXnp/Af3/lPVyRZHbGXq+2P
                lBL79u3H6dOnlSKWTCRbz1auCiGw+taPuYbJezmZfoUuXuLSmZN58sQANm/cZAzBFVJ5TjVH30Ojr6X5
                Xs00j1xRVK90CdMxcuZXQqRd12IcrT7huob5irl850cTsliayIlTowWdhmAhH2S/jvN+BsjciOrr663o
                mrHJBixvztr4zGHM0H1fKz8P3F3EkE+U4/DhV/GrX73paywgNUC4K03MHmZdXV2+UcDe3pfw61//H+6/
                7wvQNFi9unTdzOFKW8d8hw8fxqFDhxCNRvHkk0/iE3f8hfU65kQIv+pLu9DU0H+0D9/5zncwPj6ObB6T
                VIy3ebyYnSSxZ+9LuPnm7oIbSvN1urtX4Uc/+SE2PbYZAwMDCCCANIzPXkpkWn4Y4ufYsWP43Gc/jz17
                9iC2rN32PDijX86NbteOZ9Hf35/53dmKSn8Rqs37+tJp89mQVrTSPnpNnZxg9FoTQmLtvfe43lMxKxvV
                1g+dnZ22gfS51prz+TbF3NjYGB64/0tWuxh7P0DdM2pbrOjbpk2P49XD/2NF9o2IUdp6T6+88gpeffVV
                1NfX44tf/KJVxOInmMzXHRtL4onNj+Ptt99WjuXVwhkdenoKmqZhy5avZ2sKHHY637mjM00rOXliAJs2
                Pa5Mwsjmv2VfM9MmRUcBQr3C8TnqShW79/sfGPgNNn5tE1749m6bXVePrufzjLNggpQKU1NT1lzyoLMH
                yUJ6Il5NHFXDFAqF0NzcjHA4PGMUwXgdqRyjZnsPLYt1GEdRMOaU5nON5vu6cPG8a8PJ5+dfOfSqp/F2
                Ho0FYEROzChVGml84uO3o7Oz03PYtxAC169fxy233ITfDJzAti1b0d/fDx1GLzShS6vFg0EAQhibxvbt
                263XiUQi6OnpwU033YQ1a9bY3uPg4CAGBwdx4sQJDAwM2JKZzd5oUk5nBIUpatLQtOxnevvtd+Bfnv6m
                Y6pCYVG6sfsFAAAWPElEQVRHQz2/+zn8+vib2LZtSyZSFQAkrGRsM6IwPp7Cww/9DdZv+FusX/8IpPB/
                Ds0ihZ3P7MgIOC1z1COVCOi07ai3UL2sdF1Y9zObVyWgaVJp06HZNj4hRKafV8DqI+eMDhUjWpXr6zPl
                InqNeItGo+j/aR8SiXE8cP8X8bvf/Q5Sao4JDgvDV7/6KPqP9uHatWvWe8gWmBhH6FJIjCVS2LdvH/bt
                22ddy4033ojbbrsNsVgMkUgEFy9exPHjx/HOO+84rjubCmF85tmxXU8++STW3rs2p41Sq5LN4pbZtGQ5
                eeItbNy42dG8N5B59rItgqxxa6IQz45T6Cp9Mw3PVLFhQhFyA9j02Ebs3v08IISnA6ZBQEd+Nt7p4DD3
                jpQCk5OTWRE303DyhfB2NU1DXV0dGhsbrWaR+W4aXgOyzVYPQpdIS2Ec9+jSEEwAZD5zQHUBXaStnLOZ
                ooXu95q2DF/WAKr32Zi1qAsBqZleqZ4JlyZx9epVpFKpGQtNtj61Bdu2P4Wdz+zA0aNHoQtkepbpthwx
                U3wZDUeBRGIcv/zlcRw79ivs27c/x/GCsM3atB/bpo1jaykBLQApdXR3d+OFb+9GOFyXiVqgaMZRzecR
                QuDjd3wcP3n9CB599FFcHrySGQ0kHM11jWjK/t79OHLkCPbsfQnhcJ3vhvfd734XfX19mWcgc8wkjY1M
                fR4PHjyIeEeswEJJc0WS9+3bj317e5Xos3A13t2xYxd0pLF27VrXOinG+lVnquYqgvFL1lWF6lLLmVu2
                bBl++OMf4NSpU/jHx/8pUyWqZde4OT5KaNb9N9f6e++9l2l07HVkp2Ui5wHl8zOi6UIIhMMNOHjwe6iP
                1Hnm21mRwsc2Y2DgLeXe6S7x3NPTg+d3P+c5lu3SpUvYuHGj8r6c+4HxeuvXr8e6DetRjMph9XouXbqC
                Bx980Bjt5ek0axgYeAubvrYJz3/32x7ROw133fFJ6CK30O9Z81FbHzoKOFKq2KpTC5EPN9MmJqVEbW0t
                YrGYrRp0+fLlqKury/ka/otMt12OGf3RBazjPl3o1n9++Tbqf7owPeWAKzqjW4JLt4Y/u/9DXsnNanWj
                ITCBq8NDGBkZyatS2BSsW7Y9iZ///GfYvXs3Yh0xo1xfV2dOiszRonrPstegjgYzr0mtfnUf62a8YKGj
                PlqPLVu+jp/9/H/xUu8ehMN1eUcs7b3NNKtzv59YML/P630JCYTDdTh06AAeeOD+TMsRVYwK5fM1Io6f
                ++xf4ejRfreIALB//3/h1cOvQOjZ/CAhpJWzY7J7927ElrUXvKO8urmbrF//CNZteATZHCR3awohJJ7d
                +S28NfBbm6jS4R0RNoWg1WdP+K07DeqYJSNHKyvoTdEpvaJFOXrxeUbZZ8yZ03yFd6GE9Llz5zA0NAQA
                uPnmm/Gjn/wQr732mtHfTQZsfd3swingioJ6OUjZZzjbczESqceLL76IH7/2A4Sj9Z7CTb1fqnBzRz6z
                7y0QCLhSNy5duoSHvvQwNCWyK2y5cMb3r127Fus2POKYt1scZyAeb8ehQwc8P0e10GLgt29h5zM7PItm
                dIEZ7buZvupVEU9IKUTiTIJOTz3fvIJ8mqSar9fU1ISmpibfI1E/LzN/HarmV2iZ6I+Yt2FRo2e28Dvc
                uSL2qrJ87l8mgJVJstfTxjGCBoHuGz+S/9Wr1YyQ6Flzq9W7aXBwEL29L2ca0hpHi9lNxr7RZK8ls1GY
                AtTWgT17Xffccw82bNjgyi2bywZqRCDM41go/cLsz5v5bBqCwy3k1CjDP3zt73H3PWvxd1/5qrGJQWJa
                N6OTgGa1JpHYtWMnjr5+xJZr83LvfvT29hrfExCZSK5xzGlU3Bqi5+tbtqBnza0FFQ9ea0m9zg0bNkBD
                AL29vUqE1fjsslV+OjZuNMYXrV692rG+NEipZZLShdKNP9NnT9ojgO5ovdfzF7BEf6G2wZly5n7729+7
                hOlsIo5+49SklDh79iympqZcx231kTq81LsHQgbR13fEyhFVCwCyBSiaZR+ckS5ppTPqiESiuP/++7H+
                y+usyKRT+KliWH3OLRGY1o3PXkklAUTGAcnke2nCWsKXLl7Gww//dUb0aNB0KxMu8xwZn/NHb/0Ytm3f
                WpS5vF6zcQ0hF8fBw4fw0EMPGV6t1DITIpC5p8af+/v7AU1i69atyvoTzvhEDuNppLI4j1Ip5kgpYNk7
                qew8Q0NDGBoamvNDLKVEdXU1WlpabJ35882dmftxro5C58nk7PUkBcZT40gmk0ilUraWG06Pe2ahKF0b
                0GzaYDjzsbyEjypwTp48iRMnTmLgNycAGH2Y/O59T08P4vE41qxZg541qxGPt9t+p1cj07k/iJpDzKeV
                xrkCOtK+vydXhZmwcm3Mo/RpV45f9jp0SxTMnDvpFjqFSK72Fri6JZic1+lcQ9nv0Rz30X7kJCSgIw0N
                AUAT1sDybKFQ2vbZvv76UYyMjCBSH7ZyS6EJ63TZ5MEHH0BXV1fB1qBTRKrPaiIxjj179uCJJzbPyW54
                PTPT09M4c+aMa+B8LhFjOHYBnD59GseOHcPAwAAuXbqEwcFB1zOxZs0atLe34/Y778Cdd95pO+r3muCh
                fsZefRM3PbbRmtvrV6BmjHN7PudacV6n8blqSgTa7VgV6jN22levte36fHVhFYA4r+Wuuz49Y93F6tW3
                4rkXnveO6LNKlSxxmpub0dramtnjMk+rlBIXLlxAKpWalQgJBAJoa2uztfCYj2jK2xjr0tYqotDo+jSS
                yesYHx/HxMSES6jlEmSzvd75bPx+FawzieaZXsu5OatGPpfRzfde2DcrHWqDT0tQ6e55kbmG0nv97lwR
                41x9eLJHN7kbHftFTIrBTPfVK0l79hGUzHGp1G1Rrs7Ozmy6AwAB3SUciuVpzjT4fT5Op/pzk5OTOHv2
                bN73PNcz5HzOnWLUdKyMHH5zugk8mmTnd+Q30z3Ip9DB+fyofy+msMk1SstrvWdt0/ycd+d6d9o8QpYq
                tbW1lrMcdHr8Xv2HzK+ZA4ibm5vR0tJS8A3Ky9D5r3yRQ4DZhUau15ycnMTY2BjGx8et45P5RA3mcr3z
                MY65jrTz/brXv3vlReVrzGdT/esV1TKPRWwNQHNEZ3L1ncsVPZn5GdTg9eN+G3Oxj2Dymfubj4A1v9cc
                Kq5W9wmRGReV2cBDoRBWrFhh/1lV7BVZtJqb/GzXwGxEsRACyWQSFy5cmNU9z/UM5fPesnmYQDaPNvf1
                zXVt5zND2atdydxnL8/GYdZnF40VdoejUHsOBRwpRYJ+D7W6gGtqahCPxz1nhi6F/AGvcLjTECWTSYyP
                j2N8fNzWGy2f4xJCyg1d1y2nTI0Im8JOCIFly5YhHA4vmXVeDJshhEAikcDg4GBZXichpIJEnGrAqqur
                0dHRgWAwmNeRwlIxfOPj40gkEkilUpaH58xXcnlgNNykwvCLumiahqqqKqxYscKjCrK8rh8AxsbGLAFH
                G0AIKTkRp+adBINBxONxW1FCPmJtMYzf5OQkEomE7RjUL7es2K0ICClVnOumqakJbW1tns5NuTk7qVQK
                Fy9eLHrOFyGEFE3EqXknHR0deXmv89kw/F7Dqory+PdkMolr164hmUz6VgDSCBMyN/FmrpvOzk7U1tb6
                rvdSFXBeRVOpVArnz593HSczrYIQUlIirtiGM1/Mo5uxsTGMjo7i+vXrlmDzLTMnhMx7jVZVVWHlypVF
                na+6WNemik/z/1NTUzh//rzN+aOAI4RQxM3Sa0+lUrh27RrGxsZyCrtcZfuEkLmtTyklIpGIFYEvJycp
                V8T/zJkztvYrSy2vlxBCFl3EeRnP0dFRXLt2zbfnWq6+VvSSCSksra2ttlZBlbC+zp4962pboRY4zdST
                jhBCykrE5fJgr169imvXrlktPfLpLzbXPkiEEPea8Wsc29XVZct/qwQuXrzo6UCq94gCjhBSCpi2PDjf
                F1A3iuHhYYyOjmJ6etpqIuo0lPOdUEAImbuoE0Jg1apVqKqqmrUjVcokEgkkEgk6g4SQkqeurs6yZbMS
                cc4qr2QyicuXL3vODlUb6qpjVVhFSsjCemrqevvIRz6SU7CVm8iRUmJ6ehqDg4MUcISQsiOYzyag/nlo
                aAgjIyM2keYcyeSsDDO/d26zHAkhs8VrLXZ3d5e1YPO7D+fOnaPzSAgpbxGXyysfGRnB5cuXfScceA0D
                zyUECSHFRXWWgsEgbrjhhops03P16lVMT0/bhC0hhJQyaj5z0Om5mwb+ww8/xPvvv29VbC3koG9CyPww
                13MoFMKqVasqct1OTU1hZGSEDwMhpKxQHfKg6rlrmuY5DFoVeDwSJaQ0RFwgEEBXV5dt4VfSuv3ggw9s
                kTeO1yKElAP19fXWn4OmcUulUrhw4YJLsDk9+0r06AkpNTRNww033FCxLTMSiQQmJiZctooCjhBSVrbe
                FGVDQ0O2alI/754Qsvj4RZXMv3d1ddnWcaVEoczru3Llii0Xl+KNEFKq9kz9c11dnV3EmQZO7TtCg0fI
                Eve+Mr0WnY6Vpmno7Oy09YHzmiNabgZOdTRHR0dtPSqFEOxNSQgpOZxFoUIIVFdX222++Q/19fU0coSU
                mIhxpji0trZaDplf+kO5rHMvQSqlxNWrV13XzjxeQkgp2jhTwJn9doNBe2c467zF+Q+EkNISMtFoFI2N
                jRV9P8wonFqEpd4nFjYQQkrFrqunKKZdq6mp8RZxzhAdIWTp4jxKDQaDiMViebUCKteIlJQSo6Oj1p+9
                jpvZq5IQUgq2zO9rrpw49S9OhUcIKQ2vrbOzs+KNXjKZxIcffsgHghBSFjjTQNQmv54irra2lkcNhJSQ
                eJNSorW1FVVVVRUbYTKja6Ojo4yyEULKwrYD2U4hpo1zRuFcIk6tUCWELH0BV1NTg6amJpugqdR7kUql
                +GAQQsrCMfXCNxJn/gArVAkpDcwwezwety36SkvcN691eHiYDwUhpCxtnBlcyxmJU5PmGI0jZGkjhEAk
                EkEoFHIl61fS+jVFazKZ5ENBCClb/NLdNKfhV2dyEUKWLu3t7TYhU6nouo6JiYmKFLGEkPJ0Tp1/9guw
                ac4faGho4JEqIUuclpYW21itSi5qSCaTnuNpCCGkVO2aE698OEvEqQQCAd9vLtebQ0gpeGROEVeMZ3oh
                18dcfpfzZ4QQSCaTjL4RQspWs1RVVdny4VQ7qDm/IKW0HakmEomK2BQJWepOh/nn5ubmoj3TxVwfXgJs
                tj/r9TPMhyOElPMe0NDQ4LKdpk3UvAxjJBKx/hyNRnkXCVkCmMenpTpaaz4C0e9np6amOBeVEFK2Ak7T
                NNTU1Hg6wVJKd3WqEAJVVVWc3kDIElzQtbW1c5pzXG5pBOb1TE1NUcARQsrSvgkhEAwGfYsahBDu6lST
                cDhse0HmkhGyODiH3M/3NcrpnkxMTNA+EULK1uarJ6NeaH7/0NTUZIXrhBD0dglZBE/M6ZUxvcFOKpWi
                bSKElO0+oKbP5OwT56UEI5EIDSQhi+iJqeuvpqaG69ED5sQRQsqRuro6W/qMb584P+j1E7L4npi5eMu5
                9c9cSSaT0DSNx6mEkLJDnYvthzaTCmSBAyFLQ8x5zc2rdNSUD0IIKRe7Vl1dbatNmJOIA9ztDOjxErJw
                ws3pVJEsk5OTNiFHCCHlgrM33JxFXDQa5XgfQhbJGzPXWyAQYBWmg3Q67RK7vD+EkHIg336gM4o4KaVt
                xA8NJSHFxzwiNIVbKBSyRB3Xn78dopNJCCl1mpubbbYsl82fUcQJIdDU1MRoHCELiCrWzPWWa/RUpd4j
                QggpZUfdy5Y5o3C5bJ2W7y9sbGyk0SRkkRa7X8duQgghpYdaVa9G2hobGxEIBPJ/nXy/saWlhU1/CVlA
                4aZ6YTxCJYSQ8kHXdU9b39raOjsxOJuNpKWlhZsJIQtALmeJa5AQQkrfxjtteWNjoy11bd4izrlhNDY2
                zmn4NiFk7iLO2QeN0XBCCCkPO2+KNikl2trarAhdQUSc8/hUCIG2tjbeeUKKjDNXIpVK8aYQQkiZOepm
                B4JYLAYpZeEjcU4ikQhCoRA/AUIWaKEzJ44QQsrXUa+urp5z8ag2l18ej8f5CRCygExPT/MmEEJImTjn
                qpPe3t4+59eak4gLhUKIRqMu1chcHUKK47FNTU0xGue4J2q6x2yPIAghZDHtl0k4HEZ9ff3CijgANuXo
                zN+hmCOkcIvdFCjMi3M7jGYSsDmCi7aHEFIqNswsZpgPcxZxmqZZx6rOaQ6MGBBSGE/NXE9CCFy/fp03
                Rrk/tbW1LlFH20MIKRUb1tbWhqqqqsURcYBR5FBdXW2LxNGIElI4L01dWyMjI7wxDmpqamyCV9d1RuMI
                IUvevldXV6OpqWnerzXvRJKOjg7f+V+EkPktdGe/OEbjYLM1oVDIFoULBAJ0JAkhSxopJZYtW+Y5dmvB
                RVx1dfWsx0QQQuYmXK5cucIboaAeqZrGkM4kIWQpOJlOW2SKtaamJssBne/pQUFKuhobG9k7jpAieWym
                MZBSYmJiApOTk7wxGSKRiMuLZSSOELIU7LbTFgkhEAqFbMUM6sSGRRNxQgh0dXXRAyakSB6d2lJjeHiY
                N0YxgHV1dZ5eLyGELDU6Ojpy2vpFEXGmMY3H4/SCCSmidyelxNjYGJLJpK/XV2lrsKmpiVXxhJAlTzwe
                n3c1atFEHGAcbTQ0NNCYElJkLl++bPPg1FywSopISSkRDocZhSOELGnq6+sRjUYL/roFb3Mej8eZH0dI
                kZmamrKEXKUm85vXLaUsSKk+IYQUg0Ag4HuMumgiLle0bfny5fzUCCmygBkdHUUqlarYKJR6hNrS0sKH
                ghCyJO3UihUrimantfm8MT+qqqqs/DhnrgqPWgkpnIC5cOGCNXqqEoWs2kuPrY4IIUuNWCxW8Dy4goi4
                mYhGo2hpabF6oKjijfkrhBRGxEgpce7cuYoVsuq9aG5utk2QIYSQxSQajVp5cMWaaKUV8wJaWlpQV1dn
                ectsxElIARdvpr/QxMQEBgcHK07AOgWdlBKtra20MYSQRScUClnz5U0bVQzbVFQRZ/aPCwaDLmNLCCmc
                mEskEhgeHq6YteVlDIUQCIfDaGho4ENBCFlUm7xy5cqF+V0L8UtWrlxpReEqNX+HkEKLGGdfuKGhISQS
                CdvXKpH29nZomubKmaMDSQgpJM7WTqZ9WbFihe/3l6SI0zQNq1at8vWgCSGzNx7mcar6tUuXLiGRSHga
                i0pqBhyPx13TLtLpNO0PIaSgzrQZmNJ1HZqmoaurC9XV1QtmexdExEkpEQqFEIvFKOQIKeC68jIMg4OD
                mJiY8DQ4lbD+zGPVpqYmW2GVU/QSQkgh7I1JLBZDbW2t7/cUwwYtqFVraGhAW1sbjzQIKeQi9jAM58+f
                t45Wi+0JLlXa2tpQU1NDe0MIKTqtra1Fmcgwo4h88803i27hnFWpo6Ojrg3GWcFKw0vI/MVdY2MjIpGI
                tZ7M8H+lRMN1Xbd66Zk2ppKun/hTU1ODqqoq7jVkXrrGjPy3tLQU3L6cOfM+3nvvXUhogExj+fLluO++
                +2zf8/8zPBze1hDdjgAAAABJRU5ErkJggg==
            </property>
        </structure>
        <structure>
            <property name="name">bandeau_courrier_bas_new.jpg</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEASABIAAD//gATQ3JlYXRlZCB3aXRoIEdJTVD/2wBDAAEBAQEBAQEBAQEBAQEB
                AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEB
                AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/
                wAARCAGACIADASIAAhEBAxEB/8QAHwABAAAHAQEBAQAAAAAAAAAAAAUGBwgJCgsEAwIB/8QAgRAAAAUD
                AgMEBQYFCgsPDwEZAAECBQYDBAcIEQkSIRMVMUEKFBZRYSIjcYGR8BckobHBJTIzNDg5eLfR4Rg3QkNE
                VFZ2d7W2GRomNTpFUlNjcnOXuNXxNkZVWWJkZXR5gpKVlrK01ydJhZSi0oiYyNMqV1hog4STo6SlqLPC
                1uL/xAAeAQEAAgIDAQEBAAAAAAAAAAAABgcFCAMECQEKAv/EAEARAQABAgQDBQUGAwcDBQAAAAABAhED
                BAUhBjFBBxJRYXEIFBUigRORobHB8BYy0SQlNDVC4fEJIyYzREVVYv/aAAwDAQACEQMRAD8A3+AAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAQW+e2xu2K6uqRVSLpQo/jFzv8Ep3V0/7pJfDcBGgFN7yd09+zb7QzPb9mvTNJe7c
                tjP6Opn59C8BLtzK3y4Pcrv1WmXnQoeXl9Pw3+ACtQhtV2bbf9kv7Gl9NxT/AEH5ChNa4uLj9sXFWr57
                V6/5y957+Hl8B5wFcFShhp+LhQ+rf+T7+Q+Htcw/9kC/+kr7/wC9CiwAK0+1zD/2QL/6Svv/AL0PtQkj
                LcF8hzol8Kyjtvp6qSk/yfk8aIAAuHo3Fvcp56FalVp9etKqRl/9SZbH9ZfWPSLcqNSpbr7S3qVaVX/b
                6Hv+z7+WxCM0ZBfoIyuV1a3+70a/ql0e5bGRuJ9PPzAV0AU2bXq+uT/Uxzo3VXyanWgdpdltvts4b/qi
                ZEZ9UkXgXXoW0UKXlaVSt3dsurCof+xP1oj3LfxSRHt9Z9OvgAnUBC7NzsHBO9pd0qvydtiUXbkf0GZH
                195JMi8/MRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAneQWDQgyrr7W42I02dEyO5VuW+5ER/wAm+5bbgI6JOdJg
                22BdnQP164Mi6UN/VyPz3USjL7N9vHmEgOsjcHf5upU9VtenzFDfc/Ei3M+vh8enQhL4CYXGTu7hvtce
                q0v9poee3vPx+s/rEvAAAAAAAAAAAAAAAAAAAAnJskyKiPUH1BXtltv29cvxm3PwLnIup/SkyUXhvsex
                yaACozjDiWgrtguC36V6NEqx9OYiP8QcOpoI/I1GpO2257mRCEWkne2iqq3cO1uezLrRvTMrs/r8fo6d
                fAgjMjW11itLyp+I1eqTP+xehF8Om/w6ipDm02LvROndUyqcuxUa9HpcUDMvFKuplt9viW2/Ug87XJGx
                0MqdKp2VwZfsFbclb+W2+5fm+sTCKHvUbu2hfa/tqw6b1vMt/Iy36fm338R72iXOFh8i83vrXcj+e6Xd
                t5ERl4GR+4/Dy+IVhAQpuc7N0o9vaViqltudIySVxQM+hkpO5mR77eO5eBGoz6CKgAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADz1q
                tK3o1K9eoVKnSTzVa2xFsRbF5EZ7EexeH6RSaQSeo6LqWlp2tOx8DPbb1n37bb7EZ9fp6gI2+y9CO1tG
                mp2lUtyrXfXoRl1Kx6mS1FsfX9aRme2/646crqVKiqtSpUq1atb+v19/H4F59fD8vTofzAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAVRhLv6xbG2V171rMt6HTxtCLoZn9nj4ClwiLLeVG91sLjtPGv8/wDCy6e7/o28
                fMBXhdOnVQdJaCqUqpdfMupee30eJbeYpVJYx3ar12zI6lhuZV6HT8XI/Ay69S67lv8AHYVcHnXSRVRU
                RUT2lKqXUttyMti6ff7AFv8AbXle0rUq9murSqUfHsNz3I/yGRlv08/DYVTY5XQcOzs7zs7a/MjIiL9r
                XHT+oPctt/d4b/DodP5C0d0X9W3Lf1St+MUPp67/AGHvuRbn7z2EEAXIAKZR2V9mVNvd6h77H2N7WP5R
                lsf7fM1EkldfE/h8DKpoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAADz1qtKhRqVV1OzpUiNVU/cXTff3b7l1Lx3HoFHpTIPX63d9pU2saW2+2
                /wCMnt5GZb7F128DLz26gPnI5HUeFnb23zdhR3367nc7+7y8PAiLy+IlQAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAB+0U+06ff79fLqPwI5HLP1x4saZER06NY7isW/U9j6F9YCugAACTppaFcNJ1y/ZLSqS0+Pg
                e5H+YvPz8RSAV1kH+kjn/wCJL/MYoUACfYvJit+zbb5Zer7GVvXP+sePyVHsZmW++x9djPp5kchAAuQA
                U2iUj7Q6TRfr+ePb1Kt0Ij/W/iR9D6pIi2PzI9j6EW1SQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQZ6c6TPY1bupyqqbbUKBdO3uTL5KS8/Lr18P
                HqAlmYvZ26CbLSoRVq3W+rf2rabdevvVv+Tx8SFLh+61SpcVqtxUqdpVrfs/3+vfb3b9R+AAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAFUYQ2dnbVnOp1O7LsaHxtEmRp3Px6n9XQyL3iQGhrqOd/Ts6Zb7fs1b
                +1rMvLr4mZ9C8BXWjb07ejTt6BdnSo0So0S6dCIiIj+JlsR+W577APSAAAk+ZXfq7JVp/wBcu6pWxfXv
                v+Qi2338T8xR8TTK3LvJx7KnUIra0M6FIyLbdR/rj9/U9vHy28NhKwAAAA/aPm1/N/n8S6Htv4CsMYey
                d7Ts6iy9etC5a++xFcF8lKbxJbfrVH9RK6eZbUbERa7+u2X1O7odSpEZGX9tFsZGR+Hv+j69tgr+A8dn
                eUL22p3dus6lKsW5H8fPp7y930fV7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAFE5S7pcnHs6SyK2szOhS2LbdR+J/b7/DYvLbao0ocu7GuqdP9s3X4vQ/
                3xltuZ+Xyff5qPwFFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH7RTqVF0qdOl2tWsXh8Pp+r+QwRT
                qVF9nT+/1b7eBfctzKq0ZjRN6Tv7tH47ULelRPwtS67EXXbf37+H09AESjjEhnsy7QiO9ql8/W8TM/d7
                vrP4eHgJlAAASNLH/u+j3faVEnd1utc9ultadSM/ge3Tf3H49R7ZHI7dooroUldrf1U7UaJbF2W5ERGr
                YvDoZkW+/XfwLrR6tVqV11bi4qdrVrH8/X8vP/p+5APwAAAAAAAAACfIY78lbum45Sp1S7eyMy3/ABk+
                qi3LrtsXT4l4dRVQW5UalS2rUrinU7GrRM7i3/L8S+jfx+oV7ar+m6WFte0z6V6RK6fHbc/t6l18wESA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4XK7Kwsbq
                8P8ArFI1/Z0L7N9yAUnl7h6461LdBbUm4uwP4H4n79+vh8PpEqj9rqVKi6tSp+y1vE/v1+zf6jH4AAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAB6LOzr3lalb2lOrVqVuvj4H7zP8p7iYmiKODkVOrcEdjbePbVi3vL
                nf3eJfDc9hVJuarRpo9na0i3Mt61Yy3uK6i81KIi3Pfy32IvAt+oCBR+MW7R+MVzK6vz2Pm8fVyMvBPX
                xMvPb37EfiU4gPnUqIpo51rKmgi6me23Xw8j/IA+gkqQyenYnVtLE6dW/wBtu0PYyt9/M+nUyL4mXvEH
                kMvJfaWbWsipEW1a9LwLw6F0Lbfw36fZ0FPAH7rVKlwurUqVKtWrWL5/+X77+Pl4D8AAAAAAAAAAAAAK
                hwRw2XdNdRe/9kUOm/QzLfr9HXb4Cng9jVed339reePY1/n/AD9/0/X1+kBcIA/CVEtPMjbr7/07eOw/
                YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkWdXZ0m+3tE
                eN5XIt/HoXX85/8AT4CehR2b3JVXcqHlaW5K+HXr9O/X9HgAlEAAAAAAAAAAAAAAAAAAAAAAAAe23a7+
                7L8XsLqoRedChtt9J+X1n9ngJitoc9XBb16dG2L/AHWuatvqSSj+/XYBKA/aKdSovs6dPtav8x+P0n+c
                VStIK3U/l3lxWuj293qxF9JEZn9O+3uE02TY3t6PxO0o2vwIttuvv3Pb8gCljbEHi8+cuKfqFIz/AK/u
                d30/Qf1dT8egqA1xdsa/nOzK5udutxX6n9HmRfXufh08xMoAAAJefH+0Y6Xziu0uav7BQLpv/IQCI37j
                Ztdsdxd1CpUff19xdBSR9kd47r7Mt7Ww8ew36f8A0R9xeHQuhH7hC3Jzu3S57e8X2peNCh/a3nv4n4+O
                3j8RDgAAAAAAAtPh5fXwAAAAAAP39/I8+nj+/WAAADz6eP79YAAAP+Pr4K3Rm89cZrFf9cpJKhWI/I09
                OnXz3T9hiYhTaA3O1O+s+hFuVxS5vMj6efxMj+rz23FSdy8d+nvAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBXuv27u5rLw9eIi+jYyFdqlQkIqL8Spke/1ER/pF
                uy6naLq1Km23u6F4+f5t/Hx8PIB+AAAAAHttrC/uy3tLO5uSLxOhR2Lb6TPw8PHp1AeIBN1CEu9frcHb
                2pf7rVUv4eCEmfh49BMlrBLNBb3d5c1v+AP1X8pb+fjt8PABS0ftFOpV/Y6fa9fAvf8ADy8/MVrtowx2
                5bosKNTfzrl6z/725f8AT9AjNK3t7ZHJQoU6Re6lSIi9/kXX6z/kAUPox94uP2NruvA/2eh6p+f+fzEW
                owl6qFus7W3L/daxq/8AcIz+rp5ir9SoimjnqKKmnpuZ+Xw8D/MIXVemi3TtUcLUuvlX9Y9/+xNR/l+A
                CSqMAqbfPudPp1+YoF+ky/N9u4ilGBtdP9kuL+qfxuNvzl+Qh6q00ZaZfN1Lm4Pr0oUTV4fHpuITWn1P
                YvVmyrU3861ZKS/Mf5/EBHqUUYKfRLedT41q94Z/lVt+np9IjNFvsLYvmLK2pf8ABUEF+UkkKYVZ05q6
                U6FnT/31NavyKV16/oENrSyQL6d49lt4dhQsD+O3x/L/ACBW8fNVWnTL5a0I+lRF+fb8woLWc3S4LZbh
                f1PP9vdPyfV5fWPB1qH5bbfT4/n3+z9IV2qvrRQ/ZXOxSXxro3/Iah6LRwtHBC6trU7VFPodXkPl32M/
                kmZEZ9C32LYUyjkZqOayvLwjpWB/1jrtdfE/cReZ9fcKp0aVO3popUEU6dKkRkVGltsReHQiIvDx+J+J
                +AD0gAl6QPlNltub9luq25W9Hw3Pw+/j167e8PJIZFTaKPZ0Nq1/WIio0OnzPQi3UW23Tc+m/wDPSO5u
                Li8rVbi4qdrUreFf/o+kvIi2MfKtcVLitVuLip21Wv8A1/7+R+G/T3+Q/AAAAAAAAX/D9Od/TqAAx16y
                +JfgTSFRuo3eXf4Rsxer+sWOL4tfmm5btyPu05hIP9KYU1lsnr8l8NCyUlgUZGQ6ufz+R03A94z+c+H2
                jeLxfaLxa+3ene0fhKW8E8A8Xdouv5Ph3gvR9X4h1vUZimdM0qiqqim/dtVXMRMadTE272fqmI8Z3i+R
                GoZUiOrWURERbmZnskiIupme/QiL6C8RYHnXidaOMCVbxsespWM4lNkaratDcXW6pm6nfJ8G9ycm1JxN
                rcj/AOxLy9shbbmRGW2+rpqQ4guqTVlVv2uZTKvEMd3ddRUMawP12PRUrIz3JMi5UpdZKRdE7vL4TCok
                JOPR5kURqO0uwi/af1vx8vh+f7PPyFT6r2nY3zZfQspfp3tUi0TyvVTtEzfnE3id+Wz097Lf+m9k8PL5
                HV+2fi2cPPTTEzoXCsxViUzMRPc1bVM/M096n+WqNP0+uLxenPTeL5+ckcfNwq1a1lhzTty0j29Wfcky
                /wCUk+m/+h6OtK0r6n5zYveZC0CQ8a/XI7HUW208QRGnW/a9OPwK+ulW5n7/AGilTun7EF9Yx420P3L9
                j8v07fo/J8enqXEPE+T6TMvq8Ps/kENzPFvFGciY+LxHWe7FukbRNo236TEbeLcLhz2WfZm4WwqcHJdn
                Wk6nNMTF9aq1LVom80Xqqp1KZw5mZi97Wp3iLRERF21fjCcQZG3/AM1WP+O/TF8HLfbcumzX4fDz8fIV
                AinHU1sxnsacmaMNz21LrcV3qHPbW7K+BuUelLO0EXj+tYy/SMdd5E/9z/k6eX1e/wDP5yQ5Rvs9vm/0
                dPM/PxGP/iTifB3+MarNvGb09I/lna3jt0mY3TzG9nf2c9ey85HMdj/CVN43r0fTdP0mvpvFemTTXE7R
                1jxbBuKPSEG+4XaWeZNO91bf7e64ymNhd3fx7uhkmJj8PjOvD3jLHgTiWaNtRF5aMkPzA1xyZXn7BAMj
                UPweyy5vP7Qb/ab9SJM6df8ArKfX3p+TRJcmfs+vZ/zfEunUvd1/m8FrcU7jsmp5LtaX7Xsb7+y7b4n5
                mJXw5x/rWLjRkc9m73ttP+veNp22vG316cmh3tK/9PfStD0TO8edjU6rGn6dFWr6xwheNS1OKYiJq+GT
                yz9NMbzkc7/baYvbN2/szpvQ64Km7oQZGZXVC6pGReO1NRVNvh+t8fH4birhkk0EWx7b9C36+CfHw/P9
                o56Wk/ij6tNGD6xNzXLauT8XtG9v+CzJl9fu7Vas5l+0YZIjJTtBjLy7mI4/v/1uP5DcK0NcT3Tfrqba
                TbB3ZcHy3Z2SriRYamF3a0JTalZJ/VJwjt8kybJrG0VN0odmRXe1KkXaSFhjy9qKbRyPE2Sxs3Gm562n
                Z/nTp0xMRMTbeKrRG8b3id78ubyZzmlZnL0V4uDFecylNcxVM092vDqpm1VNdN57sxVExMTG0xMXvEQy
                VF4F5dC6e4f0AMyLxMi+kSiLW25dLcrMcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAPA5L7Nvvqv8Atdndn9lNXl/5ot+FfHKmus239vT+XVrWV3Qo+81VLNRF/wCko/y7
                biVWiF29Ds67mZXVbbfsN97UuhbGZdTM/d5eRe8BTq0bL+/UdO0s6tUiLqe5bF9J/Dr9HQTrYQWuvao4
                Xh0v9xt/AvDz8C/L7vAVGp06dJHZ00U6dMi6UqREXj8C5SLz8C8vH3QW+kzO3n2dS7TVq7fsNv8AjKvr
                MvL6/qAf2yjjPYFvTs6dWp5Vq6fWVb/EleH2b/HYR9Jcpbb/AB92wpdeTq4qfN2FpTpER9K9czutvqTt
                +kSxePTvfmfb39zUpmZGdAiKztD28DPbqfw38Po33Cs127tlmW13e21JX+1nWSZnv4dOh/aX2iXbmbtK
                EkVvTuLky929sX1KURb/AGEKSgAni6nThVLa0tLe16eNczuT8/NPKX3Pp4CD3Mne6/7I4VaPv7D8U+r6
                /L+YS+AD91ri4uF9pcXFar/w9f8A6PtH4AAAAAAAAABN8Zj/AHnV9cvKf4jSLpv4XPu+Oxff4wZmbKjt
                fU7SmR06REZ1qpeNvabdElv05j8CIz2M/PYVytrajaUadvQplTpUS5aSd99uh/X5n9QD7IQlCeVPQvv9
                A/QAA8d5eULK2qXdyfZ0qO5mZ9PD3be/bz9woQ5OFw6XtW8uPGt0oUN/2v8ADr+UThN3Mqlak2U1l2VL
                5+uZF/ZRGrlL6tzPby3PbxEhAAAAAAAB6bT0nwAMyIjMzIiItzM+hEReJmfkRANe/jE8SS7xdZ32lDBc
                gO1yPImwqOWpk1Vy9agkdv7BJpijY5Er9TJw8NjgZk8KIu42JxJRf6IXtMhZcPrus5HQsjOezs72vERM
                c+kRHWZtaIvy8o2tXsZ7IuLu2zjzReBeE8jVVntRqp+MatFM/CtK0mKqfiWp6naJtFN+fO8xkovVVTTM
                P4lfF1OJXci096UnhFeZ2dzeNE/y9YnYXVpF7oujgwQEjLdykqj/AFIkUq6dwp2Sw7yJVR6Ydb22tnB8
                crp0eLy/dHRxvrxwvnR1r393dud647m437i4n/pm6ePjt5e4Skwt/adl4/V+Tp9BivsVZ+07L6z6b/cj
                /KNb9Z1/VOI85GLnJ/7d57tMTNoibWnbrNrXm87R0iz9DXZT2JcBezxwlToHCGRw6tW+zpjWtfnuzq2r
                apEWnu12vThxPenT9PptTku9VP8ANVVM+9gjfaHS+b/6S8T3/lFY2SHdp4U/o+rf7+76uomSJRftOyLk
                +jy/R8SFy0Ug/aHS/F+m3x2+/XqOxlchffnyt19Oc+kfhZiOJ+N/c5nvTMTE73tEx5z5xff684UMsIHU
                qI6U/o8PD7/H4CIVoH8j9r+ZeQvWZ8b9ogvxfb7dvh9f2n9gjNzjOpTR+1/D+b7fv18RmfhM+E/dPl5+
                n4KhxO0vBjMbZ76XmOUxe95v/T1hjidYPUpoq7U9tuvl/N9zIUlfon2fan2e3j9P3+jqXvGSeR4/7NFU
                vV/v+T3fWLc5XEOz7b5vx2+j8nuGLzeQ5/vpb8/zvvCweFuPfe5j5rcov48rTe8T1j/iGPV+j/Z9r839
                z3+zz+s9thRx4a+z7X+b8/6On0bC9KVR86fa7U/H39Pv+n39DFucka+Ttfm/qL7+7fz+sthHczlZiY7t
                4qvFrbTe8W8Otrct/Jsbw5r+Hj4OJ9tacH7OZxZm1pwppnvzveJiado5x58km37XUeYxYOH9lHQ9Wr//
                AEO+/wD0n1OSI3IJJE35rlETfHmLzKKutm8McjjjrftMhZHhu/0ufm5xbdndsdPL8hC768gdRjgzNZ3l
                v2V16j3hXobdf1R/VL8/X6Ra1cs9Sm93+37F2Bb/APT+n6/iLx4q02MzwNkc3nY7uoafpOlzFURaqq1r
                3qjefP8A5v8Amj7Tc9pEdsnaRHDFv4Wz/GHFEaXERemNN+J5/wBwtbaLz4W28t23vwnuNHa6gr2PabtV
                zm1sGb6qbRngOSTRZNkey1dmZHZsEgTTPuyNZROmnakikaWCerM/Z1LPI+yjrxsgKJBpPqe25fK9+/u8
                C+sxym7+3qW9b1i3qVaVWjX9YoV6H7btvf4/R9/LdJ4KHFMutUcbRpjz5Ie11BY+YvWojKnS6qHf5hgz
                ZYoK+u728ciUl0yZEPlHJSRy1X1jSmRUqdWu0TepbYTgHjrFzePGh6vVFOcmY+GTaJ79FrWqqmeduV55
                Ra3jX2u6LGBHvmSi+HO9dNp2jaZqiPDne3K97Wu2IC8C+gh/QLbYtvDbp9AC54/HrbxRQAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ3UdlS4wTp7zznC2ZESS7w3hnKWVaEc
                q3ndtB7useQaRTGkzd4mnlbCdlN3d1R2MjTRTUOosiNJb6Gv+fiMp/8Aa7ce/wD2xkh/+SMbvfEJ/cC6
                4P4IWpj+JibjhkAN8ey9ODyJTvbSo48OyFXTeVUzvbaw1NP1jd17ci5eW0cauE3ZLepXUzUpmr7bEfLz
                bkMx2gf0s/h66vJcwYzze0S3RdkWSVbSxaL7Kb4xSTCd+8X6zQhkLMbXTYyjqt0JPvfI8Igkc2URIkJ1
                lFSGFvIHoUk0dMTtM009a647I5w8RJnfm+D5dwpfweOOd85ttJx9SVkCKz6dOjQlPOaf+oJ62L5alkjY
                aderDSdnjRLnOY6d9S2P3DHGUoVWod6MV7c2N5aODZfJTdtb9H31u7VokcaerAu3ZXlnrVLesk+yTyVK
                K6KQ7p1rc2t9bUry0r0rm1uqJVqNejV9Zt7i3URGSkq3NJkolf1PxIzPYyL2jTE9Ds1+5F1DaZs26QMt
                yZ4lzlpJcoG7YlepFeXjs6W+E8i2b+3WMAQ4VKqlraMYymGVDjxOpqqM0dmTVHGBHs8wUKLHudgAAAAA
                AAAAAA+VRdOkg1rX2dOn+uM+heWxH03Mvo8fo3H1GlP6X3xLcp6cMQYc0NYOld5B3rU3H5hNM6SBnuCt
                JH+BllcLGPx+Bt7hT3cmtoyTJlyRMlr25tNauxwc4wqrVYZFImhQXT8Qz0s3Qbo9lb5i7AEYfdbeUo5f
                3TXIq8AljfB8JM1631kUXNuRmVxZ5kmTX9Pm3p1ceQeaRqr2VVC5MmtTKmeZrhT633XiQaCsEazXrHbd
                iVwzMWUe1gLVJLqWWLGWPcy5DxSg0yG9aGNbibqULJ1WVRnpnSqOBo+XyoMuSlwtOGJnLit6l6GnnDd4
                yxBsZ41eTnKuUZHRuruOY1gTVeWDXVfFtlgvvaSPLw8OLczRmJtSqdV8enHtKtRjjbQ/SRh65PDX0OM/
                Dk0SYQ0XMWQ7/KthhyhN0onjnHrGIXUmvZ/k6b5XdLtMbb3h8S02NN2mV61UW03t2UbU3UiXXWaqijDE
                W9elrcH9ge3dhcZlnum4MbreNF/2WDn5VsV43X6rC/JBm6JNSULQs0mafLm/Xbb7CeD8vQ7UDhbEGesd
                Vr+7x9mvGcDy7B67rY1Gx3uYdkWJtM0jVS/bVJJTe4qaHZvVXbjUrslktCqlTY1FyGMjcBzjAOmRJ44t
                +gHPV3YuUykd/Y3NBqYvV7izcX1yU33Zcr1tyqQrm6kRmSt/kke59W7hxY/mGKOHroPxdkJgv4lP8a6M
                9LuP5xGHemhDpHJfDsKwiNyVgcUoM003BmeG5wbKyUK5SrU1lurYBeqA1NfSS+NLq/4UMz0lR7S814dv
                7HNcVzA8zJOVITIJZc0LqFvOO21hUx91S+HeoEinI3HnSsq3aK2qH1RTUJR9HA43us3iuZu1I4/1QNeG
                LJixPi2IzKMFi6EvkUu67s/y1ceu1OXesvkJX7clvI1dmZUzorJCyUrflAbfAAAAAAAAAAAAAAAAAAAA
                AAAAAAAt01X5zVpg0uaktS5RVM4Rp3wHmXOKoST0UbTLvwT44kk6pxRMjU0v5xuo/HHu6VPKWF8JnJwO
                4JieFIKivStifpu/tRKI1GUcMkrBUkkLOwlfnrQO6K2U5uFm3ldqsC0n01VE0+1JRUyqJP5Jkle+++25
                xX/3rHiW/wAALWX/AMnfJA4pOJf6amNP7/4d/lC3AO9uAAAAAAAAAAAAAAMQPHJ1v5n4dnDmy3qrwLaw
                u+ydCJViZnZLafMbhIIudpMMlxqNOqnBsa3dgcah91OV8dPldqaUVOviouTVD4XfpQnEn1jcQTSjpjyy
                w6ZbLHmZsqWUNmFeHYulrTIqTRetrm4LU2OjjlN8oWDgS2/lp8zQskkXykr5iNIdDoAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhA1y+kCcO3h158cNN
                upWSZTasntkYjkuvaEOxffy1nS0S+zW4Naic7BzQRVV0yI6lPlPlWSkEpZJ7RWb8c4r0l7hVcRHVpxQp
                XmLTbpNytmLGF7hrEMesplD7Gwuma5emBjckudjz37tTM1tq1ctVBUklzr2IzNXQN2rh5cTDS9xPcZTb
                LWlR2mTvDMezz8HEhuJtD7+FXdCR+zzVJeWxsnBajcLAmqQNxpqkaOVRmlSCqJTzZCxqt+ii6NdUWirR
                rqKgeqnDEzwbMpZqZu5fHo5N7awtL13jhYpxy1E+t5N7nXQpvW6t1+3HtsntG807kSVbbUgAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlN6lVg1Gu3Q
                Z3V0RGR0aO29Dptuo9vHxMi69frIRR6qVKTRfroLOnVpWijLp+t6dPycxdD+G5dRQcBHHJ/c3M+SvX7K
                mZFvRoFvaHsXTcz3Mz2+O5/HzgYAAAAAAAAAAAAAAAAAAAACYYs394O9Ln27Kz3uKxHuRbn+bc/v7gqT
                GGkmxup9ogiurravceHRR9SL7DIz9++3l1mYAAB5bi4p29vVuKpbU6VE61T/AHpFv9fgfl9I9QlCZXnq
                7LWp+d3WK2Lf3H4l9hAKTXNxUvLmrcVP2WtX9Yr7dPEj+n77eI84AAAAAAAAXiImZ5U7z6RvN56PtMTV
                VFNMXqmYpiI5zVMxER6zMwse4hGrto0Y6bpbk2odtczd0/0IYsY6xH+rc6cLEvUb4rAv1rYzkbjLZB8p
                KyJtNSflPXTQtvn9/mUjfZdKne+fZNKHu8f5E9ulcrq6eXdwv+8XC/cCIuhE6bF08C6eW4yb8aLVUvUJ
                q3c8eMTp63jjTym6gTRRoVy9UuJwe55AfTPYj707zb26ImRmrlVCFluadhi6ZP19H6T/AEjWbtB4jnW9
                a90wJmMhp0zEx0mqLRPrvaOvjyl+jT2EewTK9kHYvkeLNUyMTx52i0U6tqlcxvpOi1RFWlaZEz80RXp8
                /Ec/tF87nYiYnuxar8bsyqLpfR9/Evz+4XNwxr7Tsvr/ACfnP4/SX0W+xWn8ul9v0fHx6+/b8gurg1PZ
                dLwL3fyH/wBPj1GA0/Dvbfwtty8Pw5bcl58b5u2DNp3vebc7xbffe/Le3+1ysDY+07I+z/kL4/V9nh9V
                68Ah9O47H5v6Po+/iRH7/qtux1b0/wAV+rx+PgX0F4/yDIVi5vp1PVev1+P0fnLw2FgaVlb2894t59f6
                3+9op2oa/jYEZ3fl4zHlETflzjf+l1RYrjP1hFI/V/Hbz/T9/D3icnLFnZ237X9+3h+X7fD6hdXi6N2d
                4i1pVOy6+Xu/T/L7uorXMoK3N7adT5rpQ22Py+/nt9hbiwMLS74ET0nedvTr68/G3k0V1jtQx8prcZaJ
                5zaOc7xa9rbTb9Ii07sLs5gdK37X5v6fv9Xl5+ewsonkbp2/a/NmXl59f0/f7MtuVGu3p1Lrp4H9/wAw
                xz5Ls6dNd1t18vzfR0/nET1TK/Y3jn0nre3Tn18m1PZhxRmM77l3pneIvN5v02iZi8XiI/PdjcmzPTp9
                qXZe74/A/wAv0fX0EsYlwveZElVV4cLMyiUVr+sOtxcW/wCKOV5/rcwfaf5xfBANM84z4/XVsx2dVrib
                bW3kcxvqH6lNvh+INpdO83Tr1Z9+nn7hd/KscRfGEVtYfE7P1VmZ6HWvX6XbledO8b9xcd/9NPL+UcfD
                HCc5/OzqGoRbIafad/lid4n+v1ZH2iPakyvAHB+d4L4SztOLxzxJpFWj1WqiY4W0qYiKtSmYn/MZi8ZH
                raYzcsSeXWenS9a+b+r4/H6C2Lf7lYw8Mfq67qp2fztb9Hh+nf6fsyE5XuKbheXVvZ/O0vDty38tt/Hw
                /kFnkns+z7Xp59Om/wB/d+Q/IhydofE+DmsCNJ0//ARERNue3dtHSdp5bRyeU2h5KumqrNZuqa666pqq
                qqneqqqe9VVM85mqqZqnfnPnda0/N/38fv8AT9YgEHn8zw7kGHZSxy+X0ZmsFkTRJ4s9WWx3Tc7t9/3k
                ZGXg6NRl0kTMZbSDcy6io8hsz+d6flP7/f4GKLPFv+y/f7n1+HTp9FHV1VZbMxiU3iqmYmmre94iJvE9
                OUb8vLolcxFUd20TFUWttaYnb0dKrQhq5ietrTRAM+x0rNtcnuzQzZDjFGsq6OF5IjxU6EujqqqqqjVZ
                dsdJ2j1RRoVdR11Znw0rJ2IxeiStiPz5en09dhos+j0awrjCmqpy01Shz7PHWpOkmgxUK9wlNoxZfjti
                5OLA4cyt+Upm0G4xBZp+XIH32TSkzNkMlb022/Nt15tj923Xf+X7NvEbScF67/EGh5TOYlVPv9NEUalT
                4YkRtM3ja8W/LZWesZH4dnasvyi0TR5xMRNuW0xMTtfeLS/YAAmLGAALWtWOrvAGh7Cr7qL1QTi/xxh2
                KOseZ5DM7aEZHn1gyXkpdER2PE6tWNorMZSludni/b2ZLupjqs9J3cGwqlRFeuXaBdKAt804ak8JaucJ
                wfUVpznVlk/D2R7K/c4bNbJqkDJbuVu2PTnHnJCo/JWZhlDU4tDw2X7TWa3tiZnkqtiulUpmrZR3BgAC
                iORM+4kxNMsMY9yJOmaKznUTOnTHmGI66JvCvJ1LmKDSHJDqxNxIpqQ3FTicQd6nejzVZ2Rb73NHE1qk
                mkseY3ytwAADHfgfinaEtTupzKmjzAmc15L1DYOqTJOVIOyYzzJaNUTRjuWt8ImSqmRXfH7Pipzps0sc
                7FnQtinD0T2pRkwk8UyqKIMiAAJZf3u0jzM6yBx9aJtYm+4eb8rBqdHa/wDU2+1rX98do1NLa7OrneKQ
                ioaGxralu9dSOWhQqVF0UKCZgGP/AEPcTLRBxGm/IDlo1zrY5mt8WuEbbZ9SOEZPx86sFxLrJxvI9UqM
                eTIfCXe+bnomB0Oi6NTTUZqi2t0Qqtz06ySyAAACjOb8y4x054oyFnbNEvsYBinFkadZtP5df2zm5WbH
                Gmkudzvibmdud3Zyv+wSqlaNDUzOr073VakzMdG4uatOmqprW6Nzy32Lo031s4trjZWl+3uVjcFe2l9a
                X6U1bK7s76lU7K9sqlOpzoWRqJaFJXvspO4RkAGO/PXFN0JaY9TmJtHWa84rimpXOfsR+DLFLXjXME/d
                pIeQ5bfQeGFUccbwKZRiOG/ShvcG2mmWPTGpNKgT5cHRY1UXWoGRAAAAAY7GDim6EpFrXe+He050VS1l
                sFd0tXHCr5jTNUeul3bbEPwiuCWyYyPHrRjmQJVAzRL2XuWZuhPcfI6zAVWgW6siYAACiGEc+Yk1HQy/
                yHhGesuR4TZzrImN7x8YjvlWtpL8VTeQY4nDKrvClRUs2iWRt1RSdqdNTLIWMmqRxmq9Rh/YXx0Ct4AL
                LNaOvPSXw88aseXdYWX7PDsAksutYFHX67ik9nNd7l7lYOsjpNljHMaxWaSqotLXHnVyrOiGTuZnp06Z
                V66VLpU6oXpgKV4jyhA854vx1mbGDpdvmN8qw+NZCx8+3sekUTun+GzJusZFHXxcdmzQwSlrQ8tThYu6
                aD0yND0klpXUopWpBCqgAAAAAAAA0/PR7eKDrn1v69OInhPVDnOplDG2BzdSxXHF40w3CjihN2aJHFqS
                1OuNYBDXl3MozY2LQffzy+pJaCuVmuqtdQtwMaAXom/76bxdPokn/KKk4Df9AAAAAWp6qtaWlXQ9js8q
                asM6wXCkLWu6tm69lV9d3DvI79tR2t+3Q+GNFJ6mM3d0INK1MsPYHx7TSWSjoK5+YgusAatD56X3wfmi
                REyWDvqSlDZ2/YnMWLCRW0d/Z+t4VpJpcwS31Lfcy/0Pdry/N9gS/wBblu0QcWrh+cRNNSy0pajIhPZn
                Z2KnFzxe90HvH2VW2zsySpwvTx7N2pke3NubFKSVR6YaD7H0rMi78PbmAZKQAAAAAAAWcattfGjrQfDq
                M71a6gYHhRhv/WEsdlJb6/cJlK1WZ7XiYbj6Otr1kCaLo9DqlE4+9nSJVNa000KSZ4ManpfXB6pyr2eQ
                86kqjUVY7f26pYT/ANC22+53ZWKpYmYqT5kfsSazPoSeUjIBtKgLJ9HfEA0ea/oXezrSLnyE5lZ2n1I5
                C2sVZxaZvFCcjUdnTmEAk7eyTGLLURLKj34xUUOpWhlRVVJKklJujbiiaGeIHKcpwvSFnFWWZJhI2g8n
                t/4M8uwH2bOQOEgamtJ32TcfwlsdlLcY6/JMmOo9Ekm5dZexLQpQZCgAAABZfrR146U+HripgzfrByqe
                IsayefNOMWOSexOSJ73hOpAwyiStrIpoxlEZs9JVUjsNkbmTjVaUsiabSpFSsivUaaNa3bU7xmOHbo/w
                BhnUlmjP1hZwbUZAWDKGAWRji0seMl5XgcwYGyUR6Qx7HS2anMWtrrNL831qzrNmmFssfqulKPSCqzSF
                VNnUGVkBin4bHF80h8VloyO8aWKuWqFziWpH6E5acl4ycYotrVKFuaY7URIGyo/wxwW89wOa0tDbMlvq
                aTYdSqyU6BmtWVgAABDL2+tG21uXFwrULKys6Fzc3l7d1kULa3tbNJmu6uqizQgkJSnmNRmSUo67kW2w
                RMBr26l/SfOD3prkrtDl6hXnO8mZLpVi62GnKFOOTGO3uTrmlXd2Q1qYcUyEkcqlHUj86eSTyEkzStS+
                b4aZ/SfuEDqalNjB6efJBgaUO96mwZqGpCD3uNI85XJ8qT5siWLlIcbxqmpSi+XM5tHzVzElJmZ7GGwy
                AsL1pcSLRZw+4VAMiaus2UMUQvKTzdskBfLOAZLyVbSR1b21UhUixTiaGTldBHdSkOaXV1RQZlJ5DRWO
                pVNJ3jQ2Us03isYmUcv1uUZl0eZZRHHb1W9s+8maQN6XNsvisnFKXOzKs3XllWMnNCKiSqpQujRqEZAJ
                uAAAc37Xnr69Ibg/G5nWL8Lq1BW9gz6hKke00aeGGDXl1p8yfgdUsS348fJBYIa1xKUxubwRNm8ZHyM8
                vaXjH744Skik0EqQ0qcb6QIx6zzih6F8X6woPoCnOczZdW2QPZxMNxOrGeZHZLxUl1i4OUbJWQGuAO2O
                G83Zubb9ZG6zSgdEkEVU6VRSE1MhQAACCuzrZMbS6PTnWK2bmaxvXZzq8h1yt7JvtFOF+roW58lJC6nQ
                jM9tkEW5coRoBj60WcTnQ3xDWHJsq0fZuo5Xj2HK7PRyW53WPst42s4pVkVk6OjSbh+FmBQNLgmu3R90
                Wus0odqTPTb9rldFNRKVY49TPpQnCD0zy5wgdXO0lz5Imi7W3PhaboRdZFjDdckSt+yyE4Oscx5JKZcp
                l2sMmkgpkZKQpXORkQbEIDDLoN473DW4iMttcbYMzotgy840CqtOHMvsF7jHIMhI26m416cP71NURnDr
                T3vl1WWGSN9faVFrdntVshhpJrqzNAAAAAAAAAAAA56eobXXxoOMHxYtSuhXhrZ5/oYMU6Y5TlKLLdGS
                ZOGMGJMawtPk42kWW8jZGjTPIMiO7pOJ24t9OMxKGs1XkYHFrSqLqJjm0kPdR1ucQfSPw64FEcm6w8tq
                w5BpxMTx/F304Dkqfk5S1bE7SGm3E3YziE1eG8ktLA5Vyc3NootJHSQhVY1VUIXz4+CFxQtDGkTi5cSj
                VBqMzmnHWDs+FnRGJJyWMssytcsRMtSzXkiPH7PwXHkhl0dN2iNgt32fWFk5FEVpcppPpU6SQ3SeDPhX
                itaf8e5uxvxS84tOoCRtuQY7XwfkZhlDbNrFyglSO1ikSDkNWJQfIlQyeqf6zJTKm4QrlNgMqK6pLzXC
                yTRHxB9I/EUgUuybo8y2rMcGg8xLH8ofSgOSoATbLUMTTIajcbdkyIQp4cCU0v7bXNzbGis0mdVaE1iV
                SWhF7YAADHZivik6Dc1asMraI8aZ4TItTmEqU6qZTxtVx1lpgtYfa45fm6PTOorIEmgbHjpxQzvDs3UV
                LZJk8FVSpfcvb0aVRaAyJgNbvMXpUPB/w7lg8TIzHkLLK253qMr9kjC2Mr6ZYwZb6xvTsaqikxurLUmr
                XTMyNDvjFpnDE8oUdViuKxkkhsNsb1byBnZ5BYIc0t762WbxY0HRndI46ptXO1W5WVO/YZM2Mzu1OlOm
                uimszvLS0PTRVpVKT1RpVqdSmQWz8Qn9wLrg/ghamP4mJuOGQO5vxCf3AuuD+CFqY/iYm44ZADvaYl/p
                V4z/ALwYf/iFtGir6bvieA02fQbnSlRarHKl26ZhxTfXFvTV3rLIBYWcRmTQlwqmajU3wWTOD+bLSSZF
                2mSnZSjPeny34OnpgnC6xXiqMNcOiep7LkxaYjHmmkyMeOI7Emo3ZtY7KwVTc5FOJ4xm3Niq1lt3ozMb
                4siWdU2MzWrn0euLzxcM4cXXPrNlfJseZ8Z46xszOsWw3hqOOl3JWaAM0ivaDk/ubjIXG1aTkk5l9Sxa
                CkkgpsjBSuaUbZ6FtHmVDORqDPb6Eu+Jt9Z2saNqtjUt30wR16K9Ooe9uUeytG271MiV13qlJEq8T6N3
                hsY6H8Ey/jXKV9O23H83j8rc8Wz92xfkRtZL87l1hc9YUt984RKTN6DK/a3VDW7NTumnckgqzG6M8gop
                rMjxRqVNJT0KjSRN4vC9WWs+Vs161QzJnsZhLEl5e2arRMot4U5yWRZTe7A1oSTm1tb1fw2M0HiiVWib
                63S5gOom4Y6tNOvXxadZOqfSdxe+KwyabM85LwxY5uyW8QHK1CDSW+YDlsbKxjzlYEtdM6VRrcGjluqc
                eljLUaJGxMjq+MFpIjYJE/0n8Og/r19IF4ZPD1eX2B5WzXUyXmOOquqDthHArSnJeQGy+QSzqMcicSdG
                bHcIeUbUzWzTadx98JCkrpspkW5T1wheLPCuLviLMmZ8d4glOH4ri3MR4qbLKYyllkEjk1NEPjcz79v2
                5ma6TXFzUmRoaUtFN6kKeewVUQ+cy0op8g3T7ps1CaucmWGJdNWIp3mjJTxSub2jF4Cz30gdKVkgj9ee
                n++LZvj7PRO7Km9vj5WZ2CkZ0yrXCDqpIdRf0Y7h0ar+G5o6zJjrV1BmXH08ybndWTWaKtExiU3u22OK
                xtCY4gn5xhLm+saHVTpH75JUmp8eiMlJWakF0MNlgYatTHHy4SekyRX8MytrNx5fzZruqlk5w/FDbK81
                urS6pviS4Nj7eYiZ5mzRx1ZzprN5aJA9M9YlpVRVSKssrcafnpM3Hvytk/NWT+HfpByG7wbAOKr1wgGo
                ieQ1wW0yHNOR7C99Qm0FKQtqydW3GMKcqaoi9s7RUZ/bh/py+jISfYqbChetBoi4ZeuXiJvzuxaRNP8A
                K8qWkYrUraVTFV0wRbHMUvF0jvqdhIMizp1j8PsHWrYV1uSIsT0p/dEElVqxXGyVEHT7xl6TnwU8nv8A
                QjNprCpQtzvbi3trOtkvE2Z4QwXB7Ealrl7nAPZJqpkZkXM+PTLur9ZuaV7ZwIHkGB5QijRPMaTSI5Gg
                kjtk38cmUFkjNL4s+2RJUn11hkMbcndodaKuVfLVa6qqa177K38ePHrL4BfFN0IwF2y9nDTdXcMRRyiV
                zJcl4tl8RybH4nZIqkiq4y9ujDnUlsaZ6KuWnVlb5HmiPIXUSRvhmpKS+fCG4yuo7hM5qaH+IO7zP9N0
                md7ZWatObm73pRSVtF8mkm/lcPs3FSm6FZTaW9JExyprp00vC26kwyRL1G66qSQ7Lg5lXpn+V8WTTX9g
                HHkRfLB4yJh/TibRlq3sSJRxq7mkqcppCY65XxkZd6qjLmmW91bqOkxyhlrJV+rRIT0W8d5pYs/af4nn
                rTq4xmfsOVMY2eR8O3z07uEdjckKRx9TrDbKSubazPrrGrBd/e2DbJEkwPEgji+9aa47VfmhTOvkbccD
                h/60tFOqT26135VwxlzNmrqpOs5ukkwpIJ5Imand1pUpvdrJyROcd40Uz0rZwqE2xxiY7d4aGJisG9oQ
                ukVK3QYXS+jocYXTBwiZlqnlWpCD5vm9tnKL4sj0RThGKwWRXzXdwtymrm+KkCpzk/GFOxsKpSJt7Amj
                vmopdGoVQqKUUl1umZoJ1q414iOk7FmsLDkbnUVx1l6tPPZdgybZR9pm1mjH+S5ri2+OQWEYk82Y7Bbm
                7wy/crYmp+eOVjcm7tqpVyq06XJN4V3B11M8XV7zNG9Ns8wLCnHBzXDnuVVs3yifxy2cLWb3khbmo44q
                C4qyapxVTVHHA3pLrTZUIKs2clSsSlUx1N+Djoxyrw8uG3pw0gZrfoDJ8m4h/C6UjfcXuz87QhyOe52y
                nlFoQwOEqikJe6hoiswaKTup1jrQaXqi406Z1UJpPVcMd829K+4RmP5jLYHI5fnWlIYTKZFEX6lZ4Rfb
                q2J3jrjftbkmwvEuaSXTNysTShRknoadk9DWnPbp5zrAdTuDMS6hsWXDndY4zNA45kWEXL41qaHa4jsl
                b0OTbUvmtSjW3X52FRJKpHUPk5uXmUSSHD51YfupNS3+H7Mf8Y8lHYb4OF652HB/4fV82Nd0739poww/
                WsGWzq2dtcvF3YQNrVY2dlfOK6LZYKdlpSgqrmummmqsS18pUqiiDTx9Ntn8Qd9Q+h/HDY/N97NoRiHL
                0omEeo1VLvWNkyFK4VYQu/viIlU6RvioPJORPRZ02olLURLazGPr0YniYaQeGhnfVBOdX09eIJHMmYmi
                UXh1+xweWTlV+9Nkw71cLSo2whpeqjaSW6ohfbVkISpRdn15DSmzTjpacOIrjHV4/wCpbiOQVhgGRtYk
                imU7hDDHMjRHJTSyxSGKjcfsIK3uEYeHlVi1Y2jLjDocxk8FSqvDG3Iqkta6VU12jaDOGhq/4l8xyBCt
                IECYp5IcaR5sl0usXufw+DFYM7rfm12F6i9mjsy0781uBmSqVJVQ0kRn+t2Mw7I+jrWNgfXfgeM6ldNM
                pc5jiKYucmaWF8dovIIjd3N7EJA5Rt9T3DJmtndkEhzbLxPOugZL2SumSjJSE3VjC5wCtHue9B3DLw9p
                o1IxdthuXIfLsvOz8xNkjYpdZULaYZKkklYTpyGMubw01TU0uVjzlTqr7NRFSNBrSe+nv6S3x88mZwy7
                knh7aQ8gOkO07YzdHaA56n8Qvk2TtnueWV8ptl0QtJE1LJxp4ehzimrFKja0VKKZ89N77XfzfoqcfSsN
                uzVD6Q5wi9JT9fw2dat4zOZ4z17y0cYfg5klOZ7qxurBS6bjY38kgjO7Y8andsrpS33LO+zRnfEGdRJ0
                DOnVOna7GPS0eDG/vFk0umYMuw+hdVCTXkUnwLPazNYHuZF64UXbJC8knctuaix1DSW5nuRddAfh1cB7
                iHcTaP0sgYLxyxQfB9xfXlhbZ4za83sIxq63rZeOTc50I0puZ5DMp33Q7Nt+yO7rC4U/sbC/UlssieWW
                qlSKeTnPnodHE5xjCLyY4tm+nTUO5tlp6zf46hMulUQnDjUMj50RhOSYlH4c6IpbXalLeJuwO1RSqNO3
                ZTWpRIDpMaeNUWnbVzj6yyjpnzVj/NUCuq3q/tHAZFZP9tYX3KsktshsEmTrGnZCt1rZnyi0vaUkSl0S
                LYxcQOIvo/1l6w+EtqpXkLFThLMTZXx5JryH5iw7NbF5Zo9NbFiv1Nr/AIqzNju9qM9ZwsEr7xQaXaii
                QRl9TSkEbrMMlaLd8p9g/QNrXxNxD9J+JNVuHKtSjGMkM5G6xi9uad5IcfzxrPuyYwSSLpJSlLxE3qk4
                NyqiKRUXxkNqkNBRMTzbrUFbs+Z6w9phxPKc559yFH8V4jhJsZS2fS24qW0fYvaWRNMMj67+pY06iz72
                lMgYWmilSOVdZxpU1KpJIzTjo/zfjg3f9sIwD/63fv8AmQQjj9ac816t+Epqw096doC45OzHkJWCUxCE
                NV+wtV49FEdSWGpvITJxkrqys9M2iMxp+dlnXeKSTQ3rpoVUqqKmfNg/zt/xsv8A8gXIH/t/hP8A+VMB
                0tv8344N3/bCMA/+t37/AJkD/N+ODd/2wjAP/rd+/wCZByi9X/DJ1waBWGHSXV5gZxwkz5Dd3Bmg6ZDN
                8avDrInBqtDv3Um6PRiWPr1VbmMvU0vbstppstFbm0oVcEp6Y+3szg0LmGR5fF8dwCMPUync4kLVFYhD
                o21XbvIJLJH++pNbDHmBvb+dxcnR5cb4myi3UKa6tSqtKUdrUMk0g7RmFuMHw0tROUIphbBesDFWVMqz
                m8uLKKwWH3D66yF9u7KwcXdzJusFtFM/1HZW1yfHtdWqlDOy2C6lUkUySosmw1x+AFwOofwrMLoyXlpu
                ZZPrdzFHbH8Jsro9i7WeJ45zd5WmG8fuKEkoqVBRWVXIb01KJE3f22lSKpcx5gj5jY4AAAU2y3k6F4Tx
                dkfMmRnaixY/xNA5bkqcPlwSeVliMLYnCRyFyURmnmKi0tl9U2SpJq5CSkyPbcLfNYuu3SjoDxoeWtWm
                aYviKH3da5bo1bvCb9zlkzeG6yK/qscMiDTReJXNHcqZ9oaGRlqpaSXTqPdS2on2h6xuRfTVNCbE+1bH
                GOl3U5kNmtatxQU/yKtjWAE48poNN42NpSyZuarIyXdqSTt3NUQjYlU0K5kI0W+JjxE838TfVVPNRmX3
                ZySzXDpftGIcdVr07qP4fxai9qLjcHjtnubbTqE38rpI3ZCKa5HJFusgrVCVW5U5nOHZ6KDrU1sYRi+o
                HKGS4PpNgmQG+0fMbsc4ij7NMpSmMX1L11tljjCrByjrZHIq+IVRco1UepEUhemWop/KPIZKrIt7DPjn
                H0pDhua39B2uzAh2uYdP2Xsk6LNUcKx8yZeijDcxSZTKS4MnTVH4pHZrBZTMadk7PLxeN7YyKlzLC6VZ
                3q2FJCqtRfYFzncS/wBNTGn9/wDDv8oW4ZluK7wCdZvCha2XI2SrqH5k0/SR1smCyzVionw2mNyG8SSb
                GP5Fjju1U3SFOLv2d/7POR1HyOvfIVNMhRJancJYacS/01Maf3/w7/KFuAd7cU4ydlTHGF4W95Ly9PoZ
                jLHUYszv5JOcgSVkiMUY7RBK2vHORSNxaWdtQfXc6tUuZRkkjMzSkSnqGzxjDS5hDKeoXMz7Ti2L8QQ9
                3nMxdk/tmizMVp2irRuseal3m8O1X1Jpj7OhZ1Xt+cmthTtVrUd+P7xX+Llqc4tueLqTTpxfI5hRjkdx
                Y4F03MTjeXkUhjXVqKb269vW9v2TNMnvtGpzSKYVKdauqvf1WGNIYouhnYaAdD7K3pUPBkxjJa8YtNQU
                xyncWVavQcHbFGHp9IY7ZXlhzkdFEjkDTHmmRJqkjmovEQqP7GtKUq775eUzmHCHpQXBmzfJ7WJFqccM
                RvLled2tFXOGO5zj2K3S1GZlVv5sbQ8Y9jLdsXKp1mUij1NKTNPyTIt9KrSP6JXxRtS0RZMg5DtcT6TI
                u/ItL+wYs6yGQnlWsz36iVTvjx1CYnIzjt6gjSVRmnL5Bn9HKklMf68UA4gHo1nEo4f2PX3MkijUB1BY
                Wi9ndu0xyHp2kD9K7iAM7clVRweppCpVFoXMrBoaU0rys9vjMyv0dj9FCq0hfWlBpWYdcKNyKPSxka5T
                Fn1plMdfbC2dmWQR11snhheGy/Il2d82OTWus2uTctHyqTjSXUJVJJLQpRHuJoHJr9Hx45k+4b2cojgv
                Nk3eH3QhlmSWsfmMffr69u7bATvIXBKU5mhZEdRbW1tbrfqq5FZWUypv0bJ0fyZq0pZmFKusVRrUrijT
                uLepTrUq1Iq1KtRNO1cjLcjLx3Iy2Px8T8tjIB6gAAGsv6WjMYzG+DLl9jen5ra3jIOWMExWEtd/d+r3
                sje2/I7VNnCwaaZ1DO/ckROFyR6UnYjSyNbqtJmaVGfOK4TOoHGGlLiNaRdRmaXu7jeLsTZYsJZNnqxZ
                HCQXbczJbXWwVeWjC0JW7OBoqXiN6bXSqVEJJKyQfZmStqb0u/B/Edy/Mf6IaSYzbItw6dKLdHIjA348
                nwG4dpdOspvUda5NkZ0gFhKVy06r3J3CPwphoqZalRlj8ZJ9VSZTfnwlaXOnDT3lDVVnLGmnXC7LaSLK
                WWpFaRWEsd68tjBaujxVsq9+VldvrrUotLckkN6z53M00kLJBK5VGRmHZD0CcXDQ1xMnnJ7Jo/yZIcg3
                +ImuNPE4oPOOp5BkttpMrt4sGCpZnNWZlO/NdSPOJVEtZrSn5KjIqiyI8nQ08PReuEdrl4Zc61hPmsDG
                cdgDdlyIYfZ4NXZcjQWcrc7uGveRr59TelCnh6JvRTpSFuNKnQ0qUXPSRvyJQLU/Sf8Aj5ZOwfMXzhua
                MpvewKa2bE11dTub4pfrspdHfaVupOjbhnH71YVCrRZ2OMuLe9T+YtK0v1JLq0xqP1GaqiRkoNmTVxxr
                eF9ohkDjB9RGsHGkeyA0rvbN3xxDaUqyxkBkdbBJmpjk0bxEyzd2hDopRcnJMqbHupZHuSDUpNm8O9KS
                4KEtfbdjq6s3aLneqMrRzl2Cs7tLAdzUVTSmzvnMseuiWs6ZKWa3J3JoZUkW5VzUk0jl26StDervX1kV
                wxtpNwjOc4Te3oE7yGsypb7KPx+ycaiqdlfzWfya+YofCqbzVo31Og4zGQstJ4rJNFE6lUqm2RfUf6N5
                xetMWN73K0z0we2cKYmgneU3GHpvBsrSKK2x011HFLlDYw81Zi5EyoKop9dmBgfY+zU6ZVVvxISpSA62
                +H864d1DY/acpYJyfCcw44kJKptE3xvK2OXRy4rdCvrJDrH3Krb03RoSSe+Gqoum8NFZaqNejTrpVSTW
                McR/h2cTTVTwv83tWYdOE1u7RsuL1v8AwmYne3C5u8aZhjliZbx6bR9KuwWrsql4TFK2gqEkji79VRgf
                bdR1yrdh/RBrDxPr10vYl1V4WcKt3Bsrx9LyTVemSXiHSSzvqrbMIHIUcvYpkMJlDa6MDxVRzU66m03t
                iVUYndmr1As+/wA344N3/bCMA/8Ard+/5kGVKGTCOz+JRWew53tZFEJvHGaXRWRN6u0sXuNyRub3Zhe2
                5SkoNbc7NV9ZulNWyPm6hGpO6jSXA3Hc34e37gXQ/wDwQtM/8TEIAefVZr60eaHFQROrjUHj/BCcnJkp
                wCpOb+/tTlfsYccKXpbSb2yvzKYyl8dOso+Uz71pKJO5LJEI0t8RnQ/rbfZRFdJ+pPHOcpBCmiykEqao
                Re393eMbM43ym6xcHAnFso8qFOPzaDIzMlmSjSaSPfTj9Oc/+def/Zr/AP3JQt+9CM/dUa4P8AWOP4ya
                gDouPD02R9qc3t7c7BnZmWyvnd2eXS8s2tqbmmwtat9fuTk43ZIpWTW12CSVcuS6lOnSQSqlZSEJUosD
                +UPScuCxi2YO0Hv9XNCYOrHWq2l+7YuxflfIcLK9Tvslsmsbh9WISemvqtDxDnx+YTSfL35z8yEYIvTP
                NcmW4bR076BoG/X0Yx1lGIu+d80k11Luyucg2jZLb6MY7iV9d0qqV+yzI6xmRyqQM1VKmp8fiiD4sudh
                pmWqXwzuDfq24rlDMtbS85YZsqeEreIVZdTyjkRMYvbn2zKRG00mJpa2aQvNRavZq/3cnZpZ4+SllS7+
                7cl0zDrf6SOINou15xq4lukXUXjvNbe3UE13prY3C/ZprHbaoSU07uR47k7WxZDjBLO8poSb/HmXmVUT
                TQojVsd6Y5nPCY9G24nmOOJFBnzPKZzo9xtgC+Z8kSHO2K8ix+6dcj2nrd93fjjE8kibu703BwmlRvcm
                ifIe6SaUdgdZzRJ2Cst/jzBIemMAAAAKXQzKOPsh3cxtoLM2KV32PZm749njexu1jeukKmMfVTTfxaSN
                9JXeTQ606dWxdSoPJUqlyzObS/0CqR93t668Ymq3jycKLRjLnPHGbNYMKrZHYr+6sX2CY2ZJjmKRsDo2
                3hUnFikn4L4pL2eJPLWvqtmmDyxPKFJMuy59lDnXcWnWHqk0l8YLip2Wm/PWRsNWebcgyXHmUbKDyG8a
                LeWRRwYm9BWDnTPnJDq0pcHNMflzSVGRx5Du9HG35lQ+PKa9nvDe4O+ubio3k3r6YIIw1obj65tGyb5X
                yXJjh+O2iRuVl3g3ROm60m56eZFJKrdTJzuGpgZHo4/bra6skUy03xiJ8Dpg4X9JS4L+bpJaw9i1mx+F
                vrhVTbWP4YoJkzEseuD5T2XVm06iDJAGpBnsnd6kTQo+ZPyDIjMZvWd5bJA1tj4yOdi8M71ZWLszO7be
                Wjo1OTU4WiL5vcWxwtCqUr1rdbBRrtnFNSpTrU1JqUDqJUlR8aniVcEzXNwq2WBzPU3HIE6Y8yK/38Rj
                +ScXS5csiJTBtsL11REnE7xqYnppdnpnsHF5ZEvMeoE9UGh3XSUqozvVOnsVeh58SrJTbmeWcNPJkreJ
                Ti+ZQWR5S0+WTzf1XRWOJtC6lN0mUHjC70uawi01i185S+qyoqdyM0liNR4ZrenVm0gq1g6Josp1X8Qz
                RLoaZ7d31Xal8VYTK/tPX2uPyiR+uT+Q2KTOgd9HMdxqm9ZBktildPlqODHHndFNe6KhpPl3xY+kL8ZS
                vwm9NMfaMOk0uerfUPcPLPhu3e7W0eGbHMdYSb0TLLMgYapqQ5kxnf2LRBWR3JDM/SZz9arIfI5D39gr
                8r1S9TGunULzL/Czqe1OZqkXj+ruQ8mZBkJ2++/+uzu402tqbvD5DNHY827ETTHmQiph1ME+lXcEnvFF
                j/RQS+nam4nam+Hp11CG1FZ+sbKdSpFjnvs2zcjIy7lN6On17j3Psxlv0ra9tGuuFhryHSfqSxTnChZW
                qb56a4fI7T2xjlrVUmnY3kyx66pZ5/Fk1KnImiT8wMyqizOmgjMiJPLsuPRauNRRgBzw9LjFUuysvXq0
                BoZwwtWyAVsdgly7Q2xM+U0KvuRRIUzU35Ug7X5smPtEqpnh7hs31N6Gc+pfou75T0yakMLSi5bbmn6s
                7QbIsKkLWal37HImF2pU3Gkk6iU275Fn1oNod6NQ7Z/t61CopKg7rwlSUSWOw+PP0tlkgZ4zGI023z5I
                JNIHWyY2CNNDdam4Ojy+ujl2TS1NzQ30TdKzi71U0benTVUrKpISRnhC4B3F7beLXpTu32c2zPHtUeCL
                5miGoWMM5+qtDypzbryrDcsx2wNJm2RjJfdsgStlQe8eksaljHylH0x+u864npn+t/LjLkTT3w+IpIni
                NYnkOIbXUjlqzbr5NlaZRvZBkmZQrHjBIyp1EVHFqgjniqQyii0VKXctR+kLQ/KKtcsDJVZA2Gsh+k/8
                FXHUxcYbfatzlV4z16ts4PmO8RZlm0MK8pLUkkN8uaIAtmklOqgu0pO8QrPrEojJBPZr5qaMpOk7XdpB
                1zw24n2kzUBj/NrDZkjvKhGL66spTHDWlGyZbCpJTZZnGVGd5TUlL8ws6lc5JpmvoRckPhp8FrWFxWY/
                lyT6XL7DNFvwq4RpnlFvkrIKYw6uV/MG12dWqxYmFrZJA68pU2m+JbxIbeOR+tVM6Mffnqu0PpMmeLgs
                +jp8TXDnEhi+RdQ1KfaOMe6aXBknLtkbHWQIne3ubCcL2qmwxTj2RQl8e2p0i01bm2+Tl6m7U6qmWDVV
                x6QsFu/vzGgg6TQAAAKfZIyTAMPwiT5LylNonjjHsKarh7lk0nUgbYtE460UT2qOD9IXerRa2tuSZpSq
                rcVEpStVNJHzK5FVBHMz9MQ1x5TyJrWjmhVpkLu0YO0/QCGTh+iNpe3lu3TXMGQ2pcjKUyFCKhUXRURg
                LrHmiOJdaZnH6zhL6lstHflU1BtYyL0o7gmx2U3EWr6tnFzOzcibL+TRzBeeXiJpMlpQ4OFg5NuPVVHV
                toFTqH3mzU3c7kzSpgJ6QvmPMHpm1d6Z9ZOPLTKmlrNsAzbBrxKE1nWEvKbq7Z7yoVQ+7pawVSpSiEvP
                LRWtTHMGRkfqaSStduSFoNXJW4eXAb1ycT/Bcwz9phu8EVIpCp5fY5cGSd5PVHJk6SVuYGWRVCsGJtiT
                9Sam42yRt50XCZPMfS91DWdt2yKXOWxD6O3wDuIhpj13vGpDVArIWkqEYBuLyO+y0VnbDe32p13dLOle
                +yaruLuz9FZHgakk2x3krq8LVTen4mmOxhKZIxyCQQYOhAJXkkij0TZHSUyl9aYtHWKwuXZ6kEidbJnY
                WdssCNd5fObk6Lotra3IR8qq41V0yTSUa1qSRbj8SyUR+CxeRzeXvbfHonEWJ4k8rkDzXKzamKOR2xW6
                Pz44XxkpFg3NLVY3rnWWpRISimdRVSmST25KPHR46WYOKdmB/wAf48kMggGh6AyK5oYqxZb1r1oPKJtj
                gsm/LeYLHmJDpJXgqaXeORR4T3NAmbsbe3pKktR+kD+G+RnP0n3g04MkVeKVdUd1l55sr71RwLBeOZ1k
                KP2hl439PIKGpnx3JWxe+xqh0kf9jSeyFFsJQxn6VbwY8hyOlHXLUDOsYqu650bB6yXhbIzbH7i5qKSV
                NCnOMNEzptadlKJTi+Eysyd1Gdf5Kklo9aEvRieJxrigrLlejEoBpsxfIW9LzFZJqSeZFEn6YM9ZXzT1
                HsfRqKTaX0W1y+Stkdpiyw5lf2EqcgjlV6ta1Kquo2sj0UDiiaVIO75Nhdhi7VhDY1Y3bw+Nmn56lF3k
                5sZ24iW4OH4LJrFI87yZZJMjQ0Y3rzqQL5VL7gKklRkHU4xnlHHOaIUw5IxJPYbk7Hcrsk38XnECkbLL
                YpIbNaSL11rkUdcXZnc6ZEky5qVRXLUSaTIlJUkqjjjacGvjF524UOoNod7B1kkr0uzWR2VHUHgL1wja
                3xlqbN99OIW2OSjbY7k6HEROzK7tVRlOQE1Ji8luDj9XmaOwVjLI0LzDjuC5cxs/2Mqx5k6IRmeQiUNl
                YlNkiiExZLGRR18sFdDOk6tbjY1kc/Kskr2UmmslIMIdCcu4xyXjKO5pgU9iksxNKovZzaO5FZXqwvIm
                5RO/sicUSCm/IWbX3WpuNNVVRSy7NCT7VVNSVGjX01relUcLHSW8PMIg8zl2rjIjRXvLC8atOrY3O2P2
                12p7pMnDMckdWGHujWvdRk7Y0qZASk9iOkSjUlPMUb9bGrBq0vuWi5mz7klr0uu0v9uHTDFhIa9lEXKQ
                XaEFeIcDQmm51IzVcUod7iHVHUoPUkqSlNSPVJPVqPYn3Rpw4NanEBkN7F9I+nab5cqNFRFGRyu0p2Md
                x/Ebrs6VT1OT5DlLixwuOuVWl2le3ZHV/S/PVEyUwMldXUB1d8K8azR/I9EmlrWxqdnUW0ex3VfYTqvA
                4pkeRuEjQd5j2Xu0ddbFMvbYmzNbg5KbrFveEpqM7QlFNyVQod7k0VKwq/hjjD8MjUblGI4UwdrQwvkf
                K06vbhvhsJZHm/73kF7Y2Lg6Xlk3ocWq3KpfIaW1xrHTJaV1aVMypEtRpIY43bgvvmdPR+MU8NLM7LE4
                vqLxNiW1fIA6NV3ZPDDCtR8ccJQ/sDhTfLJHKTbMTkTrEZ880EqqHH5vLK9DnqHRHLDjj9lvSxnZkkjQ
                t7xjnTT5lWxdrIq1NNpIIBlLF0uRV7K+sVkZUnaPyuPkiq3KL5NSxNCyUjmNQd40Wu6ntYOmLRbDGPIW
                qjNkHwbDJFIrWHsD7OnT1C0eZJWbXN1SyNpJo1L6vcJbGm/dFcpfN0rFa+Yt0oq0o4amuGF8RnRXg7Vp
                DE2bZc5IitKjOopZ3NS7TAcpR1VSP5Fh5prKO/7vZ5Y3OvcFVzSiq+RtbI/8iKbvRNXNo9KI4klbXDxC
                H3D0FkdRy0/6NqjziGH0rRwKuyyPKabwkZnnKUEo7dajlFlTx0yuiN6VePQNrfreogn6qRh0Q8Y8afhZ
                ZoyHCsT4o1rYcn+ScjSJoiEHh0ccHy5eJLI3687vbm5tsajShJ1F1Nt+0WhCUnupaNutINfHHr4fnDZz
                paad9UL9lFpyNfwKPZIt7eHYzcZc1KjcicJA2tnM5WDmhCHHvCOuJVaXL8guQ+0M/lFq++h18MZcklM2
                4n+XY8iqzw+u/Yf0tUnW15E3UtvLBLdlTKjcokoWomJmv140YHQjqW9Z5kORaJmT2wpMseXpkP77bHf4
                IWHv8usvAOg5w7eKLpQ4ocMyLO9KDxNXmO4slbVD5VXmsNcITc0Hh2bFu1gmxtHA6vryDbiJalkZcikp
                pqLnIZHxpDehE/uWdb/+H3HH8W1QZNvSIONfU4U+DYzjvCSGR21g6gWmSfg1J3ok6tGJIc1c1i7ZmkDG
                ojJ2ckutQ2XHLI8EUefpJTeHt+TII9CHyMvwZedU/EA0XaKGi2dNV2pfE2Eu8bVV01sktlTf7avlpuqm
                u8jmPmtTtM5JZJNKiUtkYHckKMkrIjLYsWFl6UxwQr2Qdxo1fulvbVC3pSW9076kbaP3KlJMuQlKxR3v
                Y7KSZc7oy0kFuXMvlNKj5Z8djOq/iF6jqzWwt+W9VWp7M75cOl7tXeJvkKXX1Omk71xc3O/Wru1naGoj
                9ZdHarRY42ytyTqraGG3JKc2N16JnxpERYn6nhPEV07FZJuzhFDP2NEyxd0SeU283C+eKcNJwV4mZTUm
                bmLcrkvAB089M+s3SrrIi1xNdLGfMW5yYLMrXva5gEssHZzjnr+/qdnJo4SylEWcVpSS0NchaGWsfOou
                zI0qF0o0nvRbeBxlfSA/T7XJrGgcpxdnqsUqw1hnEkkNVo4ROJU71bbkHJEjtLG/X685zV1bkMcBSk1M
                SYI2u8opd/onMbe2DYR4uHExxvwp9H0q1Fy+0oSuduN8cGwRjGrertbjI2T3NvvnNrsHFaULcbCKsTe3
                3z7O3mnuqgwtyqNvUKQPLNRqhdnqV1e6X9HEKTkjVLnfG2DYlUq3lJrvp7KLBovZJeN5JquDdD46o1v8
                2eaVK9pqqs0OY3p77NaVLoq3+Rg1kvpanBlY3a+bmrL2Y5daUahlRkMewFPrVocD5dv1OTJ2yOvWydy6
                OjHbn18jItubLlfMOuHi16s7R9ml9knVFqby86IYIbD2BovnataWSSv3GyiWPIa1kpohEDj7ed88rtmi
                2Z4+x0EvMmkSyJT3IKmfnDPoavE2n8OsJJkvJel7BLy40SuaUCksxmE2lbZU2Sr1SRX+N4C+w6wNRK5T
                Nim8hR0WRpQotiDdh0l+kA8KLWhJ27H+KdVUdjOSHe9trBngOZ2R+w8+Pl5fKJDfZRtynDWzxKTubus9
                6DLH5E8vilbEbKnmSYzTji58R3gv68uF1ct99qWxyx3+Mn11OORbPOLn8pnh98eqjfduJsanRybWCVxR
                2qULBzUxM87hUNen4294qRyk9UWepVTtPei2cdnIE0mkc4ZOr6b3cyrOrVeFpLy9MHW+u5Ubg02SnO/w
                PMJE41ahPDTWaaV+74hdnmtTe2Q22vjenWfqbzAGJhDfuGNzWzxZuH1w8qtm3astSsNxxL3GyTfteO2y
                0f8AIOTbu0qGo7C9XjyBtEhljU2OqC5aL08szNH1qKqg35BU0rOpfEQ1LOWjvQ1qv1PMdlausjwpg+dz
                eHN13TVct11MrFjrU4ZaulNJl+pNSU3jWT1yESu4zqqL9buXFuquGYtaepSxupnOUzfPGpXLLMzuk+yd
                K29stHme5HlVgwtrhLZg61KLRGmgnS/sKNZ1qm0x6OsR9O5460kSA61unP0hrhDapcgN+MMcat46wTh9
                ubKzYWvLcPyFhqzkV5erpnYtzdMMkRSPw5btXUs0MzKuQoe3quqmhit66ucjzb0106qCWhfaU6n60y6l
                57kXTci+nw+jYclrPHoq3GHwwx2z+04Xx3nq1qXFK0vG/BOU2F7f2Nd/fk30L1xYJxbwV4c286pJUqow
                peiaqC++nv1O3oPNSl0XOD/obyVw79CGItNOX8yyjNuQ2Erl/kV+6P1/IInj++kFNu2xZiYnNupu7bi2
                FqbzQx03ciXdPdV7kFOiw2r4iPMoZTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAB4bymVzaXVv/t1C7pfWZKT+Xfx/J5C30XICgDrQ9Ucb6iRltSvbsy2899tj6+8vzfSAhwAAAAA
                AAAAAAAAAAAAAAAqjBrQqdhdXh/sl3XOlv8A70i6/aZH0930ClwrlHLcrdlbaX+4FV+tXXp9SiAR4AAA
                FMp9X2W125f993H2dC/N5+W/xFTRSOdVP1Xtaf8AtVkry+Jn+nwASWAAAAAD7E2mJ8JucgUB1T5loae9
                OeY8zVytTrQGBSJ9are4M02rnIlWPdrDYErfxeJK4WLSXUjM3HYj3MV+GEDj7ZKuYfonbYRZ1yp1MsZX
                iMacKRl1rtUesnCaXpFv1I1OcdYyPYvDoZdRheIs98O0XWM7ytTM2v3bfLtHSbXmKfGZ22lbfYRwRh9o
                vbJ2Z8IYsz7nr3GWjRqtqe/MaXGJTOpfLvHy6fFVXzR3ae7NVdMxExOmXeOjg8Ot+8Ol5dOjo8X144Ot
                9fV/WrtyvHLZycb9xPp/0dRNrJUPnpeH33336+Hj+QU+ofsivpL/AN4Tk1XHy/P7+/oe/u8Pt8Rp7TV3
                qq5md5m8777zM79X6yszlaMvksHJZSKYw8HCow6LR3Y7lFNNMRHT+WmI26bLgorcfLpfk+n7ff8AR1+w
                7qoTefLpbff6y+G/0H+SzeN3hU10v0/H6fq92/u8BdLjq3fHy8pWcfZ3R5vyL9otVjfu134f+DPt2/nE
                k06qqr+Wiar7bXm/SOUfd4fRr5xzTkMphZzGzuYwcHnf7TFoo223mKqo2tN/Rf1j1xp0+y+wv5fv4/YL
                +saPlKmVr878dvh+b39fEWiYe0q6n5kdsplw3MqRVSMz77trGKnt8CkjsyGe3XwIz+AyWY+0Aamkoo1H
                lEMju5b16DnJSrXPXy7RjbHOnv47Fzn/ACWhounatMRMZGbc4mfli9qZ5z8sTa/3dbw86e1rjjs0wPfM
                vmOMuE6q5i8YdGp5DFxZ3iPlwsOK8Sq07T3aZi8THiuOx7kCm30aX4xsRfDr+fy8N/oFVZDlSneWBoqX
                Hj1/Nt9G5/f3Q6H6IZRY07dUkyPaoRTLevZMjPeXR7+Jcrg5O60q6efchdfLxFxDLpjxgxFTW4k6ySvT
                T0U/ulMrdCvAzKxsUNtEy8yJVI/oE7yuU1P7GPt66IvyvVE2vERb5ZmNr2335dGhfEnGHZxhZ6czlszi
                anMTNp0rSZo3i1rVYs4dNUTyvTMx1mWNKR2smnrhWaIkzOUhc6p9aLZZldFbH0/0x327sM/z+8VIxnw6
                qskuqUgzq6HaNZl6wmDR66NVzc7kZ7vz/ulViadlcyGRSVltuUgUXQ8rbExsbFYUrNha7Jsb6ZGVKg2W
                9rQtiLyJBWaEl9OyS+PN0EsZJnTXB2K6vr2urttiKhb0TI7iufnyl5e4zLYz8OpeHaw9CyVP/fzvzTeN
                6toibxziL3nrF5mJ5TSj2odvHFUZD4Pwt3eHMOYmmrVKL1arXFUd2YjFmKY0+mYm0/Z09+J3pxKZtC0H
                K9KF42ihMTDYM0VijBb+rWTY125Wdrb7bn/UkREXu+k/EYSc6zi8lFzdW9n2tq1fD9t3PX7Ph4mXmL0s
                5zx0ml/dXjhU2tKNf8RsbcvxS2+/38OmPGeVKfPV8SP6/H6T+/0CNcRa5jV4M5DT4iMjym1o5Wve1vOL
                Wtf7lW5emrM5j4hqVdeLqM2vXiV1V1VTNt6q6pmqqapvMzMzvfmstmln+y/N/Rt+n8gtfltv+yl9B7fc
                /wBP1C6+Z1P2X8nw+n7/AM1rMtWW1Xoe25fTv9vgKi1Dfn5JPh8pt4R+q2qSU/2Xr7+u35/yEXUURe6Z
                /O+B7fVsf8hfchXOSfslX6f/APJQok9f176xEM1yj0/WGTweces/klGMTCQY3m0SyJDnCq1y2ByqNzCK
                utDf9TZJHX5tco7f/wDrVuLzLxL4jqX4NyoxZzw1ijNEcOmhiyljuIZAaqSK6Lj1e0l7C3O6bNS0J29e
                a/XjbKhltssqiFdeamjlUOX64/8AzfzEN/70fzKh5L4bGPGa4uzvHLEM4yJilxWu5K7ukFZP6Zo0WF/v
                +tNmjE8YWegkv9Z29sXuXMRCzOyPVIwdTzmldM9E1Rv1piN4+l/S90c4sylsHJ5jreIm3OL93advGL+W
                7N4AANh+SBgty1V6dYJq4025r0yZOtjrQnOOO5Nj59rdim5vGY5BYVCbpE2J5kJ73iDr3e/R81Fype2t
                rUpSSTudxoANGj0UXUNOdM+c9a3Be1FOS2/I2FcjS6fYra6tZarNTrDX8oXnRgYb+oSCNrdK1hDMixht
                pp2ema/mUkR80qsqrvLjQm9I4x7M+GFxTdEPG4waz3vdklmTBDM62LYpVlbvk5x+wqj9/H3RyqJ5af4f
                NNhyTHKKaUJqppY1eX1dQlLSZbMPEy4m2PNIXCxyNr0xzJ2t+KdYjjV3pVcPk+rTafZ1Y7I8Nulk3ufK
                h0bWpDonJL8zkZLqQaMPnKkjTuQaKPpGvEuy1nDi1IfdNju7VIXwn32N2kMlbLZ3brHolmyOZKhlTI2T
                H5K0m1NyUZnpwzDqjdC7je1QhjpkdRT+mnU6O2iPVTBtb2kzAmq/HfY04zm/HLRMe7E3dO99lZKXM1Te
                CX9/S+TVdoLO21/hr8pBGk3yOuZJI0kQ1JfR3ODjEc2cJfVlkPU43VbiZ8UuNyOLNMjfbInaQxPFMacH
                L8Hs+sDci5yk7rmZLjl6ktazQ+FGsbPpqUaKXLCfRLdTs3wHlXWRwa9RdRbHk/B0/nGQ8aMl3eVL60tX
                iIv9PHWoeCMN9fKJCmum9N8QyJGmtlpcjwhxyPKiJFI65qDZW4x+vCz4dPDv1B6lLNws7XI1nHSgOELS
                5URm55oyEVWOQtVOxWRodEQ81uWRX9q3JdSNQp75TJaSMYevRJdCrlgTQ3KtYeS7S8usya5ZR7YUHZ7T
                fV3+hhOF37o1wnvG+cSNwqOU2lDhNMjVnYqqu/2J3h1arzVGpFUsdXpBU1lPFa4wmizgs4gfLyjCscyl
                qlGfHBpWq4tW2YTGPFM5nIL1BkdK/ccN6bW9xeY+lS0Ep9nD7G6hoqqJSd6yAwaJYug8NxpA2S1jcJx9
                FY5B4fG2+mSbNiiUOY26Px5kbUGpaibmlpsLFspp+XyJRsak+JhPAAADn0sBlwGPSdLuPrrKi+jfiOrR
                6lR2JMeYmfO8sqdwkkt0tTQeG9SDbfM6DM1Kj2IHNVTmST6ZH0Fhqy+lgaCKmrHhz3eomGsyr/Luh10c
                ct2FeytCqujjhdyRYtudG7dRklDaxtLdHsuXFZZmi3ZsZuxUTVWdyQd+PBg4kEe1xcLDFuqPJ0zbrSXY
                gh7zANUskenNVAmSd4XYqaplOpPfoOgmwTNYIbBl+uaVHSZqM17MjPuzlSGDj0wvXBIbTHuAOF/hnvN9
                yRqTkDNk/KcYi9vfukhc4JH5B3Th6Boam8lKc1ZIynYOLzTa0Jq3KauMWpZUipu6ebIL6LBr7TrL4asV
                xNLnek4Zh0VXrPgmT0biuuq6OOLlWFW8wTLDpF8qk3HE21xxrTVUUdS4esSvT0oiTVo82GDgdxOS8ZLj
                h6sOL3lZmcVYe0/SFf4CmJ+t/wAWbZDIbK/hGB4mZmSmq4cMX4aa76YSQ2hW1PIbnFJGoqa3rnqSpi6l
                Q4BHpNj3jBZeyWiziB17SxjVuRpsYrG4fneUVVY+Wmy7ZDWzt2F9Rza442pu7uo1sOIKrxIVLT36lKg6
                A0wlscgETlM8mDvYxqIQeOvEvlcjda3qrUxxqO2F+6SF7clpSs0NrQ02V461VfLI6dNSy5ductEbgNxa
                U8XHjUaweMhldtvq+MMKvrpH9PzK80FXVuzSaaMTlCcWsNmg0d0lUxZgNvcXKSpKkhNOeziJyimaX5Sq
                6slvpauvS8016AWzSvAXS7tswa5ZBeY/9Va1KU522EofVanHLF580lR7y6o4wvGxNNWmRPsenEvTSUa2
                daFZWuCvoKt+HLw7MA6eL9ttm/KF0yFlHPNxRpfO3ma8iWja6TCwcKyFJS5+xbdTYcaMropBHVYIMzmv
                l/Y1hlhAAAaLHpUuBJ5pE1PaI+Ndp1oIa5tjHIkPxxlKraJUmzupPDL11meJXt9TQIluTZMou3zbGs97
                YipKYWyIR1aqiXrcblmmrPMB1S4Cw/qPxdf1L/H+bcdxPJMVrXRq9dtW+Sszc592uSSqKRYOjLUVUaX5
                r5aaqLy3uNJZcyKhnSriB6Q4jrz0ZahtJcy9Vt7LMmPHZhZHq/oetWsTnTcaJFjyYciUqNZw2eNcffUo
                SnnWbZ2REfMe2sF6Ilq/l7ZANS/Cizwd6wZk0b5Al8lhMPfK6kPDLDnKduUazNAkt/KfL+DDNdRbq9q5
                z56+W+zLlJp+SGbbjw6/UcOrhtZzy8wO5NGX583HhLAiqFdNK9RlXIlk5WFjIWwzVv3jjiLt8jyMlO/K
                pcV7IiqGoklqp+h26337Emccy8NTMaXqN083sDfqWwO1SenWabv27sIM2P01sW6wckIdXE8n4WVEMlMC
                iPudcbxq6v8AQNRviFVZz4x76+cbDj1aZeFJjl1v73T7pbd1UM4O7JXQdnavCrJvnOpaQG50jVTpO0Qg
                LVHsQx1LwglsmW0vTEZEb+rnmr0nvTLIuH7qt0FcYzSXFmyGqxvKMc4hnjVHLQmSPW8tw1ZG5YX7zbW9
                CVnGptieOSTDkiokdJkpwiCROOJJRPiSqBvzDn/cWlydONn6QDpt4XsLcLhw026QnE6+ebtquLkmwnBv
                7rnGpm9O+bjQqk6NcWb4bgmPLqp5mDIqnhCKhpe6hJ2pdS3FFw3h/hTybihRG9t3uCPWntmybiBsdKqf
                WpDPsnt7c24rgjuTdWqqa79eQJE0xSc06ZrrxxTe8qqkRMtUywV+iI6OJO14T1BcT7Np3chzPrYn0hZY
                pLX2kapA4Y6jsucXPIksNwQR1FLyhmnvNb/TUgk1VY0ZXolfOERBuLNTc3MjfYtbPZWza1ttlaN7e12l
                ErO1sLOxQixsbOxb6aOzsrGnTQSKRU0klFIiLbkLdMaAAAAAAAAABoBeib/vpvF0+iSf8oqTjf8ARoBe
                ib/vpvF0+iSf8oqTgN/0AABa5rM1RY90T6Xc4arMrV6iYRhCBO8wvrOjcIsruQuxElsjMQb69T5CHSaS
                xyj0QYTqbo77d27mPl+WNEvhrcOfM/pJOovI/FA4nkxldHTY0TC8x/inDkNd7+O2kqso5f1XFWM4U5pT
                3nCsM44JyS1P7wxmmcz6auj1UOSs0loyF/qZjvTJps/xThMw1hZa6qLXk3WPiCES6lSLf1mO2OOM1ZIs
                qe5EeyfanHcaqdfkn2ex7mlJHh/4ekB9K5xpon01x/RY14IZ9LTjiuP5Awbb116Pri+uIXlUiyXYOTsU
                l3k6Xd5qzK8eHzvwu/yfHG4Q/KI+0Ig3CIzwWOEtE4fSg7Zw5NH90zlQVR9ekmDIJNpanm5T65CmrS+5
                AUojQXJUVIFLQSlkSkktZHrK8ZX0beFacIJJ+Ihwk7zIOnvL+nOlc5ffsNQWUyW4tbhnjRLdZFO8EySu
                7rmMDm8LalOkoqw+m/PDFIGdu7jx9aMD9QpMMkm//wDDaf8A83//APogHivW301N2s7hvdLLTu42F/ZX
                Vlf2N7S0QV7O6tHBBJvLK9tT3KolST2WRJUlSd0q5iWZAM1nAE4rNXioaKLadZBK0sNRuFH20xPn6xsa
                RWltIHomui4xzKzY3WVVVJsbMltSK1bumnQoUmSctExY2O3pR2kyHUzujTK9GQ4UPEd4ZmcNU9/qxxhG
                Me4ozXiyH0G9UcydAZqq/wAjY9lt8UdtDboU8vTo3U6UYmk2qk51EJSRmSTVUqLSktzUAGO7iia84bw1
                NFWX9V8ssrKQOUQbKEfxrCbpxU3lP8qy1S22ExTwVVNuNyUb1JFUDO4Z4K0Sl9oIqKaCpLyIjRz9N2ls
                hsdNuheAWqqhROS5wyjMX2kR/i5ySFQNqao2pR9D5+68hzIiMuvKfTY9wFpvCT4MmSuODLJDxYeLjkee
                z3HmUJE52uLsWWb3exS6yu0R1xcmu7vVOTVW73xpgeGO6HGJwOFwuqwP7/XbnZ+J9j8eo0Dnu4AzcFzh
                MMUQKE2fDl0d3DOVBVEr53wLApDLdlGnffIEiaHefmojQXJUVIDWkjVsrZaiVdTpGx1EcRaV9NmLcfUL
                ajBsfYJxZEIudmW1pUZo/BmFubbpBp5iqG506feanFKSOoazqVN11FKVcqA0beJ7wQ5Bwqry94tXBakk
                twtK9PFvfzbNOnm5fpBKoa84rpX9k5TO9jSHNzqO7jBWluood8iYmmjw8R24gTY5yCL3UbfYczsT/bj6
                E8+V5JnPiYSO6pU6Fw/xvAjvcUKJGVrQu3OW5qcaiS69EpVz8p+JkR+B77b/AFJI8xTKPP8AEZK12rxH
                JQyu8dkTPeER2bmzvlnUbXNsv0p2UaHRuvl0qlP5KzQoyJRGe40C/Qqm2wZc+cTJmbbv11qa49giwa73
                tCrJcbNvnGa7BvcC2IiMl0kIUWxERcxKLbfcw6DQAADUB9NU/essB/w+sW/8njVKLRvR1uD9jnWvgmDc
                SDiTMdLU5f30Vi2B9IeJMqW5vGMoJgDTUyFhJgcXGGGomWTGqpEXNjjcTe2I2Cj7OOWRa1KRSedqfmW7
                n01T96ywH/D6xb/yeNUozg8GKI2cH4TXDlaLVFCnTv8ARxgaWl6t/beQ4DHp04n03SZm4yRfOZGojV0P
                oQC7/A+mjT1pdjz/AA/TZhPF2CYhJ5XeTV6ieJYPHsfRZzlt82tLTfPdSPRZsaGhLktqjzU286aVPkoN
                1FCko5T5q/AAANBHjY64tUvFo4jLVwLdAUiv41jVhlN5D9S0zZby9tWqZy+N0u9Mq0ciudgtK/wN6f7J
                vvmaQRQ+yOcZYbXaPlRkdanASXv3Dn2ehktFjlfVHxO9TM/9Xu81k0YsbVX18glOybXO89yxOcpkhTjs
                6JTVlOLoYb4W6vnktqaykmql2gZ/dDfo0fC60fQNibp1gaIatMsFZWpTHKmo2ON8+a3h45CVfJj2LJGp
                5xxGI33hz1GRr7heZDTp1EU36SyFSSriqWqz0eHhLarIQ8Ri40i4uwRJLqwqWzDkvTHGGTCMqi196qaL
                B8tGSDtTXjuSVKRknna5nDJAy1TVWNVHtEIUnOIADj5cYrFeuPh9WkV4T2pmeXmXNP8AhWcuGdNHOS7+
                yu6PemLZk3ucZv7SMoU6vVSOMynVsqpkeNnZ4e0QCctbl7L16kakSH1+6xelD9yzpr/wA4c/i3jg0/8A
                023HkYv9MOiXLNdFvTm0XzvPcctVUj5bqvGsgwFUjkXUlbnYUnTHMd5t1HspwT8kuYyVuAaUP3LOmv8A
                wA4c/i3jgC4IAABoCa+f9WSaLPp04/5CTMb/AGNATXz/AKsk0WfTpx/yEmY3+wAU7y1/SryZ/eDMP8Qu
                QqIKd5a/pV5M/vBmH+IXIByH+DVAtZ+tmRT/AIUOmPINbEmGtVb3HMm6wsjtVhf3Tq24Ww1Yujc4WV92
                Lwz9rGHZymiGg4eioxlP5O7Q6NyKRNEW79Op0ddKno+vCY0rY/b4Y36OcNZ0fKTZa0JFkbUvBYtniYSq
                +SlBre1JyQ0v0VjNSoaVq7rhDDHmRBdmn1ZSkKWrWy9B6gTXVq8RfKV3Z2NR7oJ0y4/Y70zUt2bWi9PN
                UkklkRqIyJte6rfDahpM/lVI4RpIuVRjf8AaMfpGPAd0x4U0vSfiMaDcd2+mbMOmyQxCcTaH4druEbhk
                hiC5a2tK5jDow2GhrxpO8ZurgwTGk6Q1TCwdwNErVVY6sjUyPFPY64J+tl/4gfDP0z6kZxdpvcnusdeI
                Hli5o0yoqvsi4xkDpCpC+qtbEzRYnMCYbGZpopShNFEjTRTQQjs6RxLja2Nk4cJDiKW99QpXNGlpLzC4
                nTqUi3TetcTcnNtuti23UTpYWSyIv1vZ7+XTEx6HXf311wjHOhc1Klek0atM0N9hS6F6pZKiuM3RVoXN
                ufynJyv6xF02O+38dtg2twAAAAAAAAAWr6pNGmmDWtEI7AdVWEobnCGRaRlL4/HZvbX11Zs0kS2uLT33
                ZE3uVuvvBDW5uLbzEpW6L9REZEZEfPx4DWgXRvqT4yfFAwHnPT3AcmYcw7/RAljTH8ls729YIX7Oao2u
                GR82wkOdIyJoi66jPSWo6hkhRI3PszNXS2GgD6NH+/5cY3/fanf+WjHgG6tpb0aaYNFMQkUB0q4ShuD4
                ZKZGcvkEdhFtfWtm8yRTa3NPfd8Tg5XC+8FtbY3NvMak7IsEkZmRGRXUAAAOSZnPFuoTUf6Qxre0e6c8
                hOmNpFrG1cZ2085AkrPbrXdW2FHTJKptlk3ErBZPFSNs8UxzdPMmaWp3ZvaGPNDnGritTjb29Ua3WzHP
                Q4WkPtZL6XprwebmnaVa2PZxril1gqsW6qN24S+yhBnZH/t/dc1vyMuhmhTiZFse5htb6buBpwsNL8Ex
                9EoNo3w3KJFjh3i8lasxZSg0eyHm5xm8Nv291b5fe5FkjV323udZ4b0ua2ePqY4PvtSt43QYTJrGXgAA
                WfcQn9wLrg/ghamP4mJuOGQO5vxCP3BGuH+CFqT/AImZoOGQA2BMY+jGcafKFqzutDSPaxGOvlrZ3tjI
                5znDA7XalYX6U9leLYW3I7xLkJNN6lxIyYdk0iPZCj2I8+vDz9DPdmqcM094lGYYZJIkzV7Rwp6fdPbr
                L7hEtPkJabDIOWXZpgrrHmrcuzf2WDsS3p5pc3cGRo/WRzVN7vEv9KvGf94MP/xC2iogCQMc45gOIoLE
                sY4sh0dx7juCsdnHIdCIg1WTFG40wNqSS3tjQ1NqUN7c3Ip01bIpUkc+6jVvVWvfjkcfn9+R4hP+H52/
                xDHR2dhxiePz+/I8Qn/D87f4hjoDe89EH0740xrwsm3OzIwNpZP1G5YyW5T2ZLs7I364Zscy1wx1Dogl
                yKoV+qMspR1yfKDYsjST9NXqqlJJqGaNmLN81v8AHWF8uz9pRSrOcExlPZe2UK36y4vozE3OQWSD36mR
                qsOU09d9jM+hDAt6KD+8l6dP8IOof+OqajYndWmwfmlzZXa2o3rY82N41OdnV2Ui4sXC0XY31kfX9bVQ
                o0rMjLclHsZGRGA4Hbm7X785uLu73dw4uzteXLg6X95WO4u3K9vbtV9fXt7eH8pVSpUM11V9T5zUvZJm
                vfuKaC9J+LdE+kfBOm7EbcxWcUx3AI9ZXjpHqNl6nNpbfN1hfzDI1/d2JEl0c5pJDcX2o8GfNU7wTtzU
                KdEkccPiQaIch8O7WTmnStkCyvjKASe+rQGR3dstFtO8WOt0txx3OrBexU19/Rf1Cq9op1FEzPyXiPLJ
                NZnqJG7FwSvSntO1jp9xxpk4kcqdcT5ExBHmXH8Q1CKjr7MIZk2HR5uTYRxOQERdtepZGJ62M9g3sr0/
                VmN5jsj9QVJZDJGV/djoKDeKdW5uerC+a3W1tnJscbO8b3Bsu6JXlpf2d6hdhfWd9YVEcl7Y1Ka1U6qV
                pNK6ZqSZch/K4v3G50x450ccVDWRp5xFa2DdjKHZDZpBCmJpWuo0RNpynj+F5apwluJa1LQ3wlU3XD6V
                NalLpIaCQpStuvQ31p+lPcLfTbjd9dMG5aLV7mXu9ZxHGOLW2Wt7BdOikkTfdS/KkijNGHxqOpURE9my
                +0klQkjTSjqlrNRcvLPmccq6wtRuS88ZOubiW5cz1kR5lz3SaLNf49JJg5fqexx5qQVZaGxqKrYskdZq
                ZrOkzt7Wy01J7NKkh1B/RLsnSTIvByxsySCvfXFHD+Z8z4vjNxf0qpc0aN+bMkWNs3uCqm7k3NjhkRwa
                ULL5NA29cfT80ylTPXs9Nz/dUaH/APAFkf8AjJpjcM4HeiZ/0AcMvTPp+nNoVhlRMfdsmZasezJFRqyH
                lN9vZk5xi+JW27hCWxza8eVaxGaahxc1kaiWlS9PP03P91Rof/wBZH/jJpgKheg7/wBNLiI/3gacP8os
                uDodjnieg7/00uIj/eBpw/yiy4Oh2A4ROrD91JqW/wAP2Y/4x5KOxnwUv3o7hzfwQsI/5Dtg45mrD91J
                qW/w/Zj/AIx5KOxnwUv3o7hzfwQsI/5DtgDUH9OI/ppcO7+8DUf/AJRYjFPfQjP3VGuD/AFjj+MmoKhe
                nEf00uHd/eBqP/yixGKe+hGfuqNcH+ALHH8ZNQB0FdQkoeITgLOMyjt8VjIodiDJMoY7zYvxd4YIe7uj
                bdKT4fNuFgg9uu+x9D8+EalyM3MnO/pIfDO9VfXtJyr327ma6212Tle2N8h0M3BRn21am60qvMuopFUj
                XTqDvZyaOs8xjUiiL/aIcWKUsrvHX2xrGRFctD9YrbXKyWWx7JqN14qmrbffciLx6cN7WLpcyhoZ1VZj
                0zZMtHNnnWFJ86sNJyVb1LD2haLC+VfQ2dx9Zma+6JhGFtUuYHOl8pVu6U9zRUTUJAZ5oD6W9xOMYQ2I
                46x1jPRLCYJBI+0xaHw6OYJl7XHo3G4/YUm1rY2ptb8tpKwbGptp7U6aSJSE01bF+u3mj/PkXFt/uc0g
                /wDE7OP/AJXRswcJT0hXhq6t8NQOEauHnBumHVlH2FnYsgW+W2aJQfE+TXtutKLa4TvHuRXRtt4i1UpW
                RU3erCJe9ML+yvThVj8eTJmFrKQVs5s61VcMXGUOup5PNQGiONRC0onXJ9dck4WTYXB1tlWRNpIeEm43
                7ty7U2xqTVrPW5lTTU35FhyD+IRxAstcSnOqdRueIThuK5Uqw1lh0idcPRF6hNnNbaPKvjYn2YNznKpL
                3rK2htuyYkPaKlOouONjKwr3t2VnQjch9CMz7IXCM66dL7o41LiNRt4xPnWENdZZbNzxMLSSQjI96Rkn
                f9VqUQxanYjPlNvUo+ZStzrRNfS2eG1EtWF9jJh0juuSdKNha2TWvU1GYxFmmV38m9evkuT3HsKyqNMb
                o64xOl3VUS6u0jhs6QVi7VzgFZZtDIra30e5/wBLurDB8T1K6SryOSDE+R6V7QZZSxQi/hV45V4+5uDW
                /szg3OjMxPCHBjdW69arlNSmpFJ6b6xIqVEUiNQXeixziA688C8OHTHNdUGoJ/JujkcM2mKxayubNEry
                jkVwsXK+jeMoVY1VJS4SR8JsvlmsyVRYWFseZO/qpx5kebmnWDUtqNw3pFwrkbUXn2aN0ExXi+PV36SP
                znXJKlIpKXTb2NjblKpqeJK+udazZo0yNJVHl/fr9qZ6CTqqpc3IM4xXFszFxaNTN9k2W1XOIYMg1V4Y
                dO2GTvuZtgkMVfLPvp/s0ONZpccoTRNFucZ+900KNSrFpjrNWOMMLJSQFv8AxC+IDqC4nWqKV6jc4OR3
                b7JK/s9jrHrQtd1HsYwCi4X6ofjeGt1NKKi6TTUcaiqjqqgT5I5DfO0hfFVLl3UlO/h6NZwEUaLocwa4
                NXcPoq1dz9gOvi2ASOwR63pwgchsKfNUcmxxsEVG7OMtbKl9TkfPU7eCR2+KLl2T67zVCtRjgOZp4T+k
                rNtTVnxEZHPJRkfGL5YXmnfEEexO4TaKMkhbypuKcxy5xqrQ1uknjziZJx4zo39nn5uOUqOs+0o4ph3b
                v8938G/+7TUD/wARD9/zsA2fwGKfhzcYrRdxSnvKzDpNe8hPV/htqiDxNFTaBX8KTbWk1vZFYMSW9biu
                olwUa464rUlPyqaTSaiNR9crAAMGPpJsvfITwSdeTwwHW7wu4hiyIV+xI+YmXIWoPE0GkZEZEZ7lGZI5
                kZ/rSSoy8xnOFkPEZ0ro1s6GNVOlq3q2dF5zPhqXxiI3jge9jYT6lYm/47cHI08izbmieNsddKxpqEpN
                OkokmjYjUHG+4cOK4dnLiA6HsPZDoW1zAspatNPsAmVhfFvZvUakuVou1SBiUZGRcz22OC2dBb7c7gkz
                3Sex9xShSp21GnQt6dOlSpJ7ClRoERUKJJ8tiJO23htt49Nt1GY4OJfhU005opKqW75jXNeB8moufV7u
                j6pIYFlLF8rTVUhdnykTe7x2Vx9KVEsj7Oq3HsRoLlPqV6A/Si+G7qTwdEnnUrmOK6StQrQ12dplHG06
                spXaw+vIUkaHB/xzNKbW+tDxFXhSFudqzur97bR5dbuSRUrjs6cgfQys8WPGEPzDwzte0DnbdauUdvtK
                Oanw0X1G1uqbbIoTA3ebQuQIp3yOXvOHy2Px+WsZnVSSXpqo1DWSkpM+K7iX+mpjT+/+Hf5Qtw37eP8A
                +ksaWsj6V8paJ9As7vcxSzOTLdwLLOa2hgkEex7BcXuhV7CcRGIOUkbWVznMlnDWRxGo6M7HVgqYLJ3q
                pSklzIOyTQ0EsS/01Maf3/w7/KFuAdRT0wSUyGO8IK5aGhzr2NhN9TuFItKreifN31HbGwm81srC+Poe
                yJXDY28pMuhLakHtuRkObDo11ZTTRDqIx7qdxpCMTzzJGLrm9eoNZ5hi1/MogxyY7BNi3y1MbapIwoqy
                WP01Lc426OS1dwyBVGR2qEyRlY3to6u3pEWjSW63OFNqDx3jVicJTlDHfsznvHEZbrapeOsjeMUXynOR
                MLY3dnVc3CSPePL6Zs0ba2dKXl8kTi0MNNKjuTJXLB4dWtJ94fWsLEGqaPxBjyK3wB1u6E2xxIqtlSap
                9An9vu47MYxXr12p5Q2X9VrcVOsddu6HkmGSNrQ/naOxNBUKgZz/APPkXFt/uc0g/wDE7OP/AJXR8Lv0
                xXiy3dvVtLyK6Prq2uaR0a9vcYYmFe2r0D3JSVo/C1sot9yNJ7pLqexGRDeY0gcWHg7a0oY0SbFubNMs
                Ukl5b2ynbEmaFY6w9lePXpIOpfWN7DpqbTUkSGki2N7hi5BHDNCU0X5Z1iExatuJvwitF8Adptl/M2mO
                +vm2zurhsxnjWvjLJ2WZXdGVQ7NvYMeRS5eHglPWxU0vTwlkjtJa0KkEhZqSVLSHHOyBLqU7nEzmlKMR
                aDe2Emf5McOgtjetEIintE4XjkqPw1tcXZ6cm2LMx35tjC01nl6qUmSnTQuutdLmX2F/R+s8v+pLg96G
                cgyp2qvElZ8aPGJnm+ub1V047YIncwwu23jtWQtVVTm7xmEMDzu7qQ6V6bqTxW7VVQlKwoaJ/StOG5nm
                aX2PdUumEtKNd0ld1YwDIFtFmTL8AemW/kSqcetZl7NxFEthEkW3uLYh+S1R2axwq5vD7WkrChVOincv
                Y2tjZm23s481tjK2bFcUbBpsrNssS9d6korGwQikSjIy3PlTzGW/MfL0CYQAAGt96V9+8l6i/wDCDp4/
                jqhQ55XAG/fkeHt/h+af8QyIdDX0r795L1F/4QdPH8dUKHPK4A378jw9v8PzT/iGRAOzsOFzrkyHJMta
                zdV+UJdXcK0kneo7Nkndyv7e+sby2unXJEkcjsFN7htWbUNKaxNSWtZGTQixTbpI00U83dGHHJ4/ugmZ
                aDOJfqCjzgxXdnijO82k+fsDST1aoUee4JkN+cpI6xWwvyNJG541lLi4wp6aqi1PXK2M8gqIKg/MVy8B
                0kuADpXxdpY4UGjeyxs1WNu452wrjrUtlCRU6FJDtLMj50g0enN/eP14RmbgcTaXJix0wESjRTj0WaSJ
                BLNaxmkHOv4AHpNGHNLuCYNod1+VJPG4HjFFy0YT1EsrM4TVsj0DvbzvSxgWVI3G294lqbSJ1LtxaoxL
                YgyvRIYarVG36OstJjS/1djHUf6TvwgsE43vZnFtR6NQ0wNoS5RTFmFozL3OSSO6Ula7Bucn6RNDHD4N
                yqUknxUzkDM+0qKVKpR95rJSyVg0VvSjtLuMdLvFsyW34lZG+MxfOGOoFn6+i7RYosmlll80VI43NFN9
                lS5Ekb/KYc5zGuokpLvuSuidySlKU7Q/oVGRZI+aFtUmM3S6qXMfx7qbs5BG0V6y1LbyyDjiOofLG15l
                K7NuJwhyHWminyIN2cXVW3Opa1aFfEI1v5U4i2rfLurLL1BsapJkl2sUNUYYLi8uo7AoZHW5EfhkGaqi
                k898llZ7CyTWdllRN9fFOsgr0UVHirTpdM30XnQhLdEPDJjLvktnumHKWqub3Wo2RMjpblaucSh8gj8e
                juL4o52ildpQcvZKOUppcNdajTe2F8nblHHyiiuzppJDknjub8Pb9wLof/ghaZ/4mIQOLPrFwDJdKmqb
                ULptl7dcM71hfMM9x6qhcUr0k3TRHJDfWMcerFTqSHSozPkbJre2BxqmonlicGq5IlEvmV0oOBLx5tB+
                S9AeA8Oai9TGJtN+oDTRiyGYYmTPnqfsWMmebMuOGKxh8LncLmc6eWVmmpyOKN7cqStCXf2iYpvTfErj
                5x0o2/vQYvPTnP8A515/9mv/APclC370Iz91Rrg/wBY4/jJqCyH0p7ic4B4herLDMK0xTW2ydiLS7j2U
                R+vk1tpXZRaX5IyE/NzhNDhSr8kqdYoytcOhbQmWlTp05E998Gwk8xqgyPz5e96EZ+6o1wf4Ascfxk1A
                Gf70kPgmTjik4qx7mbThVak6q9PDZI2dkhr5dtrQ3Zrx0/39g430E9pnGohujcnYnSyvnrH7k8VqMbq1
                5HKGKTKaKbxRfmDmglV1ncObUJVpoq540d6ksdVexrlSqyzFORm+1XUI+U1J7nqOsSezs+nV0jUjY1GZ
                d9sS9qnXV4onGB0rcJSJ4nkupIpvJXTMMzv47Gse4rsWB9yD3E1WK76Qz1bNJpdD2tcWiK7uPtT4onxF
                ZTtJ2lDPQqqKrTTjh1B8SH0a3iq4CdbTVBnXAklYmFhc7ugeXWOUYpz/AI6rro735YwvXiMM2RjklPek
                tbXi6o/NT/XT2SqT9RQukoMH3Ct9L7ygzSuJYZ4nrUzTqAPN1ZMaNVcLjNnHZxEPX79Fih8ypj2NIRE5
                TGKJGdV6eoOzRx/ZqSVVvZybV1Ipl0Jmd6bJA1Nb4xudi8M71ZWTszPTZeWjo1OTVf2tO+b3FscLPnpX
                rY6WCjXbOKKi6dVCk1KKqiVJUfBoyFaw1vn81bsbPbxJsc2kwk1nA5LIrBLW/v0NsnpxpRl7f2xJVKbY
                5ujOVg6PTUlBFb16iqeyeQlF2TeBP+ET/MgeH1+FH1v2p/oc4f6n65612/sLu4/gp29e+Vt+Cv2M5dvm
                +Xfb5OwDLWAAA4xPH5/fkeIT/h+dv8Qx0dBT0TOPMTJwXsKOLO2Wtg4y3LWoKQyq5opJVy9PNpkx1i9N
                xviP+uIi0ajzMXgRUmxsI+hjn18fn9+R4hP+H52/xDHR0NfRQf3kvTp/hB1D/wAdU1AW++mRU0K4SsXq
                rQmrUpawsPVaB1KfWgSoHl5CyL4mlRpVv0USzSoj2Gmb6LmtZcdXQ8RL/Zf6JrtS8umj7UAsjPfx+UW5
                eXQbm/pkX70jHP4X2Hf8hsujTE9Fy/f1tDP06m/+R3qBAXFel15KkE44w0uhzlWr90YZwThSCxeiqupd
                tSs5Cw32WL+6SnmL1NanfIjilRbHzFYJUfyC3LPR6FhpXxY36aNSutC7aGx1zPKc7XunRofbmhZXN9D8
                bQqBY4nDhYNF5sqs2qm0oyCS5FTTyk9IhUSXuokbCy30zPQhMWvM+GOIdE2a8ccbzSGNOAMu39rTq3ZQ
                zIsOvZC74/e3w0UD9Ra5zFna8YreshZ21J6g3Y1zTcPjIl1xR8APjmXnCUyJM8Z5cjz7PdIucHpoeZ43
                RRVrdTLFs4brImmjk2Dt7nVpNkkQ7tHdrHkCKVK1vWeWdtZXyPPdG5jhMMkDrajQZ9NW0q4sbItpT1oM
                jK3M+W3yayLAE9cLGimycJ3GlxG8m0JcHzs0bud9Blx6RMtF1UoqnckmpMNZVWgzMKGjYKvPSTOCtbQD
                8IqNb8SvWs7XtKUbscf5iVkG4vFIM1WX4PV4/TLkXajIqRVnRlpMpVlIWt6TQ56xc+jj4cae/wCLrnWG
                UYDGJBjjS1gmlI7HEUYlVawTLJU8SSrYFI8nTBuazqNba6vbW1sDOxxWm7SBEaZ29akvq6z++bheP6HN
                lB7h/FYk8Bsl1VsOYNLWTmF7sTqctom7iD5B5wxPvIRElbg2lH3FnpLPmNFKSOii5TMbNnpK/A6yNxNI
                lAdTOl+lZOeqXBEPcINUx86X1mz0c2YsW+OcjsI6wvrqum0tU4hzw5yF0jZPFRmYn2lKnqhWfaVegxpX
                iY9DB0JzilOs/cQuXMV21wCtBLzThhm7vUFT9t3hzlcclWUZCzmouc2yGU4XHYkbqRd0PTvJHtjpVjrs
                L1STtYcT7jM6Q+ErSwzS1IVJ7J37NMkvW5nhGJmhjkE1Y4dHm/eQZMkTfI5RG6JxVqdltLPuT0b8+VnR
                aI6yv5sT6dEOR4wyzWVw5c/uFSPPOeNHmo2Ar7oebW2upbinIDXbmab9TJImxS2S4dYy/IoWNWo1PKHe
                Ov7QqlvReLU0JPcX4UXpe87qS2F4J4oTLGHmMvt83xmz1bwZkb4m7xy+cVlY2b9mTHrWlEUcY4iqupUf
                JfjZljpx5pSgzgb+faVhmF1S6/fRpOKrp0kt9qZ1AYGkDfHYve3jW7TtllOMdT2N7jmWo6OK0OUWZ8tu
                TtTdKvbriUEpTRhkaqKO3Yn+PEol8tCS2jJZyF/s4u5X7vGLV7eLePOrjZm1OTiypvaiGxxvm8qlVNjf
                OzXSQuo3c/zazUjZXKRmHe6sr60crW2cW+tQvbK8oW1zZ3tpWRXtri1vEkaLq1qINaDQpKuYlEZpUjru
                Zb7xMY4uET7Zf5ltw9vwheue1P8AQfaffXu8ufvL1P8ABrHO4PX+1+V6/wB09283P8rm35vnNxkdABpZ
                +k38BPM+tqWseu3RjH0zjNcahVlBs0YQp3VlaP8AkuNRtd8uOzrH1RxXTbHOcsjZfqZH2JqXRqyOPtjN
                7MqXJGc2eSbpgwpcSfjraIuFjmDDOGdRd3kF+lmWGV3lTrY4tYmaW3uKIjRcENsfmE/aXF5Y3SmzTF0T
                ImtiSwk9vlVMWeqvcHZpRUrBydcP6g9ZnDyza8POI57mvSlnGJX1Nhl7JQS+wGS0LpsOnUKJ5Ix/IqNK
                i8N9FZ9pViU6YXVnJZlzsZqJPLvMcHD0sq7zhkfHumDiQMcRh8pnLhZxCDao4VQRH4k7y5wqeox5uzJD
                fltEVXInVSGY8iw6q0Qe1e79rQ+xeMRjvuSMtznEx1gejVcTjSVk/IuW9QOE3/JcZxzILfFWQGWNyqEa
                t45Kl2TiqGssQh7tGY/kmbNaZISCVEntje8epOr20k7nSfflPmJAOx56RRKJbEeCzr6dYS5d1vN3iyNR
                i9rldVbQ68PmeXMewvIbd2q+hk8QKQyNo7Lfd07xKjty1EDkRYUyrc4LyzjvLllC8fZFdsYy5pmbZDco
                s15KcePjzH7w3BpTL462OrGuTM1FyRYu6mWq+KZHs29No/0HdgqV2er2JdUGljKetHgzzLS3PalzXz/l
                XRXEmdwN3uvUV1tQkfgcakjX7Q31+lRWKVZWjzcUhNa6a0U1OhqJStzHIGwzk3J2jHVBBMpN8fotWWdN
                +WrB5voXN2YztqEmx6/KRIoRM4+6UUrKlUq2LhFZEzVqXbFTU5W5qSsiWoNi/wDz5Dxbf7nNIP8AxNzj
                /wCVkfP/AD5Fxbf7nNIP/E7OP/ldG5boO423B711QKPOttkPAenvL15Y2KpXhDUEuCYzljJI0K5XJsjT
                5JkskTyY1qQmp3G6wx6eq6o/UJUgYGCsh4YqF5efNeXCb0xw++m+aNQmjqKtjfad5U2mwf8AGkwmz18g
                zV7OY9hRvsxk1/uRElLCwPCiMuYiSXMYDjp6ptQT9qsz9lHUVLYhjyCTDL8ouJrMo9iqO30UhBS5zQhU
                kfW6P37u/VG+/lzuV7Kn3Z5qU6j65u9dKaXappl05PRFc7SHMPCCYorIalesWnPUJl7BbLc3akKVdx42
                2D5lbzJW5GVi0nmO9ZaSahcxIbEII9kp5rB9P3pcPDjnOdpvCM+6Q3PB+FLmYVm/FOcGyKxbJVwcSI0I
                tJBmXHEfjapTGLxaqN67HTxmrK1SgTrYx8mRRtFWRvW5RiB+xhNsbQ3IOHSY6uNsjx1nn8Oc46znH2qS
                x2ZMli4sEiQ1G2s6qffLPUb69M3VqRcFTOlSUkjppQQcGEdsrhD4Nxxp64Z2ijHeLY5asDHd6cMQ5Ae/
                V7Q6F0/zvI8Djs1yBKX1RIPvB2fZRIHJ0rL7RRpJVNmpJo0WqlTTxNR3N+Hv+4I0PfwQtNn8TMLAXgjm
                sel8cMBGEM/xjiJ4ojlO1xbqRuyiedKLZYmiwiuoFqblKbZTeqp7ElGY4i3FUUlKE886g0wfn2uq5m9M
                h0pxaLrg0iYz136U81aU8tUOSLZhiDhHrd7TZWV26QyV2aycYfO2Gk489NTxC5RYt0tZeYuVVRt7NSk0
                axpMOU7wuONxm7hlaadcunmCVHe/oahsdKccEPFlfqszwjqEcEtkJdMnN/MpKkGrFrk4uxKNDydWfYzx
                LRTb048uQvCMaWjbSpk7XRqmwlpdxXRr3c8zXPLKNd7V7e9dLSNtHy3OZTt/RT3qqZ4XFG1+mEiVzc3c
                zVVMjOqe5STqRwDkrStnnLWnHMDOlhyVhqdv+P5g30eliTvHr07E79pvaiELco292Pqb1H3imSKT4xOb
                Y9pNaK6SPoD+h9cMpeLMQzLiS5WjaKE7zy33mNdPFs60KiLuO4Wa3w/bKc07FaEJSrJ8tjlk1sDktCK6
                Y5CjrMdb2dmy1XIbeemDTrjDSNgDEmmrDTP3FjbC8JZoNF7Cqszvbm2bkGd++O1QiX3jJH5zq377IHVJ
                Eby/ObpcrJKqxpTzSfTIf322O/wQsPf5dZeHU7HLE9Mh/fbY7/BCw9/l1l4BnC9CJ/cs63/8PuOP4tqg
                1vfSt8hyaacbTUrGHq9VdNWIoLp7x9DbfY/1OjTlgmDZZv7Et9i2VLspTF1NRbl+qRkfXYbIXoRP7lnW
                /wD4fccfxbVBis9MU0IzXGGtKJ6749Hru5xBqbiEOg00lFKzTUtGHO2LmBUYsWGQ3ZJUmwOWYrj8QdI0
                bqpC3tUXmCafMmPnyBmE9DC02Yri2ivO+q63Y21wzXkvPkjw84y+pZ9o8MuLceQ/HUlaoc1XqzqLbm54
                lUwcpTISopaCkCkQ5L4i4TCmOtS3SByifRzuOhGeFXO5/hPUbaSh10j5ufGyUOT5E7OpIH3C+UbFtpMC
                p03xqlV3kUamEdsGlmyA3NdOrI00IxFXuNUXeoy14++72776RZwXI/Da85q668cullTsabhSZmWN5LeJ
                ncnWQo7CwRCG+C1Jei+WaSNdN1Y6SmMyNUiWzdVkGb8c6z03mXSG5znoPx+u9q+yjNiXL0ysm1J/ipSC
                Ry6NNDne8pFspSmyINdPxMyJJlsfMe25Nwx+J5p54quEplnDTtbS9mZYXlSXY1fozPrJqbZa3XzKTa5x
                5+v21neXxFJrl0WdGt6ZiN02QtbvHqpHWYrhSNbv00HRtM8m6d9NOs6DMVw9N+nGSTPHOYqjfa+tXTbB
                cx1YUUKlbgpBmSI4wTyNezxrMjMnzJjSRklKlGgNLzhqcVXP/CulGRsh6a8f6f33IGR2Joi1/N8wY+e5
                rKI5HG28vXO9YYW4NUuYCjzU/Oa250k1PlV37UjTEdUzNpQksvX+fIuLb/c5pB/4nZx/8ros/wCAHxZ8
                c8MDUlLkagcfqn+mTPTJHI7lDu+OtkilePJBG750rwzJ0ebnOmpTq2spSWSM0oh7RcM9R8YJKmQIW9yC
                ER2OPXTCwdrl4Teo6K2sqwtqL0XzJtvG/wBer2FxJsaR6WNdnybf6IsfykmOZRoyVy8zY+sDNUPY1FTI
                zAc5jUb6UjxEtVWCMm6ds4400dS7FOX4i8RGXMtxiGXpuysnEj7Jwar1OWVrapIwuZWD3HHlCTeGJ+am
                mQUVFUopNevfiPJswwplTGmZIA512WeYnn0RyRDHWhVVRuWyWQp/bpLH3BCiMlF2Lo22VQzI9lEkyPoZ
                79XDiWcc/hU6BMZyirE3vT7qf1Dptby0hGBsKVoHNDXIyM0N9TKUyjLc9xfGccaapWFR7pvVZU5O17NM
                ajT6vnqU6d8Kvj/cNziVzGF4HccNJ076q5dRu0NOJZRA2KbxOau7WxuMidLPH+Vo1FiS4pa2qwdHg0zi
                PQB5JLe4HRpO50zqVQzxZFx9jHW7pSluOp1ZXV1ifVNgq+jr3RsavqbtbQvK8HWk79rc3BqUdg9NTVIK
                TowulRoNTK/0qVbs01aZUhyOuJ/wUNbPC3mb2WUoE6z3Tz37fWcC1NQdpcHPGUmZl3ZlH0TKnYVXZeLZ
                ZWQokXELma6XaPneaIy+zhgoIfq3Yxl8th+MYZIpxNXxnh8CgkceJJKJC7XNm0x+LxOPN9RzcnpwvFGi
                nYNbM1WFWqtZbEinT3NJJQS6euPhL0pjg36l6kqx1k6dyvB1q7X0jiVKz1G4tcbjHmSI5Uu3Cx9f7/i5
                ztkb4y/NFVVRbXk6lBipnVvmCtQqqSjtA0Y+Hx6RbxKOH17ORNkyxX1AYLZSs7IsI5/r3s1aW5ks00UG
                3QqZqqfhDgaKFkS6cea2aQrgrMSkrqxV5OmtCel1wq+Klp44sWnpWYcNHfReZRG7b2DNGGZHepupfiiW
                3yHCo22d/f0adKnJIvIabe4OsDmTUmlbv9NtcretQYpIyyGOMnOX9I3iPCFYtReK5HwrppjZ1rzWKyNy
                1CQfBNfvPT3FHhBR48ePUKcG4zi7RJH9tcpPSk8Lg1X2dYDjLLWrsDDJXh9J7v69Cf8Ab/8Ao99Vfdvr
                /wCC/wDoQ7z2v7Lm7p9u/wANOJfwdev8nXvP2a/Cr3D5dl30A6XoAAAApBm7NuKNN+LpXm3N02Yca4sg
                lpZuMvm0lr+qM0ds3Nybo9YXzjUSiqtJLdnNtakmki3XfIRuRfJGOdu48nB/dL6ybG7X9gS7v3C9s7Cx
                oUHR8I7i7cFGiwtEmbNykpazJOylJRzGRHymZkAy7gAxTz7jacKLFE+muLsi65cJRHImN5fJYDOom7uj
                13vGpjDnxwjsljzlyNFQkuLO8Nri11uWor5xG6VVEbGYZWAFvenHU3gLVvjW1zHpvyrF8xYxvXp3jttN
                4fcXd0zV3uP1CQ6WCFuFKlUKq2VKiDqny8vaLTyF4kdI9UnEZ0P6JH2LxXVhqTxzg2QTVovpBFWqb3t/
                aXj4zN18luvnBvJubK3MhLj82szMjNZGokkky2C+ABj5008UXh+axMh18TaYdVWLcz5JoR14l9eIQ++c
                Ll2t42037a3Oj3yXrVSQTfScHVspqVzq6ONFXKouQiyDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAo7NLMrd29YI+l3QOt9aT2P823j7vIViEiTe0TXbaN0X9h1z28jMr3lQfj06GaenxL6gpUAAAAA
                AAAAAAAAAAAAAAAK+Nn+lrd/4jZ//BkKBiuUfrFWZmxfn6lTo/8A0mZ0i/Kk9/vsEeAAABR2bf6cn/4n
                a/8AvqFYhSScI3eKW39esj6+P609umx+f33ASUAAAAAAb9OfT1BrG+khP1e3ZdJMap/tZxcc0SK4+fPb
                1uP2WPGxt2Pw/wCuBz3+GxHtuNnIazXH50Waj9Y+VtFUUwJQo0GVDHni3ydLH2/JphEIZvXsSnHnCRuX
                V3cieicZCceiDMxPj+/E2O5+DG/Gww3j/G0vL8I6zj6vq+lcPafEXnV9U57TTtbnNUzHdpiLTVVMRTF7
                RN8+zL2h5Lsp7Z+De0LO6RqnEH8N/FpjRtMiIp1XU9R0vUNO02Kqv9NMahn6aqqoie7TT53jVJS6N9S5
                9Xp3lKrV/wBwI/0fRv4+Iubw/ie8yI62rUztcolF/X/YGOKtV+7O1z5f62d+ffx8Bnz0qcDvTFheyanX
                MDo/agplR/GK5uu8Tx7bXZkf+l8MbHbvdz22699Pr6wP+3WOkM1EAg0Hx2z0o9AIfGIQxUD3oMcVY7CP
                NH/q5rJJbl7vqPcyGj+f7fuybRsaMrw5pGq8Y6hE2+L6pEabo/ei0XpiJ9/qpva3v02mJta1m8naF7YP
                tJ9oE52NP1jSuy3Qar20fhXTfiGr92ZiIirVNQvNFVr3nT/c7TEzF7TDBNp74ceRLj1BwvMHtTDS877I
                183+t+fjHXPvx3bOn/gIZmsRaV3iH2dhbukoZrCnR/1qijV+Kf8ArHdj+vdi/KLm7Op9Rffb7Nuvx3E1
                Wl2hHQ1fD3+/p0Lp8S295fAdjI+0DxXqm2QyOj6Bkdv8q0uKqrbeN7z4zfn6XnUHieeIOIsWc/xVxXxj
                xXnJ/wDttY1PPRfbfuxVFNNr38I5ckwRCP28fRS9XcL+6q0ehdvWP+f4bfzCt9m+OHJSpru6p0yLb4n5
                7ddunUj935BSCzuPzdNvh9/f5ee25zRbXv3+r39PLbr1/KJ5o3aDrGbt79rGqxG20bRVa3OItMeFr/kr
                rOaHlMP/ANLKX6TNV5mJ2iJtVeL8+cT1hVSi6VDL5ypVqfWfXz+n3bHv4D30ryzJJ3F/cUaVOiXSifX6
                zL8nx6eQt9nGRLODsFR1uLin61Xr+oWFA/7JvD+H6N9vie4tqvM6doj9ufbX933IbCcETmdcwIz+PVPu
                M+MzvvEXi/PbnKC6xFOTxvsKY7szETeIta8R4cpmLb894tvZfpKsnscesbu5K4pdlZ2/b9vv0289i8vj
                4jGVlfLF5K3K6cLi4+Z/a9jQ/tWzPp9e338hTnKObKjhRpNdO82pVt7iv899Hn+ToLX36blUp1fxjxMz
                +j7/AJ9hl9d1SMHG9wi1res/h1369IcGQysT/aNrT47zb92/VEJtIKdTtPnPp6/9Hj/N9Fnc2de07b5z
                6Ps/k+34eU7yqWdp2vzn8/5+n0i2qWyDtO1+cLp7+orrP5rrH3fh4fnPr1Z7Cwvw8N+fSL9f3ZSSYXhf
                O9fyF9/5fqMWySq4/ZfD7en2/fr0+mrUqee07X5z9P8A0/Z9fvtzk7gXPV+j8vn0+z8whGfxfX7/AL7/
                AK+H0ZXD6/T9VKpJcfOVft+/3+ryKiL3U37X6PsLzLy6l7xUt+vP2X+X6/Ez/J9Ze8UgeLj9lP8Am3+n
                4fZ9HujGa2m/p+Usng849Z/JIblU8fh4/D6PHz6/9I3MvRepTUvNO2peG+sU6tJizTHJTQsti9ZtymUE
                am07xfN0IqvsZ2ZdD2NuPbqNMO/qfD7+X2eH367hXos7feU8aawXSoj8UvJ/i1voVdtzVetjFNFOJEfw
                Tf2G5fHr8JZ2X4n/AJdko3nbU72tvy3v+U/SJYriS3wvNcv5qIjl1rw4j9+Da/AAG1StQAABjS4t+hls
                4i3D+1DaXfV7D2zlEQVJ8POl6STSy5ohZ+0mOrxd9U2S2Nru7t5RN/dD3UiNyJ7QRHzGhfMXwLP9XfFO
                Lhr8DiQ1nVgimCs75QbbivVtztX9mh7o4HJZg+TJvcuqnbT5ArDMZRumsyWlkdTjRUzWREOwqMIukbg4
                4p0pcUvXFxGmSswVrjU6yRe0xpEbG1Wi8xu9zW7TJdS7640jbO7EueTJ7HI8+sDkz1UVLa3cpiw1lEh7
                +WGX3G+PIhiLH8ExTj9mtY5A8bQ6MwKERyyppTaMUPhrHYxyOMlgRnuVFqam2xoo3JXSn0NR7mWh16Rx
                jXIfC44sOjnjV6fI/cVGudyVmZ8vt9vXqtbS75PgDEcZkMTkLmikaGpsz/pyU5Q5NOmitVP2GyBJFGdS
                shJ9AIYyOLboHaeJfoOzdpQqVmNqm8labeU4WlsjK7Q1QvNULuicsePrnf2DO9ujRG3tx9eh05eGlkd3
                2nApLKyY2Z3rVEJUGt36JjpjnmbJnrG4yOo2ip4ynqPyLOoFjt8urA7JF4b7Kim+eJ2wWJqXSbmt6l1S
                PY6jhs1RBMyIPMY6je25qRbvYtd0b6YYDou0tYI0rY0tqSIhg/HEdhFnf93osLmSPFlZHfTCbuFkhSko
                d5zLHB9mEg7NRkp/kLoaSSSkpF0QAAAAleSMDFLWKQRSTtVi+RuTNTpHpGzOlArlre2Z+sFNrk2OFkai
                Q5Nzm23tVrrIqJWlSDXSNCiMyTyQdV0z1OcFbIXFY4R8HunUsO6n3SHNEcfq1zfKd7nE9R/TI4g+x1Sd
                qV+4ZPwvI7zEGYENaVIrVzdmE11KsfpJT15hhF13cGvE+t7iF8P3W9K6jHanpQfnm5yrHLq2WV9ldkiJ
                1JvgViUdNtuGy+bIVmbmdZE2PR06UkhMhe2AuzJVIiCoXBF0BI4cXDnwRgN4bKNhlZ+aDy7n6qi3tEXl
                zmHIlo1uEkZHKpTQZOK4Q1Ij+NaLpsR1mSDtJGrwMsX/AKWtoDq6oeH3ban4QyV3DLuiB6vsg1l2FtzO
                TjgiXqbG7MdkXIRJMoj3bDMlKday1dwR6DS86VM1vVRRbXAlSWxOPTyKySCS9msJDE5hHneLStgdaJXb
                U+xmQ2NVrfmNwsuZPat7u1Xl+21kLPbsVKSZL6JUHNj4UDxnf0gbjGacNQmqO29oMb8P/T5hJ4mVSqn1
                prf5NhpvsihqZBUNqqtLhJszajnOR5hf2evRo0a0IbJZFkmukxUatTpjjCnwWuEdDuEdhHNOPWp+b5zL
                svZ7nc3cp5bUF99XmImF8dI9p7iDpe1WZjWpxj+PDJ+klFFGo0M2Qp3kSlHX17jSGd5q5rAAAAAHPP48
                7PlTgu8ZvB/F105R+0uIpqNj8jTN49cUKtrE3PKLdDix3lKKSCm3qJuopmkFcobkdjOuv1h7yC3zCRlT
                qKYTqVOhgMUHGT4a7XxUdEcv0z0nZiiOQacqh2RcQzuR0Kt01wudRtwOyvb++JvbHd0p2LxAnOYxOsTV
                T7WomRmo9uxSYDA16IZovk9pifUDxR83KupHmPWXOZLG4TKXxNrevLjAY/LXBxytOe8UIprOtlDNJOVJ
                +QfLzLxi2VqPOTsolbK3Ej0ZRjiAaJdQmk2SnaWtXLEFvbeGPl8hdS1imUo8unJsXSw+zIqqW9iyA1R9
                0fqdM+Z8YEOsfWZoeFEm4TT7hOAaa8IYl0/4rsDbMc4ax/Esbw6yWSTu6cdh7LaR5vunGpRo00uDo6Ib
                ycnx4qI7R9er1yfayzrXC1qrUA44WOMo64dWWNtKno+dZtcmD2K11Tmkppe7e8J1hEjfnBEcdIvJW9uo
                kpui+A5Lfah8lSjmU7KWuVOlXkJEJZUK66eAcKQXTfhXFun3GDcbTj7DEAiGOIjZrJBXiWOHslgwtt05
                rp0rfvJ0ckWPeT27mXbPTxVca9wdSrWWa8UGG+DHirE/GW1EcVGzVHVU8qYmZm+CQFLek7yFZ7mCnSL5
                4yahFJqS3NvtfAo7GTZndD67vEhfswZxORsjJTpx+o+ZyQAAAAFrrfrJ0nO2eL7Su1ak8IO2o9up3dW+
                wZY5TiF3li1S32SXO+tqsMpuiXxDm1tiid7ln9X76osKFSCrRK1Suuq6Ic8rB3ovnEVgHGCieoF/ydDK
                2naBaqrXUv8A0SdOfIuslzdobMmFkU47VhpmqXJyfL0kTPIbh4R7DUlObw+HIJAhKGJ7DoagAAA0AvRN
                /wB9N4un0ST/AJRUnG/6NX7gj8FjVRw2dZ2uTUXnOeaf5VCNTXehQJsxPKskyCWs/r+V3edIKXWU0xZC
                GmwSTU4ISs2d8fT74TUpciqBIrKDaBAAAYaOPToZkvEI4Y+fsJ4+b6rvlyNIZMzYaa6BKO7eMiYtvjc0
                xVuppSrtHOaxVcuhbH2iqaEvcnbKtRaUU1krFv6KlxPcf5/0eRPQBkiSoj+qbSTZPUbZIfI7srN9yNhZ
                ueL1xjT3G7NwUlV5f4yS4qxzJmGkhdVgZI7E5BU5EvdSkz7b41MuK96MdF9VmcL/AFqaBMxp0a6wr2R/
                hBfrihXkMfxtNMllfpcTyRZSKCr9s8Pz+q5F34/zOFsb+h/fTW/1o2iUO71JK4bZoxz8SniPYG4ZGmSX
                6gs4SNsN3pNb03YkxelzsrKXZjyOmzJTPEY02ms3JTcTlfthyd7pUKtCFMC1P76o0JSleqSWnH006C2S
                MXx3UxD5hFqaTbUzhUv0mSG99UIjtCvVTXJuOKeW1GW5qOtt34ajMyRz9Cjemv0V3VNqZzi3al+NdrEc
                c4OFCvbVbvEsQn09yFKJXYt61LsYrJsySVDEUEi9I0VCVEcZMbwhTPfdnHJNGaxKNAbBHAw4h2pbia6M
                bbUtqIwFHsK3l3N3mIQ6RRF9cLmLZoZ44ZtkgnUbh8iRVd4Uzs8sJxiK6VaQSRLy9x56XQuKdK3TRGas
                SPBYPDsYw6K4+x3F2OEwOEsTVF4dEIw2WLPH4zHGKyQ3NbGxtbeVNvbW5qsKSKVGlTTyEkjQkiSSElPA
                ANeP0l3h7zTiAcN2T2WJGao/Zu04zWzz9jqO2lBdw7TZpYI/Io/kOCNvKhS1uTvEZC5PrC1Uk1FyCSRa
                LR6nyVHfYthwUeyrnLDeDWqxfMyZYxtiRod77uhmd8mzeLQhndXhNmq+W3NrjKHZnp37kbchSypU6xqJ
                BEaiIjMjDXl9G14v2M9bmkDGOmTIsrsI5q501w1kxO+RKQOCbN2y1BceMdo2RHJ0LXf8hyZzKL2Ta15E
                ak1az+yyBpd5I/UaUffGKpV2eO0R/siGsbr/APR59NWvBxPU7pCzDQ0oZynVzZZAsck40aW6b4ayTeOh
                pklKdlH2l3Y+7ZO+rWTgjIkMfktBrcfaT2akMhUVYYwbTgWek02lWjD7XjRttvjKglNhScqep/VqmWWz
                WlBqSlvj/wCCrkb0oqGlsS2U58VMmXmQS+TZkSGcjju8XHGnDd0oz+ORWW2z1rFzBFXmA4DxpG6yXSWR
                x4mFippRleTWTeS6kZjcLQ4m9R4ndKVTuRNbXG49zlUfXph1tvQhba4s8t8RWzvaK7a4tILp5oXFCtR7
                C5oXPtRltJoWR7GkyMtjSfgadiI07GrOPoP4AOnrQRWe9X+s7MbjrN1AQSye8mOeR8jx4mvHsBVGbFUi
                cpc3Q1zd5A6yeUtBNnalMZo/PpbtrW/x6MxqTIN6LHD6HLi2+oSPiZ59Nu9RjOR5ZgaMxU/WE3RWr03L
                zTNcgsJl0MzZfbKFHvvttfkk+u24bxYAADUB9NU/essB/wAPrFv/ACeNUoz+8KD96x4aX8ALRp/yd8bi
                xf0gvhjZ74sWjHGmnjTzK8RwqaQ/U7CszOrnml9lsci1zHGDFWaYRft9hfQbH2TnipIid8hMFanQqMlN
                pNmsXY1vtFdNNvcZONEmFZRpq0a6S9Os7v2JynGBNMeBsMTB5i1y430SdpNi7FEWhskvo1euzWxOd/G6
                7yxX6mKo7MbG8KaFUlVmJnWa6ZBdiAAADm64xyPf+ja+kE5oZM02Dqw6GdXd9IazdKrayvHRpbsK5Ilt
                abY8nTbYNnzrq56fJ4hwxrkBvTSOQojxy99jsefCfIyT90ihjf4k3DF0vcUfCFPDepGM3irtgr3jti7K
                cVXatuSsSSRxtSpXz5DnFaaiazW9lZNyJND32i9xuSUWpqrXTGh9YY8+sYX2w+XxXIEWYJxBpEwzGHSh
                qspBGJPFHZvkEbkbS5U0uDe8sL41LrNbi2OlJXaU3KjVOlV6KQvZaViZrq5tbG2q3l3XpW1ra0TrVq9a
                r6tb29ukjM1KVuSSJJJ/qvgRGW5EegZG+CB6Rlwvrx6jvDC1yR/JWFajtdOEdhdeVR6LES7+9TUcnJxw
                PqCZ5tg+NuylJ7R6cmSavVV7JSDUta08om1x4P8A6TNxJqNtAuI/r9jmGMCuVUrSexCPyOK3d89M+xEV
                uWHtM0UguJp1y9FE1zadsyOvMZrWSdwxRelRcVrHOvvUpj/T/p0kjZN9P2kj2utb/JLBWK/jWT8zzZLd
                ZyZwjTh8pvdItCGuM2MUjz/RNFJ7eXGZPTAt8jFaOvVx0rtKH7lnTX/gBw5/FvHBqe8QD0VlrlGijTtp
                R4bV1h+ByfH+WHrIedsualpPOWya5tdr6CojLe6OcigeLZ0o0MVVV9TYYe1MTBB480ODxVYUJfnuQ1nz
                bkwjDXfGuFcSY4eriwun2B41gsGeL1qr3t013DrGIs2R5wvm9bgTc4KbKjhYHVoc1OnWOjUQlSKdXtF0
                wrAAAA0BNfP+rJNFn06cf8hJmN/savWpzgtapMzce7T7xSotPMDWWn7E54pORw2SSbI9rl659g2KRtbq
                qPx5sxW8w2qaluiFspuc6Z0qIl866ayQmrtCgAp3lr+lXkz+8GYf4hchUQSZOGe8kkJl8csF21NxfYxI
                meyrXZc1pRunNtvW+yXdpI+ZVNK6qec9j/WK6GZkQDRz9B3/AKVfER/wg6cP8n8uDe/GtL6OnwddTnCK
                h2qeOak5xgmb3mdJVit5i91g+TzyQ2jdbQdtmrc5okKZ5izF1WwqV6kisO5KbQTzS2TdKX2BJpJqbLQD
                F5xrf3o7iM/wQs3f5DuYxCehu/vSMj/hfZi/yGxEM9HEJ0/zjVfob1VaZcdOMXaJ5nfBGRsXRF0m1+4t
                kWbX+YMF81Nt/I3CPtL+72TVSqVVVKy2lhd65opmRW9YzMlWK8BDhvZ14Weh140yagZRimXTy8zpOsoW
                zvh98lciifs/JmKEtdjYHfTOCQV57zpLjThUrI7g7LkrUyo118lQyDOAAAAl15e2eNszpIJA6tzCxMLf
                du7w9vF/aNbQxtTda1b+/cXK/vezbbBsa29PaXTlUqdhSpIWqvUppQtR0QwFq10yaqml+kWmjPuIs8sM
                Wd0R+Uu2JMkxDIFhHneqdU2+xfFRp3djbajvRpquGXmIu+KRGuka0oMxbrxW9IE+158PnU9pKxjO7bG8
                +zFC2dtispcLhys2c3aOzqLzZEdkV6zqN1sIvNFRtcPki6KHdSI3JHhRsD8mmpmr69Hoz/A61tcNPN2f
                9QGrhxjkJsp1ipeGIlhyHzqymqZHWVN41NF5Jkd5HFVIm3GylGu5YCg3es/kiZy9VxRj6EJQ+BuZAAAA
                0AfRo/3/AC4xv++1O/8ALRjw3/hq/cI3gs6ptBXE116a0cwTvAUgxfqnRl44AxYyk+RXjIjMWQtQjXlZ
                jKa2MpxRCmRtKlGLFTa+qY5A+rU+pQVM61FBvADaBAAABoAcIn/Vb3E++nWv/HZjcb/41ftDfBb1TaX+
                OHrF4l89nOn57wTqFVqC9jovDpVkS5y42HlbJULmkbTJWB1xZHodYJbW6OXtB+7mnb6pNaolNLvlK6tQ
                g2gQAAFuOrjHEozBpW1NYkhdO1qTHKen3NOOYnSvro7SyrSWa43ksaYE39/1JvsFOjlZlWqlsVJClLPY
                kqI+Yr/nRDjJ/wBxWAf+Pdg/5qHV4ABJUDaLqPweGx9w7I3Bgi0cZ7/squ9D1xsZLBvveU+nyCUhRoI9
                9y5TLYz3OdQAAHOK4q3o0HFD1bcQ/VhqSw9FcMuGL8v5YvphDbx9zAyMDxcM183Nlgk3BqU2HUb6u9gv
                mprSaiSe586lKIujqADDbwH9GObuH/w1sRaYNRLdH2vKsJleXHh+sovIbSVtHqcyyXJJKxKsXawJKam7
                S42HOgi5qdTmQrZRbIzJAADERxX+Dzpc4tGJrSH5ntbuEZahNtfqw/qChllZ3E0gN5fnzm2ONhXUmlNo
                G7X9Omt/hjzUopqbVLiOPkckJlIEc+jVH6KHxa8AyZyt8WYtheq7H1KpdXDbN8OTuKtTnVs+eoixS6Y+
                yY8wqYWDsqny1K7WwomrRSrfIovzwhKF1OscADj14i9Gn40GXnu2baOjN+x411nArVwlOW5xjbHjGyJ3
                NSr+9sXKVLljq28pcpqiEeflkpaDRSUSTNO6pwYfRhcNcPSVxzUtqilEf1K6rY7Us3iDWDW031nhXBsl
                olzm9wyxd6dN1nk4aqyO0j2RX9oj1NgNVCtHsfscmZaMlXtgAADnBem5/uqND/8AgCyP/GTTHR9HOC9N
                z/dUaH/8AWR/4yaYCoXoO/8ATS4iP94GnD/KLLg6HY54noO/9NLiI/3gacP8osuDodgOW9nb0ULi6z/O
                GZJ7Gobgpcem2VMiy5iq3ubmG0uiZpFLnR0bTv7JbUZ06ht98k1IQnclGrm5N0oPoe8N3BM90v6BtHun
                jKNq1WeRsNaf8b44mtuzOffDXbyWOR+wbHNLa5EVMnKw9epqJNXZCVJNPKXJsQvkABqKek2cHbWpxSZv
                pCf9JjFAHmzw5FcwM03VNp9YQpVtdTN6x3esJNxOFNfeRKRHnLnNJElCiRuW6kbSh6NLwW9cXC7zjqZn
                mq1hx2zxvKOJohD4quEZCsJpd13lql63e+K9sLBuQdhTJuNBpqqUaVKPkMzIjWW40AAMFnGO4F2mji2x
                Fqd5E6XWG9TcGarplxzqAjcesne6W01l1HKnBsnsBdznOIGhzVWdGZCn1nfYy9uLpWjb/a2z3IWGR50w
                AcnXPHomnGGxI9udHHeMMW6k45ZrvK1jI8T5ggseXcNRUlVqd0uPZhc8YPSHTlOmnuNoovSidlHRY6r1
                RJdcWxWHo2vG2c720bqWgyZUqlzW7KlXv8pYDabQiMzUfauLllmk12Kem/Muogi2VsZkWx9icAHOL4cH
                odmf5TPI/O+JbLIxirFjZXtL28wTiyYWkxypMqliqmmoyyWbRpRQ2Cxuskkpqu8Pf5w/VyUuhTpsRnTf
                U9DDGmMYBhqAw/FmLIgxY/xxj9gb4zDoRGGyzaWCNx9qsysG9tbW1vSmnSo06aCJPKXy9lrWZ1lLXUqI
                ADSc493DY44HFazWmEY6iOIoholxE93q8RwG/wA8R9qvcgyhPeDYrNWRG3uldNcmdm1wv2iBMlY6yIFH
                HSpRSulI36b1nbXq/wA6IcZP+4rAP/Huwf8ANQ6vAAOUP/nRDjJ/3FYB/wCPdg/5qD/OiHGT/uKwD/x7
                sH/NQ6vAANRT0ZPg7a1OFtN9Xr/qzYoAzWeY4rh9mhCoTPrCaqubqGPWRb1+JxJvpo7tJKJC28hqI0rU
                a9i3SvfbrAAAAABqu8cb0bPHXEsf77Utpnk8VwJrDq2aLeXXUhs3CnirPVNuse72w8jFGm54eY1N2iwp
                022jkNoYZDUemWlSj0ljjwpLM+R/R/yn6N3xosVSCux3miWXTe0TW5bGRYul+NshMDlaoJJFeJVG5bUd
                25C9jJKH1kY3c/lGq3L5PN2IgAcg3A3oxnGZzpJG9pvNLB4Sjl3XKg5z7O09g0Lj7GRGRleX8dbHl/yO
                5Uy5j5e4YI/LM+bm2LZQ2Csu+ht1cc6eMPSvTXntzyXrCxk/tEoy1H5uTfE8TZgtSfbFyvY/izdNRxxs
                7MTZZVGpidZk+PrJOlma5DVx/wBqVVk36AABpm8YP0UOCawMjyvUroVmkM0+Zoml7du2QcQTSwvbTBU9
                kt6aajlMo45xZoenfGspezWuo/tdOPPsdkL4s3wkRy6N6eX/AHMgAchDIXovvGyx+6XVjR0gUMgNlO7O
                2tZHjzNeCXVrcvFXrlOwc8hMctb25SS5d3uPMvXrsk0mZQyGejHcbmZudNtToqv4xblcIpXjzMs0afGB
                qb0q3M74yPKy3ZxpJMiRuys7ysiWRkgy5jR2AgAad3BZ9FjgmiebRnVBrekUNztqMid/ZvuMcbRaheu2
                FsPSKxJa2+WX97JGdmccj5AY6i6FeNOtVjZo/A35uU/xxL9IacekjFuIgAAAAAw28eDRjm7iAcNbLumD
                Ts3R90yrNpXiN4YbKUSG0ijR6nDclxuSvqr52vyUmns0t1/yIMuapU5UJ3Uey9RzhU+jQcUPSTxD9J+p
                LMMVwy34vxBlixmEyvGLMDI/vFuzWLc52Cjb2pLYVRwq736OWmhJKNJblyKSkj6OoAAx38RPhsaYOJ5g
                m/wNqWi1xd0rWot6x1kaNqsrDI+J5Yu0Xbd/QmQ3rdX5DWgiJ8Y3um7R+SUzTSkbLVOgzqt8iAAOVnq+
                9Ed4n+BpU6K08NMC1i4w9bWTDIINK4tjTIVu1leEVlUl+O8nvjCltdaqTLtGuFzefU0l0N73I6SbFsee
                jkcaHJD0lka9C2QY2aKtGhdu+Q5RjfHzDY82/wCOd4yiYsyXKkjpuplQ9VCJR8yFq227GoANKng8+ibQ
                fTLNonqP4hUnhGdcoxS+tX+DYFhFBxdsIxF6sip3bc+ZDfpO0sjtkyTM7hyVERUmBlgbM82CqtxVn1Fd
                FbPurAADVe49fo7Md4oblV1L6d5RG8WayGCO2jA+W0hoHZ46z2yx+0JMcbpo5NzbUdY7PmVtpmzx2aHT
                e0LYEtMZkdBLDbMr5HdDHJPAP4w2K5RdxV/4f+f368tKxmp0xrHbPK0YuE/1NzYSPGzlIWQyIiLxdUq3
                IyWhGw7N4AORho/9GI4r+qKWtlhMsE32lfGlS7L2jydqFr2UTWyWpIJV4TXis3KpkqSu/qalrZKSI8ys
                NWrTKi9yZgKoiojcD4F/BOzrwhNfGru1f3+llfTjlDB0ItMQZxsrBuYLl8dGybpv3+DS+Eod3xyjEpZC
                vSWdZR12CRMR032PviLinII+wbZgANQjj1+jgZm4nGcT1Yaf9TtjbZPtYSwwc8IZ4qOlPGDbHozYL7ut
                MXTGLtLy7wg3Z1qOr0+sb1H322epJI3R7ORsNIytq2oBPvRhuNpB35TVS0bLmtrUr3FGwkMCzRgh4Zr7
                bwuiKvkdoeG2j1Ik9+sjKauUiNPUyHX2ABzfeGV6IPqLlWT4zkbiXVYxiTDcUc7B4dMCwuZtE0yfkdbc
                sr9cXfpdBXN7x9CYO9JIqL+7sU0fZFXT3kysNKOVa1GR0ei+zMjVGWdpj7E2WTOwsLXYNLI1t1BFm2tj
                U22iW5vsLGxSfZ2Le1t6KVJNNHIhKEpQhJElKDmMAAAABziuKt6NBxQ9W3EP1YaksPRXDLhi/L+WL6YQ
                28fcwMjA8XDNfNzZYJNwalNh1G+rvYL5qa0moknufOpSiLbj4D+jHN3D/wCGtiLTBqJbo+15VhMry48P
                1lF5DaSto9TmWS5JJWJVi7WBJTU3aXGw50EXNTqcyFbKLZGZIAGBb0iTh/6iuJJoGaNO2mJsirnkSz1B
                47yRcW0uk9lE2c45HI7kNrcDS6X5KQTipwkjZy0STz1UnU5d+Woadcngjejo8SrQdxPtMWqzUBGMQN+I
                8XLzN7V3sWyu2ySQUKc0095YxyxG3sNi2EpxNcnmDCVTYyKnTNdVR7I5VdB8AFIsxYexln/G02w7l+FR
                /ImMMisLhE5xCpZYlfMcgZr00kqwv6KiStFRFblc2R2t6tN6YnpDe+sleldUaNSnz1uIx6HTqLg8re5x
                w3pcxZtxg41r67bMH5TlLJCMwxYzUs6bIxTOR9y44nDXTSW1N4fX2BvKEFRRVoviyqvdTpDAA42VH0d7
                jSrkpRVOgXLBuZ1ex9YryHGVtHNzLf8A6slZARDyLbqZ9+KIvIzIhnh4cHodGb5XK2DIPEomrDibG9he
                WN/eafsUSizmuUpnyrpouGCX5CazXj6BtCVVOzrO8KeJ6+vKEu9Fhqx1fdEhPo2AApBhnD+M8AYxg2HM
                NQZhxvi3HMftIxB4NFrQrJoYGiwPlK0tKajOotdaqVRyenZzrXD1IHu/cHp6rreq1etV1OePB6NTnfiQ
                6iX7WNp61OstbIjxDolD7jBmfu87SEMLTDm5TbYWWKshRhreKkXaXRC7x79kX6DvCamQpLK5HXntKk+9
                kx7koAOQNMvRiONvDn3uZGjCvLrSpdnb2b9Dc0YGdo/fp2I/XiVVym0urXTLc0p79ZmVWyT3p+CjzQcK
                v0QvOd5k+IZh4nNzEcd4xiDnYPn9DPEJUxz+b5Jcm5aHCnH8izGN1HbHcZgdasml35TiEgnD7JGdLrHq
                dSMnVQ/J6LIAITZWFo2Wds3N1tb2VlZULa3s7KzoJt7W2tbMiJFpaIQSEElBJ5UpIkp5f9jsZpiwAADR
                p41Xotmo/WbqTyxrL0xan2jIE3ys6lIpNhzUjfXzDdR87FtsGppjGLciRpleWmpGGhpsG1ii0QmEfj/s
                4yNjcT1kF9qqqVj3lgAcft79GO437E9oYD0QuLxVu66qFi6sOcNNl6wVuXl2uqjkrLaKTXSUW58zz3Ms
                tupFuRHsV8Gf0TWdYrzJB9T/ABMLyDXB46eLOYQLSrD3Oymlg4S5rvkuEdcsyTNuplE3FpYXGx73/BxD
                asiY5Kruf2mkpx4pFBH3fZAAGrhxqPRp8LcTKSumo3B0rZtOGrS4sDoyd6uWRd5inNarGmZtt5k9qaKa
                HhgnNEiQ1JySxIfKtZgolQkUYkVSixrZdo8AHIyyz6K5xqMXu19aNGmmMZiY7Kr2ftbiXNuJLtpcUqPf
                mb2CdSuC5DX0Lc+aDp2Lr0LYjpxH/RpONxI3Si2WuhZ+bV1kGqteyHK+ntgarW3M9/l37plmmg1kXihB
                LdvAipq3MdhQAGiZwkPRFrbFc+Yc78Tl8g+Rr2L3Vq8Q/S3j6/v3+C3ro3Vkqb3DNExcWpnTJm1KiJZY
                xYEKjb4qnSTKJI+x5T3Bau9dTpopoKkimVOnSIipkXgRbeReRF8T6+fmPqADlD/50Q4yf9xWAf8Aj3YP
                +ah06tI+OJRh/StplxJNKdrTmOLNPuFscyylY3R3dlRksKxvGo0/psL/AKE4WCXRtvCo1T3KqhKVluSk
                kVxwAAAADUh463o+FzxJdZ2kHUViddpFUzKXM2HtabtRXaWd3bYijze5yaP5ZbadRfLfStmY4864jQhX
                b1nl8k2I0FSpR5if69Lajx5AoZiiAwfFuPWNviUBxzFI3BYRFWcuza45EYa1t0djzA2U1KUum3M7S3WD
                XTQfMpKEJJZ825iewABoy+kR8BjiC8SXXyy6idMEaxU5Y8tNPmOccXNxMMm2ETdikcdkWR3NxIm1xal/
                iKW6QtxGpNQ+dZmXKR9BvNAA1k/RoOF1qv4XmDtS8E1XM0KZpLlPKsQl8TpQqY2M0t67O1w9bTfnf37b
                SIm9SXHZKUKTy1C3qkZkREM9+o7TvhvVdhnIGn/UDAmXJmJ8iNBs0oib9Q/FLokEm4bnCwcLQidY9JWd
                zS3usdkDHWt31he7FtemGtQu6CFor6ADmx6+/Q3dUmPJZIZZw+MhxXUHiu6rXl8x4ryjIW3HecI8RKI7
                GP0pI502jE08M6ZKR7XOr7ipW9RNNUdUSFvC8PFL0bDjcVnE2RGgyY+t94+oHcVcp6eLdqO6NHKo0v68
                tEzm2eaXfvcmTf8Aru47EYANOX0arg0cSHhi5LzDkvUrKMSwvFGascWEekGAY9M3Gfzn2+iD6lwhU6dn
                KOtX4Om1LE1Oc0aKSGiaSSu7olLmmohq7GjzbcU6g8LydDpVj7IkXYptA5qxOsWmUQk7ZYu8ek8cfbJT
                c6sj41uCaje5NzrYVFUatKog0GgyQojI1pOeAAc9PiP+hvTpMxfMi8NPJkXcYU6XF24p06ZyfnFjkcWU
                qpVqkw44yqTe+NcnbDXUTQY2jJSY+8MTDYp9oMhyW75lqwOyr0aDjbxpxU3VtDr27FtdHQv47mDTvIWy
                7t6dypJXZVW3K9aq3c6NiKk7nRdjSRGqghJF2fYOAByOcO+ivcaPK7+3N79psi+EWC/uFUbib5ezPii2
                Z2xJKJSru/YILK55kQ07GRJ7sg9VSiItiMyXvvi8FvgKYB4TMZv53duttm7VzNGxLPN82uzGhqaIszK5
                130Ewyw1DqOUbjClmjvx6cq9WRTyq30q113HHjZ42x7AIAMf3En0N2nEZ0fZS0mOOZcgYKsck0Wg7qa4
                7p2d3d8zFf0XWzZJNH3NdP2mgbs5N9gchiTW7xys+UbEqdOR0ErqFU5z2pL0Rni04hkF/TwzFMR6p4jT
                uLq5anvHGUYpj5/7pL5VI5DEM4PEDQ3Oh0kGa2pifprTJVQ6VJ7djJBn1YgAckbBPorvGSy/KW5mlunq
                M4Ajde/Kg6T7MeWMZrZmy1R2Sb24OPY3lk5yE5HuZ9mTXC10q3MhBPKflGXRN4RvCYwlwkdOS8PY3cLm
                c5Mnl42ynOuaHRspNTrkuZNVl6iz0LdvRUdFxuCQ+m4OTdAIct5eEMqXJ4fK9w8SF9f3i4y2AAAAAMRv
                HSwjlTUfwotYuE8IQN7yVlSdw6HWMRhMdoIunmQ3TflrHUhcLNtQrbepTaWxwctjXT/aCiNRERJPmW45
                4DnGAa8iQN0cdAWfLOwbpjHHC+uKzWxbW9m2vrbUcLs+Z6IuVCCNRHsatiM+qS5x2RAAByWOI5wTOK9l
                jiE68cpY90M5uluPck6zdUU/g8raWxlW0yOITHNc2kkakDetbyXaN7wzuTe50lKT8qmvYyQvfbrTgA18
                /RpNM2edJHC8ieHtSeLZRhzJtrmbLr9dQqZ0LG0eLVnfnxvU13xIb11UlTc0o3pGqqo+UiL5OxJPDL6W
                Xw5NcmtnUPpMlGlLTZkXOcdhGGZjHpQ6wiysLq1ZHpwnXedhYuPr7lQMlqbt6pHtsrmNe5IMkJ3pgAc8
                H0XzhecQLR9xKH7LOpzSrlPCuOa2mPKEPt5hL7Fvtmm6krrLca3zayc7e61Fd4Vm5rc1UyOmaU93r5SI
                0mOh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8V/Z076zubRf62vROio/gZbke31/o8B7
                QAW5VqdS3rVbep81Vo1/V6/T7fP6vv1/AnSaN3qziV5Tp/NXZe/od4W2x/m+sxJYAAAAAAAAAAAAAAAA
                AAqhBbznsbmwqH8u0rnWo+87VRpJJ+PiRkZdC/qhS8RdidO63WlcbfNfteue3hZ+JH19x+/3b9DAV5Af
                lKiUndPQvLp+XYfoAFNp9bmVOxvOnidvV28TI+v5DMy+rz22FSRAn5v9farq3ppJdb9moF4/jKd+U9vr
                Pp8TAUMAAAAAAOQKAZ1t/kRy8Pbsv1Yt6/8A/LT67GRePiXv94r+KWZha+8IbdXCKfzrPf2bh9P+tv0e
                Dj9/A6H9pfQsfiLsR45yOXveNJjVYtfvX03UI1CYpteZmYyFrRzieW8pv2d56NO4z0fGnlPdi0+OpTFp
                meV42mPCZ+62Wzqfp+/1+X33mizqfp+/1+X33kO2qff7fv5+JCY7a48Py/f6/wAvl/U+KWg5/pO8xPP1
                m0X6eW/Vt9nstMxE+M357zPO3LefH8OifLO4+/07fR9/cJos7jcuvh8S6ddvo+/uFPra4+/38PD3+Rdf
                fHra4+/38fH3+Zdfdc+g61GDteLcvpta3rt577XRLP5XpH4ff4/nHqqNbXn3/n6fDr169PMR6jefl+59
                Ph+Xx8ulOba8+/8AP0+HXr16eYjNG8+z7/V4+PQtuvhuLg0biT7La+02vefTl6bet43RLN5DnPhv587f
                j+fhLHZrPzp3fk6wg9veH2UVY7O4vqPb/wCvEi/VL4f61E3beQs3uc0fI/bu/wBX5/HoQta14ZQuGvV1
                mRvuLir21m6xu3Pt/wC0/YON93fX/J0LYWjVsw1OT9uefu+/u/QQ9NeAMtg4PBPDlWX66Rpcz5/E7VTM
                7bzF9uUtf9a/zTOx6xv03pZJ7/JHeFYq/rHj1394lJymnaIq71/zdfd7/sL9ItLY54dwz2Ff1jft6H0f
                fz9wXkw6/snu/m6e/oKs1rU5jVc9E32vG95mOUX8b7befVm8plbZfKTvt19Ip8uXL+l7qvv0s7Ttd6n1
                eZe/z/N1FDJJJO07X5z6tv59/v8ADYpXdZZ2n9c6b/m6Gfw8PP4ilTxJO03+c9/l4/m33+/kItm8/wDv
                63/c/TeWQwsK3lb9fHxn8PwfSQvvadr854/ffyL6T8N/tFDX507Ttfq+r+ctvDyM+g972+dp2vzh/c/i
                e/38PIUleHTtO1/m/N+nr9OwwOaxescvLf7vH8r2l38LCt9N99/3P5eqAvd5+y+X177l5efT6fIUvdbj
                rV+P6Pt8Pq+g/AR51cPs3P4ff6fISHf3PX7+76P0/b54HFxfw8d+fWbdf3d38Pr9P1Qa8qfp6/lPcvyl
                9XQbyPoyUEUwaJsoTi4oFTuJ/qIkhWVY6XKdwxRKDQhtb1Ht7na7kWx/AyIyUZjRfuan3+z7+fiY6YHC
                XwhWwBw79LcDvrP1V4v8cWmR5JRuEn66l8yrf3+SL2yvv6k3BmTJbRmqK8S7r5SP5JmLH7IsrGPxDm89
                bbIaVaNptM1TEc7dYmb263mUb4oxowsnTlpm96om+3Se9PrF7f7sk4AA2ZibxE+MXV+AAD6Ah1FwpV6v
                ZFt1L+ffr9W/u+I8cgcybG6pU8KtU+xol/3Si23P6vz7eIk+vUu7CwbHfoZVqx7kZFtsZH3cRlv13Lfx
                8j+ICpo8lzcU7dHadN9/5vA+n33H5tLxF5bW13T/AGKtQ7cj+BkXh9G5/UJNu3A3N9ptdvUI6VEzoV9i
                26bn3gXXxPlIi389twE8W9dFxSKpT8D8i/R9P394+4kZicKlu6XTRc9KnjQ+gvf9Be78m+wnkAAAABD6
                1/Tt63Z1PyfkP7+Y+9xc07ejVuKn7HRonXM/PYiP7/WKeUatw52jm6HsXY77dfgXh+c/EgFTB+FrKmlS
                19CTuf1eX2/foIDHHSm6WOxK3q2h+r19ttuYi6H5+RfDw6iGSh09U9WsKZfO3hnWP6CMyP6Ou57efQBN
                FrdouOfY9tj8/s/J0L79fYKeVLiowOliVxV+arUNq5/Evp+j7fEhUMAAAAB47u7p2yDNR7n+j+f7/D2C
                Qa15Uen2q30KhFSsupmXw8T+np9yLYBO1Coi4pU6qP1vQy+G3iX1+/4j0CRo46H65dM9cuzq0d/t+HiX
                gXmXTfyEde3Om12FW42LtT3oUS8+Y/0Fsf5D67APYi/pLuTtyWRn5eX1dfr/AJdxEBS1Z3lBqtnbfrVr
                EZlufge+x7e4+Uy/k8qit93Tv7O2vKfhWpEov0/lL8oD2gAAAo6ieuXtEbJ6pV9c9c7A7Psti5NtzVzb
                7bbdebcunXfzOsQAAAAAPJRr9qurT925l+bx93T+ToPWJVZbgq99dU/9p/Jv/Ofw8/EBNQAAAIV3h2tb
                s6FPtSLfx+gvPyEPkzj6g27/ANcr1k0En8T3/lL4dR9I9QJDbSr/ANcu/wAYP6/D4e8+vv8AcAi3Jce9
                H3+oeWre1LQi7dHQ/DY+n1eJfX9O/wAIqPPcW9O4o1aFXY6dUtjL4n9fXqRH9oD+0qqK6OdH7Ge5F5b7
                dd/gXn0/KPuIY3WBWFE6fb1KvPse6vI+vh49dj8enT6NyiYAMdvE54feLuJvo6yPpYybcqYK78VtJsZ5
                CtbFF7e4vyvHTvacNnli3LSROFhQJwc2aStRVbeo/QOQyyO0nxjW8pe7fIkJAnzpUsGqlb06iadVxuPV
                z2L+xuvNv9Rl8epkA5+OkXiTcSb0dRuqaNuINgt6zJpajj47WOGJ80OV7Ss480nfOToqnhnKbg1KiM4i
                TzVM3lONZicfnkEJyIjpx6mpUZGVWh6ZDww1NFF0rxLV7QcityKtGvwS4yurz1vbpy3/AOFkmnl6dDJ8
                NP2DazpQ6PPkSvY/KmNok7NIrFKHxkkTW3PDS5WikkZ2Tg2uFOq1uTfT5tySumaFEaTMj3IytWu+GLw1
                7969p3Hh66H7+ResWrguQXmk7A90/neWZpXZXxuC8fE6E4JUimaVks1o7MkIURp5VBpW6u+MDxB+PqzP
                ehvhmYEkGOcI5Eq2MdzTPHa+RdSBxgl84WJuNllXIjZT9k8HwQ1KIpGytKpA+T2PI9nKchejf6kDkG4V
                wqNC0Q4c+k+I6Zoq70Za9ttxdy/Kc/o2BNZz3KsiMvaGRE1+Dc1021ua4jHi6f6H4u09ebbe/Zkx3CYh
                FLOCwiJRuFRZtocrJH4gwtkcYGflI+rc2tbYhqbvPYkUD38CT16wfHtSou9c6dXrVo0UePxWRbeX3+oB
                VgAAB5Lq49XR2nlsR7bD6UanaUadT3luf5S/JuW/1iXJTcnaN1Or77xP51bff84jDVV7Vusln/XKBH1+
                s/Dr5eQCJAAAA8d3eUrQt1mXOZdC8On0/o3HsFPGqul7ebldTapRoEVYi93kRfRvsW3luRAJzo1bi4SS
                zplSpmXgZ9fjt+f82xj6K9ap7qIyq7eRdPp6D2AAginimVMyL9l93822/wBnu8ffGUfrS+v85iQpXtZ1
                ba7plt60fLX9+xEWxl7umwne2/YLf/gU/wDupAegAAB41V9rgqfuL7/f+Qh7BK1zcbP1K3+Noe/1mf36
                mJpAAAAHitLr1ntPD5Jltt5b+X5h7RI0SvPWV3//AOqePXboZbH9R/QJ5AfOpUJCKi/EqZHv9REf6R8L
                W49YR2nlsZ7bD5uS+zb76r/tdndn9lNXl/5ogcTufW7O5qHt1uOv2Gf0fzgJrAAAQN+vK7ez395aUqlW
                5oUDrpo0uqjVt123L4H9O3uEmwmYXcnvLmmVMl2lnQIq1fYv23v4EX5CL6y8CMqnAAAAAA8lGv2q6tP3
                bmX5vH3dP5Og9YlVluCr311T/wBp/Jv/ADn8PPxATUAAADx0roql1WtyL9iLr9I9gkZou+1kbhb/AO0+
                u+X/AH/7/P8AQAnkAAAAAAAAAAAAAAAAAAAAAAAGhv6XHoS1oautRekSR6YdMWbc+MUPwzOGWUu+K8fv
                sssmJ1v52hybm9xvGttrob7+q2pKulFQzPl5S2NW/NvkAA0bvRDND2r/AEg5G1xuWqDTXmXAljN4Zgtv
                iF5lWEP0Lt5Jex5+yXUf7JkW6ISl0UzpdGxSuy68rglW5Eo0lvIgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIE+tZOjdVtNiKr0r0D32/Gkbmk/o6n9R7+QoesuzP5z6PE+guN
                FI5k0HZ3JuFvT/Frzfty8yu9z2M/DxIj6dOu/UBJYAAAAAAAAAAAAAAAAAAAKpQ179ctu67ioXrVp1ob
                +NzaeR9fcfmflsQn4W721xcWdalcW9TsqtL9g6fyfZvt7jFbWR4oO9nTuKRFTq7fP2+/W3MiV08Nvd9Z
                7H7wEbAAAUPkzYbY61eSmXq158/R2PzLxL6j+5GJfFbpG098N1SlT5TuqRnXs1e5ZEWxH9Jb+/yLxMUR
                AAAA9QHjv7O3cbC6b7in+K3lC9t6+3/hH8n5N/yj2AOtn8jl9SyeJkc1b4fi4VeFVeN7YlM0zeLf/rl1
                35Xc+Xx5y+ZozWXvenuzfreJiqJ2vEco9LMfzhZ3DQ6X7VefNXTdfXlvX93Tbz8/Dy29+w9NtcEZbe4i
                +zy/Lv8AXv091YM5RKpb3NrMLOn81WLu906bfjm36n33j/8AQc/p2FB6Nx4dPf5fX7/v7/IeAHa7wPn+
                yftL4m4SzMTTkcniVYujzyjVNMrq72nWmY6X5xMXzkN4eFdXy/E/DuR1PL2m1EUVxM//ACcWi0x4eU35
                wne2uPv99vzeG/T3xmjeff8AP0/MX1/ESRRuPv8AR9/f095+BRSjcff7/l6ePkXiMXpWtTbaZi0Re83t
                a2028PTwizsZrLTtM/f59Zi/6z4ecJ8o3n5PufT4/k8fPr76N759p7v5Ov5d9vqEkIvD+v3fz+f0b/ze
                9F55/Z1+rx/kMTzIcS2tF+Xd6+k/pHX06MNi6fHWL87xzv5eH06eTWi420Dc8b51iWbG+3q+y2YI5Zs7
                rfedtPIZYd2+oOPns9RX2d9nvP8AUx3P6cI9bKHzf7Y/l+v4+747jd61k6a4vrA0/wA3wlILik137lQ7
                4g8j9XO79kp63f8AU8/H5bdXBnkG/iwujuR9eo56OYGfIGC8kTLEeUGe6i88gb5eM8jar4uttef2+3H/
                AK5tb0X6sR54/wBf2By+31J9mHtPyPGfBkcM5jPR8f0DaOV50uLTptr2mqY/wMxETabTs1z7ROHcfSdT
                +IRH9gz/ADtHLlM3m02mPWL8t2VTEuSKb5D6X4x2tVtr3jdX/wAZH4n/AOEdvP7BPlzKP906/p++31F4
                +/EHgrNlOPzAmhwvOya5V6m39v25/izx/rdv/ibz6uYv1rSTx+c9333/AE/UO3x3kMfSOIM3M3tqMXi0
                TaLzFpj/AI32nq6ui4vvWSiJ6dJjwt93TlP9VW3CSdP2T7/R5/p+sSO5SDtP659Z7ef17b/yiQ7yQf7p
                +jp5e76unj7vApSv3z/dC+/29PP6PcK+xs10nn5/vp91+cMz9l5U/v6JjdXjtNvnC6fb7+peZ+8U5cnT
                /dN/d8fL6uv5th5b907T+uff7n4fX4bGJNvHDy+j7fPp99tth0MXG529I/2/Wfu6O19n5/h/u+t/e+X2
                7n9vTf7+O/mJSubj7/fw8Pf5H19/1urjwP7+7fw+rw+rzEGrVPv9Pn9Z+H6B0cTFnlEdYjbfeenr67Ry
                5uReVw99Mt/rC1iYNwRTsrm6jkjmFm75FrUT27uxzHj9o8hXpORkZthri7e4MsdLYzOQOjQREZ7DqL29
                rSt6FO3oIp0KFGkmjQpUqfKVGiktiSki3JO2xdCTt4H1PffWU9HC0LXOI8PyfWTkBoK1mueG8oxi23vq
                PLes2H7FzTf378SkmpSfwmSlusHgkKQnt2SNMT8ipyvlZJbO6S2My32PYyL+X9P2jZ3su0GdI0GnPY9N
                s7qPzVTMWmaae73abdN948r7+FccR5/3zOxgXmIyPyxF7xM3iJm9t7bRF7232fQvAt/cAALNR4ABL0ke
                rePsri73Gxeq0VHSSZEfb3Rl+JoIy8eapyke+2xb9NiIgFPZBdrkMvsmG3qb0rQ1UbkyI99v9cP/AEUE
                lO/wLp12FS3RspuLXct/LTpFUoGijuRbUD2LYy28OU9+pdPp2IUkxFYVrii5yi7M6tW8uOxoVqxkRqNO
                3eF5uo+hrPYviRKSe25iuYChEdmJNDY+WN4RU7tsI61lRPp+NdG4rEuh7mS0JMj3IiI1HvvsJpx5Z1Kl
                pdPdwVTtbysdChv4FaJMtunn47/SXvPYqc5DjF4mYWNNvQfZSm4MqBl0K3vNt3HbqZnt/pso/DmJRbeQ
                uGsLGg2WNrYW/SlaUSoUd9t+VJe7w338fIBTHIKLlovmuQ2hb71/V6/Xfe82Lu7cvIt+Yuvu3Lx2FTWy
                /oOdhauFv+w3dEq6D+B7Ee/2fkELkrQl7ZXBsM0lUq0F9ge5Fy3SetkozPp0UREf2imGIpBVuKF/GLwj
                pXTbX9YoUau3N6ooyS4GRbbGROhmpRme/wCqRGRHsRAK5AA/ClEhPMvbp7v0b+G4CmeRnz1G0tmi3Pe6
                cTOrWo7dTtEmZLP/ANIttv8Audz3E4sTYbYz2lgvbtSol25me+9yZEZnuXiW5fXykfnsKJsF0mdZHunU
                zKo1M6irUDPw5rFRJbC3P/ZKUTuXv3IiFxQCidg4lEZjdNl2sqVjebmVY9jJNrsZN5dN9jSZqSZl1LqW
                3mPrGrmpK5Zcu66Zeo2e1dO5+7/S/p13Mkkati8SI/iP5l9oKo12r9QQR1m2sdC88zOyvjJK/Hp8lRl1
                /wC6IunUTZj5lNnjlmVdBJvnEivr7/hFbGRdfcRp/wDS69CAfWcN53bHUuaaEncN/NcmZbb+q/J9fIi+
                NPcz8f1u5eI/sGe6b2y0/lb3LcfqNz/vk7cv2kktuvTb4mJzUklp5V7dfd+jfx2FvEevFwnIdzHK9UqT
                S81yoW51jIy2Mv1MUXl06NCTPpuRH1PqQXFAAAJYlTzTZGW6v+0LtSIqFmXmd2rmJJb+/wCSZme3lt4G
                IDjyzqIa6jnXIjqONYzofC0Iy5ft6n/5vvMU9yE5XD9LGaGWFX9hrl257EX444b7n8nofc7Ya17+Jmoy
                Pw6V5s7WhZW9vaW6OztrSiVCj8CIiT0+w9z95gKVTipVj742P1AiVQuKv4wnx3ubEj23Lx2NJmXh47+4
                eZ8d6UpkbYztdTtbX8SPty9zgROLht06fqSRHt123MtxUCZMff8AH7+wp097o6J17I/Dluy3NO/27H4d
                TLY/EhTTDzRUqUr1/uKZeJWFlue2xEZ94HtuXU18pF5H193QKx3bXb3DbVbU7UqJ0DoUjIi+ZLYiSZfR
                sX1Cm+PnipTvHON3hFSuqNcrihRPz/7Ifl6kXv326nuKuC3rIp1YtMGeVWZpOleVU+sJ3Lrc2G/eBmXU
                yJTUlRFv5kfuMyC4UB4bO6t7y2t7y2qFWtrqiVejW8CO2UlKk/V1Ivf5+Q9wAAAAAAAApvE6/aPbnT91
                G7+BEZX+33PqKkCjMBuO0k79T/3G7/I4ffrsArMAAAp3kenU7hpV0H+1L60VV2807l8PeZdfLfw6iV4+
                yvj410ruzkZ0qWx0CoFXvj9X5SIjIupHv5l0IvPfoKvX9lbuNpc2F2jtLW7onQrFv4pPyPx8eh7+G5Fv
                4i3NN/IsVO9ShcUFX7BeV9yuEmZWtzv9GyW5z8zSZKQrYjMjLYwFSvY+Uf3Sf/vr7+UeetFZBb0atxcS
                c6VOlROtXrlXvfIjM1H135eh+W/h0PwCjmOI1KJVFm50qn+0HYqNX1HuXQ/q+AkJ6nzxOKvcEXbLuna1
                ulct/wAauC/8If8AYxsPf5Sj3Mz3Lci2IBOWOr9wcb6+uLi9ubq1s7NNuR163NsaVc3h5bbb+W3j5CsY
                lSJRynGGilZc/a3dU+3vq+/W4uzLqZb+XkW3U9t9xNYAKOZbQtFi03hF81QuLq1r/Q4oSovLyOxPb4Hs
                YrGIK/NFs/NV213ZbUbuiae12Izon0PmLfbr4/DbffwIB8o64UHRja7+hUTVpV7K16+frBITz7+4+c/f
                4bGI+LX7J5k2MHCpYuVpWv2atX6dDTbXG5EZ3tjfrTuR7frkLSRke26ebwqJTzPD6lHtKhulKp526rEz
                V5F4mf3+ICqVa4p21GpXuFlTo0aPbVq3gREkuvl7iM/rIhRjF95649v1fyrUDr7/AE3x7/fbyIQW+lj/
                AJIuTYI1Y1rFsUZevX1wZ7eqHsRJvU7mZEZl0QRmozPzPx/WHfm36T2fadp6nRO38f8Av4/f9fQy+sBc
                SAAAp1kqv6uxWlX3Otv9W9k4n+j7+Ij0Qu03sda66Vb/AIv2RntvupJ9PrItvh+cSVmW49Xi9hU2/wBf
                bT6f2i5H9/uYkeJzO8hFG2s3+zuarO8UCeLG/okSv2+olbGW5H5F036eJeRgLlAEoRyXMcqK7NqqVT9T
                q/PUrih6sv8AXFtdlzFuaT9/MR+8txN4AKLwa/RaSN0ZqyyRVM7q2okrwO5b1pKp4+6nzH8T6F1FaBRH
                IURcyuylUaOp69Q+evKFA/xz5Jft1v69FpIvlJ367b+G+wVuAUGYsy2HY07eR2l1TuaW9Cte2dBR2twr
                3psubmQRl08FbF+t2IzIe51zMx21DZns7u/udtqHb0VWlr1367me/wBHh9OxgPdkx1RQJsb+0+c39Yrb
                eSU9CP6T2M/LxL4kKnt/7Qsf/E7P/wDtIFqUms36nYW0mkVSrSunu+JNCwrFtdFZ7EZF4crYex+BeBGX
                TYxdS1f6VtP/AIjZ/wDwiQESAAAU3vLgymttb/7vaH9tgZn9n5z3FSBR5xuN8lWlv5HXs/8A4Dx/P9nw
                FYQAAABRPG7rTW439nUXvVr2aa1EveViskHv8C5ty95fSK2CzuK275eVL93j/wA7fMR2dwduZbetdOpb
                bdenXb+cVgbMxMNWkdJ8oXTXe0SLtyKgdxake/iS0mRl/wCif++67AKjyGqigwvS6h7ETXf+J/8AeayP
                w+gvrEq40q9uzX9T3up/kb20z/MKbS/I1OT06cdjNq4VvXKu1et2O1zcbdTsW4t9uY/6pR+RERER829Z
                YcxrYY/YWFci9ZIjr3qt/G6WZcxl8Pkp+sviAmsAAAAAAAAAAU3idftHtzp+6jd/AiMr/b7n1EzP0kb4
                5Rtqzh6x2d3XK3o9hR5zJRkWxGXTb4eZkfh0FHozLG9oeHS8vPWfVbyhvb9jb77b3xl5GXvPf4faAuDA
                S8xSBvkdtWuG/tTpUa/YH21HbqRFsW3hsf09PefXaYQAUTY7+nTyC4W66m/bXzvQL3bke5fo336CtgtJ
                uu97iayNbNTqVr5odXh2o0KW2x93uBEST36HzGZFsfiZkkBdsAo03ZkjlzSt+8Kd9Y31aqVvWoFRO5t7
                bbcyvDWnqVPy6Fvt5H4nWJFRFRHOgyWk/Ay8/t2AfsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHivrKg4WlW0uE/NVi2MuhdfEj6fYPaAC3tx
                sK7Zd1LSuZHUpkRpPx3Iy6GR/HcvAx4xWSSsiXey56aC9eoFvQPdO5ltudn47bKM/HYuu579dio8unVp
                r7Op81V+jbz8unu/N4APwAAAAAAAAAAAAAAAAAiLW512i7p3dDw/sigW/wCMke/1/Hx+w/GHAAr9YOFu
                521O7tF9rSrbbH03ont16beJfc/IRIUFZ3m4Z7ntKfztKt+z0P7ZP4ffbyFZ7BwtHC3p3FnUOrSqkXgZ
                fMHttsZbdNj+J7+JAImKWzJkKnV74t6ZdlV6XxF/U7f2cfj1Ivh9GxCqQ89alSr0alOpTKrTqltVpH13
                Lp02Iy69CP4+IC3cBMEgZFtN3yeFrX6UKx+XvIy323L84l8AAADnt+9z12jrPg8bk12jxYXTW4U+1tby
                j6vXoH57fl+P8u4sPlsbcIW+XTPefO0v2xY33/ZKz8zPp9P1/AX+CS5zC2+cM1VvvPmrqj+MNV9/a157
                vD779Rqb7VHs+UdsfC1epaFTFPHfDtM1aVO397U00xVOl1T4W/wF/wD3m9rLR7NOOp4T1SnK5+/wPUZi
                Ip3m0zNP94xHKPDx2vym6x6jcff7/l6eHkfiPfRuP0fT8fv1+vy8D2zucXcqrQ8WdW1uqPXw29Z8fx9u
                38Nvj8eg8FO43/R99/p8/qHibmZ1fh7UM7o2s5OvTNR0yZp1fSKomKu9TMU3m8RN7xM7c/JuBgUZfP5e
                nNZWqKtPqiKoqib3iYptbpvf8o2ttNqLw/r938/n9G/83vReef2dfq8f5DEpIuPy/Yf5f0l5D6ouPP7/
                AEeH5y+O4yuV16LbbRMRb0+Xr6X8J5OviZDlPS88tvyvb8fqm31w/cf2n/KMNXFn4YDFrtg9LIeNDa4v
                qggbHeW8VdaxWNm05HZ/9MSgk0cT8epGcdeD27hfnM/aT/Q2+czDltRcfk+0vy/pPyBdx+X7frL+chNe
                Cu1HiDgTiLJcS8OZz3HN5CaZromZjDxKYmJ7tUTzpqjrH9JjCapw5k9YyWbyGeykRk7TFMzF5va14m94
                3m8dPDfeeVLOWOc47lsigc8j7zEplD3S8j8jjj5Ym0uzI8Nx7ONg4N3u3Lb3C/rAmcPbyPdyPlxvLWGh
                6vcdvX6vdn1/Hz+rpIfLz38Btt8UDhOYu18MF1PIpUZsa6mWJq9XjmRio3/dU0tG6w/U6J5Dbmz/AEzb
                C22YJee78wl02fo4RMJaLGVcTZs0n5cv4BlCJPWOclRC+9Y9RdaH7Zs9/wBTr9ucd+6JNGHrzd2bZhfy
                MleBkZ+vHZv2vcE+0lwfTg5PUI0/j3TaaasTSK5inE79MURVVp17fEdNqrmLTEzaaopqtNr6xa7wtqnA
                Wp/b4sTqGmzN6bRPdtMxNotytHpyvvF7ZP6zx/un5fo2Pff9PvIQG5dOp/OdfL7/AB/T8BRHHuVG/IDX
                2lPs7V5s6H6qtXb/ALW/7/bv/Be5l9Qnetefff3/AB/T5+B77CF6rk87pmdzmQz8TGd5RHdmI6W+u17X
                /Jk8pjYGYy/vGXi87TMeF45Wj1Rm5cPAiqfD7/l/L18hBq1x9/v+Tp4eReI8C7jy+0vt+P6fq8x5uc/c
                X5f5Rhvto6zFus2n6y5H0XU+33e76fv9gyo8JfhyyXiB6hbJsfLS/atP2MazRIM0Sugk7Yq9p/rbjaP3
                5GRnJpn3d3QZcyTYI+TxISURsjAwP1v2hbQjnPXzl6xxjiFnq0mZsr2Thk3IzrQ/0KY4jblf7FfSFxPY
                nN2UZuBR2Hs36vyAzJJf6HGN+f2Ho9aUdJ2I9GeFIngfDDPUa4tH0LuXR0vC9ckU3kzikjkEtl7qaELc
                nd4rUzUo1n6szWqWuNR62aIyzMbHbWX2f8E5jiDP05/PxNOiafMTEWqvqdW0xExaOVomZjp1vMo5r+sR
                kMD3fAt77VEXmL7RO15nx8N5na/NcGwsDLE2RljkebLFjjscbG9oY2dst6dk2s7U2WdNubm+xsUctKws
                Wxup0qSaaCppShKUpJJESDmQAG0VNMU0000xammIiI5WiItEK6mZmZmec7z6zzAAB/QDwXVnZ3lL1e8t
                7a5pedGvRK5IvfuStz/J9Y94APHbW9vaUUW1pQpW1GkW1KjQo+rW5bl0IkJTsRe/bqZ+Rj2AADzKo0lr
                p1F06a6tI1HRqnSIzo7l5GZmZfUZfUXUekAABCqTU10Lipd27fZUbyr+zXlC0tE3J7eBqqkjm6lvvvzb
                n1NJn1EVAAHzqU0VEci0FUQZdSPbbp4eZfkH0ABDrJtb28qhWNjZ2fanvW9Ut6dqSj8dzKmkt/h4e/yE
                RAAHmrW9K5pVKNenTq0apfO0a1MlJUR+O5b7H4fE9+u49IAACE3LW13danXu2+wuruiW9Kvc2drcXKdi
                2M0qUg1Ft5cuxF5bCLAAAAAIUTU1oujvUN1jScDLb10rS0K7+J9qSSXv8dxFQAAHmoUKVujs6FOnSpJI
                /mqREXX/AOp/QPSAAIfeN9k4Uuxv7S2vaRH2vY3lui5SR+5JVOYuh9CLlP6D6CIAA8tK3oWtKnQt6dOj
                RpF81RpUiJKS69CItyL6S5evmPUAAAAAAAAACgGL7jtJfI6f+43f+MC+j7+Wwr+KSQ2COcYf3h3vL2xu
                ablRuio0bf1zdBrcDcCMyXuXiex7EozPoRH4AKtgAAA8d1bW95RqW13QpXNvWLarQr0SuaCi9xpUnY9j
                LfqXQ+pERj2AAkxWPoXUWS/ZtqP/APQbb+Pj/J/KJgsGtvarc7dssLWyo+VGzt0Wif8A6nlIRMAAAAAA
                AAeO6tLa8o1Le8oUrm3rF87b16JXNBRe40KTse/j1LbxMiIz6yv+D6Gdrz+zbX4ePq/n9u35dvIToADw
                WVlZN9AraxtLWzt07mVGzt0WtuW//c00kn6yLr4GPzatlhZVatxaWNnbVq+3b1aFBFudUy8ObkLf3dT3
                3ERAAAAAQ+8sLJwolSv7S2uqW/aHRu6CblKTL3Ercty8C2I/cW+w814ytd9ZosLxvsrmypEXY2dagk7a
                jylsWxbGRGReWxHufgIyACAtcbY2Q6tRpbLSwqViPtq1CiRV1fSexqM/eXn7jEeAAAAABLjlE4671juH
                Jlb7utt0rroEdf6OYiI/Dp4mZ+ZEPm2RCMNFYrluZLC1udt+3TQT6wfl1VsZ/ZsJnABD7xtsb+nTp3tp
                a3tOmfQrugm62PbxIlkfU/Pffx8B7KdNFNBIQREjr09+/iPoAAAAAlyrdxvvajbXFwz9+mnehRrHYm6l
                08E9TqF4dCItvIuvjMYt0csWyK7mNy6Uru1otV0997leJrfjltyuHeGyU9PMiItunh12FxYAAAAhdi1t
                7f2irGxsbI6u3bHZ2SLM1beeySL83x2M9hDHWJRt7qncujLY3dwRFtXVRL1ki8C67b9feZn7xM4AIA1x
                tjZTqKamqxsF1S61qFFJVzM/eo0mrpv4Erbp1IyEfAAAAAAAAAAAAHhurOzu0kV3a21z2R9Cr0E3W3Tp
                sSk7/E+n07eIoRjqnZ3crkdpcULW4o0aN32NGvQTd7F3iW/VRGn3+Pj5deouFFvr/jqUWkjunuJOFGj6
                5cXVxsqt6rc2y3FRHfkStjT3eSiIySXyyVsZEfQzCulrZ2lnT5LS2trWn4ctGgVsXX6CIe4U5gjRK2um
                51JW4Hf3N1WtToF64d12CUkaeXcyIkkSjIy95EWxbb7VGABDKTY32t1WvaFhZUrquW9evSoIK4rbe8yI
                j93mrcRMAEp3cLirhdqvL1hba10st6tdVuW9bdPXw2IyI/r8tzEx06VOkinTpop06VIi7GlS6EREXkWx
                FsXXwLzMzMzHpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAASBK40d32jnYU97oi+fo7ftki2It/0+/wAfon8AFt4CpElinado4NlP53Yu
                2syPor4ltv8ApLbw6dRTcAAAAAAAAAAAAAAAAAARdod7touTuKH7D/X6H9s+Zbe76upbeRiEAArw1O9m
                72xXFpUI9iIq1EzIlUD2PcjLYuvTfxP6BGBb5YuF22XB3FosqdQyMjIyIyMvPp13IyM/h18xV1ikdm8J
                7PpSviL5+3MvAy8y+G3TqXj59QEUcW+3c7WpZ3KOalVIvAi3onsXUupdeh/af0iiTo2V2i7qWlfw/seu
                e/4yR7fX8PD7D8a/iEOrXbO1sdCuXU9zo1iIt6BmRdS67Hvtt8fq6hQYBEnFru2u59XvKf8AwFf+2Ov1
                b+J9NvhuIaAAAB4W53iY9Y5ct+fhueF97Rbfw8PTyShMIWxzRt9TeLf52jv6jfUNvW23r9+n1kLMJpj+
                SQa4P1u39aatt6D3QL8UuCLqfeBEX6mGZ/yl7hf8Pjc21vd0atvcW9K6ta34vXoV6Prdnc7ff+Uar9v3
                so8FdteXnVcOmnh7jqYm2raTEU01WtMRqto/vCKptG0TnYiZne0LL4E7S9b4Nq+wqqq1HQr76TVN5taI
                n4bfx5+DGZTuiP3kfUupGXht08Ovv8PjuPWm4Pbpt9fh8evX6PIXVS7AbE6LrXkWvO4bn+0a/wCNtP2+
                LYe5i3eQYynEXXW9fY7q7tKP9mtWzrZ+/wAdvv4n1HkT2nezR209lWZzsalw1ianoV57ur6PFWq6ZVTt
                MVWpiZ06bReYz0ZOefOW0/DnaFwjxRTE5POxpuem0TpOrTFO822jfp0mPGZ6pd9Y+CvtD1j4K+0Qb1g/
                j+X/AOuD1g/j+X/64a/Ymp4mDM04+Hi4MxtV9rTVTa3O8TbaPX0lPacvTXa00VcrzTVTVHrtE7Iyu4+j
                p18enw69P0/y2f6wdF+n/W1jurA82xeld3Vod5Xh8/Y02NnkCBXjgZl69HZEexkR7bv7O8m+sMgM95DH
                zMtyui9Z+P3/APRHyXcdfv5fV+guo7eg8ea/wvq+S1/h3WqtM1HTaqatI1XSKrbxabVx4Te00zeJ3iYm
                Jlw53RcjqeB7jqGSo1DJWm8zTO14iN943jffa02tNufPv1x8NPUfw7ZTSmK7g5th+8dCsIrmmLWJk0n/
                ANjmGZthkRxh0IjLcjLuJ+/63JC+7GKQY6yw1zRFJvvOya5HRoH29h/Ylyfvbv0/YOiDNoXFMlxSRY7n
                EesJbEps1XsfkcddaHrdo9NDifdrhYdT8/Iy6ke3vGpkx+jaa+JnrAnMQw/jz2O05xOf2bhEM65fe7GL
                MFeIOdg2yNtsG5rpkqYTh1Zmtx9kJA7skD7g7+bXYvePYL2au3HF9pbQdW4d400zEwuOuDtKp1KNa03C
                qoo1nTZtTE96qimn4lNVoqo3mZm+Ri14jVXtE4Oo4Cz+Tz2k6hTOh6hPzaR3ovTO0zbe8Wje/LnEzExM
                McYzG8OHg0ahtdboyzmTNzvhfTWq9tLhzynIWddu7zdnJO/d+K464pMpIajI0omCuWBMazKmj2gqMpR4
                9lnRH6PfpR02XjTOc5XR6o8mWJWtehZyqP2bZiBlvCKl8pvxxzPCpGqmpS0qv5q9vrPWLlXQjrEaVUxn
                /tbS1sLelaWlGjb2ltSKhQtaFIra2oW5bFypSSSLYkkZfJ2IjIz2IzUY2V4W7KMX5c1xFVte9OlTvaNp
                pmqrrMxMXtN735TsrXUOKZmPd8hFotaap+l4i952jaJnbrvHO3bTJpcwno/xWzYbwNCbKHxBnSq5v7tJ
                etSSWPddJFfyqYPiqSXOSyZ2IzNbpXUpNGlSoMTIhoj7Qys9vcynwNR+Bnv/AC/fxBSi8Nt/f9X8/wB/
                If0jJW5GXu8/+j3C88rl8DJ4NOXy9NNNFHKIi0cotyi0WiI6/jzheLXVi7zeZnnMzvbbxt4bbP0AAO0+
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkWRxSm4HV
                vG/ale7fPUi/W3Be49/Az8SPwP8AIJ6ABblWp1LddWncU6tKrR/Z7fqX1bfmH4Fb3lhs3mn84XY3JF8z
                eUf1yT8t+p9Pdvv57GfgKTOjI4NFXs69M+y6dhWoftW43LfYyMt0mW/UjIj6kAhIAAAAAAAAAAAAAAAA
                D9oq1Ka+0p1KtKrQ37CvQ+3r+ff7n+AAVKY5ihfZ2jsfZVTIuyuz322Iv7O3URIV8fA+m5EfyhUYW3iZ
                WWT3bP8AN1CO6sP9pLxtvPx+z7PrAVUdWqzd7bsLhBH0M6NYi60FbF1I9y2P3EZbHvsQo47tF40ViRcf
                O0ti7Cse3qtzv12Mt/Hruf8AIKztzpZudv6zZ1SqU/Cp1IjonsZ7H0LyIzL9A+95Z29/QqW9wgqlKqWx
                +7w/m+vf3l0C3sBN7/GLhrP1i0L1mwLpt/ZVt9Bn4l8SLf6PASgAAAAcuQIk1s9473HZ0KexEXz9f+1v
                Lz3+jYTCyxG7v+yuHA6lrbEW+xntd3JeO6j/AKkvjt9G4qhaWdvZUadvaUKdKjTLYiT067bfJPx3P3n0
                +A/muijEpmjEoprpq5010xVTPrTVExP1h9iqqme9FUxVHKYmYn743U9uMXQFyt+yeY0yO9RZH2105tdp
                c3a9+myrtVHmLY/9if07dBI97piw1dLKqUWqW9TbY1WTw9Wxl1L/AGLkkvD4beJfRX8iWW/MpR9fBRl9
                XT3fUX0D9b7lsfXbbzIi+jbp5fYK717so7M+J8X7fXuAeENbzczHzaroum56bbXvTiYUTF+tXPlte0s1
                k+JuIdPi+S1rWMlEzF/stUx6bzamIie7X02je9tvJbR/Qn4iL+w3o/oe78vzrEVstMeF7FXaJiS7ioZb
                Eq8eXq5Mj6eVVyWRl4b7l069TIXB7HvvtsXv5y89vPb6fp6D+mryNJH/AOcR/wAoj2S9nfsP0/F+3y3Z
                X2e0VbTHd4W0qO7a0/L3qK6Y3t/p/SXexeOOMse0Y3EutzHhGq48X5Rb5KqekX9It1SQwwOIxgjNjjTG
                1dNiqtzVY2txt7zuUoI1eHgrzPciLrtOWx9OVCUl18yLpv5GZ7fZv59Pf9Unv03JW3lsfl08TLy+vf8A
                KPyouvXr5/l8vHw2/QLP0vRdG0TKe56LpeW0vLWiIp0vBowoiImNrYdMTaLRERF4iJ25WiNZjNZjM432
                2ZzeJi1W3nErmuZvbnNdUzN95vM/e+2xeG3T3ABdCIvcAy8dPTrz/fi4wAAfQAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeatSp3FNdKuinUpVSIjo1d
                tjLw6kZH4+PwPwPxHpABTZ2hCP2w0L7IyLf1OtsaT3/2J/T5H4F4GfiJAuLO4tK3q95b1LWr4l23UtjL
                pt8D+H2+AuIHjurO0vaRUruhSuaXur9S/KQC3sBUxxgtOp842Vzont+w1t+Xz8DIi/KRfSJKv2NzbzMr
                i0q9l49tQ62nh03+/wBPQBCAAAAAAAAAAAAAAAAB7W1wvGy59btFlS8uwMt/Wfzbke3u9wrW0ulu7WlK
                8obeRVaRmW9urY9/LrsRdPeXhtsKDiboc4VaDsi3L9jvCPtt/JRb8p+Xge3X47AKu1KSKqF06iCqU6m+
                6T2MjI/s+oyFBne0p2DpfWlPpSpVyOgR/lLx8S389/ykK+K32+Rtv5eG2235vASzbxxvp3NW8ukFf3ta
                odetXrJMi38E7WO5oSW3TbYz8+vgApi1sLm7l8xQ7Kl5V65b2p9PBJFuZ/QRGfh06CprRF29r+cqfjV1
                se9evsZ/SXl/J16CaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAr2PtN/wBbixpdp03rUU+rqL4lynv9O5KP
                4iXrqCWay3tLy5o/8OfrX5T28/f8fET8ACkNWDO1Mvxepa3H++qqR+VRF9/q2hteMPdL9kb6tT39j+N/
                R9/IVwABQFbQ50y+W13+3ntY33Uvy/l+web1O8/tO7//AGP/AP0LhwAW7ob7yp+x2d17tvVy2/P+nxHq
                Q0PFT9ja74i26/iP8383xFfgAUPoxN/qf2AVL/h7j+Tw+v7evSMW0EcKn7PeW1Lz8PWt/f8AriL+TxFW
                AASNbQVsQW9xXurr/wDhvyJ8fyfSJms2uwb/ANqWlKl061SIub4dfH6+n0+YiYAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOupv
                CbG6q2TjL4y3Xlt81Xsr2Qtlnd0N+vLUprcErSrp5lzEZbGZGWxBOICENbu1PNt6yzuli7WXWmm8bL6z
                vrbmLoRFVsai0cxdC2JRbF1LYuoi4AAAAAKQSTN+H4fkaFYgluU4BF8qZHoXt3AcePkyYWmazS0sEmd/
                7NRxwcUO7uVI6d4o1NNGqZKsVESzKktJVfAAAAAAAAAAAAAAAAAAAAAAAAABSGtnLDlDLFrgm4ynj63z
                deR05baYmrS1jTkO4je6kd/ohxuRPSmolJuj7fsTpdmjtCUpBEpNXgAAAAASHE55CZzSe60GmMVmNpG5
                Ffw+RXEXkbNI7ZglzcukTpE31TW51+6pOzleWNV7ZHQqTzSNxt01KKVVUEU+AAAAAAAAAAg1o6tl/Uva
                Dff2N9VbLg7a/o2d9aXSm+6JG52V+hBrVYr2T0prSlexKPYj2IwjIAAAAAAAAAAAAAAAAAKP5Gzlh7D9
                xDrXLOU8f42uMkSK0iEBt5vMWGKV5nJ3DZFnH43Tc3GlVeHVRrtS7Nq7TY7ymo0IWtKTrAAAAAAAKbz/
                ACvi3FTdau+U8kQTGrU4VjtrRzn8xYIXZXV1sRnZWV/I3NnQut0JRU0nzGSiPpzEQCpACAMj4yyNpsHu
                PPDY/srtbHfNj2yX9m6NTlaL6Jvm9ybzqtt/TUoiNC6S1oM0qMlKJPWPgAAPgurSpKppqLQipVM6VElG
                W9UyIj5SLxPbqexH0+O+xh9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFH8qZ0w1g1maZFmnKkAxPH36R2
                cRZ3zIkzYIUzOcjc01TsGKxcpG6tVvUc66LO9qooFV7U6dg5LOmhKROcsmcVgkddJVNJNHYdF2aj27rI
                5U9WMejjZbFcJtCquT86VKLW30zWpKDKtVp7VFEgzSZ8wCbQEIsHCydbK1cG+6tr1uv7e2vbO9s6xXVt
                e2l+lJ2N3Z3iVci0rRyrSpHMk0qSpJ7KSo4uAAAlGVzOKQWPOkrmcnjsPi7LTKs6SSVPFjHo42UfWE2R
                LdH50qUWpuL15aaRrrV0cqzpoMt1AJuAQiwcLJ3srVwsLu2vW+/tra+s72zrldW1za3yd7K8srsvkLTU
                p7LSpHMk0qJSehlzRcAABI05yDB8aR+6lmRplE4NErCtZ27jJZo+s8YYLJd7dJsrMr59f3Bra6B1L0yS
                hK6qalRRpp0kKWtJrCeQAAAAAAAS+8yZgYE2/fb8zsp3RmVp3s52TX6yZFuaUevqRuZeB8u6iPoZEfQQ
                f8JGPf7u4b/7VMX/ADmAngBBml4Z3m2O6ZHVteLQqh0zvGy9s7619YLYjSqrYrWjm325i3322PbbqIrU
                qIpo51rKmgi6me23Xw8j/IA+gCBNLu2PrdZPDK5Wbu0uVpZuDW6Nd5a3zW4Wd6kl2V0337evsb2wUlRn
                TqEpSKiDKonnSaVHHQABAXp9Z4413r6/O7YxM7ZQO6vXV6cLNoarC2IkbLcb9wNFOxp9SJSqikpIzLwM
                9ikzHuaMPZcpX1XFGWMa5OQ0GVJ1q46nUVmqG1auUiQ4HGnR19RUpWxEiqaT3MunQBVEAFG6ef8ABlWa
                njSnmvEtTI53htvsDRyLEFTb1/p+Jey5PBvR339V2fdRK/qOUv1xhWQAAAAQGydGxyuni2sb6xvbhicE
                trzStLuzublodVtrc6FYuKE1lqsXEml2bnIqNdFGp3S4t1VNMkVqJnHgAAFOZ3lfGGLG+g6ZOyPAscNd
                yRlRv57MWGI2lbbcjKneyVzaaajLqRp3M0n0M9+gCowCSIVO4NkpgoSvH00i86jN7WuLezksMkTNKWG7
                urIzTdFYOrS4OrWtVM9yXTRVNdIj+dMudJnO4AAAAAJXdpbGGOui0eZIwMt1VonXo0XV4sWy5Vbblusk
                X9RKlESvHp5bntsY+7PJY+/lcdxSFmfDtT2u+6nOycytjMtyJXqC1mRn5c2x79CI1dAEwgAhl9fWTVZ3
                V+43drY2dnQO4u729rptLa3t0Fsa7u9qKNCST1PmNRF5ddyNQRMBQRh1O6bpXIjicX1BYOkcr9YO0KNs
                WVoK8SRN4V56gVqbA3PNV1UROBdjsdLmXW+TvsZCvYAAkWcZGgOMmSpJMjTmHwCOUapW9Z+nElY4mzes
                nvtbd6yFwaW5NRRbklJ1SJfUy+UR7eyKS+KzyPtsphMmj0xjLrbnXbJDFXywkEfcbZRGXM3ujVUrNd+X
                TYjRUUSCMuviAm4AHxqVKdNPOtaKZb9nvVMiIz32JO+5Ee/j57/AB9gAAAB5Kdzb1zqIp1aVWpbVSo10
                0l9aFxsW6FF0Mj+Vt167GZbHsoi9YAAAAAAAACWJHIY9EWJ1k8re2mMRxjsbq/e5C/udk0MTO12Bfjt8
                5uTnUS2tlghKUnUqValNJJ+UtSeVSkfpifWaRszLJI+8Nj5HZA32zwxvjO4Wjm0vbS42iXCwcmy/sOdt
                cGx3sVd5W7lRrHRq06qFUVrRUTyBMoAAAAAAAAkU57B0zNGNlTWJpyHcR1UvpQKrIWf24uImm97sXK0R
                onA3tcXS6kptU9IalNCLwlW3a8xGkgnoAAAAAAAAAAAAAABR6R54wjDJRaQOYZjxVF5tfFanZw+RZCib
                BKrr149rL1GOObtSeK3bF+xGigfMXy07pUkwFYQAU0n+XMV4qsbRyyrkyAY0bnCqdvaXk+mLBC7W7udv
                lU7G+kbm0IqL8SNNMzVufQy36hUsBL7A/sUoZ29+jL61yZkcrf1lte2J0snVocbZe5Jqt7g2qqNt9TM0
                mSVU6ikkZH8roZiYAABAnZ/Y2GlSqPb60siKu1OjWdnKybSrqIupJVfqQSlFsfRJqMzM+m5kDQ+Mb9Qq
                3DG8Nb3b0avY1azVeWTpbW9yXXkUuxUrZZb9SUojIiM+hEZkEdAAAAEizjI0BxkzHI8jzmHQGOpq+rKe
                pvJWOJtHrB77WxOkicmpv7RREZIRz7qIjPx3M0JyHA8lMlKT47mkUnkcr1fV7eQQmSskqYK1ctiVbJc4
                84uzcpaeZJVCKpujmSZnzGncJ6ASw7SuMMNanbvckYmW6rUe3t6Lq62DZcV7ZJ7GezjUpqMiVuSttj3I
                zPl2PaHfhIx7/d3Df/api/5zATwAhja6N7tZ0XBqvrJxsa6TOhd2Vyi7tayS803lI1oUW/mRme+3UzMR
                MAAQVsc2t9sLZ0aHCydmy9o9tZOjZeWt5ZXNqov11hfWCzTUQXQiUlWx7GXMex7RoAAAAAAUki2cMLzu
                SukLhGX8XzCYM3bk8xWKz+KSGRtWxFzKc2Frdq7u3kn31KNJJbbqV15iCrYCHX17ZtttVvHC5trOytSO
                tXvLyum1t6BF13UpZpSRFv8A1SiLrsRqM9h5a720WbebtdOlhatHYW9wl0uby1tGtVteKNNmor5ak000
                18yOzXzkk+0SZKUSiARsBJVCfQW6uKFtZTOKXV1dVvV6VtbyJluru5uCI1HZ00pcFrXW26FSSSj36EZG
                ZbzqAAJScpnD2q7qN7tK4413iEkdWzcnxusrsiMty2sr6qlRoUXUjSW223XqPKnI2P1nyIncOqL9yZQx
                qPr1/Wk57+H8oCdwEn302hjZeVLFzmEYbXGiXz9heyJutLyht4EuwqOBVEn9KS6e/wAB/LWdQi/uaVo3
                S2MON7c/NUbKxkLLdXtfofSnTpuClVPgREaj3Iup7EAnEAAAAAAAFG7zPWC2+c0cZXmaMU2+Sq1X1C3x
                7e5GiVrNrm8MzIrQogbql6OoZFsZE0GoiMuUupGKyAACXniSx9gK379kLMxndHtad6udk2FcmRbmSfX1
                oMzLz5dz36GRK6DyWE1hrxeU29ulUacryskzo2Nk+t13eV0kW5/iVOsqp8eiTPoXgQCbAEFcXZtZm+8d
                ne+smxrbbe6v7tzc7krSyb7KzSR3t1fXt6aKVnSpJ5uZS1ElCEqVzGklGmQIDm/DGU7lysMY5cxdkVwa
                EJqO1hAsgRSX3jYfUtnGzjrq8VG8jPYt6hEpSvDcz6hVkAAAAUbmmeMGY6fLGMZDzTieByV2IjsI7Mck
                xGKP7hsW6e7Wx3dmpzvyUZ7GdOmovPqKuUalKvTp1aVSnUpVSTVpVaSi5apGX67puRltt1Iz3+GxkA9A
                Cns9ybjjFTPTkOTsgwjHTBVq+ooep7KmKIs67oyMztUOMicmltVUMiIkoSvnURFuXUt4zF5XGZsxN8lh
                skYZbHnGmqvYyGKvje/M7gWx/KsHNrXWbb9PQi5kVDSXiZbluAmkBBHV1bGRvund5cbFoam2iu5vXN1c
                LOxbW+1Ii/G7+/cTp07KmRGRGuoskJMyJRmW5lJWP8zYfyym+VizK+NslKaNqbqWP5zFZn3as9kpQ4+z
                bo6+oGpWxctXkM+Yuh7dAqgADwXV3bWVvXvLu4pWtra0TrXFetWKhb0LZJKUq5Us/kp2SR9VKLwMuYt9
                zD3gJH/CRj3+7uG/+1TF/wA5j1tszh7rd029plccdLxaTOlZtr43Xt2ZEW572VjVUokJLqZqLbbfr0AT
                aAk66ncJsbirZuMtjDde21Tsa1lfSFmtLy3MyL5NSktwStB7ddjIldDTy8xGRfD8JGPf7u4b/wC1TF/z
                mAngB5FXFuiidwupSRbJonWOt2hFblb7frt9yTty7GWxbbbbK67HCWeSR1+OqlkkDK91LXY65NTnYuXq
                xmW2yvUVq238DJRJPfptv0ATCAAAAKVzzNOH8W3DZZZLytjTHjg+pPuWwm85i0UunlSd0qJrRI3ZqU4m
                XUtqKVnuR79SFQbK+tHK1tnFvrUL2yvKFtc2d7aVkV7a4tbxJGi6taiDWg0KSrmJRGaVI67mW+4RMBK0
                nlcXhDFfyWYyZgiUfbqaFX0glD63MTO39C+VfOToug2N5eXMuoST8dhDINkjHuUWb2jxrPIdP2DtfVye
                oPKmKWs6bkv7GU5x1xdm5NQiLZaOczSXXYz6gJ8ABSWN5zwvNZO4wiH5gxXKpk1bd5xGN5CiT/KmwjLd
                RuUea3eq62Bp8PnaKS8yAVaAAAAFPZ5lLG2LGmi95NyFCMbstxV7Ck8T6WMUSaq1yZH+KU3CSOTVQXVP
                qaUc/UjIzIiPYRSJTCIT1gbpTCZRHZjGnRB1m2QxR9b35hcSPfrYOjVUqtjgncv1yKq+Uz38S3IJuAS+
                /v7FF2dwfpM+tcZZG239Zcnt9dLJqaG62RsSqrg4OSqbbY0yNREpVSolJmZfK6kYlTH+XMVZVsbpxxXk
                yAZMb7Cqmhd3sBmUfmdra1DL5NO9vY45vCEKVv8AJJakqNRbKLorYKlgAAAAAAAD4lUpc6KfMgqiy7Uq
                Z7Goy2LdRF08NvHx36gPsACWneURtgVSovcjYmWtWI6tCk6utg1ncp33Po4VEq8fHk+UR+7boEygJeaJ
                JHX46yWSQMz3Utdjrk1Odk5nb7+BK9QWo0777bGST32LbfoIrXube1oVLm4qUqFtRodtXrVqhJtqNuRH
                uZmZkgi5Ume+xFtuXMfQjD2AJH/CRj3+7uG/+1TF/wA5iItMrjD9WqW7JJGJ6uqNHt7ii1Otg53FC2Ue
                xHs3VKiiI1bEnfc9zIy5ty3CZwAAAAAAASQrIuP0K5ak4h9Op5kuUMST/wDRNyJW36Omwj7a5tbxZovm
                hxsXayrEZUr5svrS7s1bbHtTvbBSkmXh1Soy8jARgBSKb5wwpjNya2LI+XsY4+fn9JGxsU5n8Tibu97n
                6oRtrbI3ZpcnTrsk1UUVDUrYkqMyIiqjQube6oU7m3qUq9tWodtQrUahKtq1uZFsZGRmgy5VEe+xltsX
                MXUiD2AJSlcwicDYnCUTWUR2Hx1tQk76QSl+sI+wt5EWxG4OjpVotbcW/TnqVEkoQaAZTxrlZrunvF+R
                IJktnta3YVniAS5hljTQuuUjOzquMbc3alTql+uOmZke2+yTIuUgqMA8de5t7WhUubipSoW1Gh21etWq
                Em2o25Ee5mZmSCLlSZ77EW25cx9COmEKzphXJbm4MeOcw4tyC/syFG7sUHyBEpU7Nm5dTcW6Ours4t+x
                dd6tNGxFuZmAq2ACCPDw2sDfdPD06WLQzN9A7i+dHS+s21sbrRJftu/cHFSKdFJdEnUXUJBKMiX1PmMI
                2AoXEtSenWfvyYxBs+YYmsnq1Dt6MbieUoLIn87giPdKGlqeqzopeydjIqZmovkpItyFdAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqp6d+HNo610cQ7i6umqTD55Mv8cai8cN
                0NqlkDK0HUyWskiEkcH9CjxrPoalxS7nYNy1Kd0LNJ0y2Jad0K2rBplPVTiUQ/VNxqsvcPifxJtqYvzl
                j+QZDxJd47ZJnN8j2iIpIlovYWqRNT0feLO1okDstj37OSI3pR5K5CpSFBdprx4YuAuHPp5nGuXh8vU4
                0m5r07pjU5VZN+W53LMeZNZ/atubnOCZEYMnyuZG8JeG6QONCPs6HhDO+SFdKP1aCUP51E7FuGsgLyph
                vFeU7hu7iqZIxlBMgVmqsaTNmVL4q1yNbapSj3NTUq/Omo1H4oMzPfqWu/pl0o5q4t+GsM5t1h8RG41E
                aVnO8Zpde6YcPYmYsKNL7L43fmpygmaZNG1Mry5pYXWwNokURqshdTOQxeRMilMD6d4/GrnMzjum3A+l
                zEL1VgDlre1QYV0b3UlZSsrWpE8d5HW5WEk7tNR7IJ5a22xh66SU8pMLq6EkqZUuVQT9kbjY6AYJOn7H
                rDkCeZpkEQuLi3mVbAWJZ9liORO6TtulxmUbZ1RBwIyNXRjens99tzI/Csse4omhSXYxx7l6N6gmN4gm
                Us0xHT1FnBrjM9dXalmiat7s5RiAS6JN0VqSyDOztYR9yUdSaMTCyUuzTzvFNFegupcjgLT9iLS9iyLY
                ZwfCGmCwGIt9q3WDW02NnbXbpd+q0abg/wAjvqdJFaQyh5qKU5v727c7u+Ox1Lm5qVOYjPXn422kaAQz
                UXw+NW0BbbWHSHIWvXTzjLNLQx/qQ05PkVR+dJHjieSJrbkIbXCdQ5qasjNXtfU55Alkk9Wklak0iIgy
                kaj8N8PqWcQrRlLs40LtWtas0y3+hhsqRZJ7rk7PhqxkOSXOk5KjravHifwbLdJFLmA5o8si++HJaLcn
                1arZnE56pOJ/pG0gT1lxXliYSt5yk9sapUeN8XQCX5Kl7HENyL2qkjbGmuomONJGS9lOlRLpUSol0aVW
                kpKztG1m/v3XBq/vQ13f8nuRChGWchSvhW8S/VBrAzhiScZG0ea145hRvcdQkCYLybSLTVJMWR44WqKz
                RtbEd5t8De1L77UqkXIbKUSTHDfpIxyGPEGcjAOozCOqfHLRl3AGSmTJmPXr1ihbPTBUvTO2vLCp2d+z
                yBtc6NN3jbtTM0nWZntoaHykjkWuilNVBqtz1R8THR1o+lLXjzLeUri9yy+0rWq24dx3FZPkvJ1zbX1q
                twtl38NhbU9Vo6iq07udup8UxIeqSUVbVS6Kkc0XTl3Tvi3RdmzVvpabMavOMfwZ5q1UUnPF7S3sseyT
                LY5FXeUP726E2d0EuUvLnG0ssjqPSaL8mo3KYXxVGoznTp2ncFTTmwxLSpEtWU3p0Jvqj1m2F3njNean
                q3sbyUvR5EcSkMeiFg5oSdRojDM01GwziTMtLDTf0ulVCV0qbVyhcnpc4nujfVtNLzFmMMoXzLmJvo3l
                1cYbyrE5FifJqLVJG4U1NkbnDWy1JTysxJeKiIdUkHczOXbSD1dZGS7kdQ2pXC2lOA0spZ5mZQWC1ZJH
                YhSeijcqlCqkkmDglsjzelthTO/O6luzkoqSFk09kpZmS1p26Y/eMppfiOWNImStQjFbW0Q1HaQYa86i
                cH5qZbayspvEr/Dlm5ZEv2CxkZ0zdDjb02NbolbKqsllRIDZX+pS52YjKwPi+ZbkOpbgZ4JzTb2/dcxz
                M5aSpzVo2FQrFLbL5paWLi4Ja9lGfNSk1/eoYzMtlF2KiJPVIDJ5nri7aK8BZDkeJ3iczLJGRYRt7fxf
                CGMZblhWOiNSFcszkMabasSaXKmkl06jIb6qQMxqJT8xW5bGLt9Oup3BmrTGjZmLTzkpoyTAHS4umxDs
                0le2dzYPFgZetskgYXem0PcberdN7Zrqsr2zM74infNlevRTSqU9vHpY01Y00j4ThWF8YM1GwaIy2WNJ
                /fl09nzIExqWqUSXJMxvEIUt1l0ydaZu8hdqqTVzqp21GohiamqjRxe6V7WwxJxu+INieE2qWWEZc07Y
                S1DvsesyTZMNrkewcW6FuL63NaUpSTlMCkTg7yJ42Jb49JNa1mtClKDOyLBdWvEY0t6LXyIQ3Mkvk93k
                ubN1w7RbFGMoXIMiZDdI22pvTcJJUj8ba6xtkfpKbHJJO7zVaKVylsee41V+5no6F/Q11tVEjn3Dm4mk
                t4jEyw7N816R88YBiGGMj5Axy1KkM40uu8OcG1R37hHTUZnix7KPtrw+rStlQb66OqqalyFjYGCeBmT0
                16rMAavYAjKGnrJLPkeJpvTaXNdnRcGl9jjwgkqJjl8ZeG9nlEWdk8yiqNL6zUKquVRpJVMjUKO6puJJ
                pC0cPbNDsz5TT+E6RUberHMP49jkhyblZ7VfqSTcSYTBmp7d2xLwaFIY3N+JjZXeqdWnTuN0cwiGOs3a
                VqemnMWsvSxaY6lMElEZnWeZXIsdMbdH7zIUth0P5nGpNlJamV4ROu7o3Zsz8c0pUZAx1aZIf000JNQs
                h4JGCGhemtt105PpWU91Y603GS5Vyvl11srG5f7WPOMpc7SMwGNuCaa1RyDM7Y1tTp3Izqo263ystCql
                RgY47QZQuk008U/Rfqmni8QwDJLxG80JR29HEGXoTLMUT+/tV2iHFCmNqm7WzNkkWbUZPCm2PPL470mM
                6t3Xo06RKNOSIYoeLlpRhOofSPk/INOwt43nnTbCpNnnAOZWOhTaZ9j6Y4qa72ct9k0SRCEOtgyyBbB3
                U/NS6imldZbbIk0O/mBkVb2g6tdeeYpJwVcHZwx681Ybn7WKx4IwbRmNiZtRxGe5WP2fyLLY+bYo+7CM
                mGZHGnZn5TjpObTIkfIZgF6Ga+MHoVwvkN7xLc5GkuVcpRm5vLKUQXAWO5tmJ1jl021C7ytn9zirPWib
                a6MySJT6y1H5L8yfrK9tSPwqfpg4l2jTV/IL2CYVy9bXGUWmjd1nXD02YZFjXKDd3cRqc0ph05aWNyfu
                5CI+/wCpEjfaLIokIr1KZqQpVUtI+kfC+i3DMWwhhGKt7BHWBvtCfXwqB+1M/kpkROU4mjlsms7SZ6qo
                NS1rSVuyW6qMdjVuzxtlZWWh/MvaPNOudMqYfzXkbGLU55awLKLKW41yC1XDhG5Y2uFibopvbXSQx1wZ
                XOQxek43xvSYk8VbhgN72rKt1pW7orBbI64a4fKuKxGshuFG5RxFaOnu4yQxNPLkY2yriPaRYXPIZKJs
                PGxyYmtT9j0qa3opETCS1pj9RCqT0V4+oPUtgjSpj+8yrqHynGMVwaxP1VTrIa92u4cr3mSfqMeYGum7
                vkldV+KGdiZXh6UkzUmkaS6YsZN/qjHHH/km7/8A5S83FPsSQNj16cXbWHkTPDPaTnG3DrRjTC+nfFcm
                t7F2ijbO5uyuMlm+Sr6O3yFtbjJkukfMo88u6FVezcmg+0TVhDFcJC4aG8cbh8S+RsbK+T3ImJWuWu6W
                mFZBzRh3JGNMaS+8IlHZd35Ad2VLG0ta0md8TxMlsLJ2ClKO4JR7FkBxtqUwhl3KmbMK41nCJPkrTzcw
                OjmKPWzDKrOxiK8oMjjKISRyF1ZmqJyX2gaG1wceeHPr8VFFNKHs7equkldTMh47guXIVIcc5NiDFPYF
                L2u6aJJFJQ1WbswPbVfEaali5NrglSaqFIMk8qkFyn8ojTUJPJrwcEHAyNMuuDjHYGtH15kTBjOc6S49
                Drx+c754d7fHJsOfXPHDHfuTke7gpggbhHImSk77d0me5GSVEFxvAp/pd8Rf/wArNq9/xHiMXYao+KHo
                40mTq2xFkXJbo+ZkvaNlfFiDEkLl+WMiWba4EipSv31phDS80ozUJrUb0TXIHZkfXpiQb0wW9wjmNWL3
                h2ZmvdO2hXjRZ4abWnevWJNf3EEyCyWVx1s7iRRvG2OXSPN98RlsbdUdEt9NfXpSMzLqRb0B4Wmr2K6X
                NPrXMnnhtcVvNuoTPqL3LGcdT8O0drnFDNrzNXEpK2OMcyK45GQ6yKCJbL1uOOLJDIyv+ypHSYaKnwzM
                M7mlriXaPtYUreMeYfyTe0Msx9vW5veHshRSV4xya2WSORThdezc6aWOq59zFeo79SwrfKbKaVJrGg+Q
                l5Ahqc8RXVM6arYPE53hDhfcWrHOtLBUtjU704ZxfdFF+zlF3iwe26/kcSlr9F5+/O7jAZtGqbi0SFkq
                M0gYzXUblGyGaCSvZ+xjKXebY4x9MpBHnSGv0uhcSkr7EXuyvWl3ir0/Mdg5ujA5tzlSS4tzq0ud+tor
                tbptVo1W9VI0JOmozD2ZEnUUxZAZzkydO9JghGPIjIJvM36tRuLigyROHsl/IZE41SsUqcVJaWhtvnJZ
                oprrERGVFK6ikpTQXR5rPwJrsxVc5n07SVzkcKa5g8wV1J4Zb6PO7NLWGwanK/ZXRscklUp1UtkgY3Wn
                yrWnsXJvWaiUo0UrkJAws8lY3qOSNobnuOSRsvGJ9ZHWws3JoeWhysqli5Nzm33ql0r9veLBfdlw3rpr
                RVprXTqpWhalFTfB+n7DGm6EUcaYLxrFMWQSg8Xkh9mYez02lorPLimki+crxJEpV841Et9kS3OuZ3Ck
                2bejn7OkhICtwwZcI791Fxlf4fsj/wDgXIZzRgy4R37qLjK/w/ZH/wDAuQDOaLCNV/Eg0jaMXdiimccl
                qoZDl9vUuIvieER5/wAhZLfLZSqiad0iGRNueHdsbnBLa5Eyuz5SZGB7qN7pTo3dSpbVDTeNOJbYwWFT
                KcX1Gpct8Ni0ilF7Robes1rWPN18536EEZl1VTsjJJkXiZmRHsSRqMcLHWo24/jOQNXeUuHxxL9TGqvV
                FPZnO5lqQw/pKLJmPVwBL84NsNxrhmaueQWNSIExNbeglNTGwshJfVqjfK+x6Ex2rTDPhpv4qmizU9kO
                lhyE5Je4lmuvSO4b8TZegsuxJOHi1WSr1KmBvmzSztUlUpqsu+FNjA8PTzTYzVcKooQVQxkoGrVxCNWc
                a1s4FfYZS4V/F9i+c4fbqmGm7MxaKXKPSDEuYmCoTlC5A1zGNZF9rGpqqvLc3nISaE1F02IzfUMa5CyM
                HJcFr21W6mLDg6YjlV8zynC+qPVLQwPp3lpSJjeYTJ8fz/KhG15FcUx1zUyvkWqPNNhkdJgSXK9MByVr
                qEgltBgLs8s8ZXQnivITzii3yHK8uTyLXBW82aMA4znWYbWDkusluOrJJDDGK5inbWrinu14aGd9eX1m
                rKNF1bW2xGmqka4o2g+WY0gOWo9qBYnOIZLzNDdPEcuLCLzxyf6GaMhWLo5xaAzCINsUqSyDurs3xx1U
                hzmjIxR+ilvM6j6kqlJVStelDSviDRxhmJYOwrFbCOReKNVlQcHC2tbCg+TSR+pJpOk6mF5Tpkp1lD2t
                G9w51qi+SmVJjodmxs7RRt8EHHA0qwCOZ/4d+reHNltE5TKte+m/E2V6DIlbRa5IvL9+cpFj6XTOwbUI
                Q5yWGNsdmjPTlzuS30o/JTj9OoukpNOiGdzL+rvTbgHJOOsU5jygz49nGVI3kqXQaykrc/WjA4RnDUVc
                J1kZ7cpmlrOGxhrh8ZbnB6rHMX5lK4RTImXtlESBJulLXVgTWjczr8BqslXzTBDjtevKZhiqdY/iknt5
                MTktjcYW+ShnZaUobl02uqqodJJK5KliokGdRShiT4qGFYvqH4tHB6xXNW2g+xNyuNSUlkTJd8qm55ac
                eR+M5Hv2JwTUSpDg2PZQ1DW/M1RPZv8AHjdWJZcqlC//AIwepGX6R+HRqIyxjC4Wyz60YY1AoQ62JFan
                HHfIktjsGN9blJ2JudWJrkLg7x5SSPlfm5oTtsojAfzPvF20P6fMlOeF3jIclyZmBhrEiS45wVj+W5ek
                ETSVZSr72gvIs01GRrcbampXfbIp8VImX5BVGJHKa1xOJ8W3QDKsJZR1C2me7FtgGFLmNWuYG92hk7s8
                gY5u5lKWuFxxUixZTiq8jFSd5TIW5kS7tEfd2A7gq6ifFU2p4XRqnoR0XYu0OafoTiCAxtmt5PTZGm+y
                pOrdutPanKGRSsD9opZJJAdPvV2Nbou9px4nqqruRgNtYafIVJZFiA9JK0jY/mOjCZatmNttoxlzEjjA
                GKZSlk7RqvcnYrmk9hkXKBzRVh/1TtbNP73HkvYEvaHmpHlxZS2CmhdXlIMhHEHxVw8s2Omi511rndXT
                g6Z5jcO0r1KFrkojlGUcq+znd8FcCg7ZURYRmbKjbB36qadxsaCb6PrD6y8q1KvHyLqkwNibLuLMF5Hy
                BaRXKGbGjIj9jZgc2p+TZvbJimKuM2yE5X0us2w4dGm6OxVuv3qsuXv7IdSnTM7bta/Z0SxHcVnx4I//
                AJTfRl+YhR3i9af2jU7xReEhg2RV3K3ik2oakvbW3a3S9abp8gsdYI1M57ETcGtdN0NsmsUjj9DZAkqt
                MlMEldiJaDPcgvWfOOhw6GGQXdinKM5fYXYP/s08Zti2FsnSDB7K8evd1lTVkZsitRpc20nLlQb6yd+x
                /e+SpL7ynyFlaissjE+jDFNIXIWeVw6XNNi/RqRMN9ZOzE9szjZov29ybb6wNdJwb3OwqJWiolVQjTsa
                CPoY89pAIS3wahjOziEYtcd0I77IUYRZsdhaxSjGisVNZR8mBJE2E0G38rb3YVE6PZGaCQSD2Rhy4D15
                cNembUhhy3uL2rE9NGvjU9gbHVC9vTu0N0Cj7jGZo22Fie21g3JdJq6HTpfKLdSzMuZSTAZxhrE6adPW
                n/iC8QXiW1teTAjL2bMDZtvMX4Yw1O5A/wBrHce6V2875GPJjCoe2OzVRcFTI6ja9vzrU7YmN/cmqRF3
                HIJtUqvezsMU+unhosepmWMWpDA+RnvS7rix42rscdag4TTqUrV9tLAlG3xLLUdTT7KaxJaEqaVq6PKW
                Wqq2NT1HqZR2oHv0VcN6w0I5jzQ54VzLMrLSlk9uanCLaTn6lUf2HF+Rjvz7/lcam8idXl8pN1RpSTYl
                pSg6z13gRyZ8fKjCwmjKSMSfDx10ZKzTMMoaPNYkAb8Ua4NOtpYuk3aWVSlQfMEDvl2Fk25pxuvczS0u
                1ZybFPjMfybU5GzLonS72d4/HMtgANS3if6utRz7rmustaX7M5Fhbgx20PyRqLt7N2v7U5tMM6OLdHMh
                QdvQ38xOa2XC5yFpUtSTUwLPIZL6klJbBWu7VRG9FGlLM2o6Reo3lXH0Uu/ZZivbk6ZSWev5oYcfRjlO
                sSl0nmWOLRTfFJJS7Zj72fzJVJnqEnWz4cnEa0C6b9HcixTqHac/z/L2o58yNkrVo5V9P85d7KezXMa3
                JvkDK4OZEmq5Naop3exVkHU5Kjyp4fy7M35a1BtsY8n8VypAIRk+BOtq+wvIUXj82ij1aGn1VzjUjb7F
                0a79Ct9iKq2XyFkRn8kj2MiUjZM+DWr9Ho1XxSSwvOWhqzkD88Wum2cySTafXWbtl9HJbLtMkxlTnUjq
                3COup97tztCpRe8kjSku4GOnOYhHmAzpUi5dlQAABjD4xGpSaaT+HZqLy/ja8uGrIFuxx2Ew98ttjuo6
                8ZHmEehCn9t8DJ3Y2uQODwwKLcu/25rSZEZ7kHnz7xdtD+nzJTnhd4yHJcmZgYaxIkuOcFY/luXpBE0l
                WUq+9oLyLNNRka3G2pqV32yKfFSJl+QVRiRymtcTifFt0AyrCWUdQtpnuxbYBhS5jVrmBvdoZO7PIGOb
                uZSlrhccVIsWU4qvIxUneUyFuZEu7RH3dgO4KuonxVNqeF0ap6EdF2LtDmn6E4ggMbZreT02RpvsqTq3
                brT2pyhkUrA/aKWSSQHT71djW6LvaceJ6qq7kYDbWGnyFSWRYgPSStI2P5jowmWrZjbbaMZcxI4wBimU
                pZO0ar3J2K5pPYZFygc0VYf9U7WzT+9x5L2BL2h5qR5cWUtgpoXV5SDOhmjVJg3AEdxVKssTc4oy5qyZ
                B8PYyvzjEtflSTI2R7Nyv4axFZxtkeHJoS9WDa4VlPL5SZ2Blo0lnIHppJSRcaNf7jGfufOFX/5TPQ3/
                AJDZLGwCAt9impbCszzrkfTPG5n69nDEMcjksyLB1x2V2dSOx2Z2djfx1wVIHBmpxNyS7U3GyWhDI/PF
                VBKWmtSpVEr5Lghgx02fv8fEm/gz6Vv8QRsZzgFH8w5txVgCBP8AlLM+QY3jTH8do9q6SuXu1Jtabc+e
                om0sqZrqGq/dXFS0mzM7Ymo8vRoRQoUa1X5B4w/83l4ePad61JNmy2xwdc6NHNVbTbmksUV7bqZOCZB7
                Id6qbD6mdQ2NJkZeHkKIyyDMmv3jK5QxLnC0py7T5w3sWYqk0Xww68t3CZlqBzowN84bp5NY+tSW6TpY
                4o4rZqbM9FWZKdSxZ1djyPchpvmfepY2VzZrsKlpa1bCtQ9TrWdW3L1U7blNPqh2R/I25FGWxp2JJ9CN
                PKkgpniDMuLs9QVmyfhqfRbJ+P5FSI2uUw54sXdprrPsuaw7WwVz2Dk1+Lu0OaKbyyVDVQuaVOqlaTt1
                1YcRXSNosuWRjzxlam1T2UI9YiuLIexP2QcmydKfkqNvhcUbXp1bW1e3MTy+JY4+nw78Se5CL42036b9
                DcX1Dz3BmL7THzPLLp4zHkKJxS7v7VgunSJxA9ih8YqOXsnCKC2ttUlTbHWdlp9teEpZdlTakUsdfBEw
                y1TvCF5xHsxWjdNdWGs2YTyfSXIrnY2F66wqIWMvkMHjWNYa4IpVakai9JrjqTqM7QqlRTRqNjDW7Wmw
                MnZhdrgPiw6LNRUxucbRjIcgg+WrNlvpBSxPmWAS7Fc5empus3FzunGMt0naaVGTmhrbnJ4JpiTw/vyG
                Rvc7iqxop2ylHcNBtYOnXJemFx1oQjIi3rThZQzJGQL3IyYfPWk7WHYqvJG2ZAfFQ53irPkJZsNeGSJX
                dSI4p7eSblLj1u9IrMy6tLuIlpFgOsDTLkSJv7bb2OQ4hF5LNsH5MskrapZi/K0eblu0PkUdkbfzvbQg
                ndsbab+hqNHfTGVSh8r5jlxK6D/9S9zf+BrxHf8AK7VEAyb5U4s2hPEcPxTLnnMNeR3meIcz5Aw3AoHC
                J1LMpzeISGzO/an5GNmmM1ZhGGd2p0r6slzmTJG6aysHYjNNVnrlR9embim6L9VU5q4px7kt3jWY6frd
                z+B/LUKleKJ9WtOZCCUyN8oaWhtkqloM3NbcwPL280qR1KtWlTQgjK1vgQaQ8fYP0MYczFWaLWQZs1Cw
                BknM4yY6lUdZCUQcbSmWN8bNrs4kl2aIPCII3xxrTEkVSZqL/TdKqEqUpPJWbi5aToVqD0k5TyLTa7aP
                Z403QiTZzwFmVho02nIEFmeKmy+nLe3tcyRTS6tzJIFR5TXIWldVbSqtVapGVI31hY124TFxP8TaCMmY
                pxVS4hHeNDHdtnSHtGOrxsLI5XlTJ0zQ5NbVEVnjJteXYmeZNtNzZ3w3ajTYjp1CKo8sddLTXKzHj9at
                9NOJdEmadIspn9CN5zy9i6GvOJ8c0YfOru3fY83ZWjpdZG0RR5h8aQlMQkCUe0D0xqV3YpXKRFSqKoHr
                /wA6POpfhL8NzPUmoUqcoydqi0ZyGV9haps7S4mClSVvkF3YWJf6WtTpKLC/daKNiOnQNCTJRGlQyQ8c
                796l1j/3mQ3+NjHQCr/Do1had9W+nqLFp4yIWQCxBEMb48yGRw+eRL2cmNnBm01M3+jeLx/vNNM7NRm7
                MZPTOo6ZkmqZrSZ/XVPxMtHOjqSMuPMv5RrXOWX+2srljw/jmLyPJeT3O0cFJNtNUYhLS9VGlT0RKJhQ
                +rZDfj+QwlWMlbThcZUVgjh5Vc30G6m61MO6NjyvTa6xkROP4PMKnMk2Jn4lz91dmnbrurpsZ7lZZwWN
                NkeielmI6t5sm0nWqfWNY3WdsyZnfbOwu5W5nkO9W6sUQsHOmgls8YZ2VTWfsmzVksKJCTnVSkqaGam1
                hXjCfFh0PZ09vLCPZWdodMcYw6RT2bY0yrAZzj3JrdBoaxX8kkMhb4bIWNL1NG9rj1hfPNZMJRInXsaK
                lKpo5zSLdOLTmHHOoHgsakcz4jkhy3GmQMZQWRRCSG1vse77ZV5ahBU78m6TtLO7tqVHTX0eGWkaTSk1
                UjJRGKqcYXSLA9TWinNcjv2y3act4PxdP8pYfya3J7pnETdoZFnSQuDC2SNrUTnTjM4bbK+ishaKqzZl
                03Lv9Vuu5ZmddPGbOv8AUsNh/Boxt/HpGAGxfpv/AHPeCP8AAzi//IWPitQorpv/AHPeCP8AAzi//IWP
                iwfjQaisiacOH9l+T4iv7lkyXPnGHYXhkkt7o7W7jl7lKQ2EadXtvv8AqlqdKUWXICj7ykyNhkC2h+Mj
                KiW4e7N/GG0O4QyQ6Ygq5BleV8pRyrUoSqD4FxrLcx3kR9TP8epyJ1ilgqKtjnQPmbKzL3+cgZq60Lfm
                WghJoTjQ4wet3TNrR4QWpB9085TbZ3Xh88wk3TqMXbRIYhNYVflluOqOxmEIk7WzS1pQr1BxJLsbGtlf
                ENLqUfr3B/KTnC0ZaQsPaIsGxDCOJ4yztdJka7FUvl1Fps7J/wAlS87Mzf57MnFJLcnd5eXJV8dLvWrU
                JhZVUY8wlbsDNboTgv8ASY9I2P3rSreav4i2UYpleDyuCwfI78xLNpVk/Fsif2xubY/NEtqS9pShs+sI
                W9xs3pRpYUtrqaElTUgBtC17m3taFS5uKlKhbUaHbV61aoSbajbkR7mZmZIIuVJnvsRbblzH0I8Qcu44
                vD3jUrfYtHZ9kXMNtEHCpZTWaYRw3kfJkAiPqBkd7euMyjDNUZnZqRTL15T1DTkDKqj8o65r33oZ6QBm
                uaQvTfhPT/C7PKl2jVvqEiWJ5/Z4XZCkmV3rEFlbVHbIcPxywLWdaRzuZU+62hhYzQVu/oW4Rx5Mqbya
                R6cO8SPFuAccRnEuHuDvxe4DjuJN1k1R6Ox7Qsq1sra0opIqV/fIVlc3Vwc3Wojtn11euZ+ea5rryI1V
                lrWoMtGnTVLgHV1jujlPTrlSN5Rg9eouxruDGd/ZujE7bK52eSR53oM0qi7vTIy3ZX9kZnkiJKlUi5iI
                XFDV1xDl+TPPFewxnLTZw+eIPpkgeoNkmeMNbtDN2lqQ4rxLJLxFnUdcR5eVfRl2mMUbZ4zyai4NkllT
                wpiImByrUSq1JDNH6tU2igFk2rfh8aRddS4CrVXiVWVDxaqWqgO8/wAlQk2RMz9nDkaN8by+G1HJLv7H
                x1Sqbx3uhBNieySg1VDXr88VHhecMHS3gJpiuAtJNF01fak5wyYI0sxs816iHO8rzuS3rc3OErJudMud
                0m2QpscFO6qjyk437QuMUoSM+4Hery7b4199J3LxEuJxmnXO41O9tN2iLvfSxpEUqoVdnkeU72mX4act
                NnNzIvkdnem0MLtSJHfseksVqo2qMZmYZTNDulSJ6K9K+HtOEVVbXlPHkZs7eRPlG2KkUqnTkaHOaSnr
                yrNDzJr1wrMlOp1ZWA2iPp2oM1FCbBeKTn3KOQH7H3DC0mvKbXUlqtb7wsmzWxuDXU086ZkfJyFkiRqb
                1crW4zBsS5xKOKUSK9Q1uZMJUpS7Qft8nOpzPEX0waf8w6g5db1ruPYigMim9822xJO6erptsKqmxisf
                HZxenT1BnobpNJVXJJnzbmNZvRPw8+KZmalkHiG1tcMd0mZt1l0GXJHs5b6fYlmOVV4EsluGO4lIJHOn
                UixtFiaCjxMMNYfaA0R1tiKpOSZCyEwsIbNmnDA0A0v4NxrgHFrdWbIJiyMWkYY0XtRVxeXh0+e8cn1x
                qr5Tqub673ri9vlUiplUeHJxWSCSe511GHLh1ax9SkszJnPQlrojsTstW2npmZptQyDAKRWMGzliCQE2
                NrZkphbU9n3e5G7Xzeh+S0MjGxKqu6aBMEcf2d/YqWY0Br/5M0sz3iX8QPOEW1dw3LbRoC0kt8FYML4s
                vKE4xlCdS+V5nYJv5lklwfmw2NU7jEKOwcWYu5nwqNOnfRVTJXpJeZ2xSGkXEi4bWAdGWEpFr90GsCtK
                eorSotmnthXg70/WsIyTEW55bLKRQWaQ6/eajO4tL00uKkn3WVBT8skx2QlVp1aNRl2XRrpapcgSHi9Z
                6vdAenm9cV6KsQTpqv8AXnqLajOmyzN2hz6l0sdNWLnI1KQ5OBPDVZV5A9tPOuk+N7U+0t46ylSn4Vx1
                4zzVHqrw1oXwtppZcrY0YNed7GHvUJmuAx1+djwFp+qQRgms0YHCaNjZ3XCJPM0yRLNHHZ6eWGm+nHHe
                NUlrU9LTSjT1wDuGE64sq4zstPa41f0rMqFhlhlmsu/C43O+yVnKEzJzenmm5upOP6q93PLTXjZ11mr2
                dJCOyGYdqaW9ibbBmaLO3sGlosrVvam+0pFbWjdY2VomxsrGyTtykimhJU6e5nyoMk7dU74xOIzr0fNO
                lpE9OOmlhPLOvjUXSU0YCxFY0rO9KOWbgpwsHLNORalbdrjsAhSm52dUKeDp0pC7Rx2p9kcYYZw/x4Kf
                8F7MOXJrgbOWBc1y2+yTPNEmqnMOkg8rXdzfXd7kmN4svG+mwSF1vXQu9VuVMnG8ZkqWiuk2JtZiqPz3
                IUP1ZN3WvbWTB9DGmmbZ5ldE32QWC7WL4ugVC4LvfKGVZElVOGQRo3JKjN2q0u9X6q3U1mxxtrfH/ZdN
                oUZy7oB0isOgfSw2YyfZjRkczu7+TZfz7lZ1uzt6EuyrMFJc8hS5wc3EzJLY1IsLFnouruZXC45HWmq/
                KQtNQkY5NNTfecWfWz/R2S+zuT0S6OZS8wnQ/Fb+3/UrMmYG2/SmZal3Juv0bm1Mbq3NaMeq5T5X1saF
                H3FJIK/k/hF/R6pxmHI2nXWDN9QN443+bJBxEM01Mmk5mtV42zBvxRgFtcWMqSEm0NbWxm3pZWBqYzKP
                MEeb2lhYt0W6NtgIYMeBT/S74i//AJWbV7/iPEYznAMR3FA1n5fwW2YX006TWlvkGtjWFKrqFYVpOtK0
                vGbHMdj/AHe4ZEy7JLEkO9Ko1QtpvyOnSeUExU/1VlFxTfGOFPceeaQ4Q4E2lGwooyHrJVM9cWpCR2xX
                M9y1nGbS14arh4UdRN/Yw+GNz1QaGqMoMkKY0vRPr5TRuaK7KhfctLABriiWhm44yWRfwwaNddGTsbTW
                GZHt5TE4LF5deZAzFqdjk7kjlIslYYMp+wu8lw0yQHu9mI2V7YmBgS1kr2bKOGb4VbMY6Y+DrlPI0Exo
                08JTi0RhxyDMY3D7GUzuHT+OQeOXkhfW9u79mkkTqFWbVF2c3FDvIXnlUdNg517VelMw2/cHYLxJpwx0
                0YlwnBmjHWO2K9eb9pikeTck0tlzIHxwkTqqj64payTVd3C+qnzrWtPOktk7JSmsog7a3t7M32DQ221K
                xbWyytW2wtKJEVrbWdilNjY2SfEySlJJQktjP5HKZqMtztU1i61sMaHoPF8gZroT66YpbKih7T+D+FOM
                4ckvBMrtIj7wsWoiU3txNTXfnUclnypURJMy35wF4YDE7pv4yGj/AFT5nh2BsWWmcqU7nhv/AHJUmeHZ
                bE44Xs7E5DM3H16RONJbbYVDaY649lTMzVUqlTpp25iNOWIBrQaxNJmAdZnHixjh7UrAvwj46ocLw5dR
                j3tXOomZSVt1KZGbW+/Jygsnj7qXK2OTmRbvBEexGaS/WlXbKHAE0AtMNepBptY55pIzRHWx4eIFnGBZ
                5zMd3E5FYWyr9rvn9U4n8ySmNE6WVOpJTZyZH048l2oW8haKlQ6xWya9Yvq5l3G/hFnoqyhCsVZybeFj
                cvDe7T+MWMsjslZ23URlc3CIpsXJneGtvcHp4KPJJ5qJJTMgjNZKQvY6YaRmHiMcWHHWV8Wai+I7d4St
                cbTN4xNqr0zY60+QSE52a1VL9zbXGJSKZtpshNUYmbS2uNOk8sxPsffSqSyLyCPviGZREGWfhj62HbMv
                C2xpq91IvdFrv4jAMlXeWJxc0l0LVyacMSGUR9yniyWZq9edoxEEPD6hKuWnIFOlOmmnTSkhYLg/S/lH
                jYWttq712y/I8R0dyJ8vXLTDofgspvoVHnuCNb8VkwZHzPJI7WQ7SN3fUWDiVBLRWYn5BLTJY5IGOLPL
                JHyvB4lWBo5p84Lmo3A+niP3EYhmM8E2rOxstjUvrq7t4g3yyPuuQb1zvtlKvnF4Z/ad2kTzUKmvtHB1
                f1HuakqyEaNLiJXmj/SvWgZWtGE1tO2EzilC05TtaEbLGkZNrs0knfckNhoSW5EZGRGZmZEZhZbK+Brw
                sZZGKkUuNJEPYrYrdVCi8ROQzuPSugfTa8VJG6WJdnJe+5J77qPHU91JMi6NB2knWHouy3P8PPmevw/a
                DqcPtnnB17llycHLPuLZYp8qF+DRLnTQbXJYK0Mhc3fDmbGaaxM9OMx9mST+VXLeADWluMPYb1z8ZrWD
                iLXZZV501ae8V4TutHGApTJnpqgN/EJlFUueV8kN0dbnVooyWSJlPcJV1kpa6dO/Om906tWFR047fppg
                4XMR0Var5Rl7S5leX4w05z2G3NrknSKqndynH7rkrciaMgMEjkjm6uka7tbkkk2m3pG8FXKrSTIijbuu
                PFUPXdw58Xa2aUSnVhJ5Pg3VBiihXq4P1PY1ur5pyFj+/TWNxb29xNtc2b2pgy3LtqlZiq10VqRuDumO
                vbCb9IjebedCmtfUFaZzeuHdxBmJnj+rmHxFM3xnluJUvUcd6qcWN/aJqTGOI7Nop2UraEWrlUkLI2UW
                ilWU1Sep7Nx9TE9M6AzUjDhx4cmyDGPDNzXdwtxdGmeymUYTiEIvmive2brSkThmaEORE33zclVRDiTY
                wuRo5VEZGnZSjSrlXmPGCnjaq9tq3DW08IX2RZr4kmB1PtItjO6h8MU6nI0ERf7WUibXciPr+pu3juAv
                g4b+rmjrZ0e4qze4W/duQTsbyE5njqrMrG6jWYoQpMfyA3rbUUzJspuzohMsYGxRGtMckbMSjWalKFxm
                ec0QbTphzIudMl36m2EYriD5NpHXStXrlazYbLmS3tqFmgnB2er8rJnYGvpUeHtwbbeiXPVSMOcKq3PD
                04vUrxndU1N2l3im217kfH/ZUeSPQzWDDLFJ5CYlkRmhtXk5rSl4Opy/q9IZLE2CklJMpEP3xPHVz1na
                o9MnCfg99cqiUscmnUzrZcLGsSTZdPmOX/16OQFzKma+ZWTJW2dijdBVmB9TjZ9qpVH3kzUEoej8apMn
                amodrllOZaV9aZBkuq/8Ntwy3hX+8ZjGZ8aQn2Mj7abkZGUXZ4tC21EbJJ79xqTsSj2I80+d9RWENL2P
                3PLGf8oRbF0AbVnRuXyUX+3rd5zGVNlYWxuTVeZHIlHTWVszsDS9PlWnZVzTRWmmdROJvSDYW2JONdxM
                sUtdvZtDHmbBWlfN8dYrSii1tbS0x5ELDGl+TfYJVyJsDeZJfpPkQ1JJe9NNNZbVEyjHoOx68+MzqWVm
                tvtZph7hkwfC0Yw9iqQ21m5xSpmHO0fVOHPJrnH7yktqv3ZoKOODOwVHemfy22ISCmRVGWmRBXqOcdLh
                3vj0xN75kDJGMY5LHFDfEcm5VwvkqEYyk10ZF6opvmboxqaG9uUgicEO793Gx9ikjOula1bZdGl1bJA3
                WDyzX1k8s7zZ2bi1ujde2d42ODVf2pXtk4t19Zc6L5tc0KQqnVStdO4So6lIlUTSpcvZIxrj/L8LkGOs
                pQuPZBgkpsVt8ih8qarF3YHmyWaTOm4NrghSKid0kXyuqdiNJmZEZYaODneSHDs+4gHDxuX55k8B0PZ4
                jX4E3V+rLu3Vkw1nluks1hsBNxJRd4HC+4HA1KNCuYpHyq7NJd0W4XeSPiqaCotipxzK7agGunC7DKUj
                whSophmSvbWR5UhyG8pHD4djxUPRkKWODQpwbzW7MDC8MSFONFRviULJafNpn4o2kHVVke4w7BZpKYZm
                ClZ982OKsxY/lmJpu/sXq9a8NwjlhKGyhQkh0lWbjVU2NDtWfFUGl3fPUzYEpuTxU+j/AGl6EV3LWJq0
                lTXSkeSKGrrNuIsWXD0tDtbY2h7dft0jl99C0KMzjjtN3aY1Gh9djSl7qMMVaSUtJPj93/c7x4rSwiGA
                NOmpNoszb8q6ddZGBpVAJPYkVlILa0c5CtskUXNxP5Xsu/klvXIWRalMr6psayrGZ8uwT5xr9YenHA2j
                XOeDcrZCqRLKupHAOYY3hiLKhs9ffbR6QwE1+oqf4zFXpijezo/tdMly15Y07uJcijQauSb+DrrD066k
                NHmB8U4ZyKcynml7TNpfx9m9hTDJ4wFCpgvFNOOUm7vSTRJhZZIfeuO5m2d7Qt4fmQ1NXMdyVJ2Z1V64
                8VX97Z1xfwZMsf5JuIg2kuf08S8JfTFlO4b+8kYx4d+E8gVmwqvq5uCYXprjUkXYc3TkOqhtNBHvukzI
                y6pMgEw6qeJNpB0bO7LEs15SOjkeR26riN4kg0ef8iZOerYqnLZXZwyDtb68NNg7KpKpsjq+oZWN3qKq
                UaVxulZIknBXFi0RagHmURCOZMfIVkSIx12mD1irLsBmWNsjKiTA3uD5fvsbjkjaKapogmltcHs2uGVn
                9+QyWFSvUYqNOjzi2Xgl4DYaum5o10ZRoWM71aa03eR5eydlp8sLK7f25odXt1bo1A4g4kgzjUTZ4u2N
                qSaGZdOlVqb25qqR9lj9BkuX4pekaA6rNIeV6Tw1W7ZlPF8DmWSMJ5TbyU1TbHc9hzG5SJqqR+Q2Bm8N
                jS/LbSY5I101misyOSrtFHv9oaK1AK/2WtfTO66XF61G/Jaq+mejHLyXnktMNna0lHWx8vY64ufsgqKp
                n6OzdrG9aypnHCrmaTq0qSkEajr1BpnHMgwuIT+JOZvEUncbjsujDt6je2iXOPSRvsnRhcCs3GnRdLQ3
                VrvbSps5Ip1Ul+y0qauYj1ooL/qWFw/gx5G/jrk4z9aLv3G+kn+DPgj+KmLgI1M9SuFoDm/D2neXTFbP
                mTPdpPnDEkPVG5Ze+1dpjVkXJJtyyNsZq0VjZtLNZrdEplz2ym+pSuhHTd6xKppxF5WlsUgHpAkYm04k
                jFDobF+EK8PUilUidbNnYWNmb9S82O+v3RydKiGxtbko5SUo6iVmZGZmRmJn1m/v3XBq/vQ13f8AJ7kQ
                tL1vaUYTrE9IB0140yfbqfMWxnQGz5Qn8LuK92hqyE0QvO+azj8Sf/Cm5RpWQHKGu8iZVmlL8zNakLWS
                C5yC+S+48/Dmtb+5uLafZZeMfWjnWZnHNLHgPLjnh9uvLDY7xPtMiJ9o5EjqRqYWd6PciMunROU3FOV8
                b5vgjBk/Es1jmRIDKbL15hlUVdrZ5aHO3P54jRWp7cl8nc01G6sSVtqiUiqimfKhU0WUWjbdG6EPb2Fj
                s4pZtRMFvFLJssbaPUWn1FVh3GlgppS2JZ+7lkg2rkKh2Jmjs+RREMDemyCNugvjFZH0l4nR3Fpp1k6d
                rnVDHsWNaSs4li/NkOlrjGpJThzYZoRHIw+MbC5OimllIqZ1HRoYU0kRyDR9CQy4amtXOnLRzA6eRtSO
                WY5i+MVborBrN3K+vn2ROpoMibo5G2dteJVJXI+TpTY2avUSlaFVCSlaTKzHG3Gt0DZDmcchDnO53h11
                m1z6tAHPPGJZ1ieJzi4Vuk/Z2ayZnREk8pmgz76fGUzReoIiUszFrWiqCR/W/wASLXpq/wA5NVjNv6EL
                PLtow0vw+SWDe6x/Fv4K746s3ntg3XqF0vat8lSbB4YHgjS9sa3V4JK91R8mLNbmjC+MNQGN5ViPMULY
                8g48nLVctD5G5G3IvLa4QaS5L6xJeymx5a1oJzjz61di9sTzRQ+sNalcUU1CCBYm1JYazrJsxQzFk1OT
                SXT5kC8xflpsTHZdHzic8sKSjqsBX8jZmZskRpIlGTrHqz2xVOVJFcEoyIWyyPiqaCotipxzK7agGunC
                7DKUjwhSophmSvbWR5UhyG8pHD4djxUPRkKWODQpwbzW7MDC8MSFONFRviULJacbPABxY5YRk3E7w66y
                N2l11izWZdwG3k77fG6PElZoe3OLTHn51vVERm4u7PZt66iVbGnlL5JqItpG9H+0vQiu5axNWkqa6Ujy
                RQ1dZtxFiy4elodrbG0Pbr9ukcvvoWhRmccdpu7TGo0PrsaUvdRhirSSlpJ8fu/wyraZ+KNpB1VZHuMO
                wWaSmGZgpWffNjirMWP5Ziabv7F6vWvDcI5YShsoUJIdJVm41VNjQ7VnxVBpd3z1M2BKbk8kgwRceK0s
                IhgDTpqTaLM2/KunXWRgaVQCT2JFZSC2tHOQrbJFFzcT+V7Lv5Jb1yFkWpTK+qbGsqxmfLtndAY7OK1n
                PJ2mzh7apMz4YpXKclRGC2NtGnKwoes3sbOYSyPQhznFggiTvewdpkjhMUko1FvHeqduUzsz058FnhtS
                rTdj53nmMLTUnK8rQGMTucag5dNZy8TTKEim8espBfzdvkjfKf1LbHeo4nWYkMK6Z0kIt61a4en1VV6q
                3s8SXVXA9JOl+SSeb41PNt/lR7aMC49whzNp0MxT7Kbe5tjZAXAnNK6ZtL21WMirSAzpuxlHmxzNVNRL
                UhGGvCPBU4gbHgeSQ634lU40nWs872f7DTRg6wncrxPh32hvqrv7Bx2aynK6ZYTSn1wmd97lWZnUW6qV
                IJxTUissLhuGDm+UYRxTxLsNOk0fs44a4ceVsjNGE5xInTvaROeN4zEpHJyxJfyPl5XGpjP2aQzdsZqq
                opyEk0U046bEz0Kf8Obh0YM1v4UjPEC18tZ6sdQOqSm7zTeYOj9+D3EsRW+OthHIJjyGNzwhobWpmbG1
                BGp27dTCtao8wJpUqdau9Vy4Tb+w4oasvcKLMGCoNiLNenaPKk0ooY+uHd0xtqaxZkUrBvvs5tTlKHZ3
                ljq6PhuDYyZAQ+qNLCtyZGBgNipoqwCDUcgunvil8K+3mGNtJ1lgfVboisXaTzfHEczfkQ8aZB09Mbip
                ykshYXCUOjkxs7lFWZRXdVTzSW9KfayHF/WwQQ3p9Iw+8Gw218KbiiaZ8F6eH+Rt+kXiItGarS+0+Pby
                5ydgxLlzDMUbJPTnmPb93dieGlue0OMfYa1J5qvnaU3N4Kop1NqgtKN7Hw1eeEpaamOIzqqeOKnq4OPW
                EPxOyyzCGjuHQuwkLXj+1u3Oq4NeRJ/Dm+RpU7ubWTW4ucSOYPxG+yJ7kT7H6hMVCBtDGjaGAa9XHDxd
                Bc15X4UuI8oshSrHeSda9jDplGic35oN6jj+w2Dc4WBuUYdGR8bCWlSVE5s74zKpGo9jXzGZ0K4hXC00
                m8PrTTP9bmh69nej3P8Ap4t4/MopJIrlzJsij82MpjH232BmjbkqTzem5NMvTfpZVtHaKYXtakUpRH5D
                HVvTJWrfxzIpNZxk7hXwzG2SLzEOQZRrRs2WH5TsI7Zy25x/I7xisKbbLKcXcnZjaJJ3IpK3Xuh3eUlW
                NJKTzbJ2t41ZcJHiWza3ieQZhrej3ETssOvtnkhu0pZ4xk9YRxjlR4jqHAyZb+xxhkOoyubqoz5Y0l+7
                hY1nf1I9In5UXeJAb8GyZhabO2SsPYkyM+Mqo2+z3GcFmz3HV1NzY3aXRVrkDgx8yzNSlNF+4KbiUozP
                ZB7mZmZiqwsk0Fav4vrj0yQzP8UjblCbt5unmNTXHztcpvXnH87ibibdJohfOCaTOm/SjZDqwOpWbKmr
                H3NluKzGzXC67NSvbAa5WlXQfU4i8yyrrd4n+KMiPb6+5Ml8P0yaXsw2M/x9HsFYJjt/3bHbxzx2404Q
                6X8nmaDv1SBb2yrY38v9EKLdZviSY5H1I6X8dcJHVbox1RaM6TvjLGuo3VDANJWpPTs3yKQOmPZq1ZXJ
                09nZ7HI65uppaJRDEx6RvJUzq1GQ3iq0IYksKVv5SLY/lUpjUDi8imswfG2MRCJsrtJ5TIHu8Q1s7EwM
                Vibi6Pjne3ikpsG5pbbKrXuav7GhCVVF8qUqWWA/C65lxdtY2O9YLkyPUR4eGjmYPDtpRsnqyumh51NZ
                7bLvutwzbftdTkcm6CwhzbU/g/NRERPbUklH387zqPR8MkGrDhm6I9b0wj+QdTmEzyhLYjGFRGOuRZHy
                zCSb476+4ufdim+BTyHNjihbo539ZXe9KrU3qGRLSlJENfLihcKTh64zVp/0l6PtNLe0ay9X2TWiPQJ7
                r5azxLbbF2Lo5fokmVMtP8ckmVXtnc2hmaG3uxRPbHWV3JWmD/G6iZFHiSe3e7OzexNt+8vN7bNrWz2V
                y4ObpeVfVbNvsrC0Xf3t9e3tRSUosKVNHNVUaUkgiUZkoiMkYIeGG3OGtPU9qW4ss1b7oopLb6+0y6JG
                p2pLT3Jp7x291bGRz1tsHFJqbXXJ0ppqVU5VoqsD3+EhgpqOPviErDMjgbDUI07YbxvgvG9mTZBsVQ9j
                hEcoVE7XlexYLJNkd+4mlNEnB5eL/md350I1VHl7cXG4rGaqx74lON5r+lWlvAl/hDAlRxddVWcIFkh7
                YaMerJQ74lwtj2JyWTZVzU4kjZbSljiUdkNONOiiSs3hud5Cxqq1IXWSjKdqb1FY20nYJyRqDy27E1Qf
                G8eu3q8VRUfrz3eqUiyjsTYkkpC3CSTF4vm9ij1uRrKq9uVJJ1EoJfJgFhOnfJsv0L8S3icasmnsNT+r
                nRNqRuYVCL097fTxpvLC8xv8d40jpOfLTa3N5abVufZKdSolfKhmJ+oM8mXPFPIZfuFVUqVeG5oeXUPt
                Dq6ZsUGZ+H/Wm29N/ce235vMZAhj+4VX72zod/gyYn/yTbhexKpA3RGMSKWux3BtkXY3aQOZ2VFVxdlY
                MNku/vysbL5XOsqdkrkp+a+hKLmKoAmkBgx/zwpoB/tDU1/9r1Lf/rhmVgMzZ8iQaGz+PHe9xTmLRyXM
                ZOlopudjaJGytz+2pcm/kJba5pbnBJ12xRGdNfOhR7EsyDELx5sizjH+iaOWcek0ox9jjJOpLEGKNSmQ
                odWKzkMI04TFUkLIT23uPi2KeXNvj0PMj6vpSX2cPfv4Stk/gW6FJziOJ3+kCxp6X8xRKjHZdgzU9iKX
                y+RPVlftx03ONvrm5FMFHOGp5RUTUN4N4S/lSqoqx+R0UkRVcymT8awXMcBlmMMmRRnm8BnDJesEpi75
                b1L1qe2hxJNOpY1qZJTug+YqiL5BlUa6hIq0TSaTqI17pRFtTnAyu05Cxq7zXU7wsFvdumeYefb5UgzD
                pCZ5C4kk5Hjp+cKqvaSBtDo4FyMy1JaKdKounI1R011Z8Av04rDTIY9wkNUjBLpVdTuUNGnS2aJHN7xn
                sWG6lklsVR9vcJbUj7URtTOb06UlPZtLQSaTGur2dFdQ0lvZlxOP9TfVv4M+g/8AjL03C8/itTKMZC4R
                +qnIMKe7KQQ+cadbWYRWQ2CuazfI7I/Z91j703K5SUum7tbhYrorUmn8hZJ5En8kWYcTj/U31b+DPoP/
                AIy9NwCtES4A/CZfIVGL680p1u8XiKst/eOFHO2pPtzvr9jbyqXiSLLhNx1TLxM0cmySNJGZqI6c6HWi
                VaF+J1k7hsxPKk3ylpilWlqx1TYmjeQH+tOZVgB5TkFMHdoGl/MqKm6KvZoc3ek2qQSCI4fX5Vv76/vs
                gsifcs8ZvEGp3T9pPyxriw7iWF6ioU0UMBahamm6BP0KksyVYtlM8V7OMXShsyAy07/aPNj2fcz88nEq
                RHs/Kpnm+0QcO5t0ny7KGcsm5nmuqPVrnGlZt+UtQmQW2zYLu6jrYbabbB4ZCW1zeWuDxSklubVmzU35
                6NdVsZ6NOvTjzEwMLGGKp+0N6XdcnG714xPVJi88mMcEwBpskEWsUzjI0GNrenOJRtucLwnHG0vhrm48
                zZtRInhVUi5iShW3Kor8m/gC8JVocLJ0bdJvqbg3Xlpf2F0jO+pU1Wl239LCoklZpURqp9DQRpUlR9Fp
                2PYY9prp1zfqI43Gu5jwjq7yDpEcozgLTc7Pskx1FWGW3sss7+IxxupsLiTq8MqrBuZllTdUkRqWuopK
                i9wvXbOGTr2bXOwvrzjO6lXS2s7+1ubhruMSw8rO/tSu9/UqiylxmkjSRJ5iJR7bbkaTIwEA4o3Cs0HT
                nCWuTWHKMCm56jLXTrmfJ9DIx5SzPaptpzjvCzqcPfihbfkW3x+a2ZMbj5qaTjyWB8Jsp+0FvWSVRSpR
                4T/Cp0FNWnLRHrDsMEFR1G1MT41ygeRvwp5mMjnbjEEqcHs4b+ERWPU86nFxp90pjq2Mk1DNNJRmmonK
                HxHP3vbXf/A11OfxKTgSZwqv3tnQ7/BkxP8A5JtwDICLGNV3EJ0uaKJTheH6iZ3ew92zrJbqPwajZx17
                kNIjb71ob3J9kRtLdcJj0UaL+SxyjVeaxpWdW8UpCKlJpd6lG+cW+Zc0w6f89O2PXrNGGceZPdsTSRUs
                xxeTON2T/cxN7WdlUO9a1XyFJIqtZvb6lZvqFUaV1G5sNdNXdNA0BcGLGeIFj3VVlzTVLMT6PpfGMb5V
                yK7R+JuuTZC9uUeu8f42c3FdOaP8PqNTO+OFaXk00ls7GlJsde1Q6Or/AB+RscjaWCpUvmABhZaeAlwy
                WrER44fcELlr7VbVG+ZofJpLlZkdZEVmZ3029sLF5oJa3etf8zqltZ2qlHKdySP9DtSnzUleLge5fnmQ
                tOGcscyrI7lmqMaXtWWXtN2IM3O18TpeZKxBj8o3ewtycXIiX3pVJqkCCpPCkqJbDfM9uWxM+5TDxN+G
                TmPX3XJUC11Zn06Rc8dWUJd8Lslu/PGHJ5d2L3J3dL7Mo40ZAhKXNxeSf21kf1vHf1E2KMtSEsdWuSiV
                TvgrZVf4dFMx8N7LGKIFh3OmhB1jrA+2eMqN/awvJ0IyEbjIY5lttS8F3pfusvMqj1JnaoW75UkTPIey
                Yqj8qPsIUV1dafMScRfjPQHTVnOKKn2DdLGimR5SmMb79mETtbnI+VZ61NTe2d/wV2j71Y1O6EQyV0FE
                9pNRNbikkL2+Xf8A4B4OvDk0uZbimdcE6dDg2VoJ3/7KST8LudZV3aqSRZzhcgMmGa5TforfVHWLvzmz
                nVdWaquki+OrT5apIqpplmvglaMdTGfcwai9QB5dyJMc0Xsb7+jpZHcYTCGRsh0VjsYjli1tkFpMDtVQ
                0NscsKpVXp9eeZ63rGlKeotJhWNZtwetcmlzDmOcuZCyJoP1wyyTYptsT5TfL+Vuun/NLc3t7jDHDHkh
                q/KpxqYuTlYMampXKlTCl4qSRL7IWZieUhV3UlpwyjxF+IS9ae8/sGYY3w69MOOYhLr1osW+XQiFatM6
                TL1F2p2NTIzZTYzkcTg7M5GzPzPEn1ao9Io260qlVnuJAa2ammv7hK6WcI6cci6tNGMcu9JWpLSbAZFn
                CBZAxXIn5psXezxU1uMzkcRl8ecnB3a3mk/RtqdGuncKpIeaj8prOQrfIyl7jj9sZDXz1x5kmfEizHIe
                FrpHdbmhjVjdLKhxEdSTXblcsGLoi3vaTVgaHuRLUh0ylMnRrcWeRNSSSlFJpd44ozp052pgDLppBzK4
                aidLOnbOry1UGd4y/hjHWQXxst6ZlZtzzJIo2Oj5Y2C11FqU2Idb2/JkWZ71WfsquyDVylRfiWZX1B4c
                0d5Xk2lHHU3yRqMdqLPCcYNMBhrhO3hieZk+WLc4Tc2RtZnxKLCFtFZ0fCcnhoWwoeW5rS/kdqtRneTB
                ITG8aQiG45hTahmh+PYrGoRFWShsq2a43GWewj0fbU7/ACuRqaW+xpEfTZCCIt+hidwGEvD3Ai0HseMq
                TbqBxirUpm6YNVk45oztkmXT13mc3nV9YmckfY+4nKEVIo3rcqt8lgQ0qKQ0mSm0+0b9IZDSrP8AXp3w
                yrCVaQdb+r7hhWc0lGRcBY3gMA1Dac68xdUvEixVD5kttapHim/cdiNbVSdHOxqxxBpQtaWx4f1ISt/U
                gsj2t/W3izQrh68yfkRbhIJC9uJRLEeJ41R9bnGY8juKVlH4PDrAl7ka6vyn12WldNlomVVaalxUZWN4
                tS4cOmzKGFmLUFro1suFi2aqdV1azyPmJvKoao/gvFsLYr04TihsUdR3MyhMVPlkNRCjJC21oj51XpUe
                VIH0LFtE+mHCvE9zPrV1P672i4zPkrFOqnKOnCBYEl8he7SFaeMa467uVHW5uhba5spKdH9V84UZE7Ot
                OoyyCQR52kFNFOSqfKtOcWjEEA4a3Fw0j4X0f3LlF8O654Xmz8O+meykD8/xSIu+KYqUkheaI62urw9u
                8WqvTi3uLH2qVJj6mONS5jppTTWlDBQDDumzUPxPtQE34lGmDJrvwx8L5CN4g8blGOLB8kWZNWbNC31x
                jZ5MytDvaxhxu1IJzbXJpYF1GV7fi7tP5T9/ofnonLE+L8lcI/W9Fsg6v3y31gRbW7MWbAEX18SI5XaZ
                yw7O5AtvKF4lyFHpLMZnE2nF0g7rNVu/QqrQqoU1ulSSKpx5gY48QVYzRjNHE94p+atImeZdJP6EHQhj
                3D8xe8DRx+vYtZ50y3mVibJq3PuQHNqc0vbtGYiz35taCa1tNVhuLLs49cMqHx9W++XiG8L3T/pSwTKt
                cWhJoqaSNSWk2P3uWI9Iccur77JzyPRtSnKSQXIcPdHN2Z3doemo3CmfLSJT4fZR+TJfozVNiK5XWfog
                1TN2qpg4hHDtm8Ej2oE4VbYyzhh/LKHRGMtQ0GaflR0nK/b/AJ1olLMlLe1UahGxoqIamaqiTMBNDuUh
                xNalswcUjiL6jYdwocnQHEGnWPyRvjeSNVlHC0y/CbIIrhNtfW1zM8gzEnZ7ZY0T4lDeqNw+mkn1/fHO
                JqkBFGH7qG1BpvyqnO+nnA2cCskNZ5lw1i/K5NlM9+7fwiQdgmZt5GZmZlQ71OkZqPcySW5mZ7nNOSse
                xTLePpzi2ftBvsDyVEJJAZtHScXJqN+iEyZXCOSNjNxaHFpd29Lu0ubjRW5szuzvVEl010K9KpSSoo3E
                oyxweLxqFRlvoM8Xh0dZYvG2ygaTtm5mYLCm1tbchJmeyWxtb7SkkzUXRJkSjMtxNQDCHJeA1wbYdHn2
                WyjS7YsUbizK6SCQvblnzUtbtTMxsFgbg4OTif4a0kltZm1v56m3OhFKmatiLdQtG4DOi7D1pPNR3EOx
                lib8FGJcuSuSYu0bQm8d5W/O7Jp9jr73fIp64OM7dpBLzdMmSiN2SypvL2s2RbTK0x8yir6zGd1XGMyN
                L8rFgbhf4UdqrflrXTKyb8hvrere7xzpjht0hxytLb4t9kofGxvcmZFHoT+yNUwYtjVUIyzFYyx1D8P4
                6gmJsftNBghWOYrHoTEmSjsqm2xyON9FrbLJJ9dyQ3WCE+BbqJR7F0Igx15n4LXDPz/lKa5my1pqTLsl
                ZEeVSCZST8MOeo6p3eSJHLfd1xjKjIytqt7JBGTSzUOhcyEbEoywkSbhaaDci8V7EGlrSpp+sYxjPSmz
                2ecNbsrrTzLuQWx7dHQ210xPgZdPJmQHxqQt4Jvb3SQIZjUqqxyR0IiKvDH2inZh1n6n4foz0zZi1GzQ
                qVZtxtE7xxa2evVK3OVS6/VTbIbErNZKSoqshlF+2MyDIj2O/NW59nsLQeEDphl+CNMd1lfNvbX2p/WB
                K7/UxqFe7+2K0eKEjyBu5R6I36N01G6nDYy4U0KZuiWV/dZUhO5VSMwyQ5OxtEMvwCZYwyA337lCchRp
                2iEwaWmRP8SunKNyGyqNjs3HIYa8sErbe9m6pVbKlVkeresqkvlSsy3IYD+Fjp8xLpZ4q3FhwRgiJHBc
                WwWHaMiisUN9lEqW1HI8THNZHzSSbPEglTmt1lMic3eobq+qSanFRoLlPlLY4GDDRl+/dcZX+9DQj/ye
                46Azni1XWjqHtNJ2lLPuom5s7Z0q4jxxI5QztV9ceq2jzJVU1NkMYb1adlosXmUuLY0GrpsmpzJMzMjK
                6oYbuP1Tv6vCQ1cIa0XXrfqOFqtYrHYrv1ItRGJO8+Xpuf6lpv8Ac+u2xgLcNE3B/wBP+ZMIsGpXiDRR
                x1R6r9UEUaso5NleTpDK6ZQ22yDY2MkbsfQ6Px51ZWqLIhjTe2DSamWkk2R6U7MkTWyRam0sVP06RGR9
                4aXEgLh1tcxk0o0ian8TSTNOkpimT5fSJ1w7PoQtyccjYijrk4rW7OEW9mGyRS5RmdQqRlEjPeSvM8kD
                9nPxRUb6uLcbVGk7M2ytAYdWbSsVb2fqZsDSdh6iST3Kw7Pl5N/6g0n+tMxh01+K5+L1wTLdjNXtDSvt
                c9w6FYl2F37OHheFqWpwvuTnNsNssZGkqfMsjSh05CI1K3CgEBwVHuMTrd1T5J1MVpBNNGOifMTvpmwD
                gejJ35rgEuzDDG//AOavk6ZnHqjKp4Xu5NtRiNdQ11GCTNjCpa2BkIpFBddGkSEcJBUP4lGg1jdMUMuN
                Z7BWDVrgyOvMgusZZkwTL5A3xZ0Mo85uT0lrlTG6ObYmO1UlTYGY3SpJqVGk/sZJfrm+Arylp31aW9yZ
                9/WnEX1UW8qKuZd6FIkqhHMbjv4OXdRtnOfmW3uFw/GmqNdDhb6zKjx6uVqWKypW/bUDuSN3VLI4mPcy
                SPr+q3qCjJXUlbHuAte4mmQJrqrzTo34bGDsiPkCh+rpslOZdQOTITd1LCRf0MUKZDcSj8fdFoOo3FlK
                sTm1doinyVO72dhf01o0+vrNVmDK/AU0JPWJ6LBp8x64ab82wiyqOOHs9wacTxE3ik7bE94xt9kN/XlT
                tVkdgt5p2Knwll3wdPtDjtZj5qSkW46dKLna8XTQB7VesHdV+Bdjmxse9K/rKimLfO3A5IVj0L9V+6lH
                38exb0+zLc+ilbLIDF7wjdVs31b6MovJsu834dcSzKaaf88fKs6i62UMW31nZOV7eqblrbSc3iNucceH
                ynSNCKL25OdGhTp06REWR9/eEMDC8PSrFzcjZmxycza2WzqOby4HYWdS89Rbm2y5VuDlXNJ0bZupnzXF
                VZEhR9FHhP4J9T1h24q1227ex95xZNVKo6dAvV2glFexvm7tbuVHd36kqjxcpEhS6ZtmySMtizpgNc/R
                Xw4GrWuwuOujiqYpl0+1DZmlsxuIfgbL6Z3E49poxZYP7tGoZAW7Fq1R+kl2NvbyeO+Hxm5lsbm0P5kU
                lW/SF9liV6eohwmOIhowkWkuo/QrTvrpya84AzfprTJ356hNCYX9i2qheToU3SJ2fO7HJndXBNR8JKiq
                MUdbnSOx5NKPvqqce2F8lZJgmHYHLMoZLkzXDIBBWW9kkrlL1WK1aGNnbkKXfX9wvZRoQktyM9lKM1p5
                SUayJeDvSUy5I4mer6LcSfK0Xf4HpO0+2UtjvD/xpILcraRz2/lCiaJfqWmTZy7tpPTa3JpRpqqoNKUp
                Z6jErkj65BPQp/e4cYuLLxKdW8N1MPD7I9KfD5c8bwHHOmxnfr6PRqfZTmbC4uclydlWpGnam6OxszrH
                pEzxpmUqkVViNmNSqFL2jZptLfEh0BYf4eWJr3iP8P8Aak6Zc16ZHWIOsjjUVdX08Y5rxxIZzGYzJIFk
                GGuDutoXRWqQWrxzNfY1XxbUaFIVI1x9+j10GqDRPrHxFq7kuv8A4bkpxrcT3LccjMV1M6Z8y3F+z4+z
                YqH2JtUalkecWxNPumWNDXy7IN4jZJXYOb4T89rfXyOP2L3Jk54ifFh1hxzht6gIRirCWDMSusEy/rKj
                uF5TfTZVCNt1+mRR2A5AyETo9M/tO/dm2FHIawpJDI/uSZJIikHsSSmINtiCSy0ncKh03sKK7ZvmMXjs
                psaNfb1ihZyNmsXSyQoi3+UinfEhZq8FErw6kJyHitba1sbalZ2lClbWtrRKjRoUaXq1vb26SIiSlOxJ
                Ikkn+p+JmRbmZ2d6xddGD9DMahsrzhb5AuWqdPl7HmT8H8Ic5veHetrelyvTcLFt5TsafZ9DWe5KUXiS
                kqJIXogMVWmXi/6StWuYmDCOKbTNlCayOzkN831pliGQRCOJtY+yX8hvk37+5EpFjUNtsDOkk0b1Kx06
                adjMlJyqgA1DNamt7Pn+aGvWtjEtCu9aL+FfkaJ6ac6nYOd6RSu+zw4ezmom/b25KeydKkMdvYyJ1UGa
                kssijUAkZEqkSkpzzcT/AFiUdDmi7LmcLO4t/wAINVrtoHhxqrlvdP2XppztUNp2Leaf1TSxmpwmT41p
                MlVI/FnjYjSlRrwB6MtfnDNwhw77PRllhh1Dy29ylCJfcak3KjgKd3RTTJGVG9ZZFcykbkjndHdmJbey
                R+WqUb2aYyzSRKUVPlmG3OyvjPJWZqkjC4WLwxPzXZO7E6WNandNrk0Odkhwb3GxvSJSFN7k3qp1E1Ek
                aDJSVI5iMlr12eJDprwtq04xHD4whqBhSsgYxk2nTUFfPMWORS6KHXu483yGQt1Q36EO7A7pJDq3N61U
                yfEEfKo0kZqPmnf0evVtbZh0xSbS5IX9weZto5kC4RHnB9sb6PvsuwLIb5yccNShcbdVk7NXdTVYuUQJ
                o5DQwsDNECqK3eqZCn3EyieoSa8Xrh+x7S3lKI4czPd6d9QtxHJ9NobYzqPtlm3Wrkp9s7+O35GpxU9N
                J3zYhSdlUt0rM0mnnIK8ZC9H14chRdzvsHQKfaZMtNNnduMCzVjjNObbyRwmReqGqwekUppkORttWxRf
                8iX/AJEMb7cNC3KnQkTHUqk804Vo61J5O1S8D/MM+zE7UpTkmOYE1ZYulE2oJqHaz1eOopOWBvl51N1E
                4uDyzpbifXZXIh7fqbs9I+TWRTT6nvQlxc82MbnjvPvFRi0exnJaBtExssA6a4hHZvI45e81FzYrGcGb
                E7wc3VsM6dR3Y1Lqo5zI0GStzvMnunbGGlDhkZv09YdZK7Hj3G+lHPDQyULyuq7dr+7vcbzNydHyQOxo
                QbpJJA83zg8vzwpKPWHhwqLItiJKQxKcNTgtcNDP+hHS/mbLOmlMuyTkPGNjIJjJfwxZ7j5vLybg5l6+
                TZF8qMjM3GZkRF3Qz00l0M/AzVmG0n8MvRHogmMgyFpiwmeLpdLouURkbieR8szXvGOlftzobYTfPp5M
                WxuRTdGywqp7opUlmdLlNa0qMhhQ4bvD91nZO0N6asgY/wCK9n7C0QlWOW92jmLI1jGIvDBCbJTi6bMT
                e4OMtNTjTIyV8pZEnooy8DGZPSBpB1M6eJxJpNmrX9lnVwxPsUNga4dkCDsUUaIy8G9NzimVt920vDzU
                quZNljfNCqS0opmhyUs1JUmnuGRoWL5P4g+l3DmqrEmjKfTxwac8ZmsbC+iEfto09XzQpT+4uLbGLeQS
                SwbVNLS4S91YXNsYqKlrNFSkjvxTKTyxrvL6Bb7KdM2nub5igWoSX4egMjzRjGxUzwLJLtGbC8l8Ztlr
                cVJoWDovdf6lm5utRkVURUWx1HZ4qMKqFR5uO0C4IW36ucvp0/6XNRebyWSLnFWF8jTprJRESbp6jsUc
                nJgsE/JUfM6vFNva0ntsaqhFunbmK5AWw6ttNUU1g6fsgacp9JJbFYTk8o5Yyl1gt232ctU0sMtjkmu2
                xrcXVqemduS+dwVGJ9Ouyu9M2RxcyShJqJSAwT8OXgWcPbJWhzTLkrUZp2up9mTJ+K2nJMwlV5ljPkTu
                nBOQru/nEdTUj8ZysyMbXUZ4vIWBmT3Q0W6SS3U+ildTyzzTHUL4cXD7zm36O8c+zTZg7EGb8mY0gq3q
                WTS2oy9LFJp0m6cL2cvUglDm3nJCN1uGk3pXbIJbJalRpEjlsOl/o9OkFqYlPenKb6gdPOf2Js3gmfY3
                mKXO0kaXdvKgltTILBzd+xdYwhdnYVKjQz1Y9WOlSUi3eGlSiWIjpw4plxHOFpmDUtrHsUSDK2kzI090
                v5pbIzQsLI8n5hhz7HY1HrFtsENlNsajmpTSGpkC6bIllQVR7kdNhpx40MdIKf8AD24WOh3UVpGxTqU1
                Dwu31fZu1RQlpyxl3NeTZjKX6RHMZe2lVkMSbFtzwzlHE44djcIURM9Og+UnxpuKlS6pLRSps08cK47z
                T7rP4gvDwgMwfcg6YdOFxh6cYcJ8fb6V3eFbzKrAbpJMLJkLitRqamdzSr2dZCWsmBEadzqEuRvT/tal
                ph4Rmu+9hM8yHH9Zsq4ZrHnxwu522aNdOzNMJrCMKJklhSVZ2SHKS5TZPZ6TdmreQs8HSxUmSuSLWNSS
                PsLIwx6PXGcKxd7oWzdO+F5nXGcVYc4SZpd9R0F1MQe/kTpY6xo3UcUN8hl04v5u6v0va8xMyk36JG1K
                eKsepJb3pTBRZKHcz5PQ/kH0YvnEu1b6ms4cQqAZQq6d8A5ke8JaOdNM/sJzjOEPbPCjUiQ6gnBgI4+7
                TptyV6+2Occe6hKYnyjevEduar7HmNhZWKivEX0dYh4UzbBOJVoWZbzBkhxLkzHLBmjDkWfX1WNM64rm
                EiTGn6LOMccHZdNrcainCwXS7mqEyJJCZGccOTsjK+UNnS6u7ayt695d3FK1tbWida4r1qxULehbJJSl
                XKln8lOySPqpReBlzFvueu29SN341eqqGx6BUL6nwwNHOU7ScTjI50jtbPV3qFhvy2KBwtSzM3HFkLO/
                5pE79EPqHB1JKC76gb+xBM2umOu+vniW4t4aMrnUohel+Caa73Vxn2Lw5yvY09Z3vfwlIg0dxo4yFvOk
                7FGGg71reFEzLQS+8ZX8opExR59j0W1e8F7R1GMGyvK+kuG19JeovAURkOTsPZhxXKpY1u9lJsextyd2
                9vldRxeXknVoeSsCapA8VEJkxUryqsnxdKs8sr1XjiE6F85ZWzBhfW1omyVGcXayNP7O7QyyoT+3cb/G
                macUuN+4ON9iqbm2mdRvppdXN9JjrkS0UlSh4WqoxvqGSTR/D9rR1V8Y7UFMsb8Md8xBp90/ZK1XMt83
                zdwxJO3LIctbMLdGmbzmRuLc7vrTjHGDy2okRVaSyfJ+/M7U8R+Pp7YjN+DOPpn16M0k4XePdfmd6lBl
                pN2CLzIOVKzVanak5ySFKv45Ijj1gXKaFTKVR6p7MsxK2Jbs1MWylJMhjlwDoWyPxZm6O60uJxLJtUxR
                PLpM103aFIdKX6L4ohGKnFK68PlOQ79qNkepNLJkyuLe9UnZmSxPqI/VpnIn9aHw8ewOpHGNwdaafOBd
                kbA2IqF+UPxDDtPsQr9jRT3u5RCPZbxw3Ob1fkXRTm5uhplsiWRfL/VhRkRnuedXH1eJ3UFhN1A1Whwi
                7iMcuYb6mZepeyNRjbVx/u4j6k390qsDQXUiQpO57mQDF5OuBfwt5tGijp6WY3CLmhbHQapTj2VTyHyp
                lu0/tRxs3VtlJKcXKmW5oW903gj6kpCt0mJl4fenDWhpLk2WcJ5gzq36h9KDDas9/pnns+vnG+1CMhuC
                uW+gEzUmmbW5xiHWCezoOy3hdRZqa0Ry1Y4+S45H8qgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAADB3wymxzbtevGdvL6wv7S2ctSOIbpquLmxu7O2v7JMQm3NUb1H0cSRvspSC
                MiNSfI9jziAA13M0RWVcIPVe56tcRxh7fOH5qlmjVYauMRw1svXX8AeXZBfob2vUPDY63prrRFnxwq06
                MpaWilzpUtcfpp5VY9Y2O+niYaVX/XLpNsbXCEnbLXMuOZpAtSemOZ2zhZrZbzJOO1Lc4ydJ+PdqJrmj
                Q4ubSzPRmtjQtza5Cpa7egionJ0ADBhi3jo6V49HacN10e1+irUrD2w6GUcR5Lxnk65t6ru3ko3F9x0/
                xyKP6JRF3g9nWPFzIfDo1FUk03mnS78r4weIjqgzLrsybw/cq4iwxkuKaE4Br20+MEeyFkGN3sTkuf8A
                KMhkLo6InEMhrkSXhsxVBYrEJIy05e99xJfH6dHvuplWpj28HRlY3dVqt5Zm11q2FbtrA3Kxs7tVvdmn
                Y12Kr1B8i+vRSTT122UXKRFHQGDnWI2OlxxqOD460bC/uWtuh+uMnC/o2F0q0sFOOBpChvTfuPg3mtXz
                SUrIlGo+XlIuUhU7L3F+0bYQyrm3T/q7o5G0/XcK9ct47d5VxVK3aF58gamNr7zfccuUWZ5k0yRqU4uL
                ixm1PBoqPqaaDJKqpv7EwZeBA3NmZ3albIdmqwdU2lXt7cnKytLsrW5SRp9dQm+IyQojPopBcx9NvAtg
                wJ8HHAqJTpk1xE/4xkOIdJmsjP2aZBgTB79bdwOzDp8yIwphRONjHkJUcVbJg0LS2MTUZEijSjpVI+b3
                F1MEifab6SdZNThKRSx0GcRu0lkBg+J3J4Z9M2ruxhMulWHcxYsdH++cI6zyJzizU/uMKn0epOC2kmSp
                SrIZmNNJMhq0kMSpDIdlAQ6+srNytqtm4W1teWV0R0a9neUE3VvXI+mykrJSTI9v6pJl03IkmW4DXP1b
                a7aHFEg8h0HcMyjKMr1M2erRDPOqSpCZhFsJ4DxZ3hYrmneEjlTUwlJpQ/NB90Ij7KSjeGFyeURuvWkC
                aJUZ14zuHG3FPCvxBhHHLW7X0bxHlLSZj2N29C3W6OhR3Hji2RuwvnJLeSDWRNTWnvyry7KI6hkSeYiP
                P03Nze12lGwbLK1sLKgk00bSzt02ltQSfUiTZ0yQlJGfXblLyMiLxESABg7xO2OVLj7arHao3XtJquNB
                mK7Og6qs7xNpcXhTuGGqxS4GRoUtJINRoIi2IlHtskyGcQAAYq81cWbSpplz3kDAGqqjkbT9RYG1leIT
                kqfY4lbpivNDQ6sSHN0Xj2Rw1okHeJsDgtxZ36i8opGl4bHWkW5JpkWVQQZ2Z2d5titXppsHi07Uqvqb
                nZ2d7besF+tUVK/QpBq3M+U+Xw3Lw6ANfzg44qacg3fEnzDFMVveL9DusPLDJT06Y1fmj2UtnyIWUUmc
                ZyrP49DaVNCI1FsnVX9sWxkhFNKUNimHlQlhSk5I0o6pP8xta7vQhr7b5tGMIQSVSOvpP1lNcPf5ZiSe
                4vmL+5SJug2Rr+LNrw7wjKTG7OF+mq0dymxHRcFUk9wRplY32QbKYh17ZWrjbXFleULe6tLuidC4tLui
                m5tri267pUhXyTIyVv8AK5tj2PYlESgGu5qy4ijXxFYBLNDXC9pSLOs3zy1X2NMsZ9VEJjFMEYCxXISJ
                uyA+zCZymLsvebs8RG/c2djaWRKqldTn2kcU9yImGOv16WqvhsseWOGe2aFMZyCtHnnEsAxta4Rm7ggr
                ddvkfDdk2ezb/IDbVoNqVML9vv22TObKldVmKTOz/bJrVaaaVTKXYNrc0WdJta7CybbCknajZ2FraWdp
                Q38OW0pklCd9iM+Uuu22xGQi4DA9hbjVYtxewM+IuJoyzPRjqoh9ipkmFjPoHLHTH2T7+OqJsc59iuZw
                dmf2Z0jLtUpk8qURpYkpcjKNv0ij9JD6upWNeKxQ1Y56xxjXQLgae6g8Qrl1RWfdUMrbZZiDCOO4adio
                rwoW6ymIk8TieJc1c6IYpiZSd1N529Cp6s8PU7geXt2Z2d6titXtqsHm0KqVUrNzsrK9tfWC3MjTScEK
                Qat9+Xp4ee3QRChbW9rQp21vTpULajQ7GhRo0yTbUbciLYiIiJBFypIttyLbY+U+pmGEeTNrmr0hvHju
                Vi4Gz0eFTetqnX1K7U1pvValpqorBTgR8neZ01pqEkz5jpKSZlzGW9OtQ7Zl3hq69coa9IRi6b5l0eat
                IrBGjV3HMUtS37IeHMj47sUxuG5obIYhaVO0VJmqX6JHVprLlquktqyA6NZEd752CQAYUn7jv6CXZlb7
                LTvKMhar8xSdCqEAwJhjEmS1ZEkrupJpsrS/KSxFia4m3E5qsqDy8PFdSkUanasLDIahHQVarwQWHUVY
                6zOL08aqY9RjmaJvMNLEymDW1XCXaOsF7L2TPUoRCI5IG7mZXRtgzdIGuJIWzvD+imbXv7SPxqS91tjm
                yYmVrur++bGhtb751rnXdLyxsLO0unG5JO3M4VkJRUvVmRmfMtajIyPkMjMzEeAa+nCew02Zc0z8VzDW
                R2t4sYnmXiK65oO9puKC7O9uIfkSB42jbjfti79K1GhTY4XxMbqZKT8lC+XdGypQ0k6+GzhlwBj0LcTC
                jKsPPGCCuMeYO1IXUCmL7hHULh6PVCKBuUdk8XaZCpslLHENml8YXZFHuNlaGlNav7R1HtkttjoQlzbW
                94s6ze6WNk42FdKe3tL22K7tq5eZKsqhLSrY+vyiPrufXxAYH5BxK8m68crY3wRwo1yO/idlkmPP+pDW
                jMMXX1nhyB4rYL1CpHAoU3ZMZUVJtPZl2a2hNMmZmNFMiKOVVod3me49z7CHWFhZtttRsm+2t7KxtUlR
                t7OzoJtregkv9ihBJTtttsaUkW5+ZmZiIgKXZdyI34gxXlDLDmzvkja8WY+mORb6OxaxW6yR8tYVHnOR
                X7JHW5NZPeLy8Um1TYxNmyDrO6qVJJGZp5LQOGxrzj3EY08Xmf4vjSU4rtrbIkkx3eR6U3lq5Ju7+PNc
                ecTe47ILFsaKTyzrb5FaNinEmmgdB/bndhWpamhVZeRAQ+ysrNttaVlY2lvZWtEjKjQtKKbW2ol1LolH
                Kkvceydz8yARAanemXiL4F0EaxOKvHM/smZKF/k3W1MJRFq8IxS/S1pumVuJybTve8WvoW/ydzLfwMiL
                qRltiAAxr6UeJNpZ1/Saa4pxK15Vr3jPCLt/lVhkjF8hg7TeRq/vLGO37em9deak41VHIUoW1kkldmdR
                W6SSnbGzpc1I2XBktpHoZ1vt2Q4pppis9mDxo71d20Hk8txpIscTOQOEoTjXILnCWh8dYzP2N4f74zSt
                lOgonB25kskaY2B/f9k4Q67srRxt6tle29vdWl3ROhcWd1SRdW1xbeBpUlXyDIyPf5XN5Hy7kSiDAXmL
                iwPGru+b9NPB/VIMsZwlj602so1LuGO3xowNpwiDa4WblJZfMHDJMUKnJnSq0fqdHWlEeeWd/wC8z7gU
                /SLuGNvWQPX3o1cNa+jWb6eb2Ypasm12uMyOAZFq2vdVq2Zax5ft0ljciv25sOr3W1Pry2myyHupLpWZ
                WGRu6WElVkU0qvrbmpsabKi2tDfYtljST8zYt9la2VpbkfmVpTShKT9/KnrsX0iguqrD84zrgbIeNMWZ
                emGA8lPzUi6geWIS437Y7xSWtLhZubXeXht9Sn6/HXO4sENUkaKhLS8R5xdaCKZVVJqIDF1jzjFWeGGB
                sxrxGcD6gtPGo6MUqbJJ75iwvLsjYmy08N6kt9SW4omeNWl+Z3JpfyT3wTOhXZx81EwIfnyqg6tXGlxH
                tQOoXWLkvh3ZTbcIz/B2kOOcQ3TjCcZWWZ2FwiGbdQ+U5rIXRzTPW7HHOp1jGMoXFIY4s7Ep45H2SVZw
                uqVNBqNLBk8iuvPiIYJj9lj/AFacNDOuXshx61Jqq5f0g3kQyZjPJ6m5Gy5YiPG6sTzBEvpJKoTQ8JTV
                StVWoliYSWlgpy3CcSaz+IhqowFqE1a4StNJGl7SXLrvKGFsAvkqbJvmTJ2aUWBtcdn2RL9qT3TF2eFr
                JTtHGgqbM/Uqi+iH+m8m+MATLrEbHS441HB8daNhf3LW3Q/XGThf0bC6VaWCnHA0hQ3pv3HwbzWr5pKV
                kSjUfLykXKQyC67tLjLrP0lZu02vLjQZU5LiybZkfbih61ax6YsLm1yOGvd8lNOrUW3NcrYmuo9UqRdp
                WZicaH9cF4IANfnTlxeYbpshsb008VFvmOlTUzixlsolfy6VwaXP2Js7M0dbzbm3JWPcgQlnfmhzU9Nt
                idaRGn1dk9okuaI8rl5mBix78ZHW/OOILoryi06J8a5IkekLGb3BJRnHUhKoe+QmN5Pu/byNRyF4ywvH
                ZMzFMJylEskVjMZ87myMfs8UKak9Kb1SQ9bebuzs71beqPbXYPNoVTtfU3Oxs722IyI9j7JwQpBmXjzF
                4dC6J6CI0qVO3pU6NCnTp0qRFRpUqJFy0S222Lw228yIi23679TAYFOKW0Ojh/mLZWLY436WviUaNHB1
                VaWF5dIbbJvSRne3/Lt3alG5kpVRO++5GatjMpv1iNjpccajg+OtGwv7lrbofrjJwv6NhdKtLBTjgaQo
                b037j4N5rV80lKyJRqPl5SLlIZxgABg74Hbc5NcB4htF1sb9vrXfFV1aOFmm+s7q0K6s6jHiRNK9sULM
                ld21FpUmkZbEpSaidzMhnEABC72ncVLW6p2dzTtrqrQuitK9SidzRoXJp3JSrIl0jvSSo1LUW+5kkyTt
                zGR69GJuLk/6LJJPtN/GHqSbHOV4zMJU44y1Jx7EkgdsN5/xrfPpuUdvY234zaHxTQ5MyXI2ZCEsRU0M
                bc1sUlfqmSWaRoqbFYgzszs7zbFavTTYPFp2pVfU3Ozs7229YL9aoqV+hSDVuZ8p8vhuXh0Aa/OjiUv/
                ABDOJ258RmC46meNdKOHNNNzpuxJNZ9HFxaRajpJJZg5SZzlTS23xJqlj9iTIHXsuhlRe0tJr2fXeQsE
                evSyhxN4fjHiO4d4dt5h3JbzKMwRW0lFtkxt7tOPNKr2ylF83KSwH2rw4xulThjnTkUrQoqLDUO4JaVE
                0r2ymiGHZWi72nf1LW2q39GhcUKF76un1mjbLURqtCveq0EpXVSeciMyUe3MZqUGCPVs0OOvXie6c9HX
                dt44abtGdvZ6t9S1erb3hR6XZU5VN+GMbX5q5mhyJoNysHt9ZaijS+R2TypBoQtjUk894AAwQ8V+JyTT
                ZmzSjxVcXx6+eXHTvKbTDGqBjjtu43jxNdMeVnFUdPnb7A+Z1/BpKZLfvUeZ+QyTIpK2SBalGxkQuc4j
                3E2gvDswxi/M7vjKW5nY8rTpoiLF7DODc1tNtYObC6SNL84SN1SbWntWluUtjatyW/1eamVZoSnnGUIQ
                u+b7G/olRvrO2vKRVaFcqN5STcpK7tVIXZ1NlEouZC0kslGR7GZl4KVuENjD/RkceYpDQsnNtt31nanW
                g3vVmtreLJDhZ071Nm5Nq+Zdi50qdSmi5bjMzpVEqSZnsYtk13aXGXWfpKzdpteXGgypyXFk2zI+3FD1
                q1j0xYXNrkcNe75KadWotua5WxNdR6pUi7SszE40P64LwQAa/OnLi8w3TZDY3pp4qLfMdKmpnFjLZRK/
                l0rg0ufsTZ2Zo63m3NuSse5AhLO/NDmp6bbE60iNPq7J7RJc0R5XLzMDFj34yOt+ccQXRXlFp0T41yRI
                9IWM3uCSjOOpCVQ98hMbyfd+3kajkLxlheOyZmKYTlKJZIrGYz53NkY/Z4oU1J6U3qkh6283dnZ3q29U
                e2uwebQqna+pudjZ3tsRkR7H2TghSDMvHmLw6F0T0ERpUqdvSp0aFOnTpUiKjSpUSLlolttsXhtt5kRF
                tv136mAxB8TrTZk7UboIx7cYMbqD1nLT5M8F6nMSRit8opJMcUWS+0j9hULqTo6xd/kpMKCM++n1DWwV
                CJDvUVTkWJ8ffh41IUbnl7IE2wRlhnsuym+AJ/iXLRZNiMwLmK9iSWxux9UbXSqTklNJnee0RTqJMqj9
                7PqqVaVPOAJeuWBkvHG2ebtla7l4saJ0rJ0uWywuXW3Iy32snCog10iLxJKTT13M9iMyAYZ+F/DMoZlz
                /rV4kGV8XSPDFhqvd8VQnAOMZzYqa5w2YTwvFCj7dMZFYqM1Na8mLJseyaiPnRUbnM+d5jq49VTm5AAG
                BDWFAM+6Jtd6eJrgTFsz1BYayjjNpw9rZwvjyxN5ya1NMONvKFZox3H0lR9qCY2pubmZ9ZyNNZioNjlU
                qKKPSF+kMEqevj78Lo4sh6tM/PzpI6xFb2+M2vDuZ7zJV0/dN4pTj6YD3aTz3mZsxrW9pYe23JMg7I01
                TzQCAojzHTdar9TZGuk91UFQrPBNtil2roItiI79KCqmR7/rVKMj6p5SLoAsi0dZ8zjq5x5kab5w0qvW
                nDG0kkt2z4ZiuTXVZ5Om2J71hTYuL/lPHvdfJB7h3d03qrdkqPVdVZjcjpdmVFnaZNNsT+mbP7jwTKsm
                0Ya02Kdt2jdryBLpBpF1gMUQkE3x81wSZvzhKPwZZVXFWt5eYvKWZ1cb8zUbEpKntzdtknGKjG/L2Wx4
                Lq0tr23r2d3b0rq1uqJ0bihWolXt69solJVbKQfyVbpM+ikn4mfKe2xBgD1HcVKO6sca5F028Ldumepb
                NM9iDzH5Dl9rh0rimEdPMQkVgpvkc6mUznjQ0KcZGyxhxVXjLExMz6by/ElBLN+QiNvNLdDthftHoxU9
                b3OxvWxwttGnEVRdWF7bla3loo5XqeWSV2BfrFcqkqJJ7GpKkq6kNkZvbGtls6di1N9i1WVuR9jZtNki
                0tEb7EZpsbFKEcvQiP5PXzIW0a3oJK8n6MNXmNIGzVZFOMi6Yc8QWHRyjWb7a4f5fMMVyaOR1j9ddD7s
                Qbw6ONg1kt1Ls09oVWoakJ3SGAPhf8SSpod0e6csQcQ+JzjF+Kn7H0dk2mjVczxeQZAw9L8bTNKpJGoF
                M3OCNb07weeQpTmcQSzPbIhSWJuZ1yGqgyN+kNb9WPEKp8SWCSbQ5wuGyVZrfc1N6cfZp1K3MHlsVwRg
                LF0jOm15D9opJKmhkqOcoeoteXrSTO0NFapUZXV2OOKfpLRpMJ5YtAWLpbizQhpWxBleLkxTCEYDxzDZ
                vDnNTc7d2O7XHW5vc2VyW31HVpcORaTp1SpVKiTT8lXKZ1eyvDbG1vZ7Oi3tdjZN1hQSrsLSytitLagX
                kSbKmSEp3Pr8ki69eniA19OLHglqwdw+NC+A8bWDq8R3DGrXRrBmupRtFXTtctMMspG1KkDhTb/BxeDo
                k6vtRJEhS3Ouoklz8yrwuN7YX7pwr9Xze2Wl1fuFxDoeVtY2Nv63dXJ/hXgyuVFke3aEZJNR7bmfKZns
                SBlfABbLjqCsmRtIkBxhM2+pdRmeab41A5W1Gr1W5uGSSY0b42/2H/cnUbnC+pn0UZGZbEfTfCNpN1hX
                3CGjltoV4jLRN4bjLHb67NOmHWO1QmVTDD+T8WOT2438eYJg4wtvfL+Kz1gNwS1KZksiqbCwJbjkCGOP
                tTJIpDspiHX9hZuVtWsnC2t72xuknRuLO8oJubeuk/8AZIWSk7bb7mpJluXkZEYDW71y8TO31racdQOn
                rhlRycZ5vH3Fkwt816jKURfoVhbDuK+4nW/yG3VJDOGhmdZNk6XxJtcYhFokxs6VVEPa5EyPhXMfUz1p
                OnLI9VPReW9jpszqb2emrHFr3L6hed6+ulmmMq7Lu8/nN9vnOXbY07q36Fts6t7dZNNpSsG2ztrGyoJ5
                aFpZ0E2tvRT1M9kIIklv8Elvt4eYiICiunWmulgDBtKpTXTqW+HcaUK1Gr486YPHyUR+JfJNJEe/9VzE
                ZF1IUM4h2kux1v6P8y6b6zrbMD7M2W1coRI6tNVS3j87hz3YSiHX96hBKUbYt5bLFpkCUpUpbC4u1NCT
                NSSF7oAMBmB+MtjnC0XZ8H8USzmekjVbj5rs2GV3k4gkudMf5l7g3ba2TcdzSEND+yuza9oTTdHvc6LF
                TfHNdKMXD1RNKU4vONFrTyLxCtH8lLR9izJV7owxnOIjIMl6ipjEn6GNWbJVeP7bGIRBMMw6UM1OYyeM
                MznJEzSTPC2FmOnVjzVT7ZlSVNT/ALjLsxsz3bUrR7Zm15tqdQq1O3dLOzdLZNxufyk03Alkay67GSUn
                5c2xbCMIQmmkqaElTpoLYi6dS8enn9J+P5QGMDip6Vchal8CQyS4Cq2tDUxpXzFB9TWALe/qLtLSST7G
                66zgqBubgpJqt6EvbLqoilUWabZb/YsaH5Zx1T0lVCIVx4dC7bFq1LU/KJ7pNztGbO1o5NwDlzEuWvbW
                LSI6fI42DSUaiT+1yRqU6ouiYXOiu3e1MRN9zJI/H6lQqZ5uxAb6PsbrcWd25szU5XTYrtrGs4tlld3V
                gak9CsKtVKqlkroexoMlH4GZ7GZBiZ0Yan9V2tzUZL8+MENkeFeHPH4EUSxRGcowZvaMoajsl1HFLgvL
                raV8jvmLwJobFVGtkqE81WJ/Jbb83WkRv1CC5hAABie4u2obKOGtMlhirT5Yu99qQ1e5Bjml/ClWypXh
                lG3nIx93yGcXzihJG1UWCK+vppPBLI2J8c2qQGhdBkeFFd5pA0xQXRppqxHpxx+hFRhxjGrRtvHRVsdp
                dyuUX6jc5fLXFJKMlOsulV86PdXmNaEHf90JNNOmkxdEpCahbLQXTw3Pf835j6D9gLNtfmnFw1baONRO
                nRpvrZskGTccOjZFHG9Wq3breZNl5ZSaHG5r+VuznKGFrS9kkuY2dVZJEZr64ktOXHD054Aw3E8F8QBm
                ydpQ1OYLgsagM1x5JcTTt5t5y4w9ks2yzlWPr2DMb0zoaJdRb0u1vUea7MwL7aqTA+Psbo05DW2NhALx
                jZ3O6sbpxZ21wrtFb1hrr3tnaXVy23J8hqNuqLSru+pvZ2S+0pKSa+VKVK3LoGDzh7MmV9VWuXP/ABRJ
                3imYYQxVMcJxrS9pfh2RGpbBkKWYtbZY2zmR5Mk0fKpztDY9SiPWFWNrWau/mJyT2ZKY2S3fJFniAAGr
                PxiuK1TsZva6E8DTLIUGbnh79ntWupuAwR9lV3jWHEpftDjTFXdhczpP3pNQ2aRPLMfLHt1R2i+0JCuQ
                PcDqJpo4ufCh0jYaiOCcFQDUZEoHELdKKVsWnqYXDxIXRSS74lktd0mVWSSt7WSakge/BRUqVNKKMfJh
                aRsqAAxC66uK7i/SppMgOc4JGZDkXJ2oHHLRNNPGK6kdeydLqymMeb5E2SvJDY1Et4jcXZCc23vujzE+
                vj0o4/HzJZPD2w4YeHlxFNDOnc5bqL1MO2pDNmvfO5945xzTfaepdeW0esjStLfiPFhGfZxmBQxqsG1n
                MmlDQl/JradkFH2KPMke3GAAY0sVag9MPFowJmiARS1zBQxfdItMdZNb31qluFpC42EisaLrcx9sdW91
                tncmx8aUGzv62qsZ1Geu7sdYuR1NJ2u/53L4UX/4j5n/AMdOWv8A/axnPABqw8C/hyacI3PdRupW5x5J
                mvMWmvXpqkwdgx7vJLMba2asRtkFj8Nb7NbA4O62iSpU0ZBmKaTw8od1pquPKiudVoo9ltPAADFnxNtE
                s91RRLFmVdOspbsf6xtKc4/Clp2mDwojab+6X6gUxxtJFbKNUZnDY2NyDSoqdEn1sZ6T6r2bdX9NW1CB
                8dzE2MVW2POJHhvMmhXOLOk6Mkt5DjKdzfFEkuUoUnvjHsmhDRIHt1aXa4M6tLkZHhkoK+bpSZ8pJN5X
                n7EHc21rebNbe8N1i62Vci7Wwc7G0u7O4Pw2XZX5LQot/AlJ2L47mZhRLTfqUwtq4xOyZywFLa01xfIn
                OTNTHIakelUV7xu46+uEadj7hljMwvVJCXVtvtjdGamoz+XyJMj2uFENsbKyb7WjYt1pa2dlao7GjaWd
                um1tbdG3RKbOmSEJTv12Iuu5q8TMxEgAAABg7kza5q9Ibx47lYuBs9HhU3rap19Su1Nab1WpaaqKwU4E
                fJ3mdNaahJM+Y6SkmZcxlv5+IzpzytgrLzJxVdFsdqOWb8Wsq2XVNh9l5re11Uae7Am83Kxc26wSpLhP
                oM2Nti5x15USno2RnaC2e1Qlhi71nMABbZibJmH9a2nBqmrJYlKMQ5xgLy0PkXklim1uTaJDY30cmMDm
                LXuVRudGozdorI2mopS6dVFVPaLSaKh4K8UZe1HcEOo66ec94lyzqL4drW/yN20+amsTMS5tOMIw9xcC
                cl4zzPG0Lpn3YzOTmaqT5uxpMlOdaLnIKa0wOCbM4AMHDx6Q3wubZnt60OzDkDKcsvPV7duxnA8F5cXN
                3O8WR7NzcmVROGRNbiZnuaPaSmSSIttyIiKp2gnMXEN1MZfyPqDz9jW00xaRHmLWMewTpsnEbVUzhfvF
                m5m4LyzMXRSWd3i5OxVHJoUyPTGmm8UTZu4I9Rt2ROQJ5lTs43Hm5wunixZGixc7w7k7xztGyxtnWqq9
                qevXZ39+lCatUqlQkrX2i1fKMjJXhtMwDX6o8T3JegXURmfDXFW7+bMVSievUt0oatYTidyusUPeNnRS
                PUcaSRvgrW+PDbK4WlJ7lUS/yHtHJ29pFIjfsNIJBTvG2WqfFY4neljUzp6gc1b9Jeg2N5tub3URLom4
                wpOash5kihQixg+O6Do3E6vDWweqNz3cLdEUVNDEqWIkVJhqv8bpv+xlfNze72dWwdbCzdLO4L5+ycLZ
                F1bV9t+i7G+SpGxeJEe5bnvuY9VG2pWtGnbW9Olb21Gj2NCjSpkm3o0EkREREXKkvkpIiIti95HuajD2
                jBrrTanLJvGJ4TWPqTU6143iOO6p86yi/tqF13VbXjlAktUKO/vy+QRolUMJCUmRmfeJJ5VGZErOUADG
                ZxV9J0m1WaRpW24xXUbtQuGXpoz9pukTbSM35mzBiu9OTR6xYahmtVNzl7ZTc4fSUpaaVN8d2l8Wk1s1
                BSbZ+C5ibLUmh+YeIhqesCs9Seu6U2crrNFduv2n2CwlCkrjeKYc1WDqRObW3LaCqO/KSyW/RxOPTkaf
                aJiUtGcsAGDnKLbfY84+2mSeWlg5UmXUDoSyjhZ1cLexv+61POOJdIsuETi4bm1kpbW3NqDpq2qmptaU
                9d0qOStTzLlfh16+pnxFoDjGcZr0u6m8eRDHesKHYzbPaPIWLZhjywsGnHeamGNIUhcki6I03KZ5AinU
                pkwG4SyQv1Uu+WMkZ+wAYSZXx6+H0caoHg+czjUrlx/oVLeB4GxPibLH4RZbJCUdKwYle0UBY2yNLq3/
                AGSXWo81O2pUk1FMzG/VUlQrVN4VWlzMuGYjnjUVqdsW9r1P62stXmccpw9suDurPF8d3v0Y7xIm/JBm
                6X0JaHVyOvXL5FBTqiOctU2Oo+PWUy0Y2Vvvr50sGlrsr5zNB399ZN1na3rhsW5ev3qUku/6/KSdRajT
                t4mYjoDB1wHGxyZ9M+o+0dG+9a69XXpqbuqFC9s7u0qXFmu+hqUX3KvfpU5VpQe5bmlRGexK2/XpALW5
                PGgpvsmpvvnO6/oktPtdNrY2V3d3RpRMNlKSSD32SaiI/AkmpJKIjPrnDABYHxTLO8cOHLrasm+2ub+6
                u9NeVre2srGgVzdV7k4o5cqUo2+UeyUke5FyknffwI4loTidjI+G1o3hUzayuWt90RaeovKWS+o+rlXs
                3HBMMan6wvkGW6VqQu9RU226KVymexLO+oAGtLpZ1O3/AAYm+80Oa+2qeM2nSGzCTXGknWU1Q1/m+NJb
                jaSPbnI22B5D9hmt6dorkJkdXNwJLWthM0IVUQXLG2djkL7NWrzigsusPCOZNOfDBZJ1qIn0yx5LGTI+
                d7OIy+GYVwBjZxYHAsgvskmU3aGVTlkFMVNzpQOJsjLWXWeHDnZbmq/sKY477D93ZWjjb1bK9t7e6tLu
                idC4s7qki6tri28DSpKvkGRke/yubyPl3IlF825ub2izot7XY2LdY0UmVC0srdNnbUUn12TZUyQlJeex
                bGe2/QBgo4f2nu91D8A7H2nF0I448ZV06ZqgtjcPljdcrFI5HO8jlHH1xbz2qfqQ8LbHnl3PrT2SSSMi
                XI2kDi5afNMmC8f6VeIU4SzSZqW04QGM4nkjFkCATt4aMgMmO2JtjkfyTjuQwqJP7NJWp+aW5vdKhpJK
                u+1O/s139HKKH5WxKIE7MDE+0aNJ8Ymt7RRMqlGi62Fk5JoK/wBklN+hZEZnuW5ER7l1PoWwYENPM0ee
                JhxK8c638e4+mkd0c6O8TZGhOEcnT2NuUVu8+5UzNYlHpNL4VHZJRancoIxxK/dGmm7HTLtqrYlJrTVk
                HcjDbzxArvVBBuOdgnOGmbGV9lh1wzw+rOXzfGdoV9aXeU8WFmzNcZn0FhzkbctqXPjapk1S+ONKlJWu
                QRhm2Q9GZR592kgAYXF8fHhqWUXquT3licx3IFoZN9/gh7wvluzzY2S7cknAr+MnEVNCZOTkXdJbSA2A
                63Q5CSFKUJc0D4tznqT1g5T4pOpXGL/hS1fsW2en7SLhCb0Dt8hxLBiZAmUuU8yE1KNZxeUTN05lIZjq
                GqiblKkoTUjfcD6/ZqVsTJUdab5VaG2q+W1v6vRdVWVmbrb2yuhpK9Wk6hI6bkklEkupERlzCOgNd6fO
                WROEdrb1D6krzGU9yfw+NaToz5Fy294zYvaiWaZs7t3eBSGYSCMNmzs5wGarvXJ4fHwkkRKv2mP0lHIW
                NhYZ9XCUccvRxJ220jejq4yBrT1BS60OnjrCOJsa5Kar1ydHJBep302kc2iEfZYJF2lRFVkzo7qU9R9m
                5qqmCoWyTzYiBNjKxtCrpbMzNrVVv63bX5ttjZ2iri7JOxLvlWSC519OqlGrrvuo+YyMNengFRXN0Xfu
                JXQ1G21Onmpy1eKdsl3tlRUTK4z5zYr90mCo/fpUTO5tqXi+vipLYyNmQZn2W26xW7gONjkz6Z9R9o6N
                96116uvTU3dUKF7Z3dpUuLNd9DUovuVe/SpyrSg9y3NKiM9iVtnFABg89IBa3J40FN9k1N9853X9Elp9
                rptbGyu7u6NKJhspSSQe+yTURH4Ek1JJREZ9c4YAAxK8XfTpmDNuCMV5N06sVKY560c6jMX6t8awCtsn
                8JF9iq+cO8oNTV2iTJxdmxwU6MqUoXUfbiPIjnMlL2szoOxekMcO+hFatXMElyrg3MLPZ0KExwHOcJ5W
                uchMUlXakq9ihX7ZEFRLtaF8aqCKr0/sSVEZqr0mjolGeIQG4YGS8cbR6umZruHiySqlZOlxYWNd0tiM
                t/xO/qoVUpEXUyIlEZ7GZkXgYYOOHTH8u6qta+oXinZIxfLMFY2neH41po0r4+n7chpyBIsQt0ha5tIs
                jzJrMlKa0v8AKY+3uccQku0Om6PFNNZ7YGWOyN++nEmlOU9ZWe4Rwm8F3EohsdmjMz5Z1x5pbbK9bLWE
                6civDpt+O425Ena+lOU3JvU0KTS5U8imtiWl7j1XISI/nhH45U79pyFz7bb79dvDbfw8AFOsYY5hGH4D
                C8W43jzZD4FAI6zxeIRxroqRZMzM02Sm2wsaaFeaSp794Go6jmtS1VF1FqOpUqQAANfTjg5DacRZJ4XO
                ZpO2yZxhOJNZlpkGZ+ybA4SR4tI3HmKwcXC9sGxsPncDJKS+Se3Xm28DHvlXHtw7LGu+i+kbTfq01I50
                eLO+toDAWrCD5HmA5AaD7tvJo/ubh3q2RVK1K79dWRkfDQSSNdRmRUU8Jz+AAxk8KDSXkPR9pDj8HzLc
                Wd5m3I84nmcMxUGqvYXDMyT7KLklwcGGw7t2a1KZGpvYWt77jSqO+0CHepHFFH1W5nkfvb+yabK6v7+7
                trJvsKFze3l5eVitba2tbEt728vbtXyEppoI1rUvlSREZq3IlGmLgA0xNdvFEw5rW1PNWnnIbpnCGcNH
                Gl8Tvky4xzjifX021hy+N3uzXHj7ta0u8bwxTd+ZSUo7F9fibjkJJKTqgq4LlixZxwOHU304Bh3GUSzx
                E2SlXjUAg8cbdOj+wRRks+0bo8wN7eotmpsamkl2FNOxmmiRINKFFvTLOyADClxishZPmESwbw9sB1Ha
                wyxxAZze4vkMws7G9urPHunyPWBueaZa4X6TNO6YspVI2gzM32Ppl6C8FKqZUsK4ihGBcUwDC+OGfuSB
                4xibLC4m2L+XdUWdisaNnSNxvE0KSHB2clpNze3dRqqvL1fON1XUqpVUs6sche8/yfyD9gLN9X+iDAGu
                iFR3HupBml0og8UkdSXt8aY53LIU2VpEVhUb7JzdURZ1ZKjtWZ7BwcabH3qqshnW5OdWkSTrKGGjWLwD
                +GxirSVqiyhjbCcwtciY4065sn0BrFlnJ7wq2l8OxpJpHG/1OcJWZOCO9mxvMmtW6FGXIWxrSotl8AGF
                Hgk6JcFabtJWJM2Y6hTxFss6kME4ffM0ODvJJU696PNg2OTofZx10d67RG103SROajQ00UErctt0IUpW
                a4AAAAAGK7iS5g1q6b6WENRumyK18v4OxTMnW61Z4KjMVsHjJM0xc6NptxSqFXpqQ8c8G3cHc2pjp0+Z
                8WyyCS1VY9YpLyY/tUXGv0s6p9OeQtOOjSM5V1N6mtS+Mpjh+OYPb8TS1pu4VeZHYnSGOb5kZwkrQiHm
                2QltcnB5flsr4+sPK2KTJJBH44utImfZSEGtWVpb7m9vLBrsLO7c63bud3Y2FnbXLgsk7czhWTTKpeqM
                jPdazUZf1Bke+4YOdUGnuT6cuAVPtOLte15RNsaaQGiHP1RsI3VVeSpJsW/2LAg+t+1s7lUcGlgSsk1D
                YG6iSkpPdIpxxKml4vPR1qjNaNzndPR6bdCVsTXQsbu6dF3bfkzTmd/SS3/sil000lmpJbbcq1KMySQ2
                JgAWF6mdHuMNcekGzwHlKzq2tBxiMTdoTL26gk5HjPJDXH9o3O40ai2bnJiqVDTUIl0u+WNxd46uomk8
                1e0ty4amqrNL3XnuhzWc3ObdrG0wULRpv5hcKu7mO6jsVrJNOHZlh0jqmRurqtpNv9vaVRKnoqrkzv8A
                XVTfnt8j8dzAgA1dpxrTxFoQ41eunIGdGfJ5xbI+CdOMWit7AMcPs2K5d22JR1xcUq7rLYjT4GXiSk+H
                jveM2ekA6CXdysGuzbtSnrTjf2TdbHcafJhbWx3V/fd3I5lq+UR9oajPov5Px5iLOGACzTiI29a54f2u
                W0taNS5uLzR7qZtbahSpdvXr3dXC82p0kJTvyqUpfKlKTLc1mSUmR8qTk7hZ2d438OXRLZOFtc2F1aaa
                8U29zZX1Ara6oXJRRu5kqRt8k9lKItiPmJW+/iRX+AADFdxA+JzEeH/PtMUFlGHMnZQq6lpxexVuuoN3
                cmhHLZrdYc2uNex7xI6kolFf2yazY4a21mkrhKXM6j7br7qpVsqIhlzY2N6dsu7tbW5VaVivrQ61FNyq
                3u0kZou7MzJSiURrPqjlUW5bbbluETGMDifR3V3bYwxrm7Ra6St5yRpzyxG8nTDBMedL20s9RmKbIqhT
                TGt+2WPMcmdFoKwd2FqJJvKipvFGObyV1Y0jJ+ADBK2+kRcNyvFU3b3LMvxPKtJRN91p7eMGZLr5XtZD
                8mmuJ7tjJXx4p4S5btdNHtylFSogk1F0iWai/mgPCOofNc4128QHKjDJNLWRtbcbjWONOsOdW+z/AAh4
                WxXj2CuUYhc8mcecyKkudPTp3DLajI9EvkVHKRpSiPPdNKs36mJnW6U3yo0NhvFKgdvRdFWNmbrb25ls
                aSvlEtZU+n6xKuXboRGW4jgDXO0+8ZyP6WY1T018W+pkLBWqbF1V3j7tk1zxXMZRjfP7RYPblSj09x25
                4xib33gp2aCbDf1qYGdhPZL+l+om79xssOgM9nnF915aZ8/QfFs+x9w/dELpJsjw/I2S2NcWvNSeaX+w
                sG6M30NjrnTOqcYhjk3Nz2wOpJqHSNvekyI2aRvTEyMmxK7MbM921K0e2ZtebanUKtTt3Szs3S2Tcbn8
                pNNwJZGsuuxklJ+XNsWwjoDWs4zfFhc8P3FDRrppkMqjOU5fe2rNnDUBFYe/y6008QVzVu62cNXHUFVd
                cxm2Eo6ZMxl7BJUa1yFhkqkPsblzSHxUOE7oowvH8JYUiOpltYm7d4k0odNPcvu5ZkmYuCaSn+dTSRJ7
                NTrJ3mqlRrM1ppMlDuqLMFuyxtoYWOjs7AApBg3MsO1BYpg2Zsf03+jDshMNGQx6lJmW+jj/AOo1FrQk
                r9hcUFUb6m6OqVK/qkkS+op7qv1S4u0dYXl+cMq3DmthYqKLdqj8fs1u8sm8lvkqJqicOZ/kG4u7xU2I
                1cyWRmt0OEjkl0yxtkfXu3uhABpO6YOJLpwyLqYkGvPiL2WbpDm5gd3do0s4IjuF55LcU6X4B6+ZN9+2
                rWzs7RJcpPHN2hTA0ma1JS/qUiRKY2KBZ/cJcQzSZxNE5j0t4ypZlbXCVYQnVeUXc4xbIITZ20Nf0NOP
                HIm5xeFEhbympPrBSGvkSrZLkajSVJZqyygA1iNGnEghPC+xnHNA/Esjk00/SzAFw9Q3Gma7HHU5m+H8
                5Y1K/cnKHyqNOMIY5A8qclt19SaKqEM7tsqghcjWwyZMgjzF9cxajrHjZZq04aftI0OyC8aSsKag4jqC
                1FappXEHuCwlyp4pO/7hxnjgpS1pd3SRTFbo5KQVVkZpDQ7Zqf0sRRhmfHstlt0aGp5tvVnhrsXay6VF
                WbnY2d9bcxdTNVK+prRzF1Pc0lsXQ9i6D1WttbWNvQtLS3pW1rbUio0aFGl6tb29uki2ShG3Kkkkkuhb
                b9TMi6mAsk1/6uqWirTVLMxN8Recj5Dur1rx9h/HTC0vTvcznL85cSYcesV8poIzoNJvC0KfVcyK1dCU
                sLAdeTPUfZXqkfDB0VyHSviyT5Bze4qm+sfUu+/hY1QZFv7izvLy4l7mqpfN2N21woFUoqjGNKbldttJ
                DSs2Qnmq7rYKdtHCYWBjygqppWWyy5yLqRGW33+sfsAEvvb23xxmdpA73HqrQxtt87ud6dFVfsGptsVu
                DjeEmzSa/kUkLqKJKdz7M1oQZGRiYAAYGOFFEJPqjyvqE4tOXGZxapJqGfHXEWlqKvtJCbzHOlTHb+bY
                3EqyqcxtjtNJO11aj+kiJNSqzukgYqiLedVU1M84/CEJSXyUEjw8Nv0fcx+wGAfVQyufEH4nOI9FN013
                69K+iZtjmqrVH6xZ3to0ZHyrIick4IxqlSUfqq0pppcXl+UsjY36knIcbqGiQx8k08/A+fZ0+ftOQufb
                bm8/o8dh9AAYOdHbY6W/Go4wbrWsL+2a3GH6HCb7+tYXSbS/U3YGjyHBNg4+DgaFfNKSgjUSi5eUy5iG
                cYAAW4atMAMmqfTTm/TrIK1KxsMvY5ksOoOlWid0lld3KxM48/HTSSlrWxSZLa8pSRHzG3bEREfMm48A
                GtjpT4weMdGOJ47pC4ndvPdN+onTjGLPHFF7vsdT6bwrNcQhVlTjMPnOO5FCom/m4d8tTZZpqOrwmmwv
                atpAmQJqPVRiY6oaM2rIXEC4gF7xPJljeY4t04YixDdYR0WxvI7UqPzefHIVuVTIOa3GOq7U2lpeW2QP
                7LHVGpJPjC5s5UlFVY3lB55b5nanX1ZTm22Ll6lcFe2HrtnaXXq10kul5ac6VGhfyuqi2qGZkfN4bxkB
                rZ1su1+C9rO1QueaIPOLrh/a2sn/AIfYdnCEx9ylbRgrPEiSn8K8TyIwN1Oo62DZMXNXfMdUyFULuVqa
                qUdj76opGTBKmqTVEwcbNcL0MaG7LIMx06P+RoJMtZWp90g0ugGM4xiqGvzZJfYKOe27OzPTrkF/dm1s
                emJldWE0rqtjRyU1x45BI4Rs1VraldUaltcU6VxbVqJ0a9GtTJVvWoKIyMjI+ZJ/JUZGR7l7iLYlF8m5
                ub2y1o2DbZ2tjZUEGVGzs7dFpbUEn1Ik2dMkpSRme+xJLrt0I9jAYUuJvhjLmIsnaR+Ixpbxe4ZNkujY
                pLB8t4Xh1ukpLP8ATJM28myRWMNbTI0ujvB9792YWfZSE1HM38yMmEuanU39IE0nzPH/AHBo9asu6gNW
                c2b75nxtpza8Mz60kbbOnBuqJbTyA6OLRSilONMzodNckrw+QyNSCpqpISRrOunYEEGtmhqs7y9crRrb
                re+ceQ768tm+ztry/wCnT1+9Qgl3u57Gk1KPk8PMBj24WGjuRaKNHsHxXkK/oPGZ5W9yTL2cXeje960L
                rKeRHBLk/wBlTczTs6pYGqzYIeb1uZPxxw30kmque1/kjkbDFWF5lEldLBkjkbbLx3fHpzrotWtnaGyz
                W4uThfX1RSaaLCjYoOotRlsRIPfc+iJmABpTaoeJ7gnXdq0toZqQp56jPDZwY52z+z4tiGK59dyDV5kd
                vv8Adre8jKbVMy4zi5kJNN3Yog8bP9RaWqoVNMlfiRAc1+F+NvoPnk0xRgzHUczsxuczlUFxPAGmrp6f
                4nE2W9kTo2Q6Nt5LSdJpjEZaCv20qpESKTGxmRnSKmgqR5qgAY6OJVq8lGkLT5UdcUwp6yHqLzJKGnCm
                m2FNLNfO1q9Zfmqkt0fu5As0E2UWtip07x4WTotFN9q2DZHUKOo7oWn68OLRJZ6J8DHHZO6qnWoLKj7d
                ZV1L5ev69V0eckZhkSzcnZan5yp97OLMwnfXbRHjqGZVOd3f6yKb/IHqpWyHrQlZdSI/p/6PgQ/YAAAA
                AAAMCWRGZ1188YGBQG7bbm50y8L1lssoyqvcUL1UdnurLItkk8f2CTT2TW7FjNqbzeE1FGqowSOPSxgq
                EffppGe0AAYE+ISyuejXXTpQ4mkKabytBpS4W+j7WjYslC+Mq+LZjfIcce5Lcm9tQsr8sbO9idZ8dqqq
                i1UY7EGBG9L5ulNGoxvcLjjncOR4tm+/umiy02am7e6dKFsSmu3NwYJEdilV6noSlJ6ESTMtlJUkz3IZ
                xAABbLrOo16+j7VZQtqdS4uK+mzOlChQo0y7e4ul4ykyKSafgRmpeySIi2MzLqZ7ELmgAarnDt40Wj3T
                Xoj034Iycz6hrTIGMccWEXlVBkwRL3ZqoPCXB1UaW9x22cSPdJkotzPmMjSZJIhmI0f8TvTPrinEogOF
                LbLFB+ikV9snReQsZvkHaTZ0v1hHjJvcXRJpcHPvBxsSU1ILnJG6jMuTrkbAAGLDPXE3iWCNf+nXQK64
                YyZJZJqAZ2l6bclMa7P2bj5P7jJW5uJTWtZO0ibWRcNdnSeu5VWajHGHsq6UvpU3ilQyniF1bGyq3Vre
                Ltbdd/ZndUrO8q00+s25Xu3rxWalJNaSqJSRL5T2UlJkZqSSuYIoMQ3ETzDq50p5L096rsTs0+zJpNhN
                eSQ/V3p7x6xMbpMyjjnYqOOZoiCDaCeXH2Jv1Xin5pVIWFoNLezpropMLy/yBjy8gAwCTr0gzR0+w2mz
                aRmvLWqnUpKLO7sIBp+h2H8ltMjVMuzSVhZy5ydYs0taGhoc6i6UiVDKk2q0ypqTTLZZVjo438KHPblw
                cMh4IfnGwra1csZSvda0kszvrBDRdag75+j8m9hnFzOl3St09lo63Q58d+2KP1J1Uq1qb+cYT2itkGzY
                2dvvL9xsWhtsb50rJrud7Yt1na3bgrY9zcb1KCqX5mf9UtZqTsXUtxHQGArG3pA+jJkitJj1j/hL0kaj
                422Fb5MwhOMM5ZdL5sl1gZpcqUev4zD31PdDs5mSo5UmCo9WX69Rp1OY0qqLgekV0yDxHOIsz8RWniud
                Yh0m6d8MSPEGmy5yc0HHJtnOX5Cv3Aplk5uj5lVU3QakzX1+0pVVWZ1KiGdJLpSL27j8ez530fY3W4s7
                tzZmpyumxXbWNZxbLK7urA1J6FYVaqVVLJXQ9jQZKPwMz2MyjwDUJ4p3FPhee82NWiKKzDL8A0eNb3ft
                +rrPuJYHIZDKssM1iZG4YTw0ba1L5ow8bdyyCbKJbE+c9UqXfcXZ1Up5exh7jX8L7A+OIjiDEkCz7Bse
                QRqsY7E4uxacJbZWbfYpQayPlSRLv3V4rrqPD67Pdas/vjzfucjkazr1K1VWw8AC1DVLqihelfTNkTVJ
                KW97doxB4UmU20farC5uX+TOrlVsbFgjtNCE1O7aj47ODW0Leq6FMcdoXC5C+1qbE0VaiLIOFtpQyZEK
                GRtcurayO81r6xrmyksxsL6gtN1hTESj9fxzgeP2boXekYpsTV6gqStSlktNRrYo3IE1riFU3ipmKVTT
                UQaKhEtBkXj5/Z4+/cfQBSjMOK4XnDF+QsPZFayeYLk2IyKCSltR8zXumiSN142uR2F8tZG3uaaV7zsz
                mneozu6EVqKzrIQka+mGtU+org2t9LS1rjxXlLMej/HXrrZp01sYki1/NbONYrb1I9nonmmONqeeMlDG
                dJs6TSpD6yobkMEZj88jZW8lpbMQAMG8h9IY4aCG23p4vyDlHPc8c6Rkx4sxVgnLZzd8d/UzWTE3FO4l
                B2Y3P+pMjet07KIjNO29cuHvkPiHZ1lGW8+6t4QxafsGT5bPQ076YHNlIstQdmbjNXtbkKRGlnem10fW
                1XLIIdMmJD+T8aypMMDYmOhRkmTVrjseZ7i6u2hjZ2q6vOUr6s2tdlaXVyZEZl67UsaaTqn033UZ9djI
                y8BMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/9k=
            </property>
        </structure>
    </list-property>
</report>
