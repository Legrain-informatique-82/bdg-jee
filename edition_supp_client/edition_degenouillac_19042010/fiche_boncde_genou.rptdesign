<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.20" id="1">
    <property name="subject">Boncde</property>
    <property name="createdBy">Eclipse BIRT Designer Version 2.5.1.v20090903 Build &lt;2.5.1.v20090917-1447></property>
    <property name="units">in</property>
    <text-property name="title">TaBoncde</text-property>
    <property name="comments">Fiche bon de commande ( degnouillac )</property>
    <html-property name="description">EditionsSupp</html-property>
    <text-property name="displayName">TaBoncde</text-property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <parameters>
        <scalar-parameter name="paramID_DOC" id="141">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="capital" id="828">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ape" id="829">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="siret" id="830">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rcs" id="894">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="nomEntreprise" id="895">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="factureTTC" id="896">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ParamCorr" id="1110">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">CORR</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ParamChoix" id="1053">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">choix 1</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="DataSourceScript" id="7"/>
    </data-sources>
    <data-sets>
        <script-data-set name="DataSetScritp2" id="2623">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dateStart</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dateFin</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">nomInfoEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">pays</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">tvaEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dateStart</property>
                </structure>
                <structure>
                    <property name="columnName">dateFin</property>
                </structure>
                <structure>
                    <property name="columnName">nomInfoEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">pays</property>
                </structure>
                <structure>
                    <property name="columnName">tvaEntreprise</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dateStart</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dateFin</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">nomInfoEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">pays</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">tvaEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
taInfoEntreprise = null;

entityManager = null;

imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
entityManager = imprimeObjet.listEntityManager.get(0);

jpql = "select tie from TaInfoEntreprise tie";
	   
//a = new Packages.fr.legrain.lib.data.JPABdLgr();	     			  
//query = a.getEntityManager().createQuery(jpql);
query = entityManager.createQuery(jpql);

//imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
//imprimeObjet.l.clear();
for (i = 0; i < query.getResultList().size(); i++) {
	//imprimeObjet.l.add(query.getResultList().get(i));
	taInfoEntreprise = query.getResultList().get(i);
}
//list = imprimeObjet.l;]]></method>
            <method name="fetch"><![CDATA[libDate = new Packages.fr.legrain.lib.data.LibDate();

//if(count< list.size()) {
if(count<1) {
	row["dateStart"] = libDate.dateToString(taInfoEntreprise.getDatedebInfoEntreprise());
	row["dateFin"] =libDate.dateToString(taInfoEntreprise.getDatefinInfoEntreprise());
	row["nomInfoEntreprise"] = taInfoEntreprise.getNomInfoEntreprise();
	row["adresse1"] = taInfoEntreprise.getAdresse1InfoEntreprise();
	row["adresse2"] = taInfoEntreprise.getAdresse2InfoEntreprise();
	row["adresse3"] = taInfoEntreprise.getAdresse3InfoEntreprise();
	row["ville"] = taInfoEntreprise.getVilleInfoEntreprise();
	row["codePostal"] = taInfoEntreprise.getCodepostalInfoEntreprise();
	row["pays"] = taInfoEntreprise.getPaysInfoEntreprise();
	row["tvaEntreprise"] = taInfoEntreprise.getTvaIntraInfoEntreprise();
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript1" id="2652">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dateFacture</property>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">libEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">codeTCivilite</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">nomTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">prenomTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">codeTEntity</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">codeTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">tvaIComCompl</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">dateEch</property>
                    <property name="dataType">date</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeFacture</property>
                </structure>
                <structure>
                    <property name="columnName">dateFacture</property>
                </structure>
                <structure>
                    <property name="columnName">libEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">codeTCivilite</property>
                </structure>
                <structure>
                    <property name="columnName">nomTiers</property>
                </structure>
                <structure>
                    <property name="columnName">prenomTiers</property>
                </structure>
                <structure>
                    <property name="columnName">codeTEntity</property>
                </structure>
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">codeTiers</property>
                </structure>
                <structure>
                    <property name="columnName">tvaIComCompl</property>
                </structure>
                <structure>
                    <property name="columnName">dateEch</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dateFacture</property>
                        <property name="dataType">date</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">libEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">codeTCivilite</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">nomTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">prenomTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">codeTEntity</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">codeTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">tvaIComCompl</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">dateEch</property>
                        <property name="dataType">date</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
//liste = imprimeObjet.list1;
liste = imprimeObjet.m.get("TaBoncde");
//facture = imprimeObjet.m.get("TaFacture");]]></method>
            <method name="fetch"><![CDATA[if(count< liste.size()) {
//if(count< 1) {
   facture = liste.get(count);
   row["codeFacture"] = facture.getCodeDocument();
   row["dateFacture"] = facture.getDateDocument();
   //row["libEntreprise"] = facture.getTaTiers().getTaEntreprise().getLiblEntreprise();
   if(facture.getTaInfosDocument().getCodeTCivilite()==null){
    row["codeTCivilite"] = " ";
   }else{
   	row["codeTCivilite"] = facture.getTaInfosDocument().getCodeTCivilite();	
   }
	  
   row["nomTiers"] = facture.getTaInfosDocument().getNomTiers();
   if(facture.getTaInfosDocument().getPrenomTiers() == null){
    row["prenomTiers"] = " ";
   }else{
    row["prenomTiers"] = facture.getTaInfosDocument().getPrenomTiers();
   }
    
   if(facture.getTaInfosDocument().getCodeTEntite()==null){
    row["codeTEntity"] = " ";
   }else{
   	row["codeTEntity"] = facture.getTaInfosDocument().getCodeTEntite();	
   }
    
   if(facture.getTaInfosDocument().getNomEntreprise()==null){
    row["libEntreprise"] = " ";
   }else{
   	row["libEntreprise"] = facture.getTaInfosDocument().getNomEntreprise();	
   }
   if(facture.getTaInfosDocument().getAdresse1()==null){
    row["adresse1"] = " ";
   }else{
   	row["adresse1"] = facture.getTaInfosDocument().getAdresse1();	
   } 
   
   if(facture.getTaInfosDocument().getAdresse2()==null){
    row["adresse2"] = " ";
   }else{
   	row["adresse2"] = facture.getTaInfosDocument().getAdresse2();	
   } 
   
   if(facture.getTaInfosDocument().getAdresse3()==null){
    row["adresse3"] = " ";
   }else{
   	row["adresse3"] = facture.getTaInfosDocument().getAdresse3();	
   } 
   
   if(facture.getTaInfosDocument().getVille()==null){
    row["ville"] = " ";
   }else{
   	row["ville"] = facture.getTaInfosDocument().getVille();	
   } 
   
   if(facture.getTaInfosDocument().getCodepostal()==null){
    row["codePostal"] = " ";
   }else{
   	row["codePostal"] = facture.getTaInfosDocument().getCodepostal();	
   } 

   row["codeTiers"] = facture.getTaTiers().getCodeTiers();
   
   if(facture.getTaInfosDocument().getTvaIComCompl()==null){
    row["tvaIComCompl"] = " ";
   }else{
   	row["tvaIComCompl"] = facture.getTaInfosDocument().getTvaIComCompl();	
   } 
   
   row["dateEch"] = facture.getDateEchDocument();

	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript3" id="2799">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeArticle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">libLFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">qteLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">u1Lfacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">prixULFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">rem</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codeTva</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">mtHTLFacture</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeArticle</property>
                </structure>
                <structure>
                    <property name="columnName">libLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">qteLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">u1Lfacture</property>
                </structure>
                <structure>
                    <property name="columnName">prixULFacture</property>
                </structure>
                <structure>
                    <property name="columnName">rem</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">codeTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">mtHTLFacture</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeArticle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">libLFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">qteLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">u1Lfacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">prixULFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">rem</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codeTva</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">mtHTLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
aa = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();

entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
//facture = new Packages.fr.legrain.documents.dao.TaFacture();
facture = imprimeObjet.m.get("TaBoncde").get(0);

idFacture = facture.getIdDocument();

jpql = "select tlbcde from TaLBoncde tlbcde where tlbcde.taDocument.idDocument = "+idFacture+" order by tlbcde.numLigneLDocument";
//jpql = "select tlf from TaLFacture tlf where tlf.taDocument.idDocument = 1";
//a = new Packages.fr.legrain.lib.data.JPABdLgr();	     			  
//query = a.getEntityManager().createQuery(jpql);
query = entityManager.createQuery(jpql);
listLFacture = query.getResultList();





]]></method>
            <method name="fetch"><![CDATA[if(count< listLFacture.size()) {
//if(count< 1) {
   lineFacture = listLFacture.get(count);
   //lineFacture.calculMontant();
   
   if(lineFacture.getTaArticle() == null){
      row["codeArticle"] = "";
   }else{
   	  row["codeArticle"] = lineFacture.getTaArticle().getCodeArticle();
   }
   row["libLFacture"] = lineFacture.getLibLDocument();
   
   if(lineFacture.getQteLDocument()!= null ){
	  row["qteLFacture"] = lineFacture.getQteLDocument().floatValue();
   }
   row["u1Lfacture"] = lineFacture.getU1LDocument();
   
   if(lineFacture.getPrixULDocument()!= null ){
	  row["prixULFacture"] = lineFacture.getPrixULDocument().floatValue();
   }
   if(lineFacture.getRemTxLDocument() == null){
   	  row["rem"] = null;
   }else{
   	  row["rem"] = lineFacture.getRemTxLDocument().floatValue();	
   }
   row["codeTva"] = lineFacture.getCodeTvaLDocument();
   row["TTC"] = lineFacture.getTaDocument().getTtc();
   
   montantTtc = null;
   montantHt = null;
   if(lineFacture.getMtTtcLDocument() != null){
   		montantTtc = lineFacture.getMtTtcLDocument().floatValue();
   }
   if(lineFacture.getMtHtLDocument() != null){
   		montantHt = lineFacture.getMtHtLDocument().floatValue();
   }
   
   if(row["TTC"]==1){
   	row["montant"] = montantTtc;
   }else{
   	row["montant"] = montantHt;
   }
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript4" id="2840">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeTvaRecup</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">taux</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">mt</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">mtRemis</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">mtTva</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">remise</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeTvaRecup</property>
                </structure>
                <structure>
                    <property name="columnName">taux</property>
                </structure>
                <structure>
                    <property name="columnName">mt</property>
                </structure>
                <structure>
                    <property name="columnName">mtRemis</property>
                </structure>
                <structure>
                    <property name="columnName">mtTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">remise</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeTvaRecup</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">taux</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">mt</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">mtRemis</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">mtTva</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">remise</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
ttc = null;
remise = null ;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
facture = imprimeObjet.m.get("TaBoncde").get(0);
ttc = facture.getTtc();
if(facture.getTxRemHtDocument() != null){
   	remise = facture.getTxRemHtDocument().floatValue();
}else{
   	remise = 0.0;
}
facture.calculLignesTva();
listLignesTVA = facture.getLignesTVA();
]]></method>
            <method name="fetch"><![CDATA[if(count< listLignesTVA.size()) {
//if(count< 1) {
   lineTva = listLignesTVA.get(count) 
   
   row["codeTvaRecup"] = lineTva.getCodeTva();
   //row["taux"] = lineTva.getTauxTva().toString()+"%";
   row["taux"] = lineTva.getTauxTva().floatValue();
   row["TTC"] = ttc;
   if(row["TTC"] == 1) {
    row["mt"] = lineTva.getMontantTotalTtc().floatValue();
    row["mtRemis"] = lineTva.getMontantTotalTtcAvecRemise().floatValue();
   }else {
	row["mt"] = lineTva.getMontantTotalHt().floatValue();
	row["mtRemis"] = lineTva.getMontantTotalHtAvecRemise().floatValue();
   }
    row["mtTva"] = lineTva.getMtTva().floatValue();
	row["remise"] = remise;
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript5" id="2938">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">remisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">montantNT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">montantNTTva</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">montantTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">remisTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">montantNTTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">regle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">netPay</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">tauxRemisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">tauxRemisTTC</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">commtaire</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">remisHT</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">montantNT</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTva</property>
                </structure>
                <structure>
                    <property name="columnName">montantTtc</property>
                </structure>
                <structure>
                    <property name="columnName">remisTtc</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTtc</property>
                </structure>
                <structure>
                    <property name="columnName">regle</property>
                </structure>
                <structure>
                    <property name="columnName">netPay</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisHT</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisTTC</property>
                </structure>
                <structure>
                    <property name="columnName">commtaire</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">remisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">montantNT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">montantNTTva</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">montantTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">remisTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">montantNTTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">regle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">netPay</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">tauxRemisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">tauxRemisTTC</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">commtaire</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
ttc = null;
taFacture = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();

taFacture = imprimeObjet.m.get("TaBoncde").get(0);
//taFacture.calculeTvaEtTotaux();


facture = new Packages.fr.legrain.documents.dao.TaBoncde();
facture = taFacture;

]]></method>
            <method name="fetch"><![CDATA[//if(count< listLFacture.size()) {
if(count< 1) {
   
   //facture.calculeTvaEtTotaux();
   
   row["TTC"] = facture.getTtc();
   row["remisHT"] = facture.getRemHtDocument().floatValue();
   //row["remisHT"] = facture.getNetAPayer().floatValue();
   
   //row["montant"] = facture.getMtHtCalc().floatValue();
   if(row["TTC"]==1){
   	row["montant"] = facture.getMtTtcAvantRemiseGlobaleCalc().floatValue();
   }else{
   	row["montant"] = facture.getMtHtCalc().floatValue();
   	
   }
   if(row["TTC"]==1){
    row["montantNT"] = facture.getMtTtcCalc().floatValue();
   }else{
   	row["montantNT"] = facture.getNetHtCalc().floatValue();
   }
   row["montantNTTva"] = facture.getNetTvaCalc().floatValue();
   //row["montantTtc"] = row["montantNTTva"] + facture.getNetHtCalc().floatValue();
   if(row["TTC"]==1){
     row["montantTtc"] = null;
   }else{
   	row["montantTtc"] = facture.getMtTtcCalc().floatValue();
   }
   row["remisTtc"] = facture.getRemTtcDocument().floatValue();
   //row["remisTtc"] = row["montant"]-row["montantNT"];
   row["montantNTTtc"] = facture.getNetTtcCalc().floatValue();
   row["regle"] = facture.getRegleDocument().floatValue(); 
   row["netPay"] = facture.getNetAPayer().floatValue(); 
   //row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   
   if(facture.getTxRemHtDocument() != null){
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   	row["tauxRemisHT"] = facture.getTxRemHtDocument();
   }else{
   	row["tauxRemisHT"] = 0.0;
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   }
    if(facture.getTxRemTtcDocument()!= null){
   	//row["tauxRemisTTC"] = facture.getTxRemTtcDocument().floatValue();
   	row["tauxRemisTTC"] = facture.getTxRemTtcDocument();
   }else{
   	row["tauxRemisTTC"] = 0.0;
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   }
   row["commtaire"] = facture.getCommentaire();


   
   count++;
   return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript6" id="2988">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">pays</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">pays</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">pays</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
taFacture = null;
taAdresse = null;

entityManager = null;

imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
entityManager = imprimeObjet.listEntityManager.get(0);

taFacture = imprimeObjet.m.get("TaBoncde").get(0);
id = taFacture.getTaTiers().getIdTiers();



jpql = "select taA from TaAdresse taA where taA.taTiers.idTiers="+id+" and taA.taTAdr.codeTAdr='"+params["ParamCorr"]+"'";
//jpql = "select taA from TaAdresse taA where taA.taTiers.idTiers=? and taA.taTAdr.codeTAdr=?";

//a = new Packages.fr.legrain.lib.data.JPABdLgr();	     			  
//query = a.getEntityManager().createQuery(jpql);
query = entityManager.createQuery(jpql);
if(query.getResultList().size()!=0){
	taAdresse = query.getResultList().get(0);
}





]]></method>
            <method name="fetch"><![CDATA[//if(count< listAdresse.size()) {
if(count<1){
	if(taAdresse!=null){
	row["adresse1"] = taAdresse.getAdresse1Adresse();
	row["adresse2"] = taAdresse.getAdresse2Adresse();
	row["adresse3"] = taAdresse.getAdresse3Adresse();
	row["ville"] = taAdresse.getVilleAdresse();
	row["pays"] = taAdresse.getPaysAdresse();
	row["codePostal"] = taAdresse.getCodepostalAdresse();
	count++;
   	return true;
	}


}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetforList" id="3046">
            <structure name="cachedMetaData"/>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
]]></method>
            <method name="fetch"><![CDATA[if(count< 1) {
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScritpt7" id="3119">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">nomInfoEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">capital</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">ape</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">rcs</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">serit</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">intra</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">nomInfoEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">capital</property>
                </structure>
                <structure>
                    <property name="columnName">ape</property>
                </structure>
                <structure>
                    <property name="columnName">rcs</property>
                </structure>
                <structure>
                    <property name="columnName">serit</property>
                </structure>
                <structure>
                    <property name="columnName">intra</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">nomInfoEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">capital</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">ape</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">rcs</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">serit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">intra</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
taInfoEntreprise = null;

entityManager = null;

imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
entityManager = imprimeObjet.listEntityManager.get(0);

jpql = "select tie from TaInfoEntreprise tie";
	   
//a = new Packages.fr.legrain.lib.data.JPABdLgr();	     			  
//query = a.getEntityManager().createQuery(jpql);
query = entityManager.createQuery(jpql);

//imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
//imprimeObjet.l.clear();
for (i = 0; i < query.getResultList().size(); i++) {
	//imprimeObjet.l.add(query.getResultList().get(i));
	taInfoEntreprise = query.getResultList().get(i);
}
//list = imprimeObjet.l;]]></method>
            <method name="fetch"><![CDATA[libDate = new Packages.fr.legrain.lib.data.LibDate();

//if(count< list.size()) {
if(count<1) {
	row["nomInfoEntreprise"] = taInfoEntreprise.getNomInfoEntreprise();
	row["capital"] = taInfoEntreprise.getCapitalInfoEntreprise();
	row["ape"] = taInfoEntreprise.getApeInfoEntreprise();
	row["rcs"] = taInfoEntreprise.getRcsInfoEntreprise();
	row["serit"] = taInfoEntreprise.getSiretInfoEntreprise();
	row["intra"] = taInfoEntreprise.getTvaIntraInfoEntreprise();
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">"Verdana"</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">a4</property>
            <property name="topMargin">0.5cm</property>
            <property name="leftMargin">0.5cm</property>
            <property name="bottomMargin">0.5cm</property>
            <property name="rightMargin">0.5cm</property>
            <property name="showHeaderOnFirst">true</property>
            <property name="floatingFooter">false</property>
            <page-header>
                <image id="3126">
                    <property name="height">4.3cm</property>
                    <property name="width">18.7cm</property>
                    <property name="source">embed</property>
                    <property name="imageName">head_genou_new2.jpg</property>
                </image>
            </page-header>
            <page-footer>
                <grid id="3015">
                    <list-property name="boundDataColumns">
                        <structure>
                            <property name="name">information</property>
                            <expression name="expression" type="javascript">"Tout règlement perçu hors échéance donnera lieu sur la base HT et prorata temporis une pénalité égale à une fois et demie le taux d'intérêt légal. Indépendamment de cette pénalité peuvent s'ajouter les frais de commission de rejet de paiements impayés qui seraient facturés par les établissements bancaires au Domaine Genouillac."</expression>
                            <property name="dataType">string</property>
                        </structure>
                    </list-property>
                    <column id="3016">
                        <property name="width">2.9270833333333335in</property>
                    </column>
                    <column id="3054">
                        <property name="width">2.59375in</property>
                    </column>
                    <column id="3057">
                        <property name="width">2.2395833333333335in</property>
                    </column>
                    <row id="3120">
                        <cell id="3121">
                            <property name="colSpan">3</property>
                            <property name="rowSpan">1</property>
                            <label id="3124">
                                <text-property name="text">.....................................................................................................................................................................................................................................</text-property>
                            </label>
                        </cell>
                    </row>
                    <row id="3127">
                        <property name="fontSize">7pt</property>
                        <cell id="3128">
                            <property name="colSpan">3</property>
                            <property name="rowSpan">1</property>
                            <data id="3132">
                                <property name="fontSize">8pt</property>
                                <property name="resultSetColumn">information</property>
                            </data>
                        </cell>
                    </row>
                    <row id="3019">
                        <property name="fontSize">7pt</property>
                        <cell id="3020">
                            <property name="colSpan">3</property>
                            <property name="rowSpan">1</property>
                            <data id="3118">
                                <property name="fontSize">9pt</property>
                                <property name="textAlign">center</property>
                                <property name="dataSet">DataSetScritpt7</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">nomInfoEntreprise</property>
                                        <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">capital</property>
                                        <expression name="expression">dataSetRow["capital"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ape</property>
                                        <expression name="expression">dataSetRow["ape"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">rcs</property>
                                        <expression name="expression">dataSetRow["rcs"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">serit</property>
                                        <expression name="expression">dataSetRow["serit"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">intra</property>
                                        <expression name="expression">dataSetRow["intra"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">infoEntreprise</property>
                                        <expression name="expression" type="javascript">"SIRET : " +dataSetRow["serit"]+" - APE : "+dataSetRow["ape"]+" - N°INTRACOMMUNAUTAIRE : "+dataSetRow["intra"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">infoEntreprise</property>
                            </data>
                        </cell>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <list id="3014">
            <property name="dataSet">DataSetforList</property>
            <property name="pageBreakInterval">400</property>
            <header>
                <grid id="2671">
                    <property name="fontFamily">serif</property>
                    <property name="marginTop">0.5cm</property>
                    <property name="marginBottom">1cm</property>
                    <property name="width">100%</property>
                    <list-property name="boundDataColumns">
                        <structure>
                            <property name="name">ss</property>
                            <expression name="expression">params["ParamChoix"].value</expression>
                            <property name="dataType">string</property>
                        </structure>
                    </list-property>
                    <column id="2672">
                        <property name="width">50%</property>
                    </column>
                    <column id="2673">
                        <property name="width">10%</property>
                    </column>
                    <column id="2674">
                        <property name="width">40%</property>
                    </column>
                    <row id="2675">
                        <cell id="2676">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">4</property>
                            <property name="verticalAlign">bottom</property>
                            <data id="3102">
                                <property name="fontFamily">serif</property>
                                <property name="fontSize">12pt</property>
                                <property name="fontWeight">bold</property>
                                <property name="marginTop">0cm</property>
                                <property name="marginBottom">0.2cm</property>
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">CodeFactureEtDate</property>
                                        <expression name="expression" type="javascript">var value =""; 
var date = dataSetRow["dateFacture"];
var day = date.getDay();
var year = (date.getYear()+1900).toString();
if((date.getMonth() + 1)>9){
var month = (date.getMonth() + 1).toString();
}
else{
var month = "0"+(date.getMonth() + 1).toString();
}
if(date.getDate()&lt;9){
//var date = (date.getDate()+10).toString();
var date = "0"+(date.getDate()).toString();
}
else{
var date = (date.getDate()).toString();
}
//value = date+" / "+month+" / "+year+" -- "+weeks[day];
value = date+"/"+month+"/"+year;
"BON DE CMD n° : "+dataSetRow["codeFacture"]+" du "+value</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">CodeFactureEtDate</property>
                            </data>
                            <data id="3133">
                                <property name="fontWeight">bold</property>
                                <property name="marginBottom">0.2cm</property>
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">DateEcha</property>
                                        <expression name="expression" type="javascript">var value =""; var date = dataSetRow["dateEch"];
var day = date.getDay();
var year = (date.getYear()+1900).toString();
if((date.getMonth() + 1)>9){
var month = (date.getMonth() + 1).toString();
}
else{
var month = "0"+(date.getMonth() + 1).toString();
}
if(date.getDate()&lt;9){
//var date = (date.getDate()+10).toString();
var date = "0"+(date.getDate()).toString();
}
else{
var date = (date.getDate()).toString();
}
//value = date+" / "+month+" / "+year+" -- "+weeks[day];
value = "Date d'échéance : "+date+"/"+month+"/"+year;</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">DateEcha</property>
                            </data>
                            <data id="2745">
                                <property name="dataSet">DataSetScript1</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeFacture</property>
                                        <expression name="expression">dataSetRow["codeFacture"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFacture</property>
                                        <expression name="expression">dataSetRow["dateFacture"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                    <structure>
                                        <property name="name">libEntreprise</property>
                                        <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTCivilite</property>
                                        <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomTiers</property>
                                        <expression name="expression">dataSetRow["nomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">prenomTiers</property>
                                        <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTEntity</property>
                                        <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codeTiers</property>
                                        <expression name="expression">dataSetRow["codeTiers"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaIComCompl</property>
                                        <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaComp</property>
                                        <expression name="expression" type="javascript">value ="N° TVA client: ";
if(row["tvaIComCompl"]!=null) value=value.concat(row["tvaIComCompl"]);</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateEch</property>
                                        <expression name="expression">dataSetRow["dateEch"]</expression>
                                        <property name="dataType">date</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">tvaComp</property>
                            </data>
                        </cell>
                        <cell id="2677"/>
                        <cell id="2678">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">2</property>
                            <grid id="2733">
                                <property name="marginTop">0cm</property>
                                <property name="marginBottom">0cm</property>
                                <property name="width">100%</property>
                                <column id="2734"/>
                                <row id="2735">
                                    <cell id="2736">
                                        <data id="2742">
                                            <property name="dataSet">DataSetScript1</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">codeFacture</property>
                                                    <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFacture</property>
                                                    <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libEntreprise</property>
                                                    <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTCivilite</property>
                                                    <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomTiers</property>
                                                    <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">prenomTiers</property>
                                                    <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTEntity</property>
                                                    <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">EnteteChoix123</property>
                                                    <expression name="expression">var value="";
if (params["ParamChoix"]=="choix 1"){
if(row["codeTCivilite"]!=null  ) value=value.concat(row["codeTCivilite"]);
if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);
if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);
if(value.replace(/^\s+/g,'').replace(/\s+$/g,'') ==""){
  if(row["codeTEntity"]!=null) value=value.concat("  "+row["codeTEntity"]);
  if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);
   }
}else
if (params["ParamChoix"]=="choix 2"){
if(row["codeTEntity"]!=null ) value=value.concat(row["codeTEntity"]);
if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);
  if(value.replace(/^\s+/g,'').replace(/\s+$/g,'') ==""){
     if(row["codeTCivilite"]!=null) value=value.concat(row["codeTCivilite"]);
     if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);
     if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);
     }
}else
if (params["ParamChoix"]=="choix 3"){
if(row["codeTEntity"]!=null) value=value.concat("  "+row["codeTEntity"]);
if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);
 }</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTiers</property>
                                                    <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaIComCompl</property>
                                                    <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateEch</property>
                                                    <expression name="expression">dataSetRow["dateEch"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">EnteteChoix123</property>
                                        </data>
                                        <data id="2743">
                                            <property name="dataSet">DataSetScript1</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">codeFacture</property>
                                                    <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFacture</property>
                                                    <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libEntreprise</property>
                                                    <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTCivilite</property>
                                                    <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomTiers</property>
                                                    <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">prenomTiers</property>
                                                    <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTEntity</property>
                                                    <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">EnteteChoix3</property>
                                                    <expression name="expression">value="";
if (params["ParamChoix"]=="choix 3"){
if(row["codeTCivilite"]!=null) value=value.concat(row["codeTCivilite"]);
if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);
if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);
}</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTiers</property>
                                                    <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaIComCompl</property>
                                                    <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateEch</property>
                                                    <expression name="expression">dataSetRow["dateEch"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">EnteteChoix3</property>
                                        </data>
                                        <data id="2741">
                                            <property name="marginTop">0pt</property>
                                            <property name="dataSet">DataSetScript1</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">codeFacture</property>
                                                    <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFacture</property>
                                                    <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libEntreprise</property>
                                                    <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTCivilite</property>
                                                    <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomTiers</property>
                                                    <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">prenomTiers</property>
                                                    <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTEntity</property>
                                                    <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <expression name="expression">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <expression name="expression">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <expression name="expression">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <expression name="expression">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <expression name="expression">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Adresse</property>
                                                    <expression name="expression">value="";
if(row["adresse1"]!=null) value=value.concat(row["adresse1"]+"\n");
if(row["adresse2"]!=null) value=value.concat(row["adresse2"]+"\n");
if(row["adresse3"]!=null) value=value.concat(row["adresse3"]+"\n");
if(row["codePostal"]!=null) value=value.concat(row["codePostal"]+" ");
if(row["ville"]!=null) value=value.concat(row["ville"]);</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTiers</property>
                                                    <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaIComCompl</property>
                                                    <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateEch</property>
                                                    <expression name="expression">dataSetRow["dateEch"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">Adresse</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="2683">
                        <cell id="2685"/>
                    </row>
                    <row id="2687">
                        <cell id="2689"/>
                        <cell id="2690"/>
                    </row>
                    <row id="2691">
                        <cell id="2693"/>
                        <cell id="2694"/>
                    </row>
                    <row id="2695">
                        <cell id="2696"/>
                        <cell id="2697"/>
                        <cell id="2698"/>
                    </row>
                </grid>
            </header>
            <detail>
                <table id="2852">
                    <property name="fontFamily">serif</property>
                    <property name="borderBottomColor">#000000</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderTopColor">#000000</property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="marginTop">1cm</property>
                    <property name="width">100%</property>
                    <property name="dataSet">DataSetScript3</property>
                    <list-property name="boundDataColumns">
                        <structure>
                            <property name="name">codeArticle</property>
                            <expression name="expression">dataSetRow["codeArticle"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">libLFacture</property>
                            <expression name="expression">dataSetRow["libLFacture"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">qteLFacture</property>
                            <expression name="expression">dataSetRow["qteLFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">u1Lfacture</property>
                            <expression name="expression">dataSetRow["u1Lfacture"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">prixULFacture</property>
                            <expression name="expression">dataSetRow["prixULFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">rem</property>
                            <expression name="expression">dataSetRow["rem"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">montant</property>
                            <expression name="expression">dataSetRow["montant"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">codeTva</property>
                            <expression name="expression">dataSetRow["codeTva"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">TTC</property>
                            <expression name="expression">dataSetRow["TTC"]</expression>
                            <property name="dataType">integer</property>
                        </structure>
                        <structure>
                            <property name="name">mtHTLFacture</property>
                            <expression name="expression">dataSetRow["mtHTLFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                    </list-property>
                    <property name="pageBreakInterval">400</property>
                    <column id="2880">
                        <property name="width">10%</property>
                    </column>
                    <column id="2881">
                        <property name="width">30%</property>
                    </column>
                    <column id="2882">
                        <property name="width">10%</property>
                    </column>
                    <column id="2884">
                        <property name="width">15%</property>
                    </column>
                    <column id="2885">
                        <property name="width">10%</property>
                    </column>
                    <column id="2886">
                        <property name="width">15%</property>
                    </column>
                    <column id="2887">
                        <property name="width">5%</property>
                    </column>
                    <header>
                        <row id="2853">
                            <property name="height">1cm</property>
                            <property name="backgroundColor">silver</property>
                            <property name="fontSize">11pt</property>
                            <property name="borderBottomColor">#000000</property>
                            <property name="borderBottomStyle">solid</property>
                            <property name="borderBottomWidth">thin</property>
                            <property name="textAlign">center</property>
                            <property name="verticalAlign">middle</property>
                            <cell id="2854">
                                <label id="2890">
                                    <property name="marginTop">0cm</property>
                                    <text-property name="text">Réf</text-property>
                                </label>
                            </cell>
                            <cell id="2855">
                                <label id="2891">
                                    <property name="marginTop">0cm</property>
                                    <text-property name="text">Désignation de l'article</text-property>
                                </label>
                            </cell>
                            <cell id="2856">
                                <label id="2892">
                                    <property name="marginTop">0cm</property>
                                    <text-property name="text">Qté</text-property>
                                </label>
                            </cell>
                            <cell id="2858">
                                <label id="2894">
                                    <property name="marginTop">0cm</property>
                                    <text-property name="text">Prix unitaire</text-property>
                                </label>
                            </cell>
                            <cell id="2859">
                                <label id="2895">
                                    <property name="marginTop">0cm</property>
                                    <text-property name="text">Rem.  %</text-property>
                                </label>
                            </cell>
                            <cell id="2860">
                                <text-data id="2899">
                                    <property name="marginTop">0pt</property>
                                    <property name="dataSet">DataSetScript3</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">codeArticle</property>
                                            <expression name="expression">dataSetRow["codeArticle"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">libLFacture</property>
                                            <expression name="expression">dataSetRow["libLFacture"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">qteLFacture</property>
                                            <expression name="expression">dataSetRow["qteLFacture"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">u1Lfacture</property>
                                            <expression name="expression">dataSetRow["u1Lfacture"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">prixULFacture</property>
                                            <expression name="expression">dataSetRow["prixULFacture"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">rem</property>
                                            <expression name="expression">dataSetRow["rem"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">montant</property>
                                            <expression name="expression">dataSetRow["montant"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                        <structure>
                                            <property name="name">codeTva</property>
                                            <expression name="expression">dataSetRow["codeTva"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">TTC</property>
                                            <expression name="expression">dataSetRow["TTC"]</expression>
                                            <property name="dataType">integer</property>
                                        </structure>
                                        <structure>
                                            <property name="name">mtHTLFacture</property>
                                            <expression name="expression">dataSetRow["mtHTLFacture"]</expression>
                                            <property name="dataType">float</property>
                                        </structure>
                                    </list-property>
                                    <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="Montant TTC";
} else {
value+="Montant HT";
}</expression>
                                    <property name="contentType">html</property>
                                </text-data>
                            </cell>
                            <cell id="2861">
                                <label id="2896">
                                    <property name="marginTop">0cm</property>
                                    <text-property name="text">TVA</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="3134">
                            <property name="height">0.5cm</property>
                            <property name="fontSize">11pt</property>
                            <property name="textAlign">center</property>
                            <property name="verticalAlign">middle</property>
                            <cell id="3135"/>
                            <cell id="3136"/>
                            <cell id="3137"/>
                            <cell id="3138"/>
                            <cell id="3139"/>
                            <cell id="3140"/>
                            <cell id="3141"/>
                        </row>
                    </header>
                    <detail>
                        <row id="2862">
                            <list-property name="highlightRules">
                                <structure>
                                    <property name="operator">ne</property>
                                    <property name="backgroundColor">#E5E5E5</property>
                                    <expression name="testExpr">row[0] % 2</expression>
                                    <simple-property-list name="value1">
                                        <value>0</value>
                                    </simple-property-list>
                                </structure>
                            </list-property>
                            <cell id="2863">
                                <data id="3003">
                                    <property name="resultSetColumn">codeArticle</property>
                                </data>
                            </cell>
                            <cell id="2864">
                                <data id="3004">
                                    <property name="resultSetColumn">libLFacture</property>
                                </data>
                            </cell>
                            <cell id="2865">
                                <data id="3005">
                                    <structure name="numberFormat">
                                        <property name="category">Fixed</property>
                                        <property name="pattern">Fixed</property>
                                    </structure>
                                    <property name="textAlign">center</property>
                                    <property name="resultSetColumn">qteLFacture</property>
                                </data>
                            </cell>
                            <cell id="2867">
                                <data id="3007">
                                    <structure name="numberFormat">
                                        <property name="category">Currency</property>
                                        <property name="pattern">###0.00€</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">prixULFacture</property>
                                </data>
                            </cell>
                            <cell id="2868">
                                <data id="3008">
                                    <structure name="numberFormat">
                                        <property name="category">Fixed</property>
                                        <property name="pattern">Fixed</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">rem</property>
                                </data>
                            </cell>
                            <cell id="2869">
                                <data id="3009">
                                    <structure name="numberFormat">
                                        <property name="category">Currency</property>
                                        <property name="pattern">###0.00€</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">montant</property>
                                </data>
                            </cell>
                            <cell id="2870">
                                <data id="3010">
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">codeTva</property>
                                </data>
                            </cell>
                        </row>
                    </detail>
                    <footer>
                        <row id="3142">
                            <property name="height">0.5cm</property>
                            <cell id="3143"/>
                            <cell id="3144"/>
                            <cell id="3145"/>
                            <cell id="3146"/>
                            <cell id="3147"/>
                            <cell id="3148"/>
                            <cell id="3149"/>
                        </row>
                    </footer>
                </table>
            </detail>
            <footer>
                <grid id="2816">
                    <property name="marginTop">0px</property>
                    <property name="pageBreakInside">avoid</property>
                    <property name="width">100%</property>
                    <column id="2817">
                        <property name="width">63%</property>
                    </column>
                    <column id="3115">
                        <property name="width">2%</property>
                    </column>
                    <column id="2819">
                        <property name="width">35%</property>
                    </column>
                    <row id="2820">
                        <cell id="2821">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">2</property>
                            <property name="borderRightColor">#000000</property>
                            <property name="borderRightStyle">solid</property>
                            <property name="borderRightWidth">thin</property>
                            <table id="304">
                                <property name="fontFamily">serif</property>
                                <property name="pageBreakAfter">auto</property>
                                <property name="pageBreakBefore">auto</property>
                                <property name="canShrink">false</property>
                                <property name="height">0.885in</property>
                                <property name="width">100%</property>
                                <property name="dataSet">DataSetScript4</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeTvaRecup</property>
                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">taux</property>
                                        <expression name="expression">dataSetRow["taux"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mt</property>
                                        <expression name="expression">dataSetRow["mt"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mtRemis</property>
                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mtTva</property>
                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">TTC</property>
                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                        <property name="dataType">integer</property>
                                    </structure>
                                    <structure>
                                        <property name="name">remise</property>
                                        <expression name="expression">dataSetRow["remise"]+"%"</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="pageBreakInterval">400</property>
                                <column id="356">
                                    <property name="width">16%</property>
                                </column>
                                <column id="357">
                                    <property name="width">16%</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="904">
                                    <property name="width">16%</property>
                                    <property name="repeat">1</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="914">
                                    <property name="width">16%</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="810">
                                    <property name="width">16%</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <column id="358">
                                    <property name="width">20%</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <header>
                                    <row id="305">
                                        <property name="height">0.25in</property>
                                        <property name="backgroundColor">white</property>
                                        <property name="borderBottomColor">#000000</property>
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="verticalAlign">middle</property>
                                        <cell id="315">
                                            <property name="paddingTop">0mm</property>
                                            <label id="316">
                                                <property name="marginLeft">2mm</property>
                                                <property name="textAlign">left</property>
                                                <text-property name="text">code TVA</text-property>
                                            </label>
                                        </cell>
                                        <cell id="317">
                                            <property name="paddingTop">0mm</property>
                                            <label id="318">
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Taux %</text-property>
                                            </label>
                                        </cell>
                                        <cell id="901">
                                            <property name="paddingTop">0mm</property>
                                            <text-data id="2906">
                                                <property name="textAlign">center</property>
                                                <property name="dataSet">DataSetScript4</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">codeTvaRecup</property>
                                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">taux</property>
                                                        <expression name="expression">dataSetRow["taux"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mt</property>
                                                        <expression name="expression">dataSetRow["mt"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtRemis</property>
                                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtTva</property>
                                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">TTC</property>
                                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="TTC";
} else {
value+="HT";
}</expression>
                                                <property name="contentType">html</property>
                                            </text-data>
                                        </cell>
                                        <cell id="911">
                                            <property name="paddingTop">0mm</property>
                                            <label id="915">
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Remise</text-property>
                                            </label>
                                        </cell>
                                        <cell id="807">
                                            <property name="paddingTop">0mm</property>
                                            <text-data id="2908">
                                                <property name="dataSet">DataSetScript4</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">codeTvaRecup</property>
                                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">taux</property>
                                                        <expression name="expression">dataSetRow["taux"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mt</property>
                                                        <expression name="expression">dataSetRow["mt"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtRemis</property>
                                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtTva</property>
                                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">TTC</property>
                                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="Net TTC";
} else {
value+="Net HT";
}</expression>
                                                <property name="contentType">html</property>
                                            </text-data>
                                        </cell>
                                        <cell id="319">
                                            <property name="paddingTop">0mm</property>
                                            <text-data id="2911">
                                                <property name="dataSet">DataSetScript4</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">codeTvaRecup</property>
                                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">taux</property>
                                                        <expression name="expression">dataSetRow["taux"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mt</property>
                                                        <expression name="expression">dataSetRow["mt"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtRemis</property>
                                                        <expression name="expression">dataSetRow["mtRemis"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">mtTva</property>
                                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                                        <property name="dataType">float</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">TTC</property>
                                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="dont TVA";
} else {
value+="Montant TVA";
}</expression>
                                                <property name="contentType">html</property>
                                            </text-data>
                                        </cell>
                                    </row>
                                </header>
                                <detail>
                                    <row id="323">
                                        <cell id="333">
                                            <property name="paddingTop">0mm</property>
                                            <data id="2907">
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">codeTvaRecup</property>
                                            </data>
                                        </cell>
                                        <cell id="335">
                                            <property name="paddingTop">0mm</property>
                                            <data id="2916">
                                                <property name="marginTop">0pt</property>
                                                <structure name="numberFormat">
                                                    <property name="category">Fixed</property>
                                                    <property name="pattern">Fixed</property>
                                                </structure>
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">taux</property>
                                            </data>
                                        </cell>
                                        <cell id="902">
                                            <property name="paddingTop">0mm</property>
                                            <data id="2913">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">mt</property>
                                            </data>
                                        </cell>
                                        <cell id="912">
                                            <property name="paddingTop">0mm</property>
                                            <data id="3001">
                                                <property name="textAlign">center</property>
                                                <property name="resultSetColumn">remise</property>
                                            </data>
                                        </cell>
                                        <cell id="808">
                                            <property name="paddingTop">0mm</property>
                                            <data id="2914">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">right</property>
                                                <property name="resultSetColumn">mtRemis</property>
                                            </data>
                                        </cell>
                                        <cell id="337">
                                            <property name="paddingTop">0mm</property>
                                            <data id="2915">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">right</property>
                                                <property name="resultSetColumn">mtTva</property>
                                            </data>
                                        </cell>
                                    </row>
                                </detail>
                                <footer>
                                    <row id="341">
                                        <property name="height">0.239in</property>
                                        <cell id="347">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="348">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="903">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="913">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="809">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                        <cell id="349">
                                            <property name="paddingTop">0mm</property>
                                        </cell>
                                    </row>
                                </footer>
                            </table>
                        </cell>
                        <cell id="3110"/>
                        <cell id="2823">
                            <grid id="2917">
                                <property name="fontFamily">serif</property>
                                <property name="marginTop">0.3cm</property>
                                <property name="textAlign">right</property>
                                <property name="width">100%</property>
                                <column id="2918">
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="2919"/>
                                <row id="2920">
                                    <cell id="2921">
                                        <text-data id="2939">
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">value="";
if(row["TTC"] == 1) {
value+="Total TTC";
} else {
value+="Total HT";
}</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="2922">
                                        <property name="fontWeight">bold</property>
                                        <data id="2940">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">totalMontant</property>
                                                    <expression name="expression">row["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">totalMontant</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="2923">
                                    <cell id="2924">
                                        <text-data id="2941">
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">"Remise "+row["tauxRemisHT"]+"%"</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="2925">
                                        <property name="fontWeight">bold</property>
                                        <data id="3000">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">valueRemisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">valueRemisHT</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="2824">
                        <cell id="3111"/>
                        <cell id="2827">
                            <grid id="2926">
                                <property name="fontFamily">serif</property>
                                <property name="marginTop">0.3cm</property>
                                <property name="width">100%</property>
                                <column id="2927">
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="2928"/>
                                <row id="2929">
                                    <cell id="2930">
                                        <text-data id="2943">
                                            <property name="textAlign">left</property>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">value="";
if(row["TTC"] == 1) {
value+="Montant TTC";
} else {
value+="HT après remise";
}</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="2931">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">right</property>
                                        <data id="2946">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">Column Binding</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">Column Binding</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="2932">
                                    <cell id="2933">
                                        <text-data id="2944">
                                            <property name="textAlign">left</property>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">value="";
if(row["TTC"] ==1) {
value+="dont TVA";
} else {
value+="Montant TVA";
}</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="2934">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">right</property>
                                        <data id="2947">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">mtNetTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">mtNetTva</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="2935">
                                    <cell id="2936">
                                        <text-data id="2945">
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">value="";
if(row["TTC"]==1) {
value+="";
} else {
value+="Montant TTC";
}</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="2937">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">right</property>
                                        <data id="2948">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">mtTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">mtTtc</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="2828">
                        <property name="borderBottomColor">#000000</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <cell id="2829">
                            <property name="borderRightColor">#000000</property>
                            <property name="borderRightStyle">solid</property>
                            <property name="borderRightWidth">thin</property>
                        </cell>
                        <cell id="3112"/>
                        <cell id="2831">
                            <grid id="2949">
                                <property name="fontFamily">serif</property>
                                <property name="marginTop">0.3cm</property>
                                <property name="marginBottom">0.3cm</property>
                                <property name="width">100%</property>
                                <column id="2950">
                                    <property name="width">50%</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="2951">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <row id="2952">
                                    <cell id="2953">
                                        <text-data id="2961">
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">"Escompte : "+row["tauxRemisTTC"]+"%"</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="2954">
                                        <data id="2973">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remiseTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">remiseTtc</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="2955">
                                    <cell id="2956">
                                        <label id="2964">
                                            <text-property name="text">TTC après escompte</text-property>
                                        </label>
                                    </cell>
                                    <cell id="2957">
                                        <data id="2974">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">mtNtTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">mtNtTtc</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="2958">
                                    <cell id="2959">
                                        <label id="2965">
                                            <text-property name="text">Acompte versé</text-property>
                                        </label>
                                    </cell>
                                    <cell id="2960">
                                        <data id="2975">
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">mtRegle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">mtRegle</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="2832">
                        <cell id="2833"/>
                        <cell id="3113"/>
                        <cell id="2835">
                            <grid id="2966">
                                <property name="fontFamily">serif</property>
                                <property name="marginTop">0.5cm</property>
                                <property name="width">100%</property>
                                <column id="2967">
                                    <property name="width">50%</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="2968"/>
                                <row id="2969">
                                    <cell id="2970">
                                        <property name="borderBottomColor">#000000</property>
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderTopColor">#000000</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <label id="2972">
                                            <property name="fontSize">11pt</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="textAlign">left</property>
                                            <text-property name="text">NET A PAYER :</text-property>
                                        </label>
                                    </cell>
                                    <cell id="2971">
                                        <property name="borderBottomColor">#000000</property>
                                        <property name="borderBottomStyle">solid</property>
                                        <property name="borderBottomWidth">thin</property>
                                        <property name="borderTopColor">#000000</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">thin</property>
                                        <data id="2976">
                                            <property name="fontSize">11pt</property>
                                            <property name="fontWeight">bold</property>
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript5</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">mtNetPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">mtNetPay</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="2836">
                        <cell id="2837"/>
                        <cell id="3114"/>
                        <cell id="2839"/>
                    </row>
                </grid>
            </footer>
        </list>
        <grid id="2977">
            <property name="width">100%</property>
            <column id="2978"/>
            <row id="2979">
                <cell id="2980"/>
            </row>
            <row id="2981">
                <cell id="2982"/>
            </row>
            <row id="2983">
                <cell id="2984"/>
            </row>
            <row id="2985">
                <cell id="2986">
                    <text-data id="2987">
                        <property name="fontFamily">serif</property>
                        <property name="marginTop">0pt</property>
                        <property name="textAlign">left</property>
                        <property name="dataSet">DataSetScript5</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">TTC</property>
                                <expression name="expression">dataSetRow["TTC"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">remisHT</property>
                                <expression name="expression">dataSetRow["remisHT"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">montant</property>
                                <expression name="expression">dataSetRow["montant"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">montantNT</property>
                                <expression name="expression">dataSetRow["montantNT"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">montantNTTva</property>
                                <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">montantTtc</property>
                                <expression name="expression">dataSetRow["montantTtc"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">remisTtc</property>
                                <expression name="expression">dataSetRow["remisTtc"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">montantNTTtc</property>
                                <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">regle</property>
                                <expression name="expression">dataSetRow["regle"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">netPay</property>
                                <expression name="expression">dataSetRow["netPay"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">tauxRemisHT</property>
                                <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">tauxRemisTTC</property>
                                <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">commtaire</property>
                                <expression name="expression">dataSetRow["commtaire"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <expression name="valueExpr">value="";
if(row["commtaire"]==null){
value = " N/A ";
}
else{
value += row["commtaire"];
}</expression>
                        <property name="contentType">html</property>
                    </text-data>
                </cell>
            </row>
        </grid>
        <grid id="2990">
            <property name="marginTop">1cm</property>
            <property name="width">100%</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">infoCorrespondance</property>
                    <expression name="expression">value="123";
if(row["adresse1"]!=null) value=value.concat(row["adresse1"]+"\n");
if(row["adresse2"]!=null) value=value.concat(row["adresse2"]+"\n");
if(row["adresse3"]!=null) value=value.concat(row["adresse3"]+"\n");
if(row["codePostal"]!=null) value=value.concat(row["codePostal"]+" ");
if(row["ville"]!=null) value=value.concat(row["ville"]);</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="2991"/>
            <column id="2992"/>
            <column id="2993"/>
            <row id="2994">
                <cell id="2995"/>
                <cell id="2996"/>
                <cell id="2997">
                    <data id="3002">
                        <property name="fontFamily">serif</property>
                        <property name="pageBreakBefore">always</property>
                        <property name="dataSet">DataSetScript6</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">adresse1</property>
                                <expression name="expression">dataSetRow["adresse1"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">adresse2</property>
                                <expression name="expression">dataSetRow["adresse2"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">adresse3</property>
                                <expression name="expression">dataSetRow["adresse3"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">ville</property>
                                <expression name="expression">dataSetRow["ville"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">pays</property>
                                <expression name="expression">dataSetRow["pays"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">codePostal</property>
                                <expression name="expression">dataSetRow["codePostal"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">infoCorrespondance</property>
                                <expression name="expression" type="javascript">value="";
if(row["adresse1"]!=null) value=value.concat(row["adresse1"]+"\n");
if(row["adresse2"]!=null) value=value.concat(row["adresse2"]+"\n");
if(row["adresse3"]!=null) value=value.concat(row["adresse3"]+"\n");
if(row["codePostal"]!=null) value=value.concat(row["codePostal"]+" ");
if(row["ville"]!=null) value=value.concat(row["ville"]);</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <method name="onCreate"><![CDATA[if(this.getValue() != null &amp;&amp; this.getValue() != "" ){
	this.getStyle().pageBreakBefore = "Always";
}else{
	this.getStyle().pageBreakBefore = "Avoid";
}]]></method>
                        <property name="resultSetColumn">infoCorrespondance</property>
                    </data>
                </cell>
            </row>
        </grid>
    </body>
    <list-property name="images">
        <structure>
            <property name="name">head_genou_new2.jpg</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEBLAEsAAD/4QoFRXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUAAAAB
                AAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAALAAAAcgEyAAIAAAAUAAAAfodpAAQAAAAB
                AAAAkgAAALwAAAEsAAAAAQAAASwAAAABR0lNUCAyLjQuNQAAMjAxMDowMToyNyAxNjozMDowMQAAA6AB
                AAMAAAAB//8AAKACAAQAAAABAAAIeKADAAQAAAABAAAB0wAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAAB
                AAABCgEbAAUAAAABAAABEgEoAAMAAAABAAIAAAIBAAQAAAABAAABGgICAAQAAAABAAAI4wAAAAAAAABI
                AAAAAQAAAEgAAAAB/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkS
                Ew8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/wAALCAAqAMQBAREA/8QAHwAA
                AQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEG
                E1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZ
                WmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJ
                ytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/9oACAEBAAA/APXPGV7Na6dYQQySRfbtRt7N5IpC
                jortglSOh4+lZ+jabe6T45uoptc1G+s10xXC3soYIzSMMjAA6J1PPPWuvFxCzbRNGWwDgMOh6GlEsZXc
                JFx1zmhZY2OFdScZ4PakE8LAFZYyD0IYc84/nxS+dFuK+amRyRuHFKHQnAZSenX/AD6GgSIWCh1LEZAz
                zinUUUUUUUUUUUUUUUVzHjSF7hdARMbhrVq/4KSx/QGr19aQy6ncmZmjSexELSL1A3HGMgjPzccd6ptp
                eg3C+Wb4YlAATzlUlgVGR3yfLA9ODgA0sekaCnltHdsFkhaGPE+V2Bw2Bnjhvx5xVqx03SbGQpbXAUTI
                VEPmLgrx90dQABxjjH4VVGmaItu1vPqBkjKKrCaVQSEkLjnAI5z0xwPbNK2laOIhCdQfGwIreap28hTz
                jqTH3z0OMc1NHaaYrLPDqLptk3gK6n5iZOxBPO9x9PpmnaTa6TpzQpY3wIaPakbTByy7iw5PzcFz37/S
                ra67pToXW/gKgBiQ3QHofxqzFeW0wBjmVgcYI75GRj8Oakjmilz5civjrtOcfWn0UUUUUUUUUySWOFQ0
                jqilgoLHGSTgD6kkCn0VgqP7Y8TuzjNro7AR/wC1cunJ/wCAo4A93PoK2LuE3FrJEBGSwwPMXcv4jIrJ
                fSnFp5sdhp51DZgMY/kXqAPU8HHX8ulR/wBl3hS3gNhpfkR5yPKOFyx+6M8ZAQ/n1pbfSryF4Jfsulo8
                cbJ8kRygwQqg56fcz+NWbLR7df39zYWQu2Lb3jjx8pLY555wefqaqWmlXG+KK80zTPJRB80II2ndnAB7
                DLHP+PDE0zUo4QVsdJ84MhUCNlAIVxk8noSoB9C1Oi0m9jnaQWGkxlEHkMkRyjfLnuMjhj27VJHorJqQ
                VrDTPsGzadsJD8DAHXGPwrUTTrNJUlS2iV0xtYLyMDaP04p9vZW1o0rW8EcRlbdIUXG4+pqeiiimSyLF
                GXb2AHqScAfnULSXY+ZYYXXuokOf5Y/lSWuoQ3UjRDdHcIMvBKNrqPXHce4yPerVFFfJ3xb+JF/4m8Rv
                YWV08Wk2Mn7qNQULSDqzg85B49BjI61x93438U3zhrjxBqLMCxBFwy8k5PQj0FfW/ge/gg8EaMl7qiS3
                RtUaV7iXDszDJJ3Ybv3q/wCG1ZdHuJyuZJry6l4P3gZn2n/vkLTG1S9FuzrY3zOFDbAFzy+3H3ce/wBK
                nF/cG58s298AJ/KLbVK7ecP06Zx+BzUlncz3ccrFLuPYEK7ggL5UMcZA6Ekc9xTZru6iuTGILp0EoiDj
                Zggxlt3TOAcL9T+FR/brv7DbzG2vRJLG8hjwm5CBkKflxk9KlN3cifZ5N3tZ0UMApADAkt93oMY/yKgi
                1G7dULWt6nybiGVcj5mHPy9PlB45+YYBqzbXE877WW6Q+XvO5V44HHKj1P5Uk891HMYo47qQiNXDfIAS
                W27SduOOv0zUMuoXkbSAWd62BLjaE6rjaB8uPmGcZ9u54u2zTTQQyv8AaIiybmR9nB9Dx1+npWfDqN5J
                aLK1nfI7gHYVXcp27sH5eO4z6jHerD3VwqWjrHcsZ03MmFynTg/LjPJPUdDjPSpIpZpeN8wO1WBIHOf+
                Advz68dKp3Gp3kCM62V9KRGjhUVfmyfmA+Xqox9c8dKm+0Ty2rl4rn/XNEVYJyoz833ehwMcdx9aZHe3
                PkW0n2a6TzgdyNt/dHaTlvl9RUl3B51pFPPHcs8O2Vfuh1Y9QCBkEDrjqDjmkF7cNdNF5F6E80x+ZtXA
                HGGHy9CSR+GaYNQuvIjk8i7yys23aM8Bjz8n+yo/4EKvafLLcWwnlSeItn91MFBUZ4JwO4wa+efGvwje
                Xx/ql6L6BNLnEl7J5bgyW4KlizjaAq7sn3HAya8YtLO5v7lbazt5bids7YokLM2Bk4A5PFfQ/wAK/hf5
                3g4XevWxS5uZ2ljSQEOI9qgbgRwcgn6EV674fjMehwRsOVLgg/77VCLiZpCn9hAJ3ZiMdM9Nvtj61C+o
                XUZjZfDUkoLbf3bIGXnk/NgYxkjByfTNC38w2xyaAQ7OQFXBBA/i6dPrjqPU4UX9wYXc+HZFlCHaMKcn
                0+mP5fTMiXExZo5NDCgDIbA2kkgY4B+p9h3qWzlkuJwJtGFuhH322kg89Rj2/UVofZLbGPs8WOuNgpfs
                1vknyI8kYJ2Cj7Lb4A8iLA6fIOKPstvknyIsn/YFJ9ktsY+zxY/3BS/ZbfJPkRZPX5BzR9ltxj9xFx0+
                QcUfZbfn9xFz1+QUfZbf/nhF/wB8Csy8uJLe5kji0GS4jABMqbMNnHABOSc1Wmv7mNI2Tw5IzqxDKApw
                ACflI/T8fbLE1SaQP5fhuRlDEZwADgkcZHt+vGaf9uuijyDw+wEcW4oVG5mzjav/AAHn9Kju1e+WEx6b
                dW8zA58ttgU8jDZUqexyQfbNO0/QpLi2D3t7qaswwYjMkZA9N0SI369q1otI06HT5bCOyhW1mUrLGF4k
                BGDu9Se5PJrjdH+DXg3Q9Zh1S0s7g3EBDRCS4YhGH8Q9+9d/TUUKuFAAyeB9adRRRRRRRRRRRRRRRRRR
                RRRRRX//2f/iA6BJQ0NfUFJPRklMRQABAQAAA5BBREJFAhAAAHBydHJHUkFZWFlaIAfPAAYAAwAAAAAA
                AGFjc3BBUFBMAAAAAG5vbmUAAAAAAAAAAAAAAAAAAAABAAD21gABAAAAANMtQURCRQAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWNwcnQAAADAAAAAMmRlc2MAAAD0AAAA
                Z3d0cHQAAAFcAAAAFGJrcHQAAAFwAAAAFGtUUkMAAAGEAAACDHRleHQAAAAAQ29weXJpZ2h0IDE5OTkg
                QWRvYmUgU3lzdGVtcyBJbmNvcnBvcmF0ZWQAAABkZXNjAAAAAAAAAA1Eb3QgR2FpbiAxNSUAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAFhZWiAAAAAAAAD21gABAAAAANMtWFlaIAAAAAAAAAAAAAAAAAAAAABjdXJ2AAAA
                AAAAAQAAAAAQACoATgB5AKoA4AEbAVoBngHlAjECgALSAygDgQPdBDwEngUDBWsF1QZCBrIHJAeZCBAI
                iQkFCYMKAwqGCwsLkQwaDKUNMw3CDlMO5g97EBIQqxFGEeISgRMhE8MUZxUNFbUWXhcJF7UYZBkTGcUa
                eBstG+QcnB1VHhEezR+MIEwhDSHQIpQjWiQiJOsltSaBJ04oHSjtKb4qkStlLDstEi3qLsQvnzB8MVoy
                OTMZM/s03jXDNqg3jzh4OWE6TDs4PCU9FD4EPvU/50DbQdBCxkO9RLVFr0apR6VIokmhSqBLoUyjTaZO
                qk+vULVRvVLGU89U2lXmVvRYAlkRWiJbM1xGXVpebl+EYJths2LNY+dlAmYeZzxoWml6apprvGzebgJv
                J3BMcXNym3PDdO12GHdEeHF5nnrNe/19Ln5ff5KAxoH7gzCEZ4WehteIEYlLioeLw40Ajj+PfpC+kf+T
                QZSFlciXDZhTmZqa4pwqnXSevqAKoVaio6PxpUCmkKfhqTOqhavZrS2ugq/ZsTCyiLPgtTq2lbfwuU26
                qrwIvWe+x8AnwYnC68ROxbPHF8h9yeTLS8y0zh3Ph9Dy0l7TytU41qbYFdmF2vXcZ93Z30zgwOI146vl
                IeaZ6BHpiusD7H7t+e918PLycPPu9W727vhv+fD7c/z2/nr////bAEMAAQEBAQEBAQEBAQEBAQEBAQEB
                AQEBAQEBAQEBAQIBAQEBAQECAgICAgICAgICAgICAgMDAwMDAwMDAwMDAwMDA//AAAsIAdMIeAEBIgD/
                xAAfAAEAAQMFAQEAAAAAAAAAAAAACgEICQIDBAcLBgX/xABwEAAABQMDAgMFAwgDBwwLBxUBAgMEBQAG
                BwgJERIhChMxFBUiQVFhcfAWFyMygZGhsSTB0RgZMzlC4fElJicoKTQ2ODpSdrYaNTdFRlhidXd4typD
                REdIVVdmZ2i0tVNUVnKGqLhZZGV0k5emstL/2gAIAQEAAD8An8UpSlKU5APUeKch6c9/pTn+P7aUpSlU
                EeAER7AAc89uA+0axYz28xt9wOs6E0GrZraP9QM3LoW2lGQ7BaTtdpdDtoV4ztl9dDQx25HxwMKYo9+l
                QBIYQMAhWU4B5/jz9nH1qtKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKsX
                3FdcNpbd2lm+dUF5WjNXzEWc6iGY2vALoN5OTdTL0GiHlLOQEpSEEeo5hKPAB6VE8mPGv42QeKkhtF15
                uGhFSgU76/olusKIF4VMYqbYxeoDc9PA8CH29q+7tHxrGmd6ugjemlHK8Cmbq89zD3HATXl8cGIVNBQq
                Am5AR/yvlV7uKPFybWN/N2/5XyGUsVvl3gNTtrns9R2i3SMIAV4s7iFFidHI+gd/srIrjvfm2ocmMQfQ
                WsTGUeHmAkLa5Xq1vO+sR4KAIyhExEB+tX12nrF0q30qyQtDUPh64HEikmuybxt+264XcJLE8xM6aQOA
                EeS9/TtXaQ5axaUBMbI9jABQ5ERuqDAAD/8Ar1bHnXch0N6boR5PZg1NYmtZqxVSQWajdsXIyhl10RXR
                RRjY5RVY5jFDkAKWoc27l4tq0rgsXIGn3bxiplSRuWNf2zI6hpjqjCxkc/SOyk1bHiTB53nnTMIJPFBK
                JOeopergQgn2BmPION8uWvnC3bhf/nItG8WN9RdxvXK7x+a5WEgEmlIOnCphOqcywdRxMf4uRAR717CW
                xDrdzHuAbeWNM/Z3axxMjOpe47ZlpWJZkj2NwEgHwtW8sRin8CZjk4KoUnbqKI/MazKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUrozUdp4xjqmxBd+EsvQSFxWPeccePk2SxCmUI
                Jg/Ru2pz/qKpj3IcO4DXn6bgnhPspW1fs7MaPJi3Y7HBxVcMWuWb7h4v2t0blQWEau4AgJh/kplVMPb1
                7VHW1E7P2vLTM2GWyFiNN5CeSLkZyz7mt67IxJAivspnC60Q4U6C9YgQomAOoTAAVjmuSybytFZNK6bW
                noE6gHOmnLxL2NMomkPChkhckKBigIdxDt6V8iocwABewdQcgAcAJeO5R5APUPkID3r9mPuu6Ydwk9h7
                hnYpygAeS4j5Z+0VR7dIeUogoUxe30EK+pHM2XRASmyhkAefUPyunhDgQ9BAV6+LlbgnZ1Yy81Mykuuc
                xTGWlJB2/UMYgdJRMd2c3PAdg+gdgr8j6cCHP8f2/Kqj932evIgAD6D/AFV7I3h4bHb2JtDaQGCKDZFS
                Ysp7crkzcgJgqtOzK77zFeBERMJTFAR5+QVmwpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpXS2oTP2LdL2HL9zvme5Wlo43xzBOp+5Jp4YAKk2bl4TbN0+QFRdc/SkgkX4jHMUOO9Q
                5dCniSHO4FuqutOd62ZZEfpEyQq5trDELd8A1d3ElNRZTnj51/IL9RQcSYB/vYwdKYcAXvzUqzLu3ppE
                zXbU1al74WtV7C3EiDaZaMgkof2puUeoqaSkQuj5Jim+Mh0wDgwAPyrDhqN8Ldt55hjjDaoZixzINlkR
                jAgMkyc40ZIj2ekSZXeR6BjKeoiZUA5+QVhH1E+DBno9a7ZvT3qTlp1u1iVZe2oC+7aiPbpF+Qf+Dar6
                JWIHmmDuRcyRU/kPFR7M2eH13I8QC5UWwlcFypN41u9O3gox68kyKqLHSOzUYtin4OHT1FEphAxRKIcc
                8BYlcu3FrstGPkJW49KGcYyPjUyLvnS+P7g8tuiZTyiKmAiIj0iYeOQCuxtOe0fuJ6p5NKOw/pWyrLJH
                deyLzExbbu3IFkcFgbqHeSk2VFMhSGH4x+QAPr34424vtxZZ208g2Lh/OUpBO8l3RZDK9JuLt1wL6Ptv
                25QUyQp5AvwOFk+P0h0w6eewenNY7EyeYoRMOeo6hCfL/KN017ZGzxZ6libZGi+3FBVMq2wVZjo/nCUT
                9cjHA/EOS8hx+k7cfxrJZSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSoI3
                jL9et5WZZ2JdAdtxKkfb+U49ll++LoK9MmeTYW9LLRsTbCbYgh1Iiv8A0hYx+wiUgeodoM+iS5pCztXe
                my5Yt06aPYnM+P3CazNwZq6KH5RoEVKksQQEOSmEB59Qr3OLecGeQMI6MJupzDxjg3V3N1LMk1R6jfMe
                /ev2apx+Pr99AKAen15+X4+dcVwxZuuoHTVByByAkcF0U1SnTA3WCZiqAICHPfgaNWTNikCDJo1Zo9Rj
                +S1RSbp9Zx5MYE0QAORH1GvLA8XzMM3+6KWPapqJniMR2ik78wfhUcuvMVMomAiPbgCgPYKi2W429rn4
                Rp09XtUtGt+BDqA3nPCJ8AAeo8iHavdU0jwCVr6XNPdvIN0mqUNh7H7BNugUxEkioW03L0JgbgQD7Bq4
                mlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSleaF41ZZubXNpoQIKAuEdO7g
                ywE588hVL0dCmCo/Qe4l7VE+0wLA11HYIVNz0pZasE5vLDzDm/1ytv1Sh3H6cc17rVnGA9pWucOQA9uw
                puBAQH4o1Ie4D6D9lfSUpSqD6D93315N/ixlV1d3HIoqqEVRSx7YKCJAEOtHiNOYxDAH1EeQqO/iKDWu
                bKmNLdaB/Spy+rUikRN1dIrP51BqkIgTvwAmDnjv2r3dMWRAwGM8fQfICaIsq144TByJRMzhUUDCHPf1
                AfWvvaUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKV5gPjM5IXm5HiyPExum
                J06W4QoGAQAou5145Hp+vPPeoreCnZ2GasSvSKmQO2yPZi5FidjpCS4W4gcv3cc17tGMXXtuObDdecK5
                l7OtpUygiAmOY8OiYTH457jzyPevuqUpVB/dx37+npx3rybvFewSkRux5EdqOXCxp20LPkSpLJAVNqkW
                OBumm1UL+sURIIjz6CNYRtDNoSF/6zNLlmxhuiQuHPOLoxup2DyzrXe0AVfoHSAc17nUS2MyioxmcRMd
                pHsmxx7fEdBsRIxv3hX6NKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK8uv
                xlKapNzaxFDiby1dPFmilzx0/DJOyn6OA59Q78iNRS7BX9ivizXoiXpbXXbywiBuDF8qXRP1B0+npyFe
                7Bp1cov8E4fk248pSGNLJdF4E3SbzLebm6uDd+R+YjXdFKUqggHf7Q4H9vYK8rnxc/tK25ic66yihSY5
                hE0klGgtiN0+oekiKx+PNKbubrH7QCsP2zpAflHuhaHokiJ3IKagrCdmSTL1G4jZIJBQeB+RQSERH6d6
                9scPQOPTjt93yqtKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK8w3xnTUUN
                xjELgxDAD7TpBGA48cG9muN4l8AB9PnzURW3jKI3DAqFHy1CTMYYhgKAgQxXpBKf6DwNe6To5cLvNKWn
                V05X9qcL4ax4qq54ABWUNbDbqP0gHbn6VcnSlKpxz/D+A815lXjK46OS144qeEaLNpKQwzHJKuCop+yu
                2zKRVBJTrKAGFQBEQHnkArDXsA24tc27/ogj0jEKLfKqkqoJ+ePLiLafSJ/Tv3BOvZqpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSvMm8aMcFdwTBBCpiUW+m9mBzmDpKYVLweGKJ
                R+Y/KofUEcxZ2DP24CXjjFDsPHS9IPcK90bRksLjSZpwXMAAZXC+OzmApSlABNbDbsBS+lXMUpSleeH4
                z7DE8nl3T3nFcyBbdfWk7shkUEjKuTSDFYZB0cRJ+qQAOAfH2H7fSsBPhxxSLvL6LRUVIUn5ZXQBTGN0
                lMcLDkwAvI8evIcV7GVKpz+O37Kd/mH7qc/jgf20/j/p4Gq0qnP47en1pyP7Pn2GnPI/Z+39tOf9PqH2
                DVap3++nP0DkPx3qtPX7qoA8hzVaVTn+rj59qr/X9n86UqnPr9n7P51Wqc/j0H05+dBH+r+fFVqnI/T+
                P20pz9n9v2VWqc1X8en9VKUqgDzVOe/AcfuHn7Rqoj9nPr9flVapyP4Gq1TkPl378ft+gVWqc/Z9P8/r
                Tnv/AAH7KrVOfx9/31WlU5/Z/b6VpERD5j8h79P14EADj19K1Bz8+Pnzxz/XVapyP2B9/wDZTkfs4/Ha
                q1QBH8dv7ac9+Kc9x9OA+fPoP2hTkfp+PtGq1Tnn0/t/lVaVTn8fb8qr8xpSlUEeOPv+g9g+2q0pVB/H
                z7fPtTn8fdTn7Px9OKrSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpT7q8wrxnDlVbccxK3UW8xJpp0gCoJh6N/PuJ4qp1gPr1D3qIpAhxPQ3PIgEvHdQgPy9sJz3
                r3R9GJiG0mabzJiIpjhbHQk6jdY9I2u2EBE1XM0pSlQrPGUQMo4wFpsl4pJr0Fu27I+TOqdIi66C8aiZ
                BNPzR79IgPoAiHrUTXw4jc5N5PR+PusJMULnuw50x7g0KSzH5PeAcCAco8hz8h5AOK9h0PQPlSvzZaPG
                Ui5KMB9IRgyLB4wCSiVgaykeLxsZv7dGujlOCS6XV5iKgkN0nAB4H0ry7L1yVvWXVusZQ20MK7jeqWRy
                Ozy9k6zbCVuTUlf1sw0nH2fDSF8EMo+M9KimPulkqJAKmUpjE4KUAEADI692s/FhMWq7tlrsyzKum5RV
                QjkNbdxpqu1CDyVEh5J+m3+L6LHAvyHgK6Ja7zm/vs/5UtuyNxK0ZrM+NnTsqAxWYrdtz2mfikVuJJ1j
                vPdhNkjvHYcD5akkvJJepfJLz1lnjaHNaWGNwDTVj3U/gmScu7Kvtq5Rdw8qDZK47MumKUBtcVl3S0aK
                KpoyDBb4VCkUMRQhk1kjnRUTOa7io3W+fv72ZtexzHCGF4OEyxrFvGIRl2VtzKjhWzMUW7IFOnGXRfiU
                aci7t26OAGjYVBVI6qYCussil5XnR38Z6YvFKbpVvlzZcOprMeDca3229uhGMxmOU022nMxC5CKtCxmJ
                sVewrqMTJ9IoOHcaYqvHWKqinUYfgc3Yh8T7tDQoZyealM65QxBZZQPMzDLL8lqbxhAxLYwEXG58bZNN
                JjGR5gOCZnpotACiblNdNUpTkk/bFG+vbO6naM3jPKsBBY01Z45iEJa5rct9R0naGRrdA4IrXnYzWSUW
                cNfJOYhH0as4WMkJgUTVOmJgSkS1hf8AEBalMjaUdrDUVlnEl7z+OsjFGyLPta8rUlHULcsDIXreLS3R
                fQcqyMRZu4IRcwkVSOBi/rBxUWzwyW8XqfyFrjltMOrvUflXN9v52st6njJzl+97gvd3bmRLOIpNFjoB
                7OuFTtwk48HYqkARKItiiUoHERN6GQDzx9v07/fWCrxDev249Au3fe9yYyu13Z+cMvS7DF2KJ2IemY3D
                AvZH+m3JdUIuQOoizFimYpFSGA6Z1iKEEDkAajZ+Fj3M9Xue9wq/sI6o9U2bs42reemu+JKyLeytka4r
                5Yx2RLQvK35pCSikLjcr+zq+5PfhTmb8CYogBwECgJfQi/H7qVhg37NdkvoF25suZIsa5XFrZivsGeLs
                PS0c7BrNRd33SfylrgiTGARFWNaFXd/DwYoF6wEBKA1GI8L9u/6mcoa1bt0r6u9RuUs3R2bLCdyOJnmX
                74uC9X0BkKwiqTD+Dt55OLLqIllIo7tdYnX5fLAolAqhx6/QWpXn1659Z24Tt5+ITtrFsXrDzrkTT7kn
                LmMMkQGG75v6Xmsd/mvzlJi1uHG/5GP1lo9s0inYykZEqoNyKoIoNXCRk1wDp9BSof8A4se/tYel/F2m
                XVfpf1a58wRbz2/X2nnIti4xyjcllW3OTU9bstkmxbrCJt5duJ3pUIacZvnKxjgZIGRCgmKY+Zjg8Ov4
                gvLBc2jpG1/5tu/J9u5imGxcRZlyrcry4p6zb6clK3Ts+dumaUM4NFSnwFa+0KGK3cAAE8sipwN6DhTA
                cpTkMBiGKBimKIGKcDByAlMHbgQ7gNQkPFua1NXGk7JOiKP0zakczYGY3nZWbZG7GWKsgXHZLa5X0HPW
                2hEOZtGCXRByZsRyuVLzgMBQUPx+sNTEtPcxK3FgPCFwTsg6lpqdxDjSZl5R8sZw9kpSTstk+kJB4uf4
                jqrLKHUUObuJhER71i03/o3UKx20s15Y0yZ6yngDJWAkGuYDXBiq8JKzJK4rUtnrJdltTMlEHScnbKMl
                lV00klS8uEkTG6ilEowo9vC3PERbnWPb5yXpm3C8/PLdx5drey7kC7dW19W1IITTuJJNNypMnT4xjJmQ
                UKPWHz7cVkK/vVXiuOoojr9ymUeR7/3bN4iUBD0ExRecfs4++p0+CYO/LYwjhy2spS61wZNt3FePYLIs
                84kVJdebvuItFnH3fLryqvJnR3Mgm4WM4N3UE3WPc1drUrrDNGY8c6fMUZCzdl25mNnY0xdakteV6XJI
                mN7PFwkM2Fy5UKmkBjqrKCBUW7dIplFlTkSTKY5ylGAdlzfI3hd3rPtzYC2lbJuzD2KWK7luhK2fGQBM
                lO7aM6Fq0uzJGWLjIo0tVNfgqiSMWu1UREwpmeL8V9E42N/Euznsl9zO4dkD8tW7Yrxs2fa4c5r3LHOi
                FFQka0mmzk7VE5RMJSCg7BIo+g8d6uv2yMa+JY03a9MIYo1d37m7I2lm4JZ4bKN1XzdFtairNC14uKWd
                JkWylJDLSkO7XOkmRESySCp1DFKqB+rgZt9Q2vFlZH1qaWLe0uaotL2rXUJg2yrgmZrAeRLFxllC4rKt
                R7dCjJ9kKxrtLFW8s3FSQcNW84zfuFzqAZBsxIQE/LOKmLHTJoz8TrqzwJjLUbijcCzM4x1lm3hua01p
                nWVekVKqRvt68cIvmCj3lI4Kt1AEph9O/wBlZB9G2214ljH2rHThfeobW7kO68D2fmzGtzZktWX1bXVd
                8dcuMoa7GkjfFvOrYcOVU35Xkcm5beyqEEp+sCiJQHkJtffv6fPj+oagi+KxzRrt0WaisC5d0760tTOJ
                cV6g7LnYVbG1iZbuu1LQgb5xULBnNvIGFgXLZJMj5jJxrlx1gc53JljibpMBS9l+Ge3372ztMudC+t7K
                kxe2VXzh9NYEzDkKXWk7lvUi5xdS2M7ouSQMKrx6iYTuYdd2cyp0xUa+YYpGyZJtoiPbjkQH7AAfT7Q/
                HeoGHiOtdms3Tpu+6W8T4F1QZvxFjK4sIafp6fx/j7Ity2taE3M3Bn67oGckpeAi3CbZyq7ZM2rVwdZI
                3WkkQg8lKAVPRDngOeOfnx6V1TnHNuNNOWJ79zdmG6GFm42xtbr+57suKRUAjePjGCQqH6SgPUoqobpS
                RSKHUooYpCgImAKgG5q3xd37d51A3Fp52mbTu3EWLGjhy2Zy1hsIllkmTt8roWyN35CyxcBBStdFbgDp
                IRq7Q6QD0quVjCPT+q/2T/E6xbZTKMfr0ylKZHMyKorDM9deXk71X6W/l+7D3FJSKUccAImml0GkRSEo
                FKHJQ+H5DST4gvc32ztSTDS7uzw16ZIsFjJs4i6XmRYJi3zRYUU7WAid42/eUakiNzsCgYFj+3KOlFk+
                RQdFEAIb0MMeZBs/Kti2nkqwJ1hc9lXxARdz2vPxaxXDGWhZhoV6weNlS+oHIcO3qA8gIAICFY/94C08
                03Pt5aj3+nvNWRMCZcsOzHOSrTvnGVxvrVuBVxY5gnHVurzUaqiukzkEUlEHIpnARKPYB9Kwb+E73DtT
                OsPGmp/FupnK165tncQXJaFzWrfeRZ57c93IQF8t3TVa3Hk9JCdw5RSdMFl0BcLHMmCnll6SFKAS+6js
                +J81EZ10x7ZYZH085bv3C1/uNQ2KrYUvPG1ySVqXMEBLRU25kokkzEqJLkRXO2QMoUhy89AAPIcgPffh
                5s05b1CbRWlbLec8jXhljJ9zO86o3Fft+zz+5rrnErf1E3ZbMEWVm5Ix11xbMGbVokZQ4mBNIheeArJx
                qXxveeXsAZexpjnI12Yjv+8bEnoeysk2PMKQN0WhdSjQV4GWi5hIBO36XREyLqJ8H8kygEMUwgYIZHhZ
                9xbWpnDW1qp0kaoc/wCTdQNvwWF7kyhBSmV7qmL1mbUujGGVoDGsk2gJmeWVdINJJG4/McNBMKfW1SUI
                CZhUFWdVXntasNbWvvb68RDYeD0NZOfcpaerx1E4PXWxJfWQZq5rKPifUFMRrOestO05RUI9NeLZyq6c
                Y5SQTFFdJFYnAFr0JO/P2cfxqtRaPFSXZquwZpJxJqh0t6pc26fXWM8ljZl/27inIU5YsZfFv5LTQaRs
                rNlglkFXbyLfsm5GRTmEhEXbsRDqMUQyDbCmrbKetPbKwXmTNU27urJjVa5rBui7pAqQSl2urLlBj0Lh
                ljI8FUdLomTBdXpKKhiicwdZjGNmRpXX+Vck2vh3GeQcr3vJt4azsa2Zcl9XRLOQOLaOgbWiFpmUdrFS
                5OJSIonNwUBMPHAAI8c+W9ps8Qdrob7ldoZ3yXqWzLIadLxz+8d3NgOayDNPsW23iy9LjOwb20ytZycY
                9BKFZOEPKXSblU5QMoBus5jD6qETKx87FRk3EuUnsVMR7KUjXqJuUXbCQbldM3KQ/MqiZymL9g1+jVoG
                ubW3hHb605XtqWz3LrsrRtNNJrGwcV7Ktc163Q/AwQtn2qyeKIkWfPDEN0dahE0yFOqqciRDGCCb/fV/
                EEb1uTLstnb4gbgwHheLkTtBb4iGDtZC22Sqx1osMg6j7sTSdhKiiYAOSKdRqKoAHQy6gAxuxn20l4rS
                Mbe+47XhnmalCgo5LAo7hOSgOZcTDygCE1Opxw888lKY/lF7cccBWe/YGj95W3Huqixt1ufyJMw1j/ml
                Y4LdZGa2XNu5l/KjcKmQ5CAybbKIOZlu3TawqawPnropDqkMiZIRWBSR5SlKUpSlKUpSlKUpSlKUpSlK
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSvL48ZccTblmOCGOIlLp1tUSlEOkpOZl2
                IiA/Pniok0GIBMxBigIh7yjwOAj259rJyI/ZXug6J+P7kLTR0iAl/MljjgQ+n5LtqufpSlKhzeMIiF3e
                mXT1JFYkfEZ33caaJVROBEXZ4xM/mgJfn0cgAmDj7aiueGCgkZbeUwCQ6AHLHwOTJbpKb4UlGltnBM4G
                EOR4E3oHz7elet5SledLh8QDxlCwDx31Gag/t/8Akz3Z/Vzz9lei1WNvdp0e2Frb0D6i8Q3jAtJSbZY3
                u2+cZySjch5K3ck2fAOJ61n0Y64MdLz3CBWbkCcdaKpyiAjxUTfwX2ebjYX5rR0nyLx66tpW2rRzpAMF
                VzmYQU9b84XHd4OGbYw8FVk0pGHK4OBfiBil37VPRuS4I21Len7pmlRbw1tQ0pPyzgpesyEZDsVJF+sB
                BEOelJMxuOQ/rrzN9nXFJN4nfiy3n7Ua3SvC0rDeZF1QXNbst1P4eXUt+8Y+zcVWMZJwJy+wsnMmwXI0
                OApmax6iA/CPFem8ikkikmiimmiikQiaSKJCppopJlAqSaZCcABSgAAAAHAB2DtXCmYiLuCJk4Kbj2Mt
                CzLB5Fy0VJNUHsdJxsg2M0fx79k6KZNZFZI501UlCiUxREpgEBGvLx/JAu0P4lCJsrF6y0TjRhqItlCB
                imiyybdbFGdWTZ+azlCkMZQUGJpNSNTBTkxiNinHsbt6j4fyHj045+6ojXjGclDa23jh/H7d55a2T9SF
                vs3rEhjAdxEWtacpdJ1z8BwKabtu0AQ556jFHgQAahu6hNP2QdsG69sjWPjhB0xXyHh7FWoSHfecv7Ot
                ka0riUVu6GfuA46U3yREiqtyj3bKiA9jV6zunPNto6k8C4ez9YT9KQs/MGOLQyHAuU1UVDEZXTCJSoNX
                IIibocNzKGbuUTcGTVIdM4AYpgCAt4h7KVy7ku8Lpw23MWv3khb+NrgtbHsunHdbkjW+L7dJy9/TJ2yX
                WBlIiHKBhP2HoAQHgAEatv0S2nBbf3im4PEdtxRYSx43Ulk/DVuQYe0INkrVzDYkradlpJAYBMZMhpWP
                co8iIGEhBEeB5r05KV57nieMz3Nrd3L9KW2Jil07lE7JlbVbXPGRfnuhNk7L7lEUyuGCYCArRNvCR0QQ
                Dum8Hn0qyXej0ludlDcq0h6jtOEJ7ms5nB4oyVawMyukImSv7E6zaGyXAvHIgAdM0CB1nrcojw3fdIhw
                fivS0w7lO084YkxfmewX3vSyctY+s7JNovxACHdW3e9vt7khllUwEeg4t3KfWmI8lNyUe4DXZNecj4hr
                v4ijStz6DZek3n19fznzQhx/m/bXo3VEj8ZcH+5jYH5DqAdeGM+3b1/ufsn+lRgNYu0fPtdrLRPul6eY
                Z2VGTxTHI6k4C30XBV7floC7n8BbmWYz2T40UzkbN0JM5ekE1AItyAibmWP4bDeVa67cJJaW863I3HVX
                gi22ZGj2RXIm9y/jOPIRgzuxkJxAV5GO/RNpcgABhAybgOohz+XiC8a/x+dfb+DkeTY91Accc9gC5LV6
                hAfSp0GmEONNenkPpg3Ewf8A+Ax9WqbvhCH2vtd5DlAxTaZsoAYpgAwCH5PKccgPr+2o6ngwF0Gmj3WY
                7drotWjXURbbly5cKkQQbII4uaqKrLrKmKUhClATGOJgAAD1+dS8hznhT34ytkcw4s/KSQcs2LC3hyBa
                Xvt6/kTlTjmbOJF57QosuY5SopkTExxMAFAREK7U4Dt9nYAqtKhx+Mi1MXDjrR/p50027JqMWmonKFwX
                JfCTR4VJw/tTDbFg+j4WRbkN1maOJWYaPQ6i9JlWBeBESDxlU8PLozs3SLthad38dBMW+QtQtkwGfsj3
                IRJueRm1MjxxLhstmq+IAH9nZQS7AiKAmEqahljgAGUNWb147aMGzl8/ctmTJokos6du102zZqgmXqVW
                cLrCBCEAA5ExhAAD1GurBz9gj36ztcc14mC5ZB+3imFvDkiz/fb2UdiANY1rEg989VwpyHlokIJzchwA
                8129UQ3xmvbbi06j3/47Vmj+0MEZA49aynbCE5C2/sy6Cn09MRUK0HFcqkDyXkGkc1Mqpkab6UirvFCF
                Ew8CBSgYeflWV61svYmvmZcW5ZWT8eXhcLVk5kncDa97W3cEy1jGTpFi7kHEXEuVlyIJLOW6Kip0wKU6
                qZTCBjlAexqgueNiEAtDblEwclC6tT/UHryHuywhEO/7qwzbtu1leWiWzNJG5ppPTnbfw1mPGGBslTak
                CKyD/B+aLhsCLuYj4jtr/go+XeKHcNjD0lScidDuRQhQmybEG7hbG57pgZJXbJMGGp/DzKMt7M9sFOmi
                tMh5IoRGRYpsA/E0kwSMKvSH6JwByDwHAjFW8VDx/fvtIQCPcdPmmQQEPp/dJ3uHADXpA1Cm8ZnqiuSy
                8C6V9Jdsybhkyzled6ZMyE3ZKuElJG3cSoxsfa0G/KQAIq1dyc2Z75fIiC0cmYQAADqzW7B+hiytE+3T
                gtsxt+Pa5OzRZsDmDKVzA1QLLy8he0eSdgYxy7EPN9nZR6zdNJAw8EOKnYBHtmr4Dt8xARHn596il+LO
                0ZWfmbQKXU6xg2SWVNNtzQ7xOfRQRSkH+PrldhF3DDPnZQ61EUVDpOUUxEQBQOQ4AR5+58JnqDuHNG10
                lZNyP15RfTvl+7cTxbl2ooq4Tt9xHMr5g43qU54SaN5ZNsgUvYEyECs4WvsP9pLqs/8AQLk37u9rOe9Q
                0fBScjcmvXkA/wC0mEgAfqHt89z/AA4/cFT6Ki6eLw7bSqAgA/8AGkw0Pb/zJcXPNXK+GD4HZH0dCH/z
                hqO//WlvWs+3HzrzpPCzDzvi64QEPTTPqQ4Ee/YdU+OuQ716Ldea7vr/APKWsE9g/wC6doQ4HjuH+rVu
                9wH91elFSoyni0P8Uldn/pnw/wDd/wAKCfKvsvCrgH95+xV9mUsuhx8uPygT7VI5pUXHxY+s8dO23ITA
                FtSpmeQtYl5tse+S2VFN62xNZx0bqye/TMmPPQ6P7og1iGKIKISC4APJO8YTVvs2fmY2DtKGstG2zt80
                /lg4yhldb2VUsoXE+aiItbIZOgTDkUWaLaPkiqKf4MjtQoAAiNTOfDtazw1l7YuF5Wblhksi4VRWwfkU
                yywrvTSlkoppQck9OcRETvopRm7Efl19PyrOhXnoeMg1G3Rd+orTFpAtyQcrW/allK5FmoBv5pCvr9vi
                ZNDQorEDgqxiR6KIIcgPQKqgBx1Gqa3t6aO8eaEdH2D9NWO4yPaNrEsmGC7Zpm1TQc3rkSSYpvb5vaVW
                KUDqryMiddUnmCIpI+U3IIJpJlLeoPeqcB+36/P99VpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpXl+eMvapJ7k+MliuFjKL6dbYMdFQnCSApTTtMhWxg7mAxQ6
                jfQ3aoj8MHRMRfV1AYJJjx08CYP6UQfT5j9le57ofN16O9MZgBQOrB+Nx4VKBFA5tdt2OQPQfsq6alKU
                qLv4rXF0rfWga3LhiU2oGse+1Hsi6eGXBFtFyMeDNcehHsbqN0gIG4+XSPrUPzwr7ZNLeRxIh0mVM3x5
                lsxTpKcFIIQqRQWUBTkRL3EBKAgIch8u1esXSlebVCyj+H8YIm6jnKjVypq9vuOOsmYOv2OYxXLxMihw
                fkOFmy6qRu36ph+dekrXTmoa6IqyMBZwvOeVMhCWlh/JdzTCxBT8xKMgrMeyj86fnGIXqBJIwlAxwDkO
                4h615/3g1rYkpPXhrAyG2RcngInTS5tl07ApBaJyV5ZjgJyIQWNzyCqiEM8Egd+QIfuHYKn8alIiQn9O
                mfYKJO7TlZvCuU4iMUYFMo+TkJKxX7NkdkQglMZUqhyimBTAIm4ABAa8/Twc11R0BuIas8fyi5Epy5dN
                U2/izOlgSXerWXmGBQlWiSRy/GsYkh7QJAP1ARJQwgYCmMX0d6oPf6fz+/jmvNA3m3xMxeJex3ZVltlJ
                GatfIGlmx5BvHKLC4XmmKjS83RAO2IU5TEZv0uspRPwBR5N6lL6Xw/LtyAfbyPPPHy+lQGfGgX4WdyLo
                FwbGuQUeqRuWLxlWQeQYyKs1LQdr2suHX8X6Tpky9zFL8PcR9S5Jd8/b+a5t2LcOydpwAHyBoyxLijJc
                Gg3TXXdmtZvYzCHylGoJkMcBAyJiSSpjCYCEaqCUeB72n+Gn3TrXx9tP6sbCy9cPS929GF35TtwrpVNR
                07wxfLJ5dMTFRzZYQUcnYXKjLonADCBU3zBApSj0ANonhZsDXPrF3BNUW5bl5keUVs9/cjmEeu0Besvz
                rZdklZSQBm4cl/RHiozlNoJDclTP0cAWrcN+o7zSt4jfGmoRqkEWi/uLSLnmJVQTQTTOazjRtrv35AIo
                QBE723XRlTKGIJjicTD3Aw+l2UwGKUxRAxTABgMUQEogYOQEBDsID9g111l7KNp4RxRkzMl+yJIiyMUW
                DeGSLvlFCicjC2rJgF7im3QEAQEwkbt1DFKA8mHsHceK8+Hw51lTG4Ju7altyzOJmDeOsOYu/JrQJhwV
                SLY5HylKuGVjWxHyD1Uhk/cMSC3sIiY4gkzKUwcd6zzeKWwJjHUttoXHkCLu2xnGTtMN2ROT7RTJcUKr
                MytuyiyduX/bMUiCpjHMq0UQlTkDgxix3BR6hADfJ+Ep1nfn9295XTZckoLq+NIF6OLZjUXBiC5WxJf6
                7i6rKW8w3SooLSQCaYCA9XkoJtCdQFEhCyq685PxDf8AyibSv/0L0nf+06ar0bKiSeMu/wAWNgb/ANfD
                Gfz4/wDk+5P+dZOtj+0LYyBspaN7HvWEj7ktG7cH3Jb1yQEsgV1HTENK3xOM5Bg9QP2MRRM5ij8+/ICA
                8DUEjdN0K5/2CNxSwNRemKZnoTFMle6+S9M+QyJKLs40zJ0Di5cMXp0gDd57MiuZg+aLACchGrlE6RSL
                HTL2Z4iPX3jrcxwhtjapseFbQ79xYmebOyxYXtRnD/HWVWMpajq4LaMZQOtZofj2uNd8B5zVVIxwKsCq
                RPSb0xc/3Nenrn1/Mdibnj05/IKPq1bd6/xYGu3/ANWfKH/V5SvOp2VNjvKm6/jXLV+Wxq3S032PjLIs
                ZZU3GIWVcV9Ss1KylspzR5ZvDx05ANOkiJ00BBZ31m4N6FKHVJQ0veEcg9PefcMZ2uLcIyBkd1iPINq5
                ANbbPBTSz0bjd2pLpS7WNNKPr0mzNUVDIkIcwoLmAORLwPHEyClKgR+NbhZNOU0CXIdsIQ7plnWFReeY
                kIDJRzm23zlsdMpusnSk5SMUxyAUwmEAMIlEAl7bZV4Q9+bdOhW6IFdBwwf6StP7U5m4n8ptJwuL4yDn
                Y8oqFIJvZXrZw2MPHAinyHYQGoumfvCz6xdVupbMmWsp7j8XZtlZAyHdFzWzGxFs5KyrPQtuyztVeNi3
                UXOTVtNEzop+zomSQeHTKHPSc3QUp8AU3oaeba+/Lpb0mFzTN5vJamYtONyL35I22tZCko6vEzSbXRG2
                xlpoESoicUiiMgoYwcCPA16t1RC/Gbcf3uLTqHfk2tqzeB//ACcE5AHvWGXbn8MDlfXZpDwdqeldwJfD
                9n5atNzcFtWFEYhuLIjy3mDO5HkIEc5cObxt5qTqO2VWAW6Zil6gACiPUNSQNpbw69tbW2pqW1Mhq7vj
                Pc29xdc+NGNqyGMmGPodondUxFyj6afuQn51V0dMsb5aSJAR4Mp1mUMBAIaSdUFvxsn/AAO25u3P+unU
                /wBh44/7V2F61KLwDgjGWprav004KzDbbS68dZJ0T6f7buSHdpkP1tn2F4dMjxoocDeW5bn6VkFQARIo
                UpvlwPnD5gx9qy8NbumRV1WM5fzVqRMkrL2RJPDumFq5+wJNyBfelmXGqiVVPzhSKDVyPQoZo+SSdpk6
                0iFrv7fi1U4o1t7lO3XqkwnJrSWOss6XNMEnGldppJS1vTbbUlere5rMuFugdRNKUiHnWxfIpqHIChOt
                M6iJ01DeonXnleNNt2YjtSuhe+XCaprdmMNZLt2OHpXBE0zZ9+specKmc5fKE/s8zHicpDCYA6esAKJB
                GcJoPuuFvfRNpIui3nhH8TKacMMmbuEjCYoLNMfR7B83MPp1IuElUT8ch1EHgRq7GsIPiML+gbD2fdX3
                v4rE/wCWdqQ1gwwPDlIITtyXE2JHHalMU3UsHlH6ChxyHPcKxkeDVt2XiNvTPky/bnSY3Zqvn5OFWMmo
                UrtnHYxtuBdqkMYpSmArlqsQegRABLwI88hUjvX130SarB5Dj8wmTf2/61XPeoaHgpDCNya9Q9BCEwjw
                H2C/n+/8uan01F08XhyO0s3D051R4a59OBL7kuL/ADVcp4YMONkbR0H/APENR3z7/wDGmvX1rPvXnS+F
                lHnfD1w9uONNOpEPt4/up8dV6LVea7vr/wDKWsE/+k7Qh/8Adq3a9KKlRlPFof4pG7O/H+zPh/v/APnQ
                T619n4Vf/E/Yp7cD+dHLvPfn1n0xqRxWkeoPp+4e1ebtuxXY+3gfEM4j0Z2vLKL4iw5eNv4FdvWx/wCh
                xcDZbha/tSF6HAixkBUbAjLJkcAoTzW7FqU/SJeAncapcWYCzjpJy9pan7jx7CWJeeIJvHDGMWuSEYRV
                vtGsALS2jETMsHlIR6iLU4AUA4Inx2CoLfhSdT77S3uIZ10DXzONj2/nFlcTG1VE3hHMerl7DDh07bjF
                GSUFACS8EEkqZcBMKgs2pC89XNejvXmc+KnB7j/eJxdkSbM9cwA48wndbBqv1lahHWlMlTlUWCgCf4VF
                GyonEE+x+r4TCFelZAv2knBwskwcIumL+JjnrN22VIs3ctXLMi7ddBdP4TJnIIGKYo8CA8hX7VKUpSlK
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUry+fGXrmPuV42S
                4KUG2nW1gKYDiJjedMvDmKJfl9n1qJJC/wDbyH5Dp/1Vj+QHkeA9rIHPNe6FopAP7kTTVx6fmTxyH7rX
                bB2EP7aufpSlKj+eJKsqSu/bhvVZgu7SSt+SGTepNnijQHKBGZjAmqKZTCcCiXq6R7DwIfOoQXhZEPZ9
                5vFgrCJznxzlsAHgQ6DDCoiUTlDsAiHzH1H+HrAUpXmspKET8X03MoYiRDay7nKCihgKXrVx9Ippk5Ht
                ycwgUv1EQAOea9IufuW3bUjHE3dM/CW1CtCio6l7glGMNGNkylE5lF38iomkQAAORExw47jUL3xGO/Fh
                NbA16aDtGl/Mcr5PzDxZeVb3sJ0aVt60bSVdlJLWlCzDLkj+RlTFBmqRoKiYIGUIJjCoFZGfDL7aV1aB
                NEcnfOYIBW3c96qZuHyHd8A9TBOTsywYKPVaYxsyTIPdN2RN5ISb1MB+A70qB+TN+RkhGKUwGKYoGKcB
                KYpg6imKIcCUQHtwIfKvK/1AROUvD577BcvRtsSrnFLbJE9kCyEyAdOPyRp0yoq4j7ntxm+EARUeM2rx
                yyUIYR8h83SUEvSCQm9KHSprL02a1MZwWVtOGVrWyJbk3GtZBdlGyjUblt5RchRVjLntw5/a2LlE4iio
                RZIC9ZR6DGDgRtf3MN13S7tpYVu6+coX1b0xlROGkC43wjDzDN5fd63X7MARDFaIamOswYiqomd0+dFI
                mRIFDEE5y9NQ5fDe6Rcz7gW49kvda1Bxrpa1LLv27cgMrgctV2sddOcbsXUWjYq1zKgIGaQCC3UIFESp
                JlRQ56jANeiyHAevbjvzwAAHP0rzevEiTw5z37NNWGYo6jglj2hprsJ8wMoZRMs3cuRpG+ZESpkN8ArR
                8lHlMHYw9AG9Oka9Fu4bKtm6rInMcz0O1kbMuS1pKyZmBcAKjN/bExEHgpGJXKpyJklWih0TAYR5KI81
                4zutbE+X9u3VhrV0Xx83MRMM6uN5i+4myAKt08gYpNeUZlLGz5RH/wC9PkWkJIkAodQFOKXPSY5R9OHw
                /wBo1Lov2yMD2vLxacfkDKsT+erIJjoJJvAlL9RJJw7BwsQOs5W8aLXyyq/EQTnKPHFRgPGhY2d25qZ0
                M57TS/QXXiC+8bJLl56yu8RX8heflnEQ4ABC8CiTvyIgfsPFTkdFmRE8t6QNLmTSviSSt86fsQXK+dkM
                JvMlZOwmDiZKYekPjTdCsmpwAB1FHio+fi1NZv5gdvOO0323KFa33rAvJrar5JBcCvUMS2C6a3Vfbgvl
                m60wePPc8WPUHSs3Xdp9+DBWA7QX4WzWLqJ0zYqzm91eRWArOzrbENkdvjBk0vo00nATbY6ttSs0hFLo
                x6izuPVTdIdQCYiK4FMIdRgq/u3fBbWi+cIOcia6L0cLHaj7wXt7HEY9cHelACkBurOPSiKXAj3OPV6c
                BWLnZuvG59nvfpvnRzk6bXRtK6L8uzS3c0tIJkjG09Fy8kSawvfq6TgQTQSfgERJgbq+FByJQMICPPpx
                c/z4rzk/ENDz4ifSuAev5F6Tf285Omh/lXo2/wA/51Ei8ZfwO2Lgbn/x8cZ9vmA/3PuT/kHf9v8AbWWD
                YPD/AHH7QmADwH5p5Pt68h+cGZ7VdLuDaGcQbiWlrI2mXMcemMddUcq+s+60EElZrHeQY9sp+St8QCio
                cgszXPwukAgDhudZuYQKqIh48esjShmrQ7qByLpezjGPYi68dTy6SZg9pCCuWHdfHA3tbRleE1mci16F
                klS8iXkyR+FCHKHtBaYf+LVp559fzG4m559efyBj/WrVt3of9zA12/8Aqz5Q+v8A+Lyo9vrUdnwWyqY6
                StYyIKEFUNRdrqCn1l8wEhxo0KU/R69PICADx+3kKmgdh+nf+qnP4/b/AFVWlRzvE56C7m1q7cs1dGM4
                Ba4ctaWrjPmu3YiPbndTM/Y6MSrG5Tt2IbpAInWFgKEwVMgGOqaOBFMplFCgOKjwuu87h2KwTD7emprI
                ULj27cdTEsbAV03jIN4a3bjtC4ZNSYdWK5nHwkRQesZBd0q19pUKCiS3lFEPJIUZv7R20ftkHrFy3esn
                SRF2ztqum4auUFC9SayC6ImIcpg7gYoiAh8684TdFuCBuXxT2EX1uzkRPMkMk6S49Z3DSTOVapPmcSxR
                esVHDA5yAsif4VUxHqKPYwANekJUQvxmw/7nFp17h/x2rO57/wD1icgfSssXh9VUlNm7QaBFCHFPFEum
                cCHAwkULkSaExDgX0MHIclHuHIch3rMiA/u9eR/Hy7d6rUFvxsfeztubkO35Van+3r/3rsLgKl26BP8A
                iIaKvr/ckacePv8AzOQ3pVrG7/tgY83SNKVw4lmEo2EzBaiT258F5EXQJ51r3qm1ECxkguUBOMXKAUrZ
                +mX0+BYoCZIAHybIrFWTsD6v7Lwhl6AmbRv/ABVn607Rua05kqqasHLR9+NU3yaCagiUUVx6XCSyXwLJ
                nIqQTFMBh9vGowfiqdBdz6utBELl/GlvurjydpGuuTyKjExrRZ7MS2L7ljU4rJ0dFtkAMc6iJW0ZLmKQ
                omORgYhCmMYoVY14YLegw29wBb2gPUrkSBx7kXGDt4ywlcN5SyERB3rZEk6PIJWuWbkTEbpP49dRUEU1
                lS+cmcAIPIASpnc9eNpWrbrq77mui3betJiz9ve3PNzUdFW+0ZH4OR44mHqibciRgEBA5lQAe3AjzXnd
                eIk3Uk9znM2KtuLQos9yrYsZkFgSenrXRdLs8p5WVc+64aGgPLAQcRkV1KLHeCToFXlQo+WmJjTXNq7R
                Sx2/dCuCNMqZ0XNw2lbQy9+yCRSlJI5Bulyafu9yQwByJAerqJpAYR6SFAA7AFXQalcfOMraec4Y0ZJL
                rPr5xTftsRyKBwIsvJS9tOWkaiRQ3PHWudMvP0Ea89bwrGrXG+iPWvqX0takZ2LxdMZhjom04SdvF6lA
                Q7DI2KbgkW721ZJ/ICRFFR8m7UFqdUxCCKIl6xMcgD6SKDlu5bou2y6Lho4RTcN3SCqazdduqQFEl0Vk
                xEpiGKIGKco8CHcO1QafF36/sUXfinE2grFN4wt+5CeZOY5HyfFWq8bzoWr+TjJeItKDfrRwqAWRcLvX
                IizAfMKXp6gATAASW9l/TTcmkXbB0fYKvRkpGXlb2MQua74hYhCLwl05NuF7k64YNwCfYTsnkuq1Ob5m
                II/OsoVedL4Wbn+/ia4BHkOdNGpDsPfnnVNjoee1ei1Xmtb7aiaXiVsGKqqETTSyXoSUUOcxSETTJM28
                Y6ihziAFKUAEREewV6UtU5H5h93Heoyfi0eB2kbsAQH/ALs+H+4f9KSV9l4VU5B2f8WEIcpjJ5Sy4BwA
                wGMQRnkxADgHoP38fWpHXPH0+35fZ86s13BtU0Pou0a6hNSUu4RQWxrjmdkLbTWFMRe3m+bDGWizIkp2
                U6pBZA50w7imU/pxyHmqbTmzHq83bhzVqisXP0dgOKishS9tTV/zJrwUnbzui6GIT14RMK6ttVJYyKbZ
                +iV4ZZXy1AWBI3VwYtZv43wZk3Pm9pyhr0l5h8ZVBQ68bY7uVMbrLxIH824XfX18gAJjz3/yuBrB7uX7
                ed7eH211aT8lYhyVcOT4KOf2lm/Hd+XFBtLcXdXVj67k1LnsiVaRKqqJkjFTSI4TKpydo8Ap+OsQr1Jc
                H5fs7UBhzFuccfPAkLJy5YVq5Ctdz1pnOMNdkMjNM0HPliJSrokW8lwT1IoU5RDkohUR7xfmgq68w4Kx
                Rrcx7EPpyT07pPrFyizYoHcrssY3JJe84u5gQTATA3YSaixHh+/SVwmcQ6SmEO+fDv74mB9Qul3FOkvU
                Pkm2sbalsE2lBYyhlb1mG0HGZesa1WJYezZ6HmpZQqB5VGPRbM5NuqsCqy6ftBAN5/SWVRITkLExas5K
                TEXGwiDcHa8xISDRnFINDEBQrpaQcHKiVMSiBgOJwDjvzxXRGKtXOmTOWRL3xPhzOWN8n5CxtFxc1fNt
                2NcrG5V7di5lwdpHPHj2LFRqYp1UzJmBFc5iG4KcCiIc3F0pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUry1fGMuX6u6VbzdwmmDVtp7sEsecolMdVNRZyo5FQoC
                IhwcRAOQCoplvAU89BkN0FA0vGF6jAYQLy9IA9QF78fMeAr3SNG6RUNKGnJIiiapU8M47ICiJDkROAWw
                2+JMhw5APoAgFXK0pSlYw94q1o66tuzU02lWLaSax2NLmlAaunKbYgqtIlUxFkzqCAmOmAmMQpeREQ44
                GvPM8L28bNN5DGDGNbxqgOrUyr1PnKipXrSPTgSdbVv1GEhxUP5ZhAwCbsPBg78+rfSlRDdzPwtq2tHV
                rkfV/g/V+vg68clSzW5pu0bgxw9uVq2ukzcjOTloK84Cci3bIqpSmVKiZksIG+EFSlERDHzb3hBNa9xu
                FY7KO5Pb0fbhnQJn9x29lO+XDth8XWqrEz01EIEVEOkvliscvxDyYQDg2dHbl8NRoP0E3PC5VuAk7qZz
                jCHSeRV8ZVaRhLbtmUSEDe8rPsFgUWjZUpw6kl3qrtwkPPQuHI8yJAKBeAKAAAAUAKAcAAAPAAHHyAPS
                tdWB7hW2zpe3MMOfmg1JWmu8CLcqylj39bi6MVf+PJw6IoDK2tOKJq9BTgIA4aLpqtlygALJHAKh5374
                PrWDjK5nz3SFr2sstvPFzqtU77ZZDxPcTRudYQSZychjwZtu/UTS6epyVu2A5vRBMO9d+6Y/B5i8vmJv
                3X/q+k8wM2Egk6kMc4sZT7MtxNmyhVysJjKd4uDyQNXHxJOEWMW2XKXkUXZDiBizOMK4UxXp3xlaWHMK
                2NA45xrY8YlE2zadtskmMawap/EdQSJh1KLKn5VXXVEyipxE5zGMIjXaQ/s5+XP1qOPqb2AorPe7nizd
                Djs+kh2Ft3pia7sh4OnbBPMp3I7xZDN4BsNu3o0lGvsabtoxYkO3XjV+hQFVQWEDgkWRx27fw7D2rG5q
                S2jdvjVzmlDUJqB05Wrf2XUY63Io93u3s0wdPWdpHMaALIt4xwki4M3IYESnWTMYUiJpCPQQpQyNs2TS
                PaNI9g3RZsWLZBmzaNkyIt2rRqkCDZsgkmAFKQhCgUhShwAAABWEDe72c1N36w9PdnsM0R+DpTCuQbqu
                Je6X1hqX8o/ti8rbSjpqIj4xCTijEXM7j4tQDHdeX0FOJimMQgVkj0T6aiaO9KeDtMSd7SGR08M2U2s5
                O9pWNQh3s+m3ervCOVItuqsRApCrAikkCynSQhQE5h5MOFvd/wBgaZ3WNTmHc8S+qx1j2zcaQtp2VIYj
                eY4LPs3VoNrvNPXm4ty6GUsxM0kXyLhx5ajli5DzASKJyJlKBJGNvwENasDB2vbka0hretqIjYGBh49E
                jZhFQ0OyJHRcaybpgBU0UEE00kyFAAKUoAHav2Px+BqMhuf+HRi9wnXfZGtSztSRNO0pGWrZTG+42Ixj
                +V89dd4Y6mBUti6mMyeajkmzgY72dgqos3X6CMmwFIYBMJZKtvR72IgIOIkpVzPSMZERsc+nHpEk3ky9
                YsiNnUs7TR4IVRwcplVCkDgDGEA4AKjWbk2wZkLXbuY4d14wGou0MfWzjiBw5ESVgTFhTE5OP1cY3g/u
                F4sxmWUk3Q4dpO0yJdaIdBgN1dQcCMmvgRHn7efX+HpWKzeD2w4Hdj0mtNNkpk97h+atrKtq5fsq/G1t
                kvBhG3RbUFL2mo2nLWM8jjPGriMnZNHoSfoGIqKS3WcExSUuG28tK8poj0Yaf9KszeLHIEnhez3VsPbx
                jYdeAYzyzm43s77W3h3Lh0ogUoOwT6TuDiIl55+LgLzuO3FR2d6LYWZbuOYNPmR086RGBmuJrVvK170c
                MsYkvO677Zz8rHyMEgjJjKxibcsf7M7KkZyRwBRcGEpADqA2fLHFnt8dY9sTHzR4tItbGsy17ObSLgia
                S79vbEIhBoPV0kh6SnVKgVQxSjwAiIB2CvhNSmDLb1NYCzBp8u9/JRds5ix9cuP5uShjpElGDC4448eq
                8ZCsBiCon19ZQMHA8cD681B8uHwcmpqxVpMmANxiBSi3rgjlOOnbBvvHSyggPllLJOrNnpRNdRNPgvnA
                2L1egEIFcWC8I5uAuEFD3JuU21DuSOOlFGFQzFcKKrbyw/SqOHsnGiQ/VyHlgkYvAAPX3EAnU4Mx/I4m
                wnh7FcxOflPL4zxZj7H8rcvlLoflDI2ZaTO3X06KLlRVQntarYzjpUVOYOvgxzCAiPalK2lUk1iKJKpl
                VSVTMmomoUp01UzgJTpKJmAQMAgPAgPy+8aifbkPhStMurbINyZv0xZJe6T8p3TIu564rda22ldeI5+4
                HSpnLqWbW41csXcO4cKj1rqR7sUOoTKeyGUOYRxOs/CibrbZVS3Cbg2KmNkJpCk0M0vrPQuxIRYpyJmt
                0I1NBIOAE3BHxwAQAOB5EQyJaEfCW2jpxzzjPUhn7WLeeYb4xleEFf8AC29Y9jtbJg3FxwD0r1mhcU7c
                z+dfSDXqIHX5JGShg4ADFAO8xasWm7rthWduv6XGWna6MiyuKZO2cjQGUrJvmMgWt0Jw90QkTIW6YJO3
                XS7MXbZePlXyBiJPUDlMch/MECiU0T6V8IJrntRJCGxZuMWY6txmdVNm2kIfK+PkmrbrFRMW8JBSUugQ
                TiJhOQqoAAjyBjDV1WjPwv8ArM066oNM+oO/dw2Lu6GwrmfF+VbrsCNisnu0LoYWNdrO5pa1G0lMzREj
                pvSN1GoLuWfSAH6jIiHKYzYe/fv8u33/AG1g93uNmqM3fsaYYt9rmtxg+/cD3Hek3aE+6tAb5tqYZX3G
                x7WehZyCSkItchzqxMaZu+Rdj5BQWAW64nKBMsGnfFznB+AcHYWeTCFwu8Q4exli5zPtmh49vOOcf2Uy
                tNeXQj1VFTIEcmaCuREypxIBgKJjCHUPcIgPYA9Oe/I9w+0OajGbiPhz43X9uNW3ree6jm2J7WiIPFKU
                5j2BxcjNXNc9x43mVnikitdzmWbtkQdNQaIeYpHLqFKl08CXgAk68AHoHFcZ20bP2zli9bou2Txuq1dt
                XKSazdy3XIKazddJQBAxDlESmKIcCA8DURrcN8Jbpu1JX1OZg0iZTc6T76nnruambHWto93YkkptZQXB
                nkLGsnbF9AnWWETqmarOEA7im0AwiI4yofwj+5Dcr1G0MnbguMmOLUlioAaHlM0Xy9LHm6hVOWxpxKIZ
                CfkCcJDKiXuYRP8ACHVJa2sthHR1tgHJfNsoyWadQblkLR5mzIjCOCQhkVygV2ysG3WpRbwqCoBwYxVF
                nRiiJVHJy8AGcn+NKjHbqXhk9Ne4HkWZz/iPIchpcz9cLgr+7JaItdvduO74lEkxAZeds9J1GrtpJYwE
                BSQYvyc8Coqgsp3rC838K1u1RihrTiNxfG7fHagJlVMnfWeWr3obGVBqUtrpsFG4lKVQeC+8vh6jAHIA
                HVls21vC16ddHmULf1CalcqSmrfNlsyLeetpvLW8W28Z21cbY5XLSdCBfO5F7KPmypetBw+eAkBgBQGp
                VClMEqMCgUAAoAUCgAAUAAAAvoBQ+gAHoAVrqM9tJ7C2QdtrXzqA1jXPqItDKMDmHF+TsdxdkwVhS9ty
                sQrf+WrayShLP5Z9IukjlbJQB2p0U0eTmXKcDlBMSnkw1GR3j/DnQu6FnyK1O2JqTd4BygwsaJtWUYSN
                gK31b1yvbXMqa25RNyymIh3FrFTMk2VWSFwAFIVUEROBuvER/wBiKa4O3+6fsQ47AP5N5WHn5+gXH9/z
                rPNsj7PubtrV9nyRzHqoJqNUy+2spnCtEYe649K1iWqq+XcuPPuaVkBOZ0LwCiRJJPjywETm5ApcgW5l
                oGsrcr0iZA0p3vdUnYTe7XluzkFfENGM5iRte5bUmkpyIkCRr4yZV0TKI+S6QKskZRE5yFVTE3UERQvg
                79VNpHWh8dbmEWwtZNZRZmgnjbINpiJ1jdSh1YWFupwgQ4jxycio9Q9+1d86YfC0aw8GajMI5mufchQu
                m38W5Psy/Zi221s5MFefYWtOoS7mGTF/cRkA9pKkKXUsUxS9XJimAOKkNbvu29cG6PpZJpphs8u8DNvy
                0iLzkJhOzSXvH3AeBRV92xEvEhIxaoIlVU83rSdhwPHJTgABXZm17oItrba0ZYt0qwU81vGTtJKWmL3v
                ptDlgy3rfFyyakvcE6EcZRZRJITqFbtU1l1Tpt00khOYCANZCADj8B8/lWGbeq2jobdywNjbGSGRo3D2
                QcX5Na3fbOSZG0lr0IwtqXYGiL5tz3G3fRplQdpgydp8OyAKzNJMxikUOct1m21ozlNv3R3inSbI5elc
                3I4rTnmsTe0tbze11hipqecXCnDNYZBy8FJs1WdLFblVdrHAggTr6ClAL1Lht6Cu2El7ZuiHjbgtyfj3
                cROQcwyQkIuXjHyJm7xhIMnRTJqoqEMYhyHKICA96hu64/B/YWypfU7k/RDnh3prfy71zLjim8Ldd3lj
                qOlF1QUFGzp+KdtJaFagfrOCShJAifZNAiKZSlLYlBeEp3N5xZO3L/3AsWxdjJODJkNDXLnG8nAM1CiR
                RUtsSzWIbdQgBA8n2/p9fj7BzI12bdh3Gu0fP5EyRH53vzN+V8p2g2si6ZGRhYuzbCbwbScb3CirDWe3
                VfOivBcogBnLuXccEESpET6lBPn0pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpXlfeMLcIrbrKCCZDiu2wNjXzlTG+HpUQXEiRC+nHqP3jUWS20/MuGCTEegTzM
                YmA8CI8mekJyAB68D8gr3TNHrYWelXTs0E4qGb4bx4kZQSiQTGJbLYBMJDByA9vQQq5ClKUrGnu826hc
                23pqUjl3BEALj+Yco+YfoIq4RYq+WkqPIDwICcQDkAEeAHtXnc+F/YmDemxiQhUFDtrMzEouJEuPLIlD
                JpAoQo9ih34KYB9ef2+rlSlU45+v3/P76rx9o04pSlOKpwH8/wCNVpT+FKUpVOPx/GnFVpVOP7KrTj8D
                3/nSqcB+P6qcVWqcVXgPx+6qcBVeOacUpSlKpx+O3r9arx/bSnH4/lTj+H44pSqcB+P5U4/tqtU4781W
                lU4/H0+dV4Cn8aUpxSqcB+P81VpSlU49ftqtOPx9lKfj91KpwH8ef21Ue9Kcf104+velOKU4+f4H7KUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUry1fGLMSp7o
                cDJJ/EV3gSwWyxioCkUHDQzjlMV+f0hgKYOQ47c1F2xNCq3JlLHEAjz5szfFqxiYiJeAM9m0EQEDG4D5
                j617smFIMbYxBi+3h55hbAtGNNz3N1NIJBA3UJe3PIfWuz6UpSrPNe9sEvLSbma2lmCkojLWhLNFmCLY
                jtdymqwVTFJukoYpesREAAxjAAdx7V5wPhrbdFHfRhGjch2iELbmdFDNjHM3On7IVJr7H0AY3PlicoiT
                uHb1HivVBpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSvKv8XPfSN2bnDi
                IavDKo2jj+AgV2JhIBGki2SH2pUOODfpeSm+Lt9PpWBDQZZchkLWbphs2KbKOn05mzH7ZNJBJNc4kC4U
                FFTFRUASmAClEeBDivcqhGhmMNEsjh8TSMYNTcgAD1INCIm5APT9X5V+rSlKV1Bni0218Ylvi1HahUkJ
                yCfR51DncJpgV23M2MBztTFOBRAwgIgbtzzXmpeG8ZJWvvwyEC3MBUEIDUNCkKkcF2xjsH6JAFBU/Ju4
                Jhybnn58jzXqGUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp+P315BPiWr
                hNPbred1xROQE3LYCKHMqZRdA6YeWblQpQEoAX4AKIlAO3PardtiC0xvHdf0cRQJAuCGUGUsYgnAgAWJ
                bKPRMPWHcQ6OeAr2fg44DgeQDt68+gcVWlKUr8+UbIu4982WICqa7VdM6ZjdIHKZMQ6R+zvxXmg7AsSR
                Lf8Ab7SaEXbljHGolYoIlS8hJIlwJt1SH6yjwBgMHAFHn9XjtzXpnUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUrjPHBWbR07OHJWrZdwYBHgBKgkKpg5+4K8XLeyu5e8tyrU7LuiC
                koa93KSTUDiZNmiiUQTbk49A4EDAADwAjyHzq+TwqtjIXju6YneuWLd6lZ1qXlcnUuUDeyqIRns6LlEP
                kcon7DXrYhz8/wCof5VWlKUrScOoBDuPICHYRDsIcDzxXnDbE0ajaHiKM5W4oulHAoy1KJNmipRUO+T/
                ACpZukEm6/JjcgX9IHPcAD5d69HulKpyP+f9tfhjdFtA793jcMGD4BMAshlmAOw6Q5H+j+Z19g7j2+v0
                rjXleFv2DZ91X5dT8sZatlW1O3fckoKSzksfb9txaszMSAt2pTqqAi2RUU6EyGMbjgoCIgFW46Rtc+lb
                XXaN0XxpWy/buWbdsu4iWrdTiGI+aO4GbWjySbVtJRkokg4TIsicTIKmTAigkUKQwimcC3aUpSlKUraV
                WTQSOssciSSRDKKqqnKmmkmQBMc6hzCAFAADuI8AHzrZZv2Ui3Tdx7ts+aLc+U6ZuEXTdQAESiKayBjF
                MHIcdhrl0pWnqDt9v17fsqvPp25Afn9vqHr9a/LfzsLFCb3pLxcd0lKY3tz9o06SmHgpje0HL2H5VzWr
                tq+bpO2TlB41XICiDlqsmu3WIPodNZIRKYB+QgIhXIpSlKsohtxPRxPar5zRBH5st3+6gt4FBkcVu20q
                wl+pOCRuQ6bN09QTauD+xLprgRBYwiAiAByUQC9elKUpSlU5/r/gPA1xHsgxjW53ci8asGifHmOnrhFq
                3T57B1rrmKUP2jXFjZ2FmfM9zzEXK+UPCox0g0feV6f4T2Y5uPUPX6hX61K0iYC8iIhwACI/YAeojzXD
                YycfJpqKxz5nIJIrHbrKsXSLtNJdMAFRBQ6BjAU5eQ5IPAh9O4VzqUEQDuNaer057c8d+fr6VqpSlU59
                OeOfpX58hLxUSkVaVkmEaiYfhVkHbdmkPA8D+kcGKH8a3GUiwkkvaI58zft+QAF2TlF0gIiAGKAKoCYv
                PAgPr6VzOe/H4DnsFfnupeKYu49g9ko9m+lTqpRjJ08bt3ckqgl5y6bBssYDrGIT4jgmBukO48B3r9Gl
                K4DeUjXbp0xav2Tl6y4B60bu26zloJv1QctyGE5Ofl1FDmrNLj3FtG1oas4TQ7c+bbdgNT1ye6SwOMpZ
                tKsXksrO2/8AlNCtmMq4QKxUVdtOBbpFcCZRQQRKAqiBKva578fP1pSlK6rzZm3FmnPFt45qzXekNj7G
                Fgxnve7LunnHkR0SyM5IzRFQSgYxzqrKpoopJlMc6hykKUTCAV8Jpy1baftWWGEtQeBMhR994gWdXAzT
                vRBnJRccK1qqmRn+STCKCnQ2MUwHU6OnsPAjxXU2jncl0Ya+nGR2elLNMPlF7iiXLD3qybRc7CPGJ1Fj
                t28mxbXA2aneR6xyGKhItAUbKD2IoPNXzib/AD8h8vXn+dcZu9aOxUBq6bORRN0LAguksKR+RDpV8sR6
                R7D2Hv2rlUpWys4RbIquHKqTdugQ6q666hUkUUky9Z1VVVOClKUO5jCPAfOtljIMJRo2kIx60kmDtMFm
                r5g5ReM3KI9gVbuW5jEOUeB4MUwh9tcylKVxXj1pHt1Hb502ZNEQ6lXTtdJs3SDnjlRZYwFDnntyNfnx
                Vx2/O+b7knYaZ8nnzvdUmxkfKADCT9L7Gofp+IBDvx3AQ9a/Z59PtGuOV41M4O0K5bmdplA52pVkxcEI
                IAIGOjz1AA8hwIh8w+tcmtldwg1SUXcrJN0ESCoquuoRFJNMv6x1FFBApQD5iI8VtMn7KSbEeRzxo/aK
                8+U6ZOEnTdTpHg3QsgJijx8wAa5QD9ocV+EF02yL33YFxQXvIFPKGP8Ae7AXoKh6pC0BTzOoPp081+7z
                25Ht25H7KoJylKJjGKUpQExjGECgUodxEwm9OPnzX4rS57bkHXsLC4IN895N/Q2cqxcuvgDlT9AioY/w
                +o9u1ftAPPy4/j9/p/VWqqc9ufT7wHtXzzm7rUZODM3lzW+0dkHpO2czMc3cEHkQAp0FVAMA9vmFfuor
                ouUiLt1U10VCgZNVE5VUlCj6GIoQRKIfaA1u0rQoqmkQ6ipyJpplMdRRQxSETKUOTGOc3AAAcDyI9q47
                KQYyLcjuOeNX7RQTAR0ycIum5xKPBgKsgYxR4HsIAPrVmelLcS0c6253IdsaZs225ku5MVqNk77t9k3l
                YubgAdPFY5JdxFTSDdcyQLonROqmQxSH6SmEpjFAa5B3EdHOKtTtoaOciZttu0dRF+oxK9o4/mkJNmvN
                lnUVF4dJnLKIAyFRyCRypJC4Axj8EAOoQAb1qUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUqnIc8fOq0pSlKUpSl
                KUpSlKUpSlKVsOW6Tpu4bLl60XKKqCxB9DJKkFNQo8fUoiFeKXvKLNVdzzWiViXy2LPOd3R7EgHMoRNu
                wcg0RIQwiPYAL29Kzv8AgyMd+/8AXlmO/wBVAiiNk4YeNSKmS6xRczkkmgmYio9ijwUQr03KUpSlUEOQ
                4+tefJt32JceJ/FO5Xtq6otCMdSDTOD+OTTQSTK6i5tu3kY1+kmmAATzUuDc9h7jz869BylcV6+ZxrN3
                IyDlBmwYNl3j125UKi3atGqQruXLhU/BSETIUxzGEeAABGoLWT9YO4/v463cuaUNAeX5LTBoswZJuIu/
                cyQLp/Eyk2g0fKxjeWfTUKYj9VxJOG6/uxgxXSKRIplVVBLwA3WPPCdNFY8s423PNYIZTBqKprsdSSii
                a0mZt8aZ3JZH20rfzhEesFvMEnYeREaz37ZujnLGivSszwBnjP07qiuxpd15Sh8jXY5mpR28tWee9cLb
                rr8qFnTgwNm/KShTqnIbkQKAF7VGg8KjM2LiHJO9W6uO4LesHHlk5rwegeWuaaj7ftm3otncmU2KBnUp
                LKJN0CAVNMnWocvVwUPoFS0MXa3dH2bLpCyMSam8G5EvE/mez2taeSrUl596CICZYY6JbOhXc9AAJjez
                kPwUOoeA71dD1ByID24Dn1+X281bbl7WRpPwFLIwGatRuF8YT64EMnb95ZEteFngTUT81NdWEdOQdJpm
                L3KqoiUg+gGHmu4bEyNj/KVts7xxlfFo5DtORAwsLmsm4om6YB2JQ5ORvLQaq6BzF9DkBTko9hABr5qR
                zzg6HyEwxHL5lxTFZXlRahF4wksiWgxyHJC9KY7IsfZTp4SSWFYpDCl5bYesAES88DXVWQ9dejHEt3ns
                DJeqbAtjXsksRu7te5Mo2fGTUc5UW9nK3lmTh2Bmh+r1I58sQD4h4L3ruW6sx4ksWw08pXnk7H9q41XY
                s5Ntf9wXhARNmu4+RRBxHPGdyPXBGaybkhimbmTWMCoCAk6uQrrzDmrzS3qFkH0Pg3UJh/K0zGpCu+hb
                Gv63LgmmzYAL1O1Ihg4M58kBMBRWBISAIgUTdXauoNyiwoTLWibPuKJnULb+lxTJdkSFnQWablvRlYUR
                alySoAnCe2XC+dMuhNdcCoLJJOCKqEMYhBAxgq3bZU0fXJoi0LWpjK8NR8VqadS9yXPfbfJtu3QvdVil
                h5hcpG8VZ085dOyqsW/kKCZRNcU/ME/AAIDWRWydQWBsloXS5xvmzEeQG1jIpuL2cWTkmzbrQs9uqC5k
                lrpWgnrgseQwNnIlO7FMB8pXv8BuOqrR15aK7+vVPHNk6rNP903y4djHs7YhMr2XISki/A/lgxi0G7wf
                alhN2BJuJzD36QHirsgH5+nr2+fIfLtVo2uTGGpHMmmu/ce6S80Iafs6TgRSdpZUcMSySdtkRkiKShha
                HTVAwqtwOQo+WPr271C23UNuTdV0UaNcl6uMvbuuW8rSFlytmsXFqWTIXnYjaTNdM+hbXmldsnSHleUD
                gVAApA5449eBDtzb78P451/6KtPmqzMm5JrWPOZyx4jdErZ5rykLgh4RdKedx6LNrITskquuiQG3WQFg
                7GMPHAgFTHdJuneH0macMQacoC67lvqHxBaTa0Y+7rxXBzc08g3dKuRkJlcDGAyxjKiAiBh+EA9eK+Fu
                ncJ0L2TdK1lXXq806QV1NnBWjyFfZcspN2wdmXM29kkOl4JW6pVCGIokuYpiCHxgXtzdPbd0W3eUHHXN
                Z9wwd123LtwdxNwW1LMJ2DlGphEpXMdLRairddMRAQA6Shg5r4VPO+EFckjhpPMmKlMvlE4DiomRLQPk
                kBSjBmlgGxSvBlA6GYC7N/ReyIeb+p8VdmPn7KMZvJKSeNY+Oj2rh8/kHzhFoxZM2iQrunbt04MUiaSa
                ZTHUUOIFKUBERAAr4nHWWsV5gins9iXJeP8AKMFGySsNIzWOrzt29olhLoIkcrRbyRtpy5RSckTVSUMg
                c4HApymEODAIw39w+CiojxXO3HKxbBrHv7jsHFzqddM0iN1pZ02nroj0XL4yXHmqAgRNEVDcmEhCFEeC
                F4mI5LzdhjC7eJd5iy5jDE7WfWdt4Fzku/rVsRvNOGBE1H6EStdLtqVydAqqRlSoiYSAcomAAMAj1H/d
                3aIPnrI0qh3EO+obEX8/fFXH21dFuXnAxd02fcEHddsTjRN/CXHbcswnYGYYqiIJvIqYilFW7hI3AgVR
                FQxR4Hv2q3TJWuPRxh26z2LlPVDgiwrzRW8h3a1zZQtGMno5fkoeTKxazoFmh+DlMBXJCCIfF+qHNXD2
                tdtrXxAx102Tctv3hbEuj7TE3Ha8zHT8DKN+oSg4jpeJUWbrk5DjrSUMHr37V9DSldP6gMwwGn3COVc3
                XMksvBYssS5b3kWzcgmXdpQMYo+I0SAOOBWOQqfV8ueflUIjRhpU10eIzQyNrB1P608r4B0xqX5cVn4s
                w1h529i2S7OFXEiqYxyK7dkog1McG6izoFljqkOYolIYC1nC25Nh823Dqmb50srWdnHLdhL2Rctty+K8
                kvHQxrqZmm5GrWaKkxdmaKi36Ospl0BOBuOkQ4Cs817ZAsPGkCvdOR72tHH9stTlTc3He1yQ9qQLc5wE
                UyOJieWQbkMIAPAGUDngeKtptTcK0LXzdLWyrR1d6dp+6XzoWMfCR+WbMUeSD0FQRKzjgM7KVwqc4gVN
                NExjHEQ6ANXceoNO33WC8wRlz5HjMQQk9je8bXeZRl59ja7CwTXTBL26zulS4JJZui0UaLuk1kVjrk4U
                AgAYDcVho2CNANzaH8MZzkLh1lW/rGbZmyg3mIK57Cvxxf2PrfjbUarxZyx0od9IJe9XqzhQ0v5KwB+h
                bkMHUmI1mhtrPWDbzu+dx9Z+ZsUXXftri+Lc1kW1kW0J28LcNGLC2kgnbai3ir1p7OoApre0Il6DdjcD
                XTiuv7Q+hfP5tVtW+ndK+veBokbcVy5ZKb0sqQpjGjTnM8BIrjkok8kygHFThPjzBAo3ZquWyLc7pZdB
                NqRMFTuFFU025UhDkFDLGECgXgeerniovk7vRX5j3fcv3RXmXKmGsYaNLBxTIS4TVypxcI+cXk7hIuRj
                ySd6PnIFFQVVVyotSk56RNzzxyEhjA+pjAWqC3Zy7tPeWLMy7bNtXG5tKdm7KlU5ePjbiZtUnriKXXSA
                A8wEV0VAEvJTFMAlMPfj8rMmrfS9p6fM4vOOoHEGKZaQSK4ZQ983/bdvTTpscBEjtGHfuCORRHjgFfK6
                BHt1V2TjfK2MsxW0jeWJsh2Tky0l1TN07ksK54a7YUXREyrKMzSMEsukVYhTkE6JjAcvUHUUOa+/qPdv
                +7u9z7a2HsdY4wDFsbm1calZKSg8WsHTX3shZsBHLIMJS9ncKn8blwq7dN2MQ1MHQst5xxEQbmKOMHDP
                h09cmr61GeYtyzcg1EwOSb8ZNrhf4msG4Xj9laC0kAuPcs2mq7Ri03KJDEBVONalImcBIJjdPUN9OhzY
                HzHoR1kYcznZW4xnXKeCbFPdyl64NyXJ3ELO7vfmOpS1IZEjFjIqxfSxkXbGQAyzYTCDUCgIG4EJJVxX
                DDWrBSlxXFNQ1vQsQzXeyM3cMm0hoONQRIImdSco/OmigiUeOs6hwAofPtUSXHOnRbXHulY01U6od2DT
                xdJ8GZIUntO+kzTTluObnjDRMt5kFBJyQvihIlkCpk9+ptEVVnqQnanH2c4gEvTnvx+39ldB5f1VaadP
                6qLfN+e8Q4peuCJKtoy+8g2vbku5RW58tw3h5JyR0omPAj5hERL9RCuZibU3p1zwxfyOFs6Ylym1iWZ5
                GYGxL/te5nELHkVFEz6aZRTpRZml1FEAUcpkKPqA8cc4HNrLb2kMWbimsXWXB7hVn6pscZNlbsUt/HWO
                spI3+na/5eXGe4mzO/UIyUfs0Rikx9kiikKTghA6QAAEKsB31oKJY+IC2L7iZx7ZrNzWVtPkbLSaCZUn
                MgziNVLT3ci7UJwZTygdLlKJhEek3T+qAAE1H1+fICHp68h99WjXDr+0P2neBrAuXVvp2hLxTdgwcQMj
                l6xmzxm+8wUjMn4ne+W3WKYBKdNc5DFHsYAHtV10fIsJePZSsU+ZycZJs2shGyUe4ReMJBg9QK5ZvmLt
                sYyayKqZiqJKJmEpiiAlEQHmubXzF3XtZ2P4F9dV+3ZbVkWxGFA8jcd3T0XbUDHkMYCkO9mJpVBukAiI
                AAqKF79qiteJJ1x6RMxbXOXsaYg1OYYyJfi9949U/JOx8j27PzDxnHTSgyB0GkU4UFdJMekx/L6y8cCH
                YAGr69I2Tcf6OfD6aY8qL4quvItq2/oVxLdUvjHHME5mrjvWfyZY7KTn0W8dHcqgV/LSrh0/clAfKTUW
                WEBAo1Yr4YrbNyxpXitQ2sLMePl8ISWqdyk3xtgt0DtOQsDFqNyuLph20y1f/wBIQUIKybZsi4HzgRTA
                VeDiIVnH3TtXsfoV0CamdS6zpBtPWPjuQjsfoLHTA0lk+8Vk7Px0wTSMYDKAMs+arOAT5MRumsrx0pmE
                ITvhntaGojCO4Oy0+arLxyU+h9bGJm1449DJ9y3DNqPJ1d05nLNuGFRmlluksymg9RTMl0lMX4vTivRB
                vC9LPx7bcreV/XXbdkWhBopOJu6rvnYu2rbh26zgjRJxKzk0qg1bkOqomkUyypQE5ilAREwAPFsbINhZ
                PtxneONb2tHIVoyJ3KUfdNj3JDXbbj9RmuLV2mznIBZw1VMkqUyaoEVESGASm4EK+bvHOWFcd3TbdjZA
                y/i6xr2vIzQlo2feGQLTtm6bqO/kPdDElt2/NO0Hb4Vnf9GSBsifrV/Rl5P8NfA6u8LWrqI015mwxe9/
                zuLLVv8AsSdgJ7INuXEna0paka6ZmBzMpzip000E0i91xUOQok6gMYAHmsAuy23uDQ/fM9o9uDc70g6s
                tNiCL8uG4NjkqGRzFZNyKyhU2doQzd2/VTfs1yGMJ2rVQ4EW58gvSYQqUSBgEQ4HkBARAQ7gIdu4cff6
                1aPmDXzoqwFOGtjMWqXB2P7mScos3Vtz2Q7dTuBg5XUKmklJwjZdR01ERMA8uEiAAD1D2713hinMmKM5
                2mhfmGsjWZlCy3LlwyRuexbii7lhhetBArpid9FKqkKsmIh1pGEDl5DkochXZVQS8kTeoLfi3lNSGiCU
                1PX9py0i6TGN0iFi4zlnULP381tS4GdpyD962aLo+1uHz10RZyd2ZVFqiBE00wUOUw9FbpG2llrYRtHF
                WuPRDrZzWsyjcnQ1tXVjq/7icnZTDuQUPIs1AjmrgWkm1WUIuV81eNzCUpxVTMUQMIyQ9X2FNeW6Bo60
                XT+lrU6+0Vur/tdjfeoNy1bv28tMRN02gwdR8ZFe6uHSPkPCOjolScJ/CuQTmMBaj47NtnZ101eIozXp
                CyVqZy7qBZ4lxtfELIXHfl8XdLtLmeLY5ibnSfqQ02+cplBBR55TcDAIlKmUQ4GpuOqfUxi7R9gHJmo3
                M0wSGx/jC3HU9LHA6YPZNyXhCLgYlE4h5rx85Mm2QIUP1j9Q8EKYQhV4did1zxKN/XTlqTzbeeiPbjt+
                6pe3bQjLEdykJJXmVisdNwxivdqrVeedpIqkRlJB0v7vIqAtyJHVTV6JgO3/AKMYfQNpptfTZA5OvjLk
                Va0tOSjW8chHSUuVwWcclcnYrigooXykjAPlh1dgMNR69+HXlq1yPrL047NW3/ejzHeWs8pxMjmHJME5
                VZ3Bb8LcTdzKIQbeVbAK7BmwgWju4pd024WFt5YJHIJDCPXF7+FFupjjyVu7He5LqdfamGcIpMRdwT83
                KNrfmb4bthcAg5lWkgMmiguqUEU3HmmUKAlMcB7hVw/hmdxrPepC09ROjHVpcb67c66Qrij45jd06qZW
                47isl5IPIBVhMulABR25i5CPWId2p8R0F2/XyYTGG1bcp1N6xt0PdfNtA6Ls0T2AsPYgYJudROV7MkpC
                Nl30k2hULguwVZeHOk6BtFpukItuzSWT85+KpFTdBS8/MaqPDI5T03YLv3UHo93BtT0tn/ElrTeRGcTc
                U/IxJLzRtaNUnZmJjZG3nguSPnCaCnsiSoKJrKCCSoCB+QzBeHR3I783FtCZpHNcklM590/3qviTJU8V
                JJBzeMeSMRmLIvmRbIAVNN28aqKsngkKAKOGSy4AXzRKXPxUMbcL3BNdO5NuJ3NtHbXV7jh+0sWkmmGp
                XUSwcKtpBspAKpx9+KITjQorMYqKdLpw6JWQg5fPz/Askl0HD7tj4TO2ZqLbSmStyTV3cmRHTYis9cje
                RB0grLCHWqsyPMv1HJkyKcimK6nXx+t3rJ/tH7WWoDbcuzPKeTtbF/6pcX35F2PG4ptW+XlyO3lgmt93
                JuZ+QdDOvHaCZ3ablkkmmw6CACRxOA/B05fMjZdxVh+G/KPLGSrCxlAdRyFmsgXfb9nxiiiZRMZJF9cD
                humc/AcgQhhMPyARrpDG2vDRbmK52tk4u1UYFvm8H6yTeOte3soWi+npRyscSJNomKK6BZ2qIlEPLbkO
                b7O4c/kbglqQWQdGuoTGs9nW3dNiWTMdTdgRuaLou5jY8XZM7dCPu6GfmuN87ZFRUOsYqRAI4Kc/V0k5
                MIANm+x1osujRHoqj7AuzUzGap314XjO3u0v+1LsXvHH7WLfmK1ZRdkTSzp4CjYCpeYuZJcxBWMYS8BW
                DjZut+JtTxNW8zBQDRONiPyRzNLFj2xSotE3k5qCsycfnSbpAUhQFw7XMQoF4KBukO1V8Sdb0S13Qtlq
                7W7RNCfeZ6xfCOpBIATXcRrfPsG4RbrKEADGAplDAHUI9h49O1TRJeah7ejHs1PysbBw0ago6kZeYfNo
                yMYNUi9Srl4/emIkkmUO5jqHAofWrQF9x3QI2uL8lFtZemks97SVmLMMyWIdIrk/HSid+m9FuA8jwPKw
                cD2Hge1XgxkvFzcawmYWSYTEPKNUHsbKxTxtIxsiydEBVs7YvWhjpLJKFEDEUTMYpgHkBEK+EyfmjEOE
                4RO5MxZRx9iyBWOomhL5BvC37QYOVkUvOUbs3E84QKsqBQ6vKSExuPQBrrLE+s/SRnaZStvDmpXB+Sbl
                cKuEmts2lky0pe5XhmjM0i6Myt5u6F6uRNAplVFEUDFKUphEQApuLmaUpSlKUpSlKUpSlKUpSlKUpSlK
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUoIgH
                r8x4/bWATJ3iEdK+OdzW3ttBS0b3kb6dXhGY8ui/RbFa29AXvOsEJCJh27MwGXckMRdMDrlKBeRDp5Lw
                Yc/ICHACHoIBx8ufx91aqUpSlKUpSlKUpSlKUpSlfi3JKkgrdnptXjy4aFlJVQTGAgeXHsTuz8nHsHYg
                968L3WLkGQynqr1EZCkllHLy7swX/MrrHVBdQSubic+WUVjgAjwTj5VO58FDiY0dh7VjmNzHGJ7+u62L
                Oj5JVp0GWSjWZ5B0kg5EvJigYxeoAMIB25Cp0dKUpSlQ49RFgSun3xU+ljKJEEUITU7imSjUFDpgZNcG
                Vpu4KVKkJTABVgcxyYmEQ54MUeOB5qY5SrUNdU5J21ox1TTkK5FlKx+BcoLM3RUklDIKntJ2iJylVKYv
                IAY3AiHYR5Dv3qOJ4Oe2YNht+Zoutqgma47s1HTZrhfmFJR4sWKtaOZx6B1QDrAgJh5gEMPHUcxw/WqX
                Tx/Pmg+navLe2qtuq59zfce1jYGu3Jd92RpKtLLF05e1GW9Z8w/ik8jvbayHMW/ja0jCibySPFDy8qKL
                tYhjN2gvjIfpDE5v28QhtZ6YNpm0NKmsLb/hbmwRf8FlxCEkGze/b1uZrIPYVklP2/OIK3Q9eLouCrIm
                TdlScFSXSMIHTEeRqWduDa+XOkPalyRrZgyEe3a0wnZb3HycqmUCr5IyoEfadlu5FkkYwqJN5OUReukE
                zgIoJK/GQA6gh87c+mrZeyNpzd6yd5rWNjjLeprUTMXHdTixro1EzrW9rChTy6rJBzLWfj2QRnBlnyia
                rowOEjoooGbgiQnI8fYbH+obFGmPfUlNGWg/UHcmftv7U5A37+SyU+ldjBtbU/aeJZDL8e6Tj7paMVjP
                4dSFe2+aQK2IR4gv5pgExUxJ2T4uGwJmytZ23rmjBQuLTz/fkNdtjx9126orH3G+nIO7Iprj86D9rycq
                rNWWeJpHKUTh53b0KFZE7P8ACtaMV9Gl2J5vLlDLWtq98aTF1S+dZK/LvQl4LMcnbyks1awFmtHSce4a
                N5IxUVEJRu6XcB1AouJhIKcfrYV0I5O3ixUxJqyzTlaY0EaHBF1BYhibskIlGcvzKci5k2dpNHqfxt48
                SspB68WROKyRR8lsZuLsViXb7oegzD2zJud7Y+cNBja68S2zlLLll25dVjEvi5J5kus3vyPt66WjSVuN
                y7fFaTEPIqNXTdZVZMDmMdMC/qVLf3m8c2hlvao1vwd6wzWWj2mnW/L1jE3KYKjFXTZ0Ee6rWm2g/Jdi
                /aoOUjenUQOQEOQGxDwrsxKTe0Diwks/dSBIrJ2VYWOK8VMsDOJayqCjePQBTnpSIZRQSkDsHUP1qJxZ
                GijImpjf210be+n+/wC6MBaecnZty241Go46ejDtmunzG+QC3k7gWrRsQ6f6SUGPjYpJRIyJHTlAVyii
                VTnJjvybGOhfb/0CxeqHSJbt94ozHh7IGPos92fnHvO4n15IzsgZmvIy5Zx6qk1fprlK6QcRiLYCn+AC
                glwQJbu1/lu8c8bd+jHMeQpA0re+RtO+M7ouiTOAAd/MSFuImeOz9IFATHMHUYeO4iIj3Gr7uPT5cfd/
                XUfLxQoc7NeowAAP+E2H/wD2lx4jVymwh/iedBH/AKFS/wALvlO9YtfE863c848t/TNt56YJ17Z+UtcN
                3MLXnbpj3i8XJmtSbuZtYsJakbLthFRsnKSjroklUwBTyEwIUwEUVKbtDFXhRdriCwdG2Tlu0slZUzNI
                wLc1452eZSva37nVu9y0A0hKW7bkK+ThmjdF0ZQzVs4YORFPoI6VdmATmxvbHFxZe24N43U7tBXLk+4c
                kYHUibkuXF61yKO1xjXsI2az9vyTBkkBk2rh9HPBZyIpkRbqKtxVKmn1kKH7u7VZUHjzxP8AtN37ZaBr
                duTLJcAOMgPopRVorcj1pmObx2q8kFEjAJxXgkG0UuT9U6CJCGAeR5l/6pQANMmozvxxgjLo8j/6P5D1
                EfuqL54Ng4m0K6rgEeQDWjcXAc89vzP2kIiH0+vFdYbkH/Kqdsj/ANHWNf8ArVdVSNtwfa40k7m8HjK3
                9Vls3VcTDEctc0xZX5LXpPWcszeXc2ZM5sztSDUT9oKoRg26SqgPR0iJeOo3MDvX7tSaK763NMMbWG1x
                Y91K5MjJFOQ1UZXuPIV2XvbuOmC7Yki/t8CyKqzdI0LGCaQl1k0VDg4VaskzecR0gWVnu45+R2W9m2Js
                DTW+kIm7IyCs/TPhe4V3QLTUA5lY5c0/fvLrzeXSTZu7VS6DAKDlwidMQ8ooVH40faL/AA9dq6P7PyZu
                e6wcaZf1d53thLJWTHDTUPdMpe2JpO7m5JJpZLazsWvl3hZSLI6RJJLyzVyos+I6FP8AoiYIk7k8Mlqc
                Y433DNVugDCGbJ3ULoyfRNyZFwLecynNxhGLW3XbZYki1hbjas3bdZy1eFYPiextyKLtzLlSKU5KnkCP
                ACPqH2fuqO/qb8TjtwaXMx5GwVdEHqbvy/sW3RIWddjbGuH49/GJT0WHD9swkrvm4Ui5SH/ReYQOkxu5
                REnx1kY239yTDG57hi5M44OsTM+P7Wti/H+PnsTm+17XtW53UtHxLSZUfx7G0puebKMjpPUgTWM7KcTg
                cBTKAAI3TagsOwWoXCGV8HXMuszgsq2FctjyL1uBzLsUp+MOyI+TIQ6YnFE5iKgTrL1dIlExeagxac7E
                8QJ4fpfIGJcX6U4vW5pJe3XKXREr2ZFz2Q2KaAqiL26IFGwV0rktxZy3TKd82lopRqRQDqESPz5x8yG3
                X4m/TlrHzbBaXM94OyDo61B3PJpW7a8Nd0yjeNg3Dc5zeSjbKlznYQ0lGSLlT/erZ/CggYeUxeCp0Apk
                F3L9obBO6NO4Tc5/yJlK2bHw0pczp/ZeO5lhANb6LNlQ8hG4Jd4i4Mig38lQTigmVUwG+FZLpETRj96X
                a12KdLWkXKMnpwyfjfBOsbFLFhcuPrOZ6nZi7r/vp6wk0U39pO8f3dOyTxyo5SOoKTlo3SXQVKRQVfIK
                qmfNZtZZJkNZfh+o4M7kHITgunnNOMLldXSUZJa5GNlwr9CEeP1HSiwnVbolaFRVHpMQyCZilAxQONjv
                g3ZmUPo/1e2eq+cLW9a+q5wpBRqpxWTjDSuOohKQK2MbkxSK+yomMQB6esDH46jnE2HLdO075WuLxG9y
                6fNIF6zeFLw1dwFjwN+XPajz3P7JCZEgTMcmyCnsAofo14+O85QgqFFVbkoqFFURDKtudeG229dNu19n
                rLOHIO/o7UZp5xg4ysjm6fyJd0tMX7I2YCUjdTW6baculIdNOUalc+SDBigZsv5JiKgmCxVci2xrPTe4
                PsYWFjDN923iorJW5kvTpN31ESyZb4VtWElVGdvyDKYlk3iZXbGMdNWDdVZA4AVsTqIYQMJoyeBNnTSC
                HiDr6278rBlDPuAbSxDMXmivkvIEgwvuYnUIKMkmS8zdeNCW+ociCjpUCJJJplMXgFAPxyMw/J1gaU9i
                vbo1SZK0rYrjsdW3aFu3DkdpbRp25Lh/KXJ72KSt62gdyd1Ony4mVWK0QIQ6vlgBQKIAAjURXbgwltP6
                k8XZA1574WsLHOQc+ZyvCfkITFN6agZG2rntO2knRyFnj2VYkmjOqKPTgcrNEE/IbNyJppogcQE3P2x9
                QunfRTv2WXgnbX1C3HnLQLqsTjrLlrUflvUWlsXFcca8TaQy5rwjmajtzbs40SfMplBufri3fsqrxRUz
                tQfRqqCluoLfnR8VPtw2Fesad1adjp6dW8Eyf+WpGyRW12TORyuk2yiRSHT96KmRVAwqiYUhKJgKAEJO
                sAPn3D7P4BVfx9/31Bh8QFqlfattzLAO05Jag4rTdpbtptbV6apMhzN2xljwyrq4EFJ5w2uCbmF0Wxko
                yFSQVYt11QSUcvQMchjop1ZTueabvDb4y0u3MXQzqit21tYmMY5jMY1ncb5RytlpPJ01ELJe8LeuKZjg
                lIVus/S85VB+0WZlSdAmXzCICJKzbaXt4rKVr+G6ca78iPXt3Z+xDblzYKaXVcCaLv8ALLJMTd5bCxjd
                c4cTEO5Oq2fQ4yrpUxlXDtNwufrMoIjZps6bFOJtwvBzLcW3Q57I2pLI+pSTnLws60ZS/bnty3om2VJN
                Rm1uSRe2q9aPXLp2omsKLMF0mjZEpUytziBThIq0M7MWh/bpy3lfLWlq1bytFXL1iR+Pbhsm4L3mL3s+
                Pg2ksSYdHhvyrF3JlVeLJJe0gvJKpiUhSkTIHPMc7w+rJvjDe/3YcQ2KmS3sbpyV3Lt7SZJpkiWZ4/Ji
                zlgDFtxwgCPnqJpAl0gVMQJ+qABXaW/GHO/PsN9wD/Zlwd688/8AGojPSrt/FF6/8l6U9KOO8AYOuotl
                5P1b3c4sWQu1J+MRI23jtoiT8oHcfLgIC09rWVRZruScHSSOc5TAHVWIpnoP8MBiLSnG2LqV1p2Le2p6
                47FK/vPPGPc1Xlf96W3kmVi/PdvoSx8YLy0UkSOdG6UY6SjlzKAT+kCqYwnq8XwjerzId92lqr0aXVkG
                Uy5j3T3cMdcOD75dnkhZIWVKzjyDk4+KRngI/QYP1SNJWPZLJkFv5jgDkKoqYAmbCHPH2dw+nP21AjNb
                mRfEmbveo7FV/ZXvyxturRLLTlvx1lWPMOo5K9kraudSyGUgmsUhmxJO7XyD+VM9dICq3ikytEuFUSmN
                9tv2bFW2rom2470z7ptwnPWHla0bvsGFYXK4yvlO6SO46ZfKtJNGShbsl3rBQyoABvMBsU5RAAIYpfhq
                UltIIouNq3bsRXSTWSU0U6aiqJLEKomoA4iieQUIcBAQ+wQrIn0gAdIB24/Z9ACoZPiZsh3Lq+1V7duz
                niaUKMzmHK9t5Uy8KBgdNYhpKSC9n2KpNEYmMsmlExo3NPSLdRMR9nFk4IUQABH4PxNelEukZht87gem
                63zwCmj2csDCz9OLA6YtLItIG6+MkJWT5McxExZqRJTdIiIOVDGHkR5lGi2xPudbe6zF4snJYr1iacFm
                S71BsRU8chkS0BRLLR7dyIAV1FvFCumgmEBIsgmcBAwVGo8J3m68MSyWtba0zQouwyVpvyrcF3wMKuqV
                VBqdhOfm8ynHx7hcSmMiWRZxztqRIBIciqy4dPUIn+T8YRGQUk4252tis0Q1LTOWrpiLFlIlRElzN4pR
                5DJ263UIkQzg6RppcDsRA4FKsCwlKcxh6fyvEV6r7mzzrS0mbRkRniP084VuKHsrImrLKUrdDe1IJiwu
                d+sMdHXZKSCjVIrOFiWC0wo3WcGRcKvWgiXra8DZbuH6V/DM4w0qXhBaUdWVswWrzHlsBMYyyHj3KuTs
                yOchXlBtwce47lVtb3pb5Pe5iGTK6aAzTbODJmKokiU5BzNbaG4FqRzx4cTPGdxnZ24NSem3EGpHGNtX
                yq0Xkrgue4MV2L+UGOp9UqhRO9fJR7+NaOHBhOddygoooIqmPWFvYt0nbH2s3Cc5cuvnKcDkXW7eOQbg
                G5rRzPna6cbTScc5cFPDuLQZtpWL99GfGOss6dlXdKlU+AwIBwB5yWh3RHpp0E4ZWwzpTgH1uYslLunL
                8Rj3t4Tt7AErcYJA7Oymp9y7XFACIpESJ5wgAByIicTGNeTXnC7wdqSWJN9a37m2csi5LuLXxfMsrN5c
                xfjK2mcrAWfkR6ySczLZzcjt0dk+byrMFnV1Q8mx93sCAcXToSnVbNOmcobh2TdwXcA0zaeN9stzaT8K
                YOuOJJOYfs7Fs3a9u3FlAops0bmy6hc8od8zZyYCBFpBig6bt26hys2qKLhVevS+tNrbTO17cZ2YSLTt
                BpBRLe1iQZm54YlupME04UIkzXlMWwNwT8gUxEok4EvIcVCb0b/8r61s89x/Ju9OPl/8Slu/IPvGvp/G
                W6h5u2sJaV9Nka6lG1v5IvmfyJfTNk8K1SnI2zmpI+3mInEigFOk4XdKFMYhyh1AIkHp4r4bTGj4oy8N
                M+L7t0g2Hpm0i6bbWsKAaYT03Sdv4uaXTO2FGRqaUO58rJ8bOSqbh+RMV1V5uYjlXCixlykTSUTMGUTZ
                a3rsuaxsv5T0J66sTx2E9bmFW8m4fNYdk+h4u/Y631SN7gBe23B3JY+TZdablQ7d2Zm7QVIq1KmXpKbG
                djxQ0v4zK93N48+84nGt0o2cm7SFkoBGukhKKixZoJlICvMMd0JTmAesgmV5MPB6nB9gDnuHPr29A447
                gPyCoQOy0i2ZeJI3bGVmHOpYJI7MPKqIiq3M5JmCE9zidVUOsR+J90c+vxc+gVv7BYJSG/5vbyUwUilx
                M7+1ItGBlwKm7JCI6thZN1EUB4+AUE2pPNAvIlEvIh195uSyKK6KqLhNNVBVNRNZJUoGSUROUSqJKEN2
                EolEQEB7CAjyHFQjvBqAKbbc+bxwqqWq3yrgQtvHERMifgl/FWMmcwdQj5BWfUIh35AfmNTeKg++EBaN
                bxy3uxZguMQlsjSeRcNRTuddmKrIJR9wz9/3BOETVN+kKD922aquOowgczZLjgSCJssOuneN1v6dtTN7
                6a9M20FqE1YEtGPgH6WYral74SsuTTmWhXhjNoi2rJlUxRTHrR8882T4ymDp7V1zs/b3Wp/cD1t550e6
                kdKlpaaLiwhii4r5nYRu/vJS+om6IO/oOz1LWuONuToKiKacqqdb9CU/mJlAAKXqCrzNwrZR0tbkmecZ
                5u1P3vlU9pYusp9a6uJrVu8bQsy5zLyxJJOUuKVbgLxEqZfMSMDBVsobqAxlwAoFGKJvu7f2zLpC0/ts
                h6As2Y9xVrAxPkW0kFcUWXqVlshXrc1vu3J2coua05iZlZNjIRawtXpH6J0ClTIuVYFVDJCSSfk+dX1f
                eHHNfOeUG973Nf8At82ze12S0oQrp3KX3GWA2fDehlV+oSSCr5D3gZcnAlWOYU+nsAfD+FNfvpDZ1xML
                545eCyyxm+PaC5WUWFsxaXqcjVmh1iPSmmHYhC8AAegVYBtH/wDKf95jn1/IDJ/Ic8gH+zVYf2VXxK3P
                98d2UOO/+2RxryH0D8+0ByNSTdxnQbZO47pue6aMg5Cv7Glqy172TdspcON3bNncrhraU0WQewaSsgRZ
                uCb5v5zYxlkFSpmMVbyjimBRjzawNjHw8unHAt42dfuQrKwDmL8hp51Y+SMkarZeMvx1eLCLVViJM1q3
                JMjHPQVdFTK4ZNYXoOUxiopEUEpg0eFK1QXW126tWjPK19v7wxzpSyzd7y0JqTfOpAYTHbTHba8JSMiz
                Oj8lYFWSdvm6XICUXBw5AAKUuPvbF0eTXiPNR2pDXjuGXnkKa0+2TfKdpYnwNA3jMQMEgR8ZWUjbPbPo
                voO1i4WOBEjsY9Zs4cu1vPOcQUUCpL+nvw/W2xpP1RYl1aacMcX1ivJGITXWeHi47KV53LZ84rd1nSFi
                v1Lghr3dSag+Syk3IolZuG5QU6DnKcS982NKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKoIgHr8/n8vuq3/VLqVxVpCwH
                k/UVme42NtWBi61ZW5ZV07cJorSC7FsZSOgopM4gKz18v5bVqgQBMdQ5QDtyNeMzlPXXdGaNyqX18zqI
                QE5cWoSDysDNNRWQCDioWVaoxLIFFBEygtY5qgkbpHgekejgOkK9nLAOe8dZ8xXjHI1j3jb1xssi2JB3
                lHDGybJRw6av49NVy4TYJqGVKQiomTNyX4BDpNwNd59Xfj7PwH8B/dWqlKUqnP47+v3hTq5+Q/X04/gP
                f+FVpSlKUpSlKVpMBhAQKPSP19a1UpWN3dz1ENNLm3Rqry0s9KyfsMV3Db9vnFcrdRSeuloaDj00D8lH
                r5WMYoF79ua8T985cy8m6dLqKLupF8o4V8wxjqLuni4mOYw8cmMJjdxHke/rXsSeHj0rOdKG1np8tmXS
                bp3LkOLXyvPmRSMmqCl5CV5HoOROACJ02wJ88+nP7KzfUpSlKVju1aaELc1GajtHWp9vLKw+QtKN6zz+
                PL0AdrOWndzMjebi3HHxAqmoimogbngAOqH+VWRGldd5ax/H5XxdkXGMoKJY/INj3VZjo66XnpIpXJCL
                xIuDJGAeryhVBQA/8kOKgg+H71iwe01rG1VbWes2Wb4oi7lywvI46u+6zFjLda35GphAItpeZdiVNBlO
                RaEeuwdmEEAVKcDHDzAGp8BrutUtvEu41z28W01WhH6Vzmmo4tvKMFCgZN6nNip7MZEwdyqAoJR+tfM4
                3zBizMcdLTGKMhWjkWHg5t5bctLWZOx9wxrKdYce2Rij+MOokKqfUHUBDiH21EB8KC2am1Hb1TwzZAzx
                DPWHmyDoUSGdINXV3ZTVctUXAh1lTUMiidQgDwYxCiYB6Q47C8ZL8OhXAHfgBz8pz8uP9bRx9e3bv3/r
                rvnfKx1c+RfDoOi2tHrSbqyMbaXMhyzNsiou4G2rYnYNS4nyRUgHgjNooo+XMIdJUUVDD6BXUOwpoV2d
                NWegrCGRUtNuDsiagIKAVhM7o3G7mLjuhje8ZMrkF7N25LSCqKabpsDddE6TQqJgN0hyYDBUhzE2mDQD
                gnI8PDYawbpUxpmaFjZiWg0bMsfF8Jl6Mh3yIsJyRj3bJuWeTaKJPBbOFCKAn5awJGHoP0jF/wDFAD/t
                6tmvnt/suy3YeOeRyJawDzz6dvpz8/SppfBR54+Q8du3A/PioYPgwgKGmLWYYCFA5s7WUUTAAdRiltF2
                YgGEPp1D257d63PFNiUmp/Z/OYwEKXUlFmMcwiUoFLkK3BExxH6B86kWbqA87YOuLj56Tcwd/XkfyBdB
                +OKxjeFK5/vQePeOe2YsugHPz/1SacjzWNLaED/3U/u9CPA/7F2pzuA/IdUeNhL2/f3+zisnvip+2z9l
                YADnjKOIuOeeQ4uBTvz/AFVfzsrnKO01t7AUSm/2quJyCICAh1ktxMpiDx9BDgQ+tZQKj4+KFEf7zXqL
                47D+U2Hvt4D85UfzVyeweP8AuPOggPn+ZUo8eg8Dd8oIDx91YA/FXRlyYP1Z7XmvL3I8lbGwtkOBZzqr
                Mi5wK+sTJ7LJ4RThQvKaYvmpVkkOoAMcSnAOengJguM9RuFcsYNt7UbZ2R7QlMO3BaDW9Ur7Tm2BLeYQ
                y0cWSdKykiqoUjY7YhhK5RcCRRIwCQ5SmDioc21u8b7gfiONYWu3FCLmS074htydtKJvZIh0o24pR7Gt
                LUgTtFzl6FQcmavXRSFEDCh5SnYDV+1vtXZC418Qrsx5GvN2jAWREFwmEtc0kqVpERjZlqalhl3jt8tw
                QqbNF0i4cjzyVMQEfUKkh7tOsXE2jfQZqFyRke4Yhq6uLF142RYNurSLdGWvO7Lzt9e34qMg2hjda4kF
                z7QqZMBKVMhhMIdhHBP4Mxc7jQTqjcH6fMcayJpY/AcAJ1MMWiobgPvEQD+uuudx8efFUbZI8dwx1jbt
                8+11XUA1m/3t9z+29sLRxdWQY17Hus+ZGayVj4AthcUl1VbveszJrXnIMTdzx8GmcHi4GDpUVBFDn9KI
                hj+8NBpAxbgrS7d2sjIeVbByhqy1VC4yfm29CX5b91TmN7OnpBS44+1rulU3CirOQeLnPMXAo7UKYzky
                aR+7UTG6s8XxYUvkbbixLlKzBRuK0sf5uiZKbk4VUkmxJDXfArsI2aK8ZCdIWnnIlTMv1dHUqmHI9QVd
                JtY7e2ytqa0g4Hz1iHSdp8u+VuHHNoub/RkFJS+Ze2ch+5Ab3db91Rlyv3gtnaD8rxMySqBCn6QUSKKf
                QasxeEtP+iHDl5SUVp5w/pjx5km3YUGc6niyy8ZwOR4q35Fx0glPurbbkmCNl1SdPLs/QcwAHxCUAC7L
                j6dvs7V1CXT7gQlxSd3kwjiIt2TTw8jM3QXG1mluKWkFC9Cj+TmwZe0uFjB2MqqqYwh6jXaTCOj4tohH
                xbFnGsGpATasmDZBm0bJh6Ebtm5SkIHcexShWILfh1C6gdLW2VnjNema4ZSzsqWk4s0WV2Q8bGyj224J
                7cqDW4JgjaXQctwKk3OYTnVRMUocjX3WztrFjdZG31p1ylcGZITK+XT47j0s2ShXMGxn2F/MjHTny3Fb
                8UCBGJimAvYECJmKIGL8I81Fo3w5bDOsffF278MaQi21d2oKzLihmmeb/wAeC1f9SgXXFTlqRVzT8P1J
                rOLdimMiu5WFQwt0HSaRzh5YJp3u79urjUhlfXjpO2hsG5oW0x2bqDLDPst5iZTC9uTL1hPKOjEt9nPN
                VkFEm5mbZRIrVNUgu3aqSBz+WcSj0LucbKe0rtn7Y+fL0kGhrp1MSOPlInFWQsr38/XvaeyfIrpMiSFl
                2fFOGjc4GVVMooU7Z0RuQeo5/h6qyC+H/wCkfD+qAAgIhZupcB4ER4MEM7EA/r44q1rwbnbTHrc54H/b
                VIc/MRAMfsBEQ5+/v3/ZXyl8NGzzxfdh+1IJLg2wBGO2wLplOCLlGz3/AJLhMDB2OXkek3qA88VIS3pA
                ANpzcJHgP+KrlsREQ59LbVEOefXj/PWPjwpyAI7QONlAXQW9qy5l1x0IKCc7f/Vduj5DkogHQoPR19P/
                ADTFH59scuO7gg4Hxf8AlBOal4+JPP4Nk4CEK+cpNRlJpzY0S+bxbMVRL1rqJN1zkTDkxgIPAVmj8Q3j
                u4MxbROsG2rFKeXm7Yt6AvSTj4tUrl8SOsW5GV2TTU7ZERP5gs0DH8rjqMUQEAEBrEJ4d3RZtBawNCuM
                7quHTbhW/dT1jHkLezSndknMTl2PZyKkzOWFyvbVkZE7cjV03Oj0HQZAgIFEpuREwDJbx1pO28sGZCte
                Gxrp+0lY3y+2UfT1loQePsVxOWETNmoryErbLgWwThSpICJ1FWpwBMgiPIFEeb2qg8eKXxVlbTPrA0C7
                tuKYJaVj8Nz1mWVejhFouvHw1243yAtkrHbi5TIAPS2mkXchF9ZxKTlsRIwgdYgGldaKNeem3Xth60su
                4CyJbtxJ3BCMZCds0ssxG9LJllWxTyUBc8CU4OEVWiwmRMr5flH46iHEBrvmczlhu2b3tbGk/lKwYnIl
                7Si0LadivLqhkrun5NCNcS6zSOt3zvazmK2arqmEUgKAEEBHkQAYE+vLFOmiJ8Uoo23CbAhJ/TNqBtWy
                FYcLzk5aCtBy7k8TtrAte4ZOai3TI5EWM7Gqgt/SAIXgvmgJTd5eVp7Tm1Fj6EQuGB0Z6YW9utUmU0lO
                z1pwdzw3sjYCrtJBWWuxR4iduJQKYTKKCmoH63UAjzY5vr4Ax3fex3qRszSjaGN4/HUAwtfLMDCYOhrV
                jbFXibByOzvW639vR9jJkjlDHFo6UXO1IInUA4mET9VfReG41YYu1BbXenuwLauiIc5FwHbbjGWQ7QF+
                0C4ot1Eyq7uOl14kpgVK0doLkMgsBRKbgQEQN2rOZGZAsObuSWs2Gva0pe7oFqm9nLVi7jh5C5IZksv7
                Kk7loJosd03SMqAplUWSKUTfCAiPaoVGxl/ygfdk+x7fID6//SFyPP8AKuyN+ESjvz7Dnf8A+OXBw+g8
                hxqojeRH8dvnXWvjAbDI1vjbozffFtrXFhC1MgTloZIapldAR7Hv56MuWUhF12hiHIDyMZPEimIoQ3I8
                FMBu4Z4tLG2Bss5JxVZmX9PukbTbeVjXtbjCVi5hJs4yG2KlKNUXqjF2tczyQMm5RMBUlU1elVMwGAQL
                1G6siWAcX6Q8buLtY6X8fadbHesVmEJfyGCrYxtb8ig7aEOeNjL1Gw0UlvOIAKGSSfiJ+esQD9YauTH5
                dwDvx3/qqCT4WS+IfT1r33QtGmU3EdAZim79BSKQm10mcpLS+E8iXLbd1wUSZ5wddRX3yR95SYmFRJDz
                QAwF5rJt4sHN2LLR2xbkxJN3rANsmZHyTYAWlYwSLVW5pNnDul5GUlQiCGFYjRBMCgdwcoE6jlAomHkA
                y1bQjlu52r9uxRsui4TJow04tzHQVIsQq7XFMW2comMmIgB01CGIcvPJTAJR7gNZA5qZi7eiJWfnHzeL
                hYKOezEvJvFASaR0XGNjvH750qPYqaSRDnOYewAAj8q827Tpae5/uqbqGrjcz2/JWw7PkcZZHmcb2bkP
                KTuOFnadpT9surIt+CtdhJJLJOnSNsoAi9USJ8CbwpxDqcc1lI1H7QXiGdW2Dr9xrqW3HMQ3hj2StoJu
                QxL+Q8QujdUzAtzSzCGaycDb6KyLozgpUknJXRCdQgPPTzz374SfVhI3tpSzFonyA8MlkjSDkiQaMIt0
                ry8CwLwkHKjZIvmCBjgxl2kmzEpC9KSQIAYQBQvNqe5qmjtOeIO0vbhbXy7ewPq3ZJ2xmp4iQEYxlMNI
                5Gwr/ePEkClRIKsYeKkkhPyc66bpceT8mpg2UPvvb+LTUvCsn0loj260mCdiTi7VX3NeF5W1JKSFoGbq
                KB0Co9nDnnQ5KJyINUim4KqUQtm3ZcX4EtfxOOLJrXfZ8fdWlHUNZeJPOJeTyYjrOSYmsU2JyunEtCOm
                ayKMXORwPnIFcB0eYU6hDEUADS47L2l9puzbebT9raNtMSlrg2QmW9wSluRN3QqjBAoLpSPvu51nySjf
                gAMJzKimYP1uQr4fXtqRxTtw7YedNSuj/FGBZW0LIasHdt2XjeHtOGxDPTV3Xwwx9NyTxpjxErFx5R1z
                e3imUTHMgKSpuSj04X7e2f8AaW3Jdvu2dfl34/tPSPfF/wCKbmyPkC48C3+o1xpYV2tjvFX6kpbkyCrQ
                oNzJEUWjEE2nxGBJMoAJBN9B4QbKOa7y0v6pbAvS8biv3DGIM4RtrYOnrhVfPQZtXcEd5c0BBv3pziVg
                mQIx6izIYSNzOjgXpKcCll9VAf8ADlX9Z2Od47cusPU2u1htU2RJmZjsdy17KpNJ18aKydJur/taOfSh
                gUUeSSa8A4I2IYTrptBEoG8ur/PF22ppUfaGbbuO+Wlql1WtMh2dGYIcswjiZFk4Z5L+XecYdNIBeuIg
                rIzhUyanKJXHQYn6UQAc8W1RAZGtfbi0YwGWhkByHG4CsRG5QlFFVJAjg0cCzNJ0ZYRP1FbGQL0mHkoB
                09uOKi96N+/i+tbI8D2tu9OeQHgP9hO3A7jX7fi/8Vv2C+gzVFJ22vdGMsd5Hd2fkNoigYyBWS0u0upv
                HSDngxSEkkUHbZIDBwIlNUvbA2ccSZmwRYWasZXtbVw4tn7Ih56OumOlmakM0jCxCbpdN+76wI2UaE+F
                0muJDIiBiqAUQEAh46OLhtbWD4qLPufdPQs5nEeIcZT0He1/28JnEBcU8xgWtqKuiSLX9EsDp4BmpFAM
                YigNuoBEogNfObwck721/EV6Idyi5G8ihhPL8bbNvX9dKTNVaOi0WVoOtPuTY4/l8Asuwth+xmU0RHk4
                mKJA6kx4l7ajNZuBdN+mG7NV14ZEtJTFsLZby67cnW84xXjL3XPHmcwMRbTtucwOlX63lopFQ6zAJhEQ
                +EeIzPhTsDXxdyutrcjyZCumD7VhlBSIx2rLNlSPnFqws5IXHcMyxXVEOts6eyCbIREo9RmIGKIgIDVr
                EJeEbtOeKOzBLZUerWVgPXUxkJWMvSYODGCcHyy3azi7p9IKCCBUGd7NHSTgRNykn5JzgHWAjJ33cNeu
                NtCeg/NuYJW9oePvi5MdXLa2C4ttKNFJe6si3ZBqxdqvbfbJnE7hBiqsWScrpgJCooj8QCYgGxteFS0f
                XJpt23FMsZAg3MFfmrnI0nmBNo+SUbSSOMY5inbWNSPmioAYntQJSky2MI8nbSCBuAqTXXn0aA8wxWw5
                vqavdLmpJ8exdN+qqQSNaF+PkVW9uIMHN0O7swPfb9cPgFkk2lZiCkVCclauVluoelA/M/iCue27nhGl
                z21Pw0/bkg09uYz8LKsZSHeNDJ+aDprJslFETp9PI9ZTiHHz4qGPtAyLGW8Tfu9SMU9aSUc7sTMyrV+w
                dIvGbpI2erPAqjdy2MZNQvYODFN9fpWzuo5tz5uO7xtmbNFragJrTBpzh7ZZSuVJa35I8HN5RlHNuFu+
                RhE3RFEDPAMzURaMI/zvKVVMqKxFOkpQtz3z9qfaZ2yNt+4I/Ftvtzasrxu3H0Jji5L3vyUuTKUm1RuB
                KVvSQQgGSzdm3ZGYIOCquFI3pATkSKoJjVnCxQ6bPPDJ2eu1XSXRDbaatxURU8whV2dhizdIicn+UmqQ
                6Zw9QMAgPcK+c8KCIf3nTF4/IcyZ2/jfB+KsL2kP+U/7y/cf+AGUOwh8vz12GHr/AFfyqviVef749so8
                f+MhjUOe/wD9O0AIgP7PSr3PE37iucdDml7DOPNOlxK4+yXqsyPM2CplNAqYO7Dsu14xq6uZeGdqlMRs
                /dqyTBFJwYvKaAOjp8KFIYtutm+H82udLOmC4tUmu6/nupvI62NZC/72zBlXKkulZE7cz23DS7ZxaScc
                8QdyJlFhKVmos/XO7+AwkADCWrUfCz2ewy7t+7quKrReNmI5Cv8AvW1LdL3U9gjr1w4pAW+6O3MImFMv
                UIF6h+LoMXnsNfaeEC1CWTZWM9UWibIkxGWTnCz8xHuxlY9xu0Yq4JdMWf5LXUyZMnpiGWcxj1imi4bp
                gKpesTCXgoiEzZ/f9ixV0QtkSl6WnG3rcntI29aD+44dnc88DJmpIuxhYBwsV268pukqur5CJ+hMhzm+
                EphD6+lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSnp93zGsGe7BvnYM2mcl4Nx/mHHN7Xe2zJFzs4pOWsVsdG34mBfIMHK
                h0VxAVlROuUQSKIdg55rz3d8LfVyturZB/I60yy+OtKtmyZ17Lx4d0Kb253bdQQbXTepGpxTVc8GEUER
                5KiA9uTd6j7cjWTza63Nsn7a+qewtQ8Q3lcjwdoW5cloOscylyyjWHd23cSACuyYpeYZFDocESXLwkIA
                YojxzU6HZK8TFkXcj1iP9MOccP2ZjwbwgJaaxhIWY/kHIt3VvtjPX0NMKSIgZwZVEDHIoQhOnoHkBqY0
                HcAH61pEwAPA9v8ARzx/PmsMead+Xb2wVrJtjRJeOS3C+UJ+ajbZkZiGZ+87QtS55ZwDVjAXHLoGEEHA
                nMQpw4ECiYANwPNZmUV0nCSS6ByqorJpqpKEHkh01C9ZDlEPkICAgNVUVTSIZRQ5E00ymOoocwFIQhC9
                RznOPYAAO4iPaodG6t4rXH+i7U3buB9MuPbX1CMLKl/IzrdDi4VWUS3EHJEXVt2g9jyKgd81IC3mnUDy
                /MEpQHgBqStgXXXpvz3pYxlq/ici2zZ2Hsm260nWExfVwQ9ukhnSpxbPoCZdSCxEk3jVwRRBRMD8iJeS
                gIGCvj9We5nor0V4aj86ZyzfakZY9woCrZprefN7mlb5U/yULTj4k6hnf1MoUQIUORE3asWcf4pjayfa
                aLg1EHv25WklAzbe3i4VXiC/nTlZJ2VIzdSNigN5R2ogqJjuxU6CAQ/PpwP6GgfxMugDW5J5TiZWUk9P
                DvGVtyV7Knyy6j2DGZs+KUAj6Sj37Y5iHXSAxDGalAVBA3wgPA1fdon3jNAWv65bpsnTznGCl72tZ3JJ
                rWlcAhbs7LxsYYfPnYBlJiQXbToDzBOjyJS8mMUAARrJNAXRbd1szyNsT8NcUem4WaKPoSTZyrQrlufo
                XQFwxOcnUQQEDB1cgPavncmZUxzhqzJvIeVr2trH1k261UeTVzXXLs4eJYIJpmVHzHLwxQMcxSm8tMnJ
                ziHBSiPaupdMWsXTZrKtGVvnTTlm1MsW1ByhoaZe2y+K5UipHk4JN37UeFEhUBM50hOUAOUOS8hVzIDz
                +8Q/cPFKUpSlKVBR8ZXrsiYXHeJNCNpyRF7kueQQylkhBo7MB46AZdTa3Y98gib/AOEKdapQUD0LzxUQ
                3Zj0LXHuC7gGEsIxrURtSMnW1/5MklGx3DSMsW0nScnLe2B2D+ldJWqYGHuY4dvlXtEQEHF2zCxFuQbN
                vHQ0DGsomLYNkipN2bCPbFas2yCROClIRMhSgAB8q/YpSlKUqnH8uPl/Cq0qgBwPqP3duOaxGbkuyjoj
                3Pk2E3nC1py0cqw7IIyGzPjB8ygL+axpT9ZI+QO8buWMiiQefJTkWiwJ9Rujp5GsK0J4ROykZAIm5Nxn
                VfI41TIg2QtKHWjIp8VkmJAO1M9eqO2HT0gcpQLGABeQHgeB5kVbee3bgLbTwepgnT8a8HdvSFwOrruC
                bvefVnp6fuJ6iVBzJuzgVNuj1EKUPJaoJJh6gTnvXXugXawwLt1ZO1eZLwlc2QpVXWHfts3/AHhbN5P4
                R/BWW9teRuKSZRdlHjmTZ2DU6lyvAU94OHKnSmkAHLwbq+m3K9tfB26JgNpgHOMzedrRMVd0ZecDd+Pn
                MK0u2ClY5I7ZUjFa4Gb9qKTlJQU3BFWxuQAvAgIANd84R0y2riHS7ZOlK47juLNtiWfjVDE7uYyslASM
                /eNmNowYRNhdxYVmyZORFkJWqpgalFUpepTqOJjDHCy14TPTmpfc/fGkvVbqH0nJ3G/Weu7LteUbTtpR
                iK5+szKG6TMZEqICJvLTdSC5UwECkApQAoX07a2wfhDbszs41OpagM/agM2urKuGwhncqXBGrQbCEuZ2
                1cyYR8SyblX8w3saJQFy7WAo8iQC9uLrdfm1RgLcMyNplynle6cjWld+lm9vy0sR3YkjCNm0sJ5RnMOo
                O42c6xfJqNlV2LcxjIAksAAIEVKAjWT3j8dv31iz2s9p7CW0/j3KOOsJ5ByjkKMyveUbek3IZRdWo4kW
                D6KjDxTZnGfknGRiQIiQ5jG81I5hN/lcdq/P3QtovAu6lE4da5dvzKmL5/B1yyly2XeOIpK3I24knEqm
                h5zVypc0dJICRNVsiugciJVCKAJinDkQG83LGnGIzTpWvfSrfd7XfIwmQ8NyOHLqyCn7hQvqQYzFsjbM
                pdH6Nn7tLJLFEzkwlYeQCojwiBPhDqTbq0EYz22dM0HpdxLd983vZ0Dc1y3QhcGRF4Fe5nD66HCbh6i4
                UttlHtfLIZMoJAVsA8c8iauo8C7Tmn7TpuJ6idyLH9z5ELlXUtYlxWRfVhyL233GOGRrtu63r2uK5IRB
                NgSTI9cvrdbnMC0ioiALrgVIOSCS43XHozxbr60zZE0t5hd3BFWVkNoyTXnLUXYtrlt+RjHpX0dMwikq
                g6bAukYogUHDdQggYQEo9hD8nQNowtzQFposrS7ZmUMlZXsrHqsqnaU5lVa2nV0RcJIvzyCNuEdWtHxq
                B2bQyhyNCnQEyafBAN0lKAXn1ZduAaIsc7iOl2+9KeVbovOzbLv57bD6QuKwF4VC6GK1rz6Fws/d6lws
                37ThRRAE1QVan+AxuOk3Bg+60daX7M0WaZMN6WseTlyXLZmFrTTtG3568FY1a5pVmWQXkju5hSGbNGoq
                mUcH58hsmTjgAKHrXI1XaT8Ga1MJXbp+1DWWyvfHV3twByyXE7eRiZJAB933BASiPCzR81OPWg4RMBg7
                lHkphAYxAeETw5HzTq2bc156sIHT5IuxdSOJGshAguuRZyKzxiWWRSTYCkcggmAqxBz+oqHONSTNFWh7
                TpoBwpD4H02WSjaNnxyhn0m+cKnkLkuycVKBXVwXTNr8qu3SvH6xx6SF4ImUhAAoWxbqG0Xpv3Xsb2da
                mZX11WRfOMH8xKYvyvYjhk3ui1Vp1BEkvFuG8kks3eRzs7Vodw1WT5AyRTonSV4PWLLTv4WbAVo35bN5
                6ttT2c9ZkVZCIoWjjXIT0sXjxmXyTt0jScX57xyuKXWJkikdpp8gAmIbgOMjG1ps+2BtV3FqDUxJm/Jt
                748zpORVwp4xvBrbZbfsqVinDsEn8O7jGqLg65mjhFiocxgA6TdLrAxiEEvaOe9qjAeoDXppw3DbhujI
                tvZp02sWkXAxNuyEGWzbvjY166fxTO62EoxcuABuo9ciQ7By3MYDiBxMAF4+G147LekLclzfYmY9WDnK
                N6R+OrAXsO2cYQd8vrMsluV1MLzTm41F7YK2lDP1FFgIc3t/liQiZfL+GsU2RPCN6OHl1SMjgfUpqn08
                2LOiBJzGlqXqyn4JRqUCJg3aSdxoKvjgYvm9fvBw6DkwdIFABA0gux9EWD7a0Z23oVu6Okcu4Pg8aIYr
                kWuTHKM3M3Rb7cDCRxOP0U0QF2U4gqiugmmKRyEFLo6C8Rzrx8JNhmDvCVmNLmt/U7p1tCeeqvZKxY+T
                aT0c1TWUMAsomSaKRzkyZEhIRNSRO7VDgwioICAFyubXOy3hPa8uXJWQrKzFm3NWSMtW5D2veF05cuCN
                ki+6oSTPKsW8UwjGqHQAKnH411Fj8Dx1cVmXpSvhcm40sbMeP7vxbky24277CvyBkLauu2pdAriPl4aU
                bmbPGrhM31KbkpgHkpgAxRAQAaie5D8Inp7C9JKb05axdSWn6zZ2UO8l7BjJBjOMGrFVcDKRkLKpGZOu
                gqfURM8id2JfhE3UAcDlw2z9kXRvthO5u88WM7ryXmu52ijGezZlh6wnL2NHrq+e8jYROPbtmccisoIi
                sLVAqiwAXzlFOOa/H3V9kXTduoubHve+LtvvD+a8ax6kXZuVscrx4SIRp3ntzeLnoySSUTcoIriZZI6J
                0V0zD8CwFDgceuMPCkaWAjrmV1Uak9Ruqm55e0Z+1LZkbwuRGMhsduZyOUjkbutWFODsxpVoVTrbHeuF
                0CqFIp5HUUBrLRt/7WONtvbS9krSTYOaM0ZNxbkNxc67YuTnlmOJSyAvGBPBXEjaatrxEckQjjqK4Erl
                JXhUoccF5KO7tfbVmFdqnH2WMd4Wv/J+QIvLuRwyXOyGT3drOZCOlCwiEGnHRX5KxsYiVsCaAH/TJnU6
                jDyfjgA3ri2rMDz+5JaW50F15Eis2WvYH5vVbSYPYA2PJ9gVquyRlJNm7YKPyuiJODF5bPkyG4L1EHge
                b4c8YaszUXhHLmAshoOXNiZoxvemLrvTYqlbvy2/fNuuLblF41wcpgScpJOTKtlekehQpTgAiWrLtsPb
                Px9taYVufAmKMw5eylj+evRe+45lllezXTi05iQYJx80nAK2lFRYAi9Bu2OsmuCgAdIDE6Oo/VY3ui+H
                swBuQZuj9TkfmLJ2nXPrSCirfkrwx/7uextwt4REWcS/lI10VNym7bth9nTWZvUOSAHmAce9XmbaW2JZ
                m3VgjJGDAy/krUdGZTvR/d11TGZ146YcqpyFuNrZWt9BukkACyM2bFFRNYygmMc3cA4KGI/PvhR9Ll05
                NuDKulPUVnbR5LXNIOpGQtewZNvKWSzWerGXcpwzJQzV+3SExjdDf3iZFMOCpplKABV0O3X4e3Cmg7UT
                a2rGY1J6iNQ+c7Qh7rhYWRyTcUeW049O87dcWxOrNYRqiZ0cVGztboTdP1iEMJDFKByAapCVdcZcxFjX
                PGObtxJl+zILIGOL5iHUFdVpXKwRkYiXjXaYkVRcN1wEAMHYyaheDEMAGKIGABqKvlbwimmZW7Za59Lm
                q/UZpmZTblRZe0IyVbXRAsEBOBiMox91sZUyZQEeAeSC/fgA7dqup0P+Gj0q6Rc9Y61P3bnPUVqJzTi2
                YJclmSmRLwbsbehLgbgdFvIoRcIik5XKCZzkO3fPl0T9Q9SfHAVkF3KtpLSVukWXBQGoGCmYe87NB0Nh
                ZbsV03h8gWkR4IGdsmz10iug5ZqmKU6jN4gol1gU5SlOUpgwdRfhMoIXIW7c25Zq8lMUoqJptbLjH8bG
                vyMUxEpWi0g8UdMx+ARKHTHFKHyAKkt6VdH2JdJOlLHmjuxUZa58SY7tSbtBojfjpG4JWeirkmn0/PFu
                FY6ZElvaXEi6ESAkUhSGAhSFKUACPnmPwm2kS5sm3HkPT1qJ1GaWI67Hjl9JWDjW4Ixa1mKzlUXBm8Io
                +QB6g2AxjdDZR0ommHBUykKAAGRXa/2S9P8Atg3tfuV7Gyvm7NGWcmWS0sS6rzy7czGSIEEnMNbjcs4q
                HiWzZIgHetUlSKuRXXIXkgK8HP1feaSNoLA+jzWfqR1uWFkTK9yZD1MqSit2Wrdru0lbMt80tNe/HQW0
                jDxbR8AAr8Jfa3i3Bft719prE2s8C60NUGjPVpftyZAtXKWijIkDkCwzWa/hEoa8S25esffkXa97s5tk
                8MZiR+wEepgo2cdK6xfO7k6bm9W2kfBGtzCV06fdRVlNL3x3dSaSirVQ6jSUh5VoInjZ+35VsILNHrU/
                xpLomAQ7gPJREBjGuPCRWHa0u5jsLbhuq/GWMZBU53tkIuoty5Kkqc4qN2UpDmjm5Q+Lgp1mKhx7icxh
                71nI2wdqzCm1nYOR7NxLfmUslymWrhhLov68crzUbLzkpLQLFwyYC3JEtWiCKZSu1+eEzHNyHWcwhzWU
                Hjn9neo9G4/4dnTJrxzivqls7JuStLGoyRbIkuO+8RqRyUfeMk0bgyZ3BckQqQippAqBSIKu2btuosmU
                pVjH6SiFtFseE20aytiXvGahNQOpbPmVbwiGcVFZbuO7I1vKY6Fs/TeqvbFg3bd21BRcifs6gygPABMx
                ugCCPNZ39AmjG39AGmOydLFnZRyVlmycdOZotmzuVVrZc3RDwEvIGlUrVTc2rHxqB2TNZVcWnmNzKEIp
                5fWKZEyk72ztiOIz5hvJuFbgm7ituCylZc9Y0zOWm+JG3JHRVxMDx0gtDvVSKETWFJQ5OTJmKICIGKIC
                IVavtubcuD9sPTwTTpgySu244N1eVy33P3ffjmId3fc1w3GsQguZheCaMWog1ZoNWDcEmxP0KBBP1KCY
                5sgHAf2D9PsCsRulXZt03aP9c+ftd2KLxymhfGoRndbK5Mau5WAb4qgkruuJlc74YKEio9u6EUXLIBa+
                2PFvLBVUCh3AQ+93TdrzDG6tgWEwhly5LosdS1L2jb7tC+bNTiFbhgJRo3Vjn6KCU0iugoi7aLKt1inI
                PHUByiBgAa7r0KaFMBbeeAba096fbdNF25EB7bOXBI+Svc973IumBZC57pkEiE890vx6AUCEKAEIUpQA
                K6r3HNrLSluf43hrD1G21JkmLRcPHtgZLs96lC3/AGM7kEipvgh5VRNVNRsv0JmXZukVUDnImcyYmIUQ
                wKx3hL4JBwFtPdyzVypiVMSot7KYO4xjIJsCqAUWnvFVRVjx5fJOCxYF9BAvHas/+Gts3TRiDQI0231Y
                24cjadiWpelpS7a/5b3ncs81v26H95z719LsiIeW4CQkV3DU7dNMG4lS8oC+WWsDv/Yimm9q/kbdg9a2
                r2BwnKTKki7xGwuK2SxYslFBV91mdHY+WoUPhT85ZqdQSByYxj/HUkzR/o9wPoYwXamnnTrZ6NnY7tUH
                LhNAyyj2Wm5l+oC0tcVwyrjlV29dqAB1l1DcjwBQ4KUpQugrA3uTeH50h7h+SCZ+G4sgaddRyKKAL5aw
                89YR7q4nbFIqEa8uyJeIqEcLoEL0A7bHQcmL0lMsIAAVb9pD8Mhpcwjlm1M66ks1Zk1p5Ish8lJWqzzD
                JoGx/DyDRYFo1+W1yius4OkJUx8p2+VRE5QMCQcBxJhSSSRSTQRTIkikQiaSSZSppppplAqaZCE4AClA
                AAAAOOO1Ym8X7QOCMV7mOWd0SFyLld/mPL0dIx83YMm7tI2NIsslaUfZ7heJbtYtOUA4oR5FQBeSUAFD
                n7dIFKW+7Uxppw1q7wtemAM+WcxvrGV9x5WU3CvRUSWTVRN5zKUi3yAlWavGygAq3conKdMwcgPAiAxf
                V/CP4miJx5BY81+atrFwRJuFXEhitjKwh3IJOTCo5ZM5lFNFmCIiPSUXEWsoJf8ACHOYRMMgLb922NLO
                2rilfFumqzVYz30ui+vS+bgdBL31fcogQSJvrjmxKTqKQOfJbIETQS5Hy0y8jX2WujQlp23D8DTenvUl
                aI3FaL94jOQMxHLmjrtsa7WKCiEZdtnTSYCds8QKqoQwcGSWSMdBdNVFQ5Bjv4/8I/p1ibviGuWdYGpn
                MmBrXliSNt4Qm5WOh4k6KC3mJR83JxgdIp8AAHGPaMxH0KJQHipVmMcY2FhqwLTxbjC1oiy7AseEY27a
                1sQTRJlFxERHIgg1atkEgAOxSh1GHkTDyJhEREasN3KdqvS3uiY1iLF1ARMzFXHZ7h2+x3lSyXLWLv6x
                3r0pSuyxr52kui4arCQhl2TpFRE4lIcS9ZSmDD7p88KbpjsfJdsXxqZ1G521d2xj983c2JirIkihH2I1
                RaLFXaNbiZtzrLPEimImB2yKrdusUBIqicg9NSoo2Mj4aOj4iJZNo2LimbWPjI5kim2ZMGDJAGzNk0bI
                gBE0kkylImQgABSgAAHFc6scu4dtY6QdzWxYy0tStiqvJ+10pAth5NtV2EDkWx1ZEC+1BDTyRTea3Oci
                aqjF4RZsc5CmMiIgPOAhDwlEBDO1YG1NynVpA4sOQU0bPRcRpJFJMBEqKRX7FVuxAgE4KJSxhQ9ay5bY
                2xxpM2tr4vTK2Ibly3kfLl/2grYtx5ByrdTaTeuLZdTLO4pBghDQbZkwKZZ6waLGcGbGWDo6QUApjAPV
                +6FsBac9yPK8FqMRydkvTtqLgIWOgiZIxoswUQnWMQqZSIPcEQ8ICguGgKKkRcsnTZUSiBTnOUpQC0O0
                fCdaNJCwL9idQufdSeoDKl7QLWFict3Ldke2k8YnbTCEstKY7hHLd21Iu4KgVssMqD0PKOsRMCFUNzl3
                0/bYmOsBbfFw7cbXMWY8gYhl7cvuzoq7b3dWcpf1qWpfqh3j2Ag3UJFM2PktHK7py09pYqGKZcxDCZMp
                CE7I25dAuNNtTTBb+lbEl4X3fVmW5dF4XU1uDI61vr3Qu9vOXGXfoLqWyxj2nlJHESogVqBun9Yxh711
                tgbawwLp13BNS24pYNz5DHKOqSz3Fp37Y8o/hHWPI1SQm4S4Jeft5EjEskk6dO4NFRQi0goiXzVQIkTk
                nTXXZtY4F1+ZV0r5kyhc2QrSvXSXk2AyXYjuxX8G3bTrm37nZXW3t66G06xelOyUdsk/MFt5K3SYwFVL
                2EPqNybbV087omB2uCtQKdxxrWBuRC8bFvqzHrSPvGxrpRYrRaslDryCLhsoRdsuq3ctXTdRFQogIk60
                0zlwfYa8J9gC37jgTai9XupTUji+0XjZW3cMTM4na9iuo9kfqaRdxpMlHC6yJAAodDFRqUeBKIdA9NZN
                tsnZVwVtWZKzVe+n3Muc562M4R7NncOKL/kLIf2LEOoaZUk7al4T3NDM5ArmPRcPWKBl3qgHQcHBUqhy
                JnJbJry8NZo01mZumNSFm33lfS3mi53xpS8LhwtJRbGHumWc8g+m5GGkG6goPnACJlnDJdEVT/EqBxrV
                oS8ONp+0W6j8b6rZXUvqaz1l3FDq4HNknyPd0aW2YxW4rYe2c9MMdHtiuVuphIOkTJrPDJm6u5OA4qRh
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpWCTxAm6td21Lo9trKGKYm27gzJlDJ0djex4650zu4qNant+Qn565XjBusiqo
                RsRmkiTpHp8xYhTccgNeczu5b0uRN2+F0/hlDDth4/u/DsFJspi5LSVklD3JLSq/9NO2byB1BbNDEIic
                rcTnEFOoQMIccYSefu7fMA+yqU5/H31J18J/aeIHe6HbeRsr5Itew3OM7LnnmP4+47ljLdPd17XU1Nak
                bDxpJBRP2pQCujn8hMRMPbsPfj1a5K4YGGKzPLzUTFEkVRbsDSMgzZFerlQM5Mi0M4OUFDAmUxxKTkek
                oj6BzUBTdo8WpkGz8pZ300aH7OtxO3oBjP42b57l3J5CXLdjddWMlbntCMAns3kIh1Faiv18nL5gCIcB
                UDKTvW7Ju7nV+TNxzMleT+cG4310PJBy4nXM6d57eeXVklTCqZx536TzTGE3VwPNe0ls66xrZ1xbemnT
                NMHIGdzJLHirMvxsu5K5ex182c1JBXA3eqAUgiY6qXnFHp7gcO41GM8Rl4i7IGD7uzVt06XLaWta8m8S
                wtvJOdHL8BkI1nPsBcS9vWdF+UAouBQUTIZ+KwiUDm8sOe9eeE9fPJJ25fyDpd6+eLquXbt0qou5cuFz
                iossusqImMYxhETCYRERGu9ZnVFneewTZ+mqSyPcq2FLFuCaue3bDLIuEoRrMzwpmfOlGyZgKoPKfKYH
                AQIJjCXgRrr25so5FvOAtm1rsva5rjtyzG67S1ISZmX0hG282cqeauhFNHJzERKY3cQIAV8Hz8vlzzx9
                R+2t9B26bCoLZwu3FZIyCwoKqJCqicODoqeWIdRBD1KPb7K+jsy+ryx1PtrpsO55yz7kZoOmzWctyTdx
                Eogg+bGZvUUnrI5FClVSOdM4AbuURCshOkHeB3CNDUPeFv6edQt0W1B3uTmZi5gra6mqbzzBUGTiiXAV
                cWbkREepduJTG54MIhXVme9c+uPXbckHb2bM55UzLJTE23YW7ZzmbknUe7m5p75DRpG22xMVFRZVZUE0
                igkI8mAA7V6fnh29pO4tr3StIucpSsifO2fAgLvyZahnKZoWxzM2Rhh7ZSRbKrJKPGhF1CO3BD9zCJAA
                AL3kNh+75/tHuNKUpSlK6izxmqxdO2Hsi5tyZLN4Ox8a2rLXVcMi4MBCIsopoZwchBN+sY4gBCAHqIgF
                eLBuTa0bx3A9ZWYdR1wryLpC9LnXj7GinihnCkLZUcuLK1oVun3AvSiAHEhQ/WOIV6NHhcNrY+iDSErn
                7KdsNY/P+pxtH3A4O7bmLMWpjAqZXVs2woK3dIy5jC8ckKAdzEKbnoqUpSlKUpSlKUpx6/bWnpDkB79v
                lyPHrz6VqqnAfj+dV9aVQA4/H8acff8AP59u/r2qtKpxVaUpT+H3VQQ5qtU4qvAfj+VOA+lU4/q/Zx9K
                rSqcfPvzxx6iPp9g06QDv+OPXiq8f2fZ+6lU4Cq8B6/P6/OqcBzz3/f2+/gaqAAHYKUpSqcfaP8Ab+Ps
                oAAHp2/HHNOP7fxzTgPl2qtU4/hVeA/H8qpwADzVeKpx9/HHHAdv5U4D7/X1Ee/PrzTgPTv3AQHuPz9f
                SnAf1VWlKoJQH8fxCnH4+70pwH2/s7fyqv8AGqcB8g44Hnt9acB6/d/DuFVpx/D7qVTj155HkOOB7hxT
                jj8dg/ZVapwA/jt+6nAf1fOq0qnH2iH3VWqcfaNOA5Efr6/1VWqcfj+fFOA/H8qcB9Plx+z6VWnAUqnF
                OOO/1qtOPr39f41TgPx+7vVacB+P66px9o/wpwH4+zjjj91VqnADz9vr9vbinH2j++q0p9ftqggA04Dt
                9np8v5VWqAAB6fP7R+Q8gFV4D8fb60/H3fLtTj504+f9lUEOfx9fWnHbjv8A1/voAcen30EAH8d/r604
                9Q+vP8arSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKV+ZMyraCiJSae+Z7HEx7uSdeUmdVX2dk3M4W8tIgCJjdJR4KHcR4Co
                4WJfFS7WuQL5uuwL5u2+cHS9sXVL2uDrJdtHaxUmpEyZ4o79J7GGXKgmocgmKRx0nAP1ihUZrxdu4Jp4
                1bXPpDx1przTZ2Y7Us63ryva7HtjSwy0RFzs66SjYZs8XREE/aAaJqnEnT1FKbuIdXFQvef2d+f4celU
                pSuS1dKtHLd0iqqis2XTXRWQVOiukokcDlURVTEDFMAgAgYBAQEPWsqGvHdr1Ia4bP054wnbiuK1cZaa
                se2/aVnQDe6JJ/JStxRsYSOk75n50wkcrvXAEAiXmqHFFMAKU3zrFSdVRQxjqHMoc5jHOdQwnMc5x5Mc
                5jc8iI+oj3rRWeDZS3zMwbRV7XfHDbLrMWn3IiIubsxSvNmiVou5WrZUsbdlov1iKptnBjmTTepmJ0rp
                AHcpygI499xPWA717azM66sXVppWIXMFztZlnaCL73mEExjoJpAtGqkj5aXnKGI1BZU/QHxnMAduBqye
                lKUpSs3Hh6MoYOxTuq6YJrNWM57Jy0/fMPY2LWUMCCze2cp3tIJ2zat4zLJc5QWbR6joVxHg3lCALcfo
                wEPY+6Q7+vfj7+3b19a1elKUpSlU5H6fX5/urzxfFnbxbG9ZwNt3TpeariCtl6LnU7OQi5PYZKeQ4Ui8
                bEdoCIqlaiIrSJAHgFAKmPIlOAYy/DTbPj/XxqOZ5+zDaar3S9g6WbyD478hk2F7X0yUK6irbQKIfpUk
                DgVZ0ADxxwUQ4Ea9WGOYNIpizjY9skzYR7VFkxaIEKmi2aNUiot0EkiAAAUhSgUoVzqUpSlKUpSqc9/s
                +vf8fWqdXfjjt6CP0Hjnv/prry78v4nx8ZQl+ZPx5ZJ0fJ84l3XpbdtGR9p/3t5pZlyiJfM/yOf1uPh5
                r7GGm4e44pjOW/LRk7CSjcjyMmIZ+0lIuRZq/wCDdMJBidRJZM3+SdM4gPyGvwL6yNj/ABdAnurJt9Wb
                jq103sfGKXJfVzwlowJJKWdkYRTA8xcC7duCzldRNBuiKnWooYpCAJhAB+rVcFSbqOuDLJponcdLchl1
                FUyEFThAhOROIgHwgUPiHjj1rHRoq3WNHWvrI2YMRYAvC5lsm4N6Vb+se+LPlLKuFowCZUt11KMI+U5M
                ug2fJlauzfCZE6qAKEL5pOcj9KUrSI8cf2evy7V8Fe+V8XYyI0VyRkiwcfJSAnBgpe9429ahHwp9lAaH
                nnDcFOB9egR4+dfu2xdtrXtDNris25Lfu233oGFlO2xMx09DuwLx1ezScUqqgfjkOehQeP3V+u+fsoxo
                4kJF40j2DRMyzp6+cJNGjZEgcnVcOFxKQhQ+ZjGAA+dfC/nfxR88n4657f8Ahtbn39v6T9O/+avumL9l
                Js28hGPGkixdpFXaPWLhJ2zdIm/VVbuUBMQ5R+QlMIfbXLrTyPIfb8uO/b5BXx8jkSwIe6Ymx5e+bPir
                0uAiikBaElc0KxuicTRRO4XUh7fdLlduSkImc5hRRMAFKYw9gEa+x5HnsHb588h+3murZDOWFom6E7Hl
                cvYujb1VWBunZ7/IFps7oUXMXrKgSAcuyuxOIAIgQEeRDv6BXaIG57h3DgBAQ7gPP0EPWtVfMz152jap
                2yd0XVbVuHelWOyJPTsZEGdkQMBVjNgkFU+sCCYoHEoDx1AA+oc/nxmSsdTT1CMhr+sqWknRuhrHxl1Q
                T984PwJhIg0aLnUOIAAjwUo+g1ypu/LJtl2Rjcl42pb71RErlNpOXFERLpRuYRIVYjd+smcSCJRADgXj
                sP0r8Y2X8TgA8ZPx2Ih8vy1tvv8AP5Oa+wh5yGuJinKW/Lxc5GKnUTSkId+1kmSiiJxTWIR2zOdMRKYO
                kxQNyAhwIc1+pz34+v8AP14r8Qbmt0Jsba9/Qn5RA3K79we9WPvv2QxeoHXunr8/y+BAQP5fHHfn6/lz
                OQbCtx6MbcN7WjBSJU01jsJm5IaLekRWDqSVM0erEUApwARKbp4H5CNflfnfxN6fnQx38v8Aw1tr1H5f
                75r7OKmIqdYoSkJJx8xGOgOLaQi3raQYuATOKZxQdsznTPwYBKPSYeBDge9foCI/IPT5fOvgFMtYqRUU
                RWyZj5JVFQ6SqSl524RRNRMwkOmoQzkBKYogIGAQ5Ae1fUQlxQNytDSFuTcPPsCLnbHfQkkzlWZHCRSn
                UbmcsDqEBQpTkMJBNyAGAeOBCvmL2yxi7GhWZ8kZJsDHxZAThHmve8LetQH3liJT+yDPOG/m8CAgPRzX
                1UJOwtyxLCftyYirggpZsm8ipmEkWkrEyTRUOUnTCSYHURWTPx8J0jmAfkI1+tSlKUpSvnZ677UtX2Yb
                nue3rcB6KoMxnZqNiPahRAoqg294Kp+Z09ReoCc8chzxzXzn538T/wD0oY79f/x1tr68cD/SvWvrYS4Y
                G5mRpG3JuHn48q52xn0JJspVmVwkUp1G4umB1CdZQMUTE55ABDkO4V+xSlKUpSuO5dtmbZd48cINGrZI
                6zly5VI3bt0UiiZVZdZYQKQhQARMYwgAAAiPaur7Yzzg69pwbZs3M2KLtuQBWAbftjIloT82AoCILAMV
                FPFVw6OBA36Ptx34rtUTd+AEPt+oCPoHH4/s/JnbigbXi3c5c03EW7CR6Zln8xOyTOIimSRfVV5IyB00
                Uih8zHOAfb9fwrLyVjvJLJzJY5v2y7/jma4Nnb+yrpg7qZNXIl6vZ3LqCXXIQ/HfoMYB478V9qA8/s9f
                vqtaRHt24+nf+f7PpXyLzINhx91R9iP72tBlfEsgd3F2a8uWFbXXJNUyCoo5YW6suDtZMpQExjppCAAA
                jz2r7APvAfurQc4EKJjCUpSgJjmMYClKUvcwiI+nz9ftr8SEum2blK6PblxQVwEYqgg9PCS8fKlZriAi
                CLoWKigJmHgeCm4Gv3q4rx60jmjp/IO2zFgxbrvHr14sm2aM2jVIVnLp05WECJppkKY5znEAKACI9gEa
                66tDNmHMgyzmBsLLWMr3nWaaizuFtC/LWuWVaoom6FlXMdDO1liEIb4TGMQAAew+ldnc/j5d6+IvzJuO
                MWRBbgydkCyMcwJ1jN05q+7rgbQiVFypCsKBJG4XDZET9JTG6QPzwAj6c8UsPJ2N8pxR57GOQLIyNBJq
                lQUmrEuyAu+JIsZMFSpHkbecOEQMYggYCifngQHjga+59K0iI9uOO/y78/XkOK6sjs64SmLpCx4jMWK5
                W9DLGbEtCOyFaT26DOSfrtwt9q7O76w5DkoI8/ZXagj2EfQA+tfjy9xW/b5Wh56ch4Qr9yVmxNLybKNK
                8dn4AjVoL05PMUNyHBCcmHkO1fsB6f5uP4UEeP3gH7xr5C8sg2HjqLLN5BvW0rEhTLlbFl7yuSGteMO5
                UHpTbkfziyCQnMP6pQPyPbgK12hftjZCixnLBvK1L4hQVMgMvZ9xRFzRnnlHgyPt8Ksul1h8y9fNfVdQ
                8enf94D27eg/Ovgr4yxi7GZWJ8j5JsDH5JLr93mvi8rdtMr/AMr/AAvsQzzlv5vT6m6OePnX0lu3Lb13
                Q7K4bUnoW54CSIZSPnLelWM1Dv0inFMVGUnHKKIqlAwCUTEOPAgIetftgPIc+v7OKrSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUqzfXjlm5cVaTtRdxYuu+xLezTb2FcgXJjhG9peLZsjXDEW+u7jnLpi9N1KoA
                on8X6Mxeexu3IV4k2cMvXhnnK98Zfv0sCS8b9nn1wXCFswkfb0IaTeqdbo7GIiykQRKY3JhBMvAiIiPc
                a6pEREeefsqlKUp9ft/HalKU5pz/AA/HypSlKUpWQbbG1qPdAWr3GWpGJxHZ2ZJy0pNFvDW/d6DtUY9z
                KqBGLyluqtDAZKSI3VWI0VEpgIcwH6REoce2JYFwyV22NZ10zEItbUtclrwU9I2+4VBZeEey0Yk+cRay
                pQADHQOoKZh+oV9dSlKUpWE3fY3RIfbG0W3ZekBJsRz1khu7svCcKqZNVwncD5AUnN0KNB55QjEhFxyY
                vSZQCEH9avJHxjjvMOtLUjb9kwCU1f2Ys85G6HLsxVX0tM3LdswLqVmHpwDkfjVUWXOIcF4MI9g7ez1t
                s6HrA289IOJ9NNitG4LWvCIP72mkkylXua/ZVErq55t0qHc3WvyRMRHsQpavvAOA4Cq0pSlKUpSlWW6+
                9NOWNWumm78H4W1KX7pLvu55S3HLXNeNXVwNLsgYyLlCu5iOZLWzKwzsSPkAMgqUkgmBiiIG5KPFQod4
                DYbuzRHoUyrqyvPcd1N6mb5suXsiNaw9+BLxsHJJXfcrO13yj9SUuSddCJUVTmDpX7gBSm+EORvC26/C
                +7eGqHRLpf1J5SyBq0cXznDCNi5DuqMg8qWFF2nHTtyRKci/Rt6PPaCzxFsU5hKkk5fODAXsY5h71L1w
                JhbGmkXT9jzB9jSEiwxdhSzG1tQknek01eSLS34kDrC9uCcOm2RMcvUcyq3lplD/AJoAHaJFuMONvrct
                1r29Gas96rDduaXcRXbCoY60pYiVTjGb6QSbJp3bK5Bys9khYp3A5deexSkE2LkrRpwi2I3VO5OvMYxc
                hYjPG9hxuL37CUxxEWjb0LYz+Lm1bkj17Vh4pKMghbz7hZwq8ArZJMvtKq6iiggJlDmOJhGGJs7t27Dx
                Sm76yYoJM2g421OOTNWpCt2xlzapsdnMsZuiAFE4mUUN1CHPJjD6mGpvNKpz9A5/HcKc/Z254+fP09Kx
                o7u+t93t6aA866mIJs1e3tbsQwtnHTV6mm4Zjf8AesinbdruXrVQQ81Bs5cEcLEADfCQeSiACFRgttvw
                98LuaYKitfO5/qH1H5EyxqRKre9sxVrXxFw7iItZw8UJGu52VuSNlzGMuUvLSPZotW7NECpkKYvAFtsz
                ZhDKPhkN0LS5c2nvMmS700Q6q5dvD3NYV8TCTxSTi4abYW9flo3i3iUmsY9kY1KWZykBOpxzdVIVjJeW
                JU1/PlReINuZC3tnTW27JIHZOJbG8DERTpqY5jLOpG/YgwJJKpc8FUQIryb04+feoz22B4X7TLrU0Kaf
                tUOWM+ah7PvjMNqu7qkretFxZaFvMWS846bwgxpJmNcuBKozIgqY51hAxjCIdICABNq0faZLQ0Z6acRa
                YLBnbkua0MPW2rbUJPXgqxXuSUbrS7mZWcyqsYg3bifzXSgFBNEoAQCgPIgJhuUqKLvlbumpGzs6WFtZ
                7ZqLmU1jZcJGt74veBbJSE1i6KuVITRMPbqq/U3Zyy7fl85kFimFi16FSgRRVJQv0G3R4aOwtO2TcVax
                NV2pHOOcdaFpXZHZPkJOLvQjWwWV3manF7FTD2dav5u4CgdZVNy9VkGoOCh0+SBOoTyHNUmEnepLTrmf
                AbG/JvFzvLePrisRHIdtEdKz1nqT7MWQT0UkweRyxlkAHqTKR6iI+nWFRmZHwfm32li6UavtQOqg+VUr
                ekl1MrSd5WIjbadyg0UWJPyNlKwJzhHJq8KrtBmPOFMDl9sAw9YfheEM1IZ2ylp91a4HynfNx5GsDTLk
                3HkLhq4LmkHUy5iYa842cTnrKh5R8c6wRbE0KyeMWQnEjYHqhEulIxUyzAagj+JHwy11cb1O1lpBm5yV
                gLUy1Y1jWzcsrbRwTuaKt/IGepiDuWUjhckWb+aixj1DtBWbiQFCm8wRJ2LlL0d+F10jaMtTOHdUNkag
                dRt13dhi607tgLfup7Yo27KP049ePK3mCR0UkuZHoXMIgkqQ3IB8Xbiu0NxXw5+mjch1O3DqgynnbO9j
                XNcNs2jbKltWE4tBOAZo2lEEhW7psabYOVupdJJMypOrsfqMA8GApYnm99s+aEdsiy8N4rwdkvVBmfWV
                nm7EG1lWpP3pYY2vFWck8TZOJOUtKCtlOQcLunShGLAqcuiBlDioJTESOUZtOyBoOufbx2/MV4Tv+dcT
                OR5tSQyXf7c5SkZ23cl7nLLObVYCPJzkYEMRBRVQQE6gGHpIHBQ+33VtA+VNxPB9kYQxrqtyDpOjmWS2
                ly5IubHa1wDIXzYqduSEQ9sWSjYKUiSvWyjl03eezvHQoeYgQ5iGMQtQ6dAGjOA2+PEz4/0uWZkS8sjw
                VpWFOSC12XkLZGZmX1wY4Wkn53LRgIpETFQf0aYnOYA9TmHvUiLcD8Nvpk3EdVeQdWGUc955sq68gRlj
                xbm17CVs5tbsYhY9mMbMaHbmmWDtc510mRFlRMYAA5jAAccDUTLeq2idFu3xcOnvS/pYvnU3nHWrnm44
                8rKBui9bEdWpC2xJyQQsOivaVu222fe3SbtQpGxjy5SETIosYhy/qT5NpbRfM7fu3/p90tXNcp7ruyxo
                Sdm7vlRTFNund+Q7qfZAuaJj+r4ztWL2TXZtlFAA50kimMACIgF5WcpY8BhTME6m4BmpC4tyBLEdCUig
                NjxtpPHZHApqAYpugSAbgxRAeOBAa85zZF2J8KbtOItRGoTN+acz2E7tjUVcePrdZY5Vtpuyl2JICPux
                7MvRnmLrkxlpM6JSoiUpegeS81OL2yNsbEm1xg+7sHYiv/JF/wAHeF9SF+SM5kN5CnmWr95Dtob2OPNA
                NWiZEiEbAYBMUxuofUOArDY38J9pkypfGTcsaw9VuqTO2Sci3xct0pSlv3XEWkzgIuZllnsdCrO7wZ3P
                ISCrRE6bcjlR2iTpKBStigAVjG0c2lnDYt38rB267LzDeeTdJOq9rbUvb9pXXIEW67ZyM4koO0rll4lE
                SsW1wQUxEvGTiSj0EDPmqQmFJFNz7OlP3pSlKUpUQ7xi+M7TnNA+GcrOo5JO+8dagImHt24ESgSRb2/e
                tvPWtyQAueQEGrpVqycqpgPAqtkTf5NfF6TfCs7ZubdNeEsy3BkHWaE3lfEtjXnKtSZbxs1YxM3cFuoy
                EqMK3bWUIkRBwooKCblZcSk6AOY5gERkLbc23Np/2q8C3jgzA925PnrAuTKFw5mnZvNN02zcM+yuGZtC
                EtCSRRlrciINqlHpMrfZqETUamORQVzmWMUxSk+OybvRbW2Irjd2jfGtrBDC445ddrJxLC8mM25jXLY4
                pqtn4RArAkcBAQADD34EfSrwNPOqnTrqxs9a/dN+ZcfZmtNo6Bg/l7CuOPnkY1+ZIqxWUkm0OJ26vSYP
                gVKA+vzAQD5Kxdc+j3J2abh05Y/1I4hu7PFpupllcmJIS84p3fsM7t5Typts/t0pwXIdqb/DF6eShwPo
                IDXeeSsm49w3YtzZOytedt49x7ZsW5mrqvK7ZZpCW9AxTQvWu9kpN6ciaRCh8xHuPAByI8V8fgXUbgnV
                FYpsm6d8r2RmXHpZl/bv5Y4/nGtwW+M7FoouJGKLIsxFMVkSOEDKEAR6esvPca7p5Hn0+fb8DTmq1Bc1
                wXRqE33N5q/NrSwMy3dhvRHpHazK2c0bPdqMXF3y1gyTGEyPcM8zRMVOSehPvm1uQLR+KrRoCQvgRBRV
                wA9oa3vCe6X8Vaa8jZd0WZg1I2tqAw/bMnki1DX1ftu3BEXENlsDzz6NTPbUJDPGMiqk3Odk9aOfgXKU
                PKEDAJMlHhutwvI+tTbslX2fbkfXZl/TFfE9iS9brnHZXNyXXb8LbrS6LVuS4Vj/AKRV0LJ0Me4driKj
                hdoqqoYTmMI4L9LuCsveKD1Z6iM8ams7ZSsDQPgm+D2rifC+OZ1KHByg+OuS2UoxnKJO2DZ6uwb+3zMu
                uwdLiqr7KmJEQS6OPuq7SE7sSQmN9yza+zzmu0WePMg2xbOU7Gve6ULjb+wT7sSxDh2rFtY5GVt1+5TJ
                FzELLILAJ3CZ01R6uEJtujfUdB6vNK+AdTVvMyxkdmrFtp32rDEcC6LAzEtGkG4rd9qEC+aMdIldMRVA
                odYpCbjvVyw/j5/dUSjex3Z9TEzqTtraI2uVHqmq3IKkPHZeyzbyyIyOKmNwsySSdp27InIonGyARyqc
                hLzJ+DR7VQgNxK6U81t3Ntq+G1xZpCy5ijWRn3UPmrO2s2ypmRvSTnU7napYzPctw288gJhq+aT7F7Nz
                HSk/X5fOJRAyigFP5JOkQNJvDkAAfs9AD9vAVGX8RJuD39jPH1jbc+kxd5L6wNbLpCwmza3HRizVmY1u
                Bz7omXqp2/xNzyhTqNPNMYAI29oUMAk5MXG14NO35i0ZLcys+fcC4l7UvTANvyQgudwkSQihvdi9BJQ4
                /EHmJm4Nx34AanH1hh3Y9osd1aa09QV2amMoYWwxjB5eT7J+P8frKqGygaZGOG3Qbt3a5Yxq7Zg3egEi
                +YPhTKoQqTceTmCORuw+HNwft5aUbm1waDs56j7GyxpydxN7vvyuyBDyKzuFayCaLyWt24LSi4R5GyLH
                qBwmcp1iKgApCQnV1hJm2bNad76xtsPCOpbKoOZrILe07hhb8fsW/wDTbrnccrLRUjMt2vBQFw+K3Kfp
                AR61REeoeoRqJltW6RLV8RzqK1lasNxjOOUbjc44u+Cg8eYEsO9xt2Msy1LuWk3sVGxCcgk7NHW/EpM0
                2jVrHIpncujLO3rgzgygufzdd+i5PYE3HNCF/bd+astKR+fb5gbcuXBlz3YM9MXBEr3iyt6atqTTh27J
                KUhpVJ15LVN+1UUbuilUKc50yGD0QmK6zlkzcLpC3XcNG66zc3qiqqiVRRE3/wCQYeKxybpWgm5txnTe
                z07W7qAvHTwzfZAtmeu+6LOGRcOZ2zI0VQmrUdxTB6xK7K6AxATTdL+QBg6jkPwBRjzarvCTaP7A0v5M
                vnTnm/UhDahMbWFOXzatxX5eNpTVp3LcFoQi00ETKRMLCxblgR+qiCSb1s/E7QxgUEjjo6DdybBOqDUt
                udbSeofT5eOc74tjOmLVXuHLN1JpTk6vkKNhLthjStmSr240l05Bd/Fii5ai9K884yBkidQCmBjRyN7b
                aHV2v32im+J7VRlbU5lfULkq+WuQrsv1JVi1bq2AtazxmeLB7ISkgqdZWZciss7fnE5Spj0Jjzz6ifHH
                1/aIj/OrXNbGpqB0baTc/aoLjbJP4/DGNZ+8GsUusZsjO3CkiDC0bdUdEAwpFkZVdkxFUCiJAV6gAeOK
                hd7ZO0HdW+7Zl4bmG6RqFzvcDbLd63fC4XsTH1zMLZZsLZtabVg5R7EnnmEq0i4BrJIu4yLholmiUDtF
                l1lTGN+l6b3GtC19+Gvz7pv1taCs45bk8I3heZbRyPjjIE4xlV5BGP8ALkJez7pVhm0dHysZLMRVBoZz
                HkVauC+YQxjkKpUsXdR3K2ujHa7u7WjjdaHk7uvazrHj8GJSRFTsH96ZZSQTt2TM0P0mWSjmqziYVbmE
                oqJNDk6iiPIR9Nuzw5dm7hWn22dc25tqG1M5HzpqXajkZowt2+4uFWhLYlVz+5FLglLoiZVdwu6RAq7d
                szK3atWwopIpiXgCWzXTi/KHhmN2zS9C4lzbkK9tBurmVh4i8rTv54SSSVth7dCFoXs2uCOjiNmK9w2s
                LthNxU0waNVDpqEaqB5Dh43V9CoPT15+2lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK
                UpSlKUpSlKUpSlKUpSlKVQeeQ/H7Kp1enPbn057faNfnnl4tMTlUko8hkwMZQDvW5RTKQPjMcBN2APnz
                6fsrdaSLB+HLF8zdh09XLVyg5Dp9OrlEwhxyIBzXL5H5B8hHjj1+nHP9dOfpxx9o/wAA/rGtVKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlfi3FcUJaUFL3PcsoyhLfgY91LTUvIrkbMY2MZIiu8eu3Cgg
                UiaZAExzCPAAFY47X3k9sS9Lia2rbOtHBspMvHTlkgileDBNAXTN0DNZE7tYxUij5g9Jeo4AbvwPAc1C
                p8YxjmeQz5p51a42zGrdeJsxY2dYrkoa2L0K9hbfuezlDSBAbtohcUjNZeOd+YcB5HzEFev4VCAMJQew
                iHYPu/z1SlKUpSlKUpSlKUpUgDw2NhaRcnbnOF7L1QWPe9+zcjLEeYUiYZoxkrATyBDNlZVo9yZHnILk
                WbcEQXbKpH8oixC+eUSCFevuBQKAAAAABxwAAAAAAHAfw7VWlKUpX48/PRVsQkvcU48bxsNBRr2Wk37t
                UiDZowj24uXLhZVQQApSkKIiIiAB868eDfr3Mrg3JdbV43GxeKpYcxI9lMfYkh01wWaniouQOg/uEfL+
                Eyr5UhlPMAP1AKXkQAKkm+Dx2wCox12blOV4NUq7hxKY408spFqYqZmySXkXtfaKLkncOsSx7JcgiHJV
                xAeQCp9XH+mlKUpSlKUpSnHzqPf4oj/E16iu/H+unDv2c/7Jcf2Aava2YP8AFQbfP/qr4m/6tJVgq8WZ
                rQvfHOL9OuiGwL5HGxNUVzKv8s3eZy4jmrTGkfLIW+2ZyEgyHzSx5naq7iUSKA+YigUo8l6ijYTfM94T
                vEOlM+nkHieYsiIWKpDPs6WBZl+SeT3N/Kx3Svdqc9NjGNSHK8+JNJFIUCJACZAMAAYb3PB+aj75vzAe
                pnTvMz87duOcH5Ejn+JZeaBUDxVt3UmqLiETIqocUQVUSI8BsBulITHAvqIj1jtA/wDKnN3z/wBGGpv+
                GqTHHNTc6VGj339d265pAyfpbtzb6xA2v2z8rHmoi7pcuKZDKKv5ZllmbeDt+SOzAxYhBVsouoDo/BR4
                OYxg6A5kW2C7ueQsWyn17M0I683lp266u6PbdItmN0OIdBefZoAmIl6UnYrJl4Eewdh4qMF4vo74u1/b
                pW3tINTahsfg/BEVPIMgDJ6ZAHnR26AW8sS9fbq6ePi4Cs5e2keMPt/aPDRAtTRw6fca+SLPy/ZuQt1E
                FwJ5Xw8+Z19XHz5qMR4xUUTwm2wgHlGeq53v4UEg6TO1EQaQBFgSS/XEvWZIDdIcdQkAe/TWd3dS0d5q
                1zbYtx6XsHPbYhsi3xbmL0imvl45h4YGEILZ/Ks3jtFBdVFX9GXp/QiIGAQ7DUZUMneIr2JMI2A4yPY2
                GtQGi7CcLA27JR1oA1uhlZlkRHlxEc1l5xg3jpePTOUQFR6RsuQhuTrqFKImqYdt864MZbiGlbHOqPFi
                DmLiLybuo+4LYkFknEnZl5QqhW9xWtILogBDnQOYqiapex0VEj8AJhKF57pYEGzhf18hBZXgPn5aYnEB
                4+6vK60JX7uOa190vV9knQalbUVn3Mt5ZFuCazvfbVN5+YrFMjeSjdoWIkn6a5GSgMisIduZNFRUySYI
                kKUphEM0Wp68PEdbN8BHasMt6nba1taeoSbhmWUIOVj0XrK3WcvIIs0iyjJNm2dMWrhcybJGUbrnFNZU
                gCQBOAjMB0X6q7K1xaUMK6qsYoOIu2s02MncbKLkTIuXduT7V44t+6rberI8EWUi5hm+YqKF6QUFETdJ
                QHgIj+5fb3inLxx9ni2m5bCl8B+2X82Khp0b21E5NuHE/nORQQcNw8p64MpFAQq7doYXBzCYiZTHMADf
                34UnMukq7dBtx4cwNZkzYGaMQ3k1e6oI263RJC5bxvm8GiqEVkYkiUiYmj3aUYuwasgLyx9kFE4cnBRW
                UfUT3eh2o9yjVTuMYB106Fbkwvak1p5wjaFmWbJX5druHnEb1hcgXTdLuRLHDGvkDJpIzxPIOc3BjF4E
                pRL1Db9po3zNxnRzrKx1oq3l8NW9BN8sy8Vb9jZptWKbQ7Ui0zJFhYmbSdRBlI+WjzvFEkHRiCm4QMch
                lCEAe8z0qqQpgqU5BSFPzCKlMBkzJ9PWBwOXsJeO/Yagq6J4Qm7l4kLUtqivAqV04H0Nv5S3sZM3Chnk
                Co4x5LKWFY6kcVQpk1CO5csjcQFOAdRFBAexChU64BAefsEfQf281Xj8fKoPTkOfGGMP/Rwbn6/9ypbv
                yP8AKpvL541jGbyTeqkQYx7Vw9drm7EQatETLrrG4+RSlMYfs+VQZ9oa11t0vfV1k7jF+JDPY001XFLW
                rhkrjzX8MlJpOl7PshSMWV5KQEY1u4lE0+PV0IgAcANTpA/b930+yuqc7WhOZBwjmOwbXUZo3NfGK8hW
                fbq0kcyUelO3NaTyFiTv1iFOJUSuFkxVECjwUBHge1QTcG6G/Ej7MOI7rd6am2D8t4nSuKUyPeGL7KXZ
                ZCnZN6owSLPSiFvTTOOdKqezNyEIRk5VXMCZfJROcClNJb2Tt3+192PBd0z0laTbGud8PykbA5asNq8U
                dRKgyyCh4e67XO6AF/YnJkV0VUFQE6CqfSY3CpADMTeF4Wtj+1bjvm9p+Ltaz7QhZK5LnuSadpMYiDgo
                dqd9Jyki7WECppIpEMc5h+QfMe1QiNuNhce83v1Zg3P04iXZ6TdJzhrZOFZGVRcIpTby1oxaGxvGsRU7
                EXXXcvrxfNyib2YXRUT8CsmY05ylKxtbm25bjnbFxHYmVsh40yXlUuRcjtsZ27bWMoskhJjMuLefXILh
                8ooBgTTBBgoVMoJmE5x4DjgRrGzo/wDEMSusDUbiTBNubauryybcyhPJRD3Ml0RMl+Q9jMFWyzgtxXGu
                nBkRIz5SKmKpniZeo4B1c+skv8fd99KVFP8AF/cBtg2t9P7oywOfu90yXIf6KtF0s63vEbPNLOAbY08b
                aWNWOMYPFNjwdg5CuK7oJy4uu22Uck2jLpXjJOdKol7QgUFDpmQJwA8gTv3lRYAh87Zw0YWtbWtm1YSy
                s35JxrN25my2LKdpqREO/nfaolwjDukhUIBvYzIqD0GMUFBMACIAA1hNuPay8Ojts4+a27qhhMGt5V1G
                JrOZvPt8SVw5Mmm5kQRcSUfbEI49vBuqcDGKLWPMQpvhKftxWEjYdvzBWKfEKahcP6E7+d3bovzBjTKq
                FpJlUm0YN7GW43jr9t9y3ZzqTdyorEOkHkaycukCq+zrrdv0g85B/EM7eGSMD5Ss3eh0LNnVtZmwtMw0
                3nqGtsh0guODilSIIX0uwbByv+hAGEymAD5rYxTmATJ81ZTB5m1deKmz1YmImDOc047eWBm1lXDqOCNk
                TqHva9wTTdScUg7bAQjyQemKsWHaGAyMeh/S1gMt5QHnR4JwRifTRiizMJYSsuHsHGthRDeGty3IZuRB
                BFBEgFVdu1QDqcOlzAKrlyqIqKHETGHvWnUDP5ItXA2brpw1Ao3Vl+2sRZJn8V2w4ICre48kw1mvJGxo
                FdMxiAYjyTTatzlE5QEDiAmD1rBn4f7Wxuda17X1GXZuC4xb2Hb1n3LaduYokXOLX2I5iTmgRfrXxGpw
                L8pFXjZoX3f1PTkAoKHBNMTm80CSK6g8eHUOb+/bbzhZYxhuA8/lIywSImGYEC6llSyhlPaf0w/pjI+0
                dX+X0Af4umppWUjNiYyyKd4ZAjMti3cZ2Z0JCtitgt9wK5nBlfgBMC8icT9uORHtUMvwidsp3XiDc9gX
                SChoG6MwQNuFXKCqTFYH9tTbZ4g3cpcB1kScomOBB6ilMmPYDFqzzab12NPD0ahNUOgXcLsW+rQsG6L9
                Ruewcrw1uOJVk9JFitFRVytEAMmV7ESzBRFczhmdQ7dUgpKEE5TkCviGd/3Tprg0wL6QdG7G7b3taau6
                1Lty9lebtx1BQTCIteR9vg7eg2jgTLGFzIi1VVeOCpAApAiQpusTVK12Dbam7T2fdCURcLQ7KRUxE9nS
                Iq+YBxirrvyYuqBc/pAAeldg8bLFEA4Epg6REvAjlulJNjCxsjMSjgjOMiWLuTkXahTmI2YMGxnTtwoV
                MDGECJkMYQKAjwHYPr5WW1pce51rR15auMgaE3Fs2fqAz5P3hfuW9SV2NUFk8OWVd96ubhlo6Ak3qLhN
                mvJvFGzRsm3RMsdFv5CYEbisJc2mpHKXiHtlhK1dTmf9R1ua4dMiNzQcJkuOfNmx1IhOVWEoMV25Gbd1
                HlWApk28kkqoQqvSVQhQMHVKOkNzbTtF7cLHcslJoIrDEphyPyiyZPFiFl1ZmVag3ZY8TIHAHlTSw+5/
                KL29oAQ6gKAmrBnsIaW8oavc9Zb3vtYkUdbIOb5SZitMFrywGcoWHjZJ0pHllodJwAgmmmgX3cwOUAEQ
                Kut2FQeejfCgyUdFZf3hJCUfM4xg2zdigHD5+5RZs0AUuK/UUxWdOTFTIBjGAhREwciIAHcQAZrHPp+4
                fv8AspwH9X4ComHih9bXlYesbbAwWgpfGprV9cNsR8laUGUX0pAY/NNlSaA9QQ6jEVmXZPZkCGLz5JHC
                w8AmHOdnbO0lNNCOhfT9pucrNxmMe2GzVveQIZNNu5vOWIMxdbsygm6AArlVRMTdXSPR1eghXn6xWOc9
                3lu7apci+HQb5I/IjGryauC8pokhGReKn0ovKulrjtaBGS6Gju3Zh8ioW245+IrqlKool5SCYGS7+26t
                YDDLu9bCXlvdx2QILVRAyETYmnqCu2329tYnxfkBdf3fAxruz1CGFuLlwp/qS9QOo3M4UIqJjCJVC+kC
                BgMACHAgPcBD0MHHICUfQQ9O4DWrisF/iBNxi0NBGgrI0UzkkXWfdSNvXHhnBtotleuXUf3PGGiLovw7
                Ug9ZWcEyciuCnAgd4o0Q4EFTCX5rw42gO6dB+3barLJ8M4gMxZ5m1MxX3BP0DtpW2o6VYptbJteWQU4M
                m5bMSi4XTOUDpqOTpHKB0zViB8ZP2Da6+3LOd/Xn/wCoCpudYI/Ere/f7zHq+GFMBWxWeKxuLkxQMaBH
                MMCUxS9fzF2LPsHce/y5r7fw7xog+zFoRNCEEjIMeXsRYDBwIyxMx3ISfOHceep+Dkwd/QasC8XyrBE2
                roMj3yPfqmpbGAwXWRQVvIJDTXvfyTkDpKHSKPWBhDntxzxWPDfxSn2nhxdrJrIlclXRuvSGjdpFVCqL
                ginpWuoVirn6h6ze1ghz0ibvwPpUwvQ2ePPoq0gHiQAsYbS/gIWBQ47NfzVxXklN0iIdQF/W78gPPNRL
                vGVplcE2vWjEOq5HGU8+EhCpG8t0JBLYCboEVhECk5XM0AREwd+nv68Td6UpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKVQR/n3rorUTqGsHTNi+cynkJ0BYiGIn5ccjIw
                jCRk3C6xUEWzEZ101RMbqMHVwoI8c9JTDwUY/eRN5nUFkZ6vFYQsGLsONcvnUcwlpNkeZnXRE0/MAY5t
                IpGUWXEoGEE2sUsYAHr4IUPNL08NlboGolX24ZbNjtoqqoJl1DS1rQnkmOBUlFCPncWByB5Yh8Ldbj5l
                71y3m1puBXkQXj+7rgYrg1douk5LIDZqqsDtMCGBDoM46u5SgIcgPT1AHAjzXGPtgblMM1bKW9ku4COI
                ZNVMhEL+CJaeUB/6K2iG7U4nUKVMhQOK5g5MHIetfBSrzeP0yC4QYXBfkpDh1tpV3LpXPOIxRkSiDVaP
                ctGco2WBXgC9RwKUvqbivqcZ76usLGnCGf8AAZLjg2SUUV9LM4CWeSrVFIy7eRXevbLWdCiu5OKKiRXc
                WQhSlOUR6/1srunne80e5saswuCQuLGbxyZugL6UhZS4rTI6XD4UnVyW0g4IyER5ApZFNAR4Ef1Q5rLR
                aN7Whf0K2uKyblhLrgnhCKNpWBkmsmyUKcvUXlZqYwFHj1KbgQ+YV9Pz9f5D/Gq0pSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSuusu2JD5PxZkTHU+09vhL3su5LXk2fmKIi4aTUSqxWTBVLkxRED+oBzXhfa
                lsWvMIag8z4jeEUSVx5ku8bVTTOK5jg1iptZsxETuCJnMYUQT6jCmHI8/fXWched3S0GxtmUueekrei3
                BnUbCP5V87i49ydErc6zJkucyaRhIUpBEhQ7AAfKvmaUpSlKUpSlKUpSlVD1ABDnkQ+v9VTKvCO6ldMV
                h6s4fBD3S7cl1amMqtbpRitRjJ0Sdj7GtmMhXEs5auYMyIjFtFCIA1WfpqAJ1FyEMPSYAr0zAHkOeOPs
                Gq0pSlKi5+Ki3F0dH+hN7g2y5VNDMGqNR1ZMYm3dFSfwlkJpApdc+KaYgoUopCDdJTjgVD8DXmU6Q9N9
                6awdTOF9N1jpLuLiy3fsFaqbgiai/u+Ofvi++Ztx08iCTRqCzhQw9gKQf2+3lpuwVZemXAuI8AY9ZJx9
                nYjsG2rFhEU0U0TrIwEYmxVfuCogBRXcqlO4cH4+JQ5zDzzzXeFKUpSlKUpSlKj3+KG77NmosB9Pyow7
                x69/9kuO+lXtbMH+Kg2+v/VXxN6/9GkuR5qMn4siyiWDq5209XOQ8ffnF0/2LORdq5Mtx7Gs5u37ljLY
                yg3v65bLmoyTQWaGLLRCjhqUjopk1QExegQKPEnDTZj/AGoL1xdauXNOGNNF6eOrqgk5KGnLHs3E8UyB
                i5MV47ZOCtGyJkFEFygVygsQh01SCChSnKIBeDhLK2njKbC5FdPd84qviOtCbG1bsUxZM21MMoC4GSHP
                uOZPbZjkRcpp8foVODAX5cVD82gh48U7u+gPIj+bDU0IdvkOqTHAfX61JMv7d22+cY6uYjQze+oGNhdS
                83KwkE0sQ1pXy7j285cTQr6Gh5a9mMapCMnS6R0zkQdSCZ/jTAQATlAckwj68/Ie/Ye4D9OPsrHZrZ3U
                tBu3vcePLU1dZraYzuPJSL6QsyLLZd8Xq6cMotykzdyr4tlRkiEe3IqsQntLwUiD34NwA8X+W9PRN0wM
                Jc0C9SkYK44iNnoSQREwJPoiYZkkI56mBwA3SqkoQ5eQ57+lYi9+rSXcusva+1H4ssaKJMX/AAUPFZRs
                yNTb+fIyUvjWWSuo8TEmKUTEXeIN1WwGAQAQOJTD0iNWT+Gs3GcRZ22+Md4CvC/LYtbOWluPeY7u+zrl
                mWkLPOLUinii1vXaRtKqJnWROioZFdRIoFSUTFM3AgNYstfd7xG+Nvs6R9Jen6SJkPTLoi8+6Mz5It8U
                5C0DSq1xM7oy67jJ5oVRBVAjeJgbbjlVR6FJMHJEuUzlUUnI3DdFt2k0bvrpuCEttg7fIRrZ5OSbOKaL
                SDkDHbMkXD46ZBVOBD9BAHk3A8APpWDjfM3LNHem/QdqXxjeOTbDvjLmaMO3pinHuEreuCLuG7Lkmsj2
                44txlKSUPGKqKtIhkDkXj+QX6CFTJ5aQndKoJKfJeGG075L067UGNo3KMI9tuZylkW/szwkHJtlGUqzt
                C8E4+Ot5SRZLj5iR3Kccd0kChSiZFVM/HScBGQY6R9obuG/IB56CqPVwPYViCTqHj+NQK/D431jrbW3T
                dwTQZqTlYnGl/XleTyFxVc94OEYKPvBva90upO2mDCQkugpff0K8bS0eVRUBV4KmACqPAZsPEg639OmH
                9snPuHJnINqTuWdRVtReP8XY6h5djMT8y4cXYwfS1wKsmBljoMo5q3XXM5VKBBWKigU3WqXi4TYUwxP6
                TNnrSbbWYyrWTPKWVdeWLsb3U7RjkrWjMn35KX/b6MgDzoKxAkM/j1HSC4gZJc6wKAQ3UQt92pbXXpS0
                mYeuTN+a81WHb1k29Fun6ZW1xwsnNXM7RbGXaW/acM2XFV/IOxKCbZsiAiYw9xKQDGLFQ8JxjW/MlZu3
                G9wF1Z6thYhznfJ7VxzFA1OjFy0vK3vIZGudpAKmKn5ja30F45mdQE+gTuxTIPUiqUs2qvgJbKeM4GQm
                IicyDZUNLW82bvJ2Nlrnho5/EtHjUXrVzINXaxFEiKIlFQhzlABIHUA1Bg31dQOJd1TcY0B6KtFkpGZq
                vfGWTEn+SMn4/WRmIS127yfaLTMQwuhl5jZUsa0auHj5QpxTRcETSEfMEQLM71RZDdabNF+ofKzByC77
                AmmLLGQGTx2ik4853i/Fb+4mrlygr8BxOdiUxiH7G54471Gw8HRidGB0I58zi7MK9wZj1FPYN+8cmOq+
                dssbWu0Xau111AETAovOuh56xETAbq9AEZeVKg9OeP8AswthyI98bqcAHHH/AHKlgHq+ypTW5xl95gXb
                41kZdjZA0bLWPp4yjMwjpM4JLFm07UcoxKCBxMXhVVc6ZEw5DkwgHPcKwpeEcw5H2DthyWSAaijPZmzb
                ectKLdJwF1GWqihCQJwMpwIiBTrgPHIB8hH5SmK/LlpeKgY55MzcixiIiObqOX8nJOkWUeybJh8a7p05
                MUiZA+ZjmAofWrRdTu4Do70iYsmcsZ1z5ja1bXjol+/YtSXRFStw3Su1a+enC2jbkWqq8k3q/JSItWaR
                zmEQHgC8mCML4UXF153tkjcO1+ubFVxdh7UPlGca4vtgSPG8QCExfj/IUuwgBUN5KjSBRcM43zuDfr9J
                D8FU5tu3mN1BLcy1XW3tK6a9QePMA6ZC3oEVqb1K37d7C0LUu19bjjzZq22j+SUbe2x0WokZNrGt1eJW
                RBLqMVBAqyUuDRHjPRRop0t4swZpuvnGzLEtpQzNvH3KF82vIyV+3BJqAWYve5ZxssQj6UmHvWu4UTIR
                MphBBuki3SRRTv5pSuE9jY6TImnIsGUgmiqCyKb1qg6IksBRICqZVymApuBEOoO/AiHzrU3j2LMABoza
                tAAvSHszdFDgvr0h5ZQ7fPiuXSlRT/F/d9sC1/TkNRmP/X/zVJAPpWdfbeD/AGguj3gPTT3i/wCY89rX
                b/Ovid1zU/fmjfb31R6jsYMkHmQsc41kXlnKO0Su2cXcEq4ShIyeetDFMVZFgo5B2qkcSgcExKJigPUE
                XrZc21dvDVjppNuT7i+WoLVXnDI0/dly34hmnJx29j4qUipVQXEdcttLPGxHbsyZAcL+8TKtCIHTTQQT
                KUatn2u7u0t3L4pzIL7SAxx/C6efyIzPbOMWmM4aGtywniNtYkRjZVazY2FKm1O0WcM3jlFVuQCrJ8rA
                HAiNZH/EPa4co5+zFibZL0YyYvMtah5i322oKciXKpxtmz5dyDiOsyQWaCAJEVQIeUlynMJitUkyCmBl
                0zDjQm8X5u8KVr2xPky35y7sz7fOpiJgLSy0KqaZ3Rn8eRMt2I+zoEQbEuG311VZe31BTTB8wUUaHUSM
                o4Mh6AOM8mWLmTH1nZUxhc8TeePr/t6Mum0LohHBXcZNwUu1K8YP2qpe/BiGADEOAHIbkhylMUQDmX5f
                Nq4xse9MlX3NNbcsjHlp3FfF5XC+E4MYG1LSiFp+4pl4KZTG8pozbrLKCUoj0lHgOasw0N7m2iPcUbZA
                V0eZgb5KNjB1Eo3swXsu9rEkoobhBc0Y9JFX1HRjhy3XM2WL7U2TOl1kEpjgYQCr/qgaO7/Z7MXiesuX
                7mNf8ltM24FE3DKnyNKogzgY9jm2bZ3lIy675zwgkSFv2LUZSKoKdSTExlzAALAQZAm9fuf4H0faB8tS
                ENkmzbny1nHHs3j7CNoW5Pxc5LXG8v2LPBL3K3axyx1AYsmjlVwLspTFBTyi/wCX2618M/oqu/RxtoWo
                6yVGvIXJ2pG9JrUHdsHJtQbSUCzuaNZwNmxLwDj5pVBho1i8XQVKQyK7hZMScgJzZXtVVqaKbls1481n
                W5p1uGxraaLTDo+f4uwpSFh2SZBSWfmJehFCJpgAmKKgBx3EPnUF/UetjXe71l4y22NqbAlhYO0G4nyC
                xvvUPm/GGM4CwLeu0sQc0TJ5BcM4do1TFtHsFXzC0GK4ec+dOzrK+Wicvs3oSWBYtrYwsWy8a2PEowNl
                Y9tO3rHtCEbGOZvD2xacSjBQEWgZQRMJUGqCSRTGEREC8iIjX70vFsZuLk4aTbldxkvHvIyRamMcgOWM
                g3M0eNzGSEpgA6ZzF5KYBD5CA1A48MflrHe3zrR3Cdu3U3LQmMM2XBke3oyzJW6F28Exu6Tw9MXDByFv
                MZSQEpFDSDaVby0Nwp0LtwUOmY4nTAcvHiY9c+nrF+23mHTureloXjmnUi1tmyrCx5Dy8bNz6TVC7mVw
                SV4uolkKpytWxWHs5FBEgmXVJ5YmEpi1ag52LtRGsLYz229Gw5ubYAvDGckOZMoQV4xE7JRLtnkY05eD
                e3ZeBhVUTqy0AvOIIoJuDlTAQcAJynBMR40D4W3UhJ23b9s5U3qNTM/AQUM0go60LYsO5Y2BgohiwLHN
                YODVnb/fJlaoIpkSTKDBIoJlAgJlAArB1sT7KuAtxfJWuq3c4Zr1HWc20z5Dsa2Lec4Xuqy7RdXipOzF
                yt3cpeR7sgbhKsYvuVIyJECpCUyqgiobsAelnY1pR9g2VZ9ixTmQexdlWvb9pxjyVXTcyjqPtyJRh2Ti
                ScokSIo4OmiUyyhUyAY4mEClAekMXm8LuuYv2ptM8hkycQjrvzZfSUtb2AcUuHZkxuy8EWgCacuFNsom
                4Tt+IMqi4ll0TlUOBk2qJyLOCKFwS+He0/YZytkO890/WVqlw9nnXdnB1IT9tWetkeyJmVwjbkkUyakl
                LwzN2YrCYcNhTas4tJFFOHYEK3KmCygkaymdTZ3ObdJmrGxsF3NEXJkKewLmywLVPa8wwk1o/ItxYyko
                y1WKizJYSpOAeOGxilOcohyAiIB3qJd4QLU/gLHmHtS+kPIE1bmOdSyedZHI6kfdz9rb07e1oGtKNtU0
                GxRkypeYtbshGSCjlv5plChIdQJlADmHrbxT6+CtS+pbQngjTEe37510SF/KwMq/x06Zy85BWxPv2Tez
                GN0uYk5iEUQf+0P0/aDkOiiUyxjAkACWdTbDV1H21bzB+Ii+YwcS0eiJimH2tswTRciYQHgR6yj3Aatc
                1062sLbfmm6+9Suc5b2W2LRZeTEQLRdBOcva6nhTEgrQt1Jcf0jp4qAF5ABBMgHUMAlIIDDY2m2+Pt4f
                cEntz7cez/hVV7YNyKRek/RjIZFtT2iAWhZQ6ttSsxZL98d01hoI3UswZuGwKy0mb3i4VMil0v53UJfl
                j3JKu4S3LwtiemI9klIvYuGnYuTfNGDhTyW71w1YqnMRI5vhKoYAAR7ANQuvGTjyG119fzs534+7iwB/
                bU3SrItyXTO41iaENU+myOATT2UcQXNGWkmBkiEXvmGTJdViNV1F/gIktMsWKSxx/VIYwh3AKjoeFM19
                WA30u3RtyZnuZhjvPWmLI2RFrTs283ycA9mce3Pci9zz7KMRljJmM9hriczISLQAAxE125wKPKolt138
                s0RW6/ro0d7S2liZb5BC1ckqXPqAvC0nZZKGtL27yWs+1dSbUVGhhhodJy7UETclcqEbjyc5QrNrv3aH
                32pHaEyzh3F8IrIXdguAsrKOM4KKQDzHimHBIpKw8fHIkMZRZ1A+9GrRBLgwrKJ/rcdI9UeHR3I8Makd
                vHFeKrkyDbduZu0yW2XGuRbSuWfZRkweBgllC2rd7NvJmSEzFViKbUTEOfylEDAoJOohQxD6nb0g987x
                BWlvDuClU790o6BgZ3XlvIccos9suZNZ92kvK/l2MiiQUzITUk3hrPZHRE3nnIZ2mp7N1KJTsKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK0nMBCmMYQKUoCYxjCBSlK
                HcRMYewffWIzUxuXKxVzO8LaRLZYZeyyo8koJa6FmcxcNkwVwRaRHUnBW7A2t/TbpmmyHnKKx7Jy2atQ
                IZaSftG6Zz10xjXbFytnm6WGY9bmV7xlbgBcz+LtZKYjpK5YlNUwnGORliN/ddut+kxi+RbbBF6QhhSN
                JmADifLPiXTPgrBzEzPGOM7XtlRYAB3JoR6TqafGKIiB30y9BRyqPcR4MpwHI8AHI13mUhCABSFKUoeh
                SgAB68+gfb3rVwH0qnAcAHyD+r0rSdMihRIoUpym7GKcoGKYPoJTdhCuhMlaW9PGXC85Cw5YFyuw6xRl
                nttRhZlmZRQFVFGkwimVwkJjAHX0KB1ccG5DtWHrUv4fvTbld47uvFc49x1epiHBupIwltu0iD5YFTIx
                u632UfcbYS8clA8ouiJh5VRUKUC1hdvjRnusbZ826vzDkveN52dFrlUUkLVfTjB3LRyBRMojIzVmTjmF
                kTgVLzfKu2xE/M9DSSQCcS3w6WfEaOI6Ua471hY3FhOInbtFpuMMpY+R01igCDlZ9jG6WjKKlUAOU4+2
                23cLgx+BEGBCmKNSRsD6ocE6l7VQu7DGSLavOOUIUXTRhItwmIlcSdR2cxEKGBdsqTuBiqEDuA8Dx3rv
                wDAYAMUwGAQ56gHkohx6gIVqpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpX4VzLzbW3ZxxbTBvKXC3
                iZFaDjnjsGDR/LptDnjmjl6JFPKIot0FOp5ZukBEeB44rxC9ye3tQ1v64NR/91Lay1n5pmcoXXPXTDn6
                VGSXvWVVdR4w7siaRHDMG5kiN3BEygoQoG6QERLVjFKUpSlKUpSlKUpSlXp7fuiDJG4dqjx9pZxXNW9b
                l034o+ULP3Sq5ThYiNi24u5F85BmQ6hxImAiRMhREw9vtr1bdnbZD087S2PXSlvOEso6h7wYlbZEzdKR
                YMHrpqYxFTW1aUcoosMfFpqEA3SU/mLCAHWER4AM3FKUpSqCPHIjwAB68jXj/eJM1fzWrPdNzm1M+RdW
                TgORHCtioNHSTlmVtbQFPPviKpCYonWfqKlU4/8AvYF55AazTeDK0Sr3Tl7Nut+64NqvAY9hk8W46fPG
                wGOF1zYFfXFIR4nD4TINCJo+aXv+kOX68+i3wHrx3+vz9earSlKUpSlKUpSrVdaOjjDWvTT1eGmXPaNy
                rYzvd3bz6aLaE2W3bgK4tmbQnow7GWMi4BP9OgQFAFI3UQTF7c8h2Lp6wXYmmPB2KdPeMEpdLHmHLHt/
                H1mpz0h72miwFtMCR0cMrJgml564kIAqq+WXqNyIFAO1fmakdM2DtXOI7mwdqEx9B5KxrdaRAkYKaRMY
                zZ63ETsZiIfoiVdo9bH+NBygoU4dyiJiGOQ0byc8IVt0vLncP7dyXqMtazHpvMe2K2vGOfN3BhKIdITC
                rVM/QHbpKZEwgAAAiPzzl6AtuXTNtrYsncSaY4O5ou3LnnyXRcby7rlXuabmZtJoDFJ04eKERTIBUg6S
                lSSKH15r83Eu2fpYwhrgzXuB44gLmhNQGoCxpaxMjiNxmcWO/j564YS6ZyWY2uohyhIPH8AxcLufaTAY
                wrcEDzO3QmRNk/Rjk7cMtjchuWKutXM1urRUu5txOWS/IWeu+3mQRkBdknFrJmUFw2QKQgpkUAhxTSNw
                AlHnL7x9o+vP+asT+4zs5aSdzq7sJ3tqEb3c3nsJSDr3S5tOVSjC3Hbck9byMpatwEUSP5jZZVsiIKFE
                DkDqAo/ENZSLfgYu1oCEtmDalYwluxEbBRDIgiKbOLiGZI+PakE3fhNJMhA5+QV+qdMihTEUKU5DlEhy
                nKBinIYOkxDFN2EBDkBAQ4qOrq/8Mbtx6r8tTOaGjC/8F3jdkmeTvNriaZaxlrXC4dqdcu4C3HSJk2i7
                3qP7Qo3OBBERN5fcecnGgfbW0l7bWN5DHOmDH/5PBcLlu9vK9p5579v+9njQokZnuO5VSJnUSbgYwN2q
                JE0U+oxgJ1nOY35u5Lt04j3OdPyWnrMtzXpatstLvh71YylkvUGz0kxCpqotAdt3hDJrp9KynwDxwPcB
                rGzpE8MHtj6WLzg8jytoXdn69LdeISEQbL8w3k7PYyLMxFmciWy49FJsqsmqQTlB0oqkID0HSMAVIoSR
                RbopN0Ek0EEEyIoookKmkikmXoTSSTIAFKUoAAFKAcAAcB2rdrEduK7KOhncwkY6786WVMW/leHj0ouN
                y1jqULbl3qRzcxjs46cOKaiEggiYwmSKumChPQqgF5LVoeknwxe2/pfyTAZdnYu/dQl9WrItJW3jZkmm
                8xakfIx6hVo18taTdIEHSiBylMmV0ool2ADJGDtWbbU1p+sjVTgDLWnDIy8wzsLMtjzWP7qXt12lHzKU
                JOthaPPdjxQihUlAKPwiKYgH0qOhi7wi22pZN5NbjvW5M35Xgo12V1H2RP3Szh4ExCLlXBjKqw6AOHDc
                4AYipCHSEwD+sA96kyYqxPjbB2PrWxRiKyrex5jmyYpGGte0LXjUIuGiI9Hk3loNkADqOoYxlV1lBMqs
                oY6qpzqHMYewqjz6+/DiaP8AcN1WXJqxy7kfMUFdt5RtoxdzW3bEnFJwLptZlqtLQigjDvETqNOpqySO
                sBQOBlDHP26uAv00F7Tmh/bgYPi6Z8TIxV2TDX2KbybdjwbqyNLMv1jMVrjdpkFugPbqRaJIlPwHmAfg
                Bq8PUHg6yNTGDss6e8lGmy4+zPYNzY2vT8m5U0JOmtm7YtSHmUouVIRTyFToKnKBxTMHfgxTFEQHpjQp
                oUwNt2YGa6c9ObW6muO2t1T95f687gC5p9xO3IVBOSXcypUGwGL0NkSJlBIOkC+o1eRSsbam1XpUPr9T
                3KTNchDqURg/cJVgvAgWKLL3INv9Y2t7Jz5nsxhDq9q46vi4+VXPaqtMmNdYuAckabcvnuYmN8qQoQF1
                haM2NvT6kZ7Um7OiwlvKXBITimBTiKRgMURAQ718xou0a4Z0F4BtjTZgRG50cbWk+l5GKLeE6Fxzwupt
                17Y+O7lSotwOHX+oAJBwHarra6K1M4BtHVLgPKuni/H07GWfly0X9nXDIW08LHzrSOkDEOqrGvTFMBFA
                EhQ5MUQEOQH1qPDhPwkm2VjK6mFz369y/mtGMkUZBrbF13Q3hLXeERWBUGM4xgUSLukTAAlUKVykYQ9D
                AIVJCgMN42s3EyODrBtSLx9jJlZzyx4a2bJat7eZQMA9jTxaiMMRoTpRWBNQxwXEDHFURVOJjiYw4KJX
                wtu0bMwCkO9xbkwZNwu8dO7zDKksN4PXT5UF13TqQOgZAynWAiAg1D9Y3PPIcW0Wl4RLQLZuTbcv2Jy3
                n48RbN3wl2x1oupaEVROrb8gSRYsnUwCBVDh5iYAKvkgYSiYAAOealf0pSlKUqyDXxt96fNyLC7PAupJ
                G817DY3bE3q3CxrlJa0ySbhklUWRxkTNnQCl0rKAdPy+/Pr2q5nEWL7Wwpi+wsQ2Sm/Ts/G1qwlmW0SU
                d+3yRYW32BI6PB896Sear5ZA8xToL1DyPAelcvJ2NLHzHj288V5Ltxhd1gZBtyVtO77ZlE/Oj5qAm2h2
                Eiwck5Aek6RzByUQEB7gICFRlFvCLbayl/Obgb3dqBZ2A5kAkVsXNr2aBGGOVXzCNgmzNhXFEvchCmSE
                wE7dXPer77D8P/t4Yc1N4r1aYKtbJOFcrYaQthKzmeO7/cRFkOfyYgQtoydzW+4arqviSrHrazhTOyi8
                TVV6xKdQxq+H299klppK1q56185rzk51F5/zQ5udZjISVtljGNjflTNi9eKwiy6yq3JGBUYtumPwpNyA
                QggBQ4yj6ytG2B9eeA7s03ajbYcXLji7V4t+oMY8CKuKAnIRz7XE3Ja0z5aosnyAiomRcpDcpKKpGAya
                hyj8zoV0MYd29MIo6ecET2T5TGbC4JS4oSLyfehr2d22vMgQ8jG2+9M2ai2YqKkFx7KUokBZRVQODKH5
                uYyTj21ct45v7FV9R3vaycm2XdWPrxifOUQ952recGvblwx3npCBiee0crJ9ZRAS9XIdwrHhtlbSumDa
                rtfKFv6ewuqXk8uXKzm7tuu95BCTnlYqCM6JadrtFUEkykax6bxcBEodS6hxVU79BSZRasa137dWlPce
                xc0xXqhx8W6I+EeLSdn3XEOvcl92NJukypPHdqXIkQ50CuCFKm6bqEURVApBOmJ00jExU6S/C/bcGl3K
                kLl6TaZBzrcdpSRZKy4jK8y0kbPgF26vnRyy9utUSpvVGxg6khcG8vq7ikI8VI2STTQTTRRTKkiimRNJ
                NMhSJpppl6SJpkLwAAAcAAAHAB2DisMW4tsa6SdzjNuN806hZzJbJ5j2117QPb9kTjaDZXFFnkQkm4SL
                xdFc6Zkj9ZQMkTuU4hyHYav80maK9Muh7G6OKtMWKLcxhagmScSpopv5s3csgkkCXvW555z1OnrgQ54M
                qoJSgIgQpC9gumAOKoPIB24/b91YcdxXY00KbldytMlZltKfs3M7SPZxQ5axnKJ29c8xHRiPs8S0utI6
                aiEiVomAJt1FSFWIQCp+aKZEyFt50b+Gj249JGRYLMD+EvfP+SrXeoSduy+Y5pCagIiUanBVlKtrUQTK
                3UcIGADImcnVIUeDFIBilMEhFMhSFKUhSkKUAKUhCgQhSgHAFKUADgA+lblY7dDG2Dpe277iz7dGnZtf
                6EpqSuaGuvJI3ndpbnbmlIBzJu44IJEGrf2RIDy7zqIInEQEnf4e+RL0rF/rf2gtFe4hlOxMs6qLTvC+
                pjHFlr2NbFvs7zfQdoIxbmcXn3D11DsEyqKPTrLmIZcHBQFMqZRL8ADWKLKvhGNsW9HBHtgTGc8SuinK
                ZZOJvRpcUacqZgEAQYy7YhkzD3ETCsPqHABxWXjbI2yML7W2F7owzhe5b1u2NvO9l79uObvd20XfuZpW
                NRiSg1RZkKRJIqKCYCXkwmNyfnkeKs114+HP299d2UZvOk1C3hhbMlzOAf3ReGIJZvBMbomxERWuSetp
                VIzdSSVHoM4eImSMsYvmqgdY6ih+4dvLYx0Hbb9zKZIxDZ87euZF2SrE2V8oSqdy3JGEdJ+XIfkwh5Sa
                Ed7QHIKnSKZXpExfN6TCA5jR9BEPX+z7KsR127cmmfcbtbHdj6n4m7bhs/Gt3Or0iLdty6XFtR0tLuo7
                3YYlyFapHUcoETETJplOmIGER6h9Kw95d8JrtVZCbLnsuIy/iKWOZXyHNrX6aTiUCqiJjAeFnG6gn6TC
                US/0kOADjvzV6u1psk6ctqW6MoXrh2/Mk31cuU7firVmXl8Oo/2RlCRD8kk3QZMY8gfpPOTJyoY/YgdI
                AAenf+4JtY6V9zAcJjqabZBcBgK4LluWwQsS7yWoASN1jF+9gmupo69pSN7oadBA6On4+49XbI+AcfMR
                ++qcfP8Af6d6wL6+PDsbfevbKUvnW4oa8MOZnuV0R/d164llW8K3u6V/+EXBcdurpGbqySwAQF3qJkjq
                GAVFQOqY6hrqduzaH0YbZUPMF09WQ9d35c7YrO68r3u8JcF+zLMFAWNGIyQpkK0ZicAOLdsQvUIAKhj8
                Bxk7URTVSOksQqqSqZklEzFKcihFA6TpnIYOBKIdhAfUOw1HD1WeF423dTOVJrL0M0yLgi47rlXEtd8V
                iqdbsLRmHUgsZxKqtLeepGKyUdGOJlfZ1PL5/VSKHasrehPbp0pbceMHGLtL2PEbVZTDpCQvC7JVwEzf
                d7yDVMybR3dNyLEIouCAHMVs3IUiKQGMJEwOdQx75qUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlU5+fPAfaHoHr3qPtri1WZm1RajFNvzR+/kWDWJdNWOesnW3JKMHbJR
                ZsWSkLOiptuA+zJtWZ01ZVwkYFA8wjcggobtk/0j6LMU6TrZI2taKaSF6P2KTaeu9y1SB6cg8LLx0QHH
                9EaGV+NQiXBljgCiwnOACF5XAfQPl/D0qtKUpSqcB+PsraWbouUlEHCSayKpBTVSWIVVJQhg4MRRNQBK
                YBDsICHpWNTVztQ6QdXkLJo3VjuKtO6noHVTuq0kPdavtolOKTp5FNTFaKHA5zGFYEiqiI/4Sot2pzZ3
                3A9BrySyJpVvWZyfYyJVElvybfuI6/o2NXL7O4SJPxhEZUEiEVHhF2Z03KAfABe411DpO36tY+l6fa2F
                lSfeZktuOWIxdY3zHGBbuSoorYet2S2r4QKDSXACm7FA4qF4Apg6hqW9or3c9Hetdi0jLOv9rZOUAAiM
                ri2/um3bjayAFDzm0co8MCD0oGHgooqiYfmQKygFMBg5AQEB9BAeQH6cVqpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlY0tyPdW0v7W9kWZe+pJ3dHs1/S7uItmLtGEVmpN8rHpkWfreWAlIQqRVCiPUcBHngOaso
                wt4m7aHzIZogOoRzjR07UTSKjk62JO3ComUUKmAruUgXIUOTdx57AAj8quwypvYbYOIsZLZYntXmK5y1
                0lEkkUbNmiXNPPlVQSMVFlBM/wCkGN0rEMIGIHADyIhwI1Bc3tttrImsd/nXeO046jMX6hNNd1JMrvdx
                zSWCMvHHNtIsW7BrbbuDN1mFdsoIlOkYCGARHkOKh/m9fQA+70qlKUpSlKUpSlKUpWoAAeeRAPv+/wCV
                SgvDA6r9v7STq1lbz1Yvp+08pTzFO1sS5BfezHx3bHvUQbyATJi/pUF1xEpAcn/RkKI88eteqpa10W5e
                tvQ92WjNxdy21PsW8nCz0I9byUVKR7ogKN3bF62MYiiZy8CUxTDz99fQDSlKUqwfc81YxeiXQnqR1GP3
                qLOSsfG86S0SKgkcz695lsaItSPRSVEAOZR6skHHfsAjx27+JhLSNy5FvV9KSS7mcu297jdSD1yoIqPZ
                W4LkkjOnKipzcCZRZdYTDyPqPFezfsraPS6I9uPTlh1+yZNLvdWaxve+1GjUjY7i6LxRCadFdmIIiooi
                mqmkJjG9S8BwFZWKUpSlKUpSlKUpSlKpx/Dn7PX7AqtOPx/npVOP2fKq0pxz/On4+77qU4/h6UpTj+XH
                ypVOA/H0+lOPx+3mq0pSlKUpSlKcffSlKfj8DSlKUpSlKUpxSnH9tKUpSlKU4ClKU4pSlKUpSlU4/jVa
                U4++qcd+arSlU4D8ffzVaUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpVo2urUB/cwaTs2Zmapg5nrYtB01s1gAkBWTvi4Vk7es2PQIcQE5lZF02KJS8j09QhzxxVne0
                BpUZ4YwKnma5EXb7KefFX173DNSwCpJKMZyWVk0VzKHMYwe3dSbo4DwPT5YD8JQ4y+8B+P50pSlKUpSn
                H4/h3rSYhDlMQ5CnIYBKYhygYpiiHSJRKbtwIdhCsTuvDZv0b67oCS/K6woqxMiOCqrsskWXFNYyaLIC
                BPIdSpGgJe1CQSABRMYDFDkSmAeBCEjr32f9fG3FIEveNZSeoTC8O6K4gcs47WW/OVZDVqcy7VR45QKz
                fgoiBOoG7szgnp5bsvrV3e3h4lHN2B0IuxtRT1XU7hOI9ki158rb3RnzGRQUK2cx1zRLtBm+fC14Ob+k
                NXhFOelKUV47Tb9KmtXTNrVx+yyNpwy1amRIhZFEZWLjnwIXTaz46YHWiLrtd8CT+PdJCPSZNy3JyICJ
                BMXg1XT9+fSq0pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUqw7cT2/sJbkGmq89PGZ4dsqSXYrubNu8jfrnL
                Fu1FPririh10zpqAZNUCeaj5gEVJyQ/JRrxyde2hnNO3tqPvrTnmuGWZzFsyLg1vzxUwLF3ja6i5hh7l
                ilCiYopuEQKYxAMIkNyUfSrMhWVEgJGVUMmUeoEzHMJANwAdQEHtz2AOeK7Pt7N2YLTsi5caW1ku9YPH
                14ppN7qsyMuOUaW1PpIreemSUh0VQQWADh1fGQe9dXCAcAIfPn6fIe3pWmlKUpSlKUpSlKUpWooiA9QD
                wIDyA8jzzzyHFZuNpvcW3Y8R5fx7p80NZDyFfjq87jYMIjCckLu8LOdFBYi79Q8PJHFJk2SbpHO4cEUS
                KmkBzCIdhr2HLSC4y2xboXgMaN1hCxhblGHFUYoZ0GRAlfd3n/H5Pn9fldffp45r6KlKUqC140LWIrbu
                KsBaL7blgTc37NO8qZCYtnBgVGEtz+hWy0fJEHgU1XR1FilOH6yQG+VRPthzR461q7mmnXHDhk2fWnat
                yo5Nvwr1IFmhrXsQwTbtFVIeAN5pkyJlKPqIhXswIN0WyCDZumRBu2RTQQRSKBE0kUSAmkkmUvHBSlAA
                AA7BxW9SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUrCZv
                mXO+j8AadLKYOWyRsnaw8TW3JJq8qL+4IiGm7wkHrZuPZQUDxyBxAfTkogAm6QrMhaFvtrTtS2bXZEBN
                nbdvw0C1IHHBW0RHJx6Be3/kph/b3r6OlU578dvu+f0571WlKUpSlKVwZKMjphi7i5Zi0k41+3VaPo+Q
                bIvGLxquQU12zpo4KZNQhyiJTFOUQEBEKjR7m3hvNO+qtSUy5pbKx036gESOXqalvJmQsu6nygLrqISU
                SYTJIe0KqEBUiZQb8F7pfEI1DKvqxtfO0rqDjXd6Mbm0y5Og3XRbeXLXNIjiLIbJBU4NkZ5sB1mhU3PH
                UcgHBDk3IJJ1Kz24PE8WJf1yWzp+3D7bjsB5Wlkmre2sxx6gBhvIXmJCZq894HOoViosUpRMbzTpdRwD
                qLzUtiHmom4YxjNwMpGzUNJNyO46VinjeQjn7VUvUm5ZvWhjpqJmDgQMQwhX6lKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlOPx+3n0rzkfGj5YuhxnrT9hiVxpZbe3I2zVb1tnKyUauW+5BR8uePlbYXlSnAh2CRyEU
                BIxBEqnIlEOR5g60pSlKUpSlKUpSlKUpX3ONLJc5JyBZmP2ktDwDm8rlhrcQm7gdlYwsUpKviMiv5N2I
                D5aKfX1HNwPYO3evYB2ZdmLTrtdYYiH1te7slZ5vqEi5O/8ANDxmiqu5VeMhX91WYKoCZlGJlWMmn5Ql
                OsX4lBHngM3gBxwHP3fL0+QBVe/+anP47/fxTkeeB4+z+sKrW2oqRIh1Dm6SJlMc5hAeAKQOTDz9gANe
                OV4hfVU+1X7pOoe4SvivbbxvOmxPaJUjmM2SirO5ZODogPyUcCqoIh2ERqT94LTR5Dx+O9Reti4IVQ1x
                zdxNMLY/lXbYSkbw8a1JOXopHHOUO6iqrFE5yCIcAYvPcQqd3SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpUf7xFLSUtzSRhTOcb7QdtgfVphq6rlTbpkWVLa9xP
                l7OcuPJUMACmk+eR4uTAAim2Fc/SIFMNZysa3UwvnHliXpGPCSEfdloW5cTN6TgAcoTMQjIEVEoAXpMY
                FOTFEoCUeQEoCAgH29KtEZ3PcMXrYnbKeSjxxbd14Hg7qh4hRVU7Ni8grqdQ8iu2QDkpDnFQBWOPTyHl
                AHI+l3dKUpSlKUpVOA/A/vGuhdQ+mLBeqvHc1i7PWOrfyHZ040cNHLCYZJHcNyrkEhl45+UPObqh2Eqi
                RwEKha66/Dw5A0nWlef9zDjJ5rW0XzEmtdNx6aph4CWorEr1VJFq6uDAl9pE9oWOmI+eZj0mFVJuCZyL
                CascmiDcT1c7ZQSF3aVsjX5rK0TWpKGRyzpoy5GP4LUhpzboLdMqyu2w1DuF4/2T9NxKMOtgIFAVwbGN
                5ZZz23Du7aMtzuyCT+n3ICTS+mDNJe7cPXgoxh8kWwt0F886sMVZQHbUpjAUrxmdRMeQAwlN8NZQefx6
                /fVaUpSlKUpSlKUpSlKUpSlKUpSlKUpSledL4qLao193Rlq49c8Xct16jNO8JFqedbkc18+U0+2yiYqj
                hEsCyDrUiAUMKir1JIfK5Ey4gAdVQYzc8iBgEDB249BLx68hWmlKUpSlKUpSlKUpSqhx9nr255/qrPz4
                f7QBpI3BtVkVjjUHm64ccXbakpF3pZ+P2bGNKwy2xhHBXjy3ms26N1t3RTplOomBDeYj1AQQMHNeuco4
                tTGNkgtIyDC3LNse3i+1Scq7Tax8PBQTACncvXi4gUhEkU+TnMIcAFQH9ynxeN8WPq1Y2XoMirSvTT5i
                udFld913GzVULml8zVMjKpW+4EhFmUUU5RI2ckETLAHml4IYoDbxos8W7qOuPW/F3ZrYuu3rE0gyDK5S
                yliY8sA8urALCyMa20mjht1yDg4KiBVFlDnER46gAO4Xn7l/jEbJYQrWydtG2ZC4ZiSayKc9lvLFqqwr
                WCUKqduxPadsndHO4OYA88FXqZOCiUDJAbqKXj+Fz1S7nmu7VzmzPWoPN+RMg4BtWz1YWaSulYfyRdXn
                cL72qLiLVZAUiKSjNNMTnBuXhMhilN+sAVPQq2bWPmWM096Ws9ZllZFGKb4/xhd08i8XNwRJ+2h1fd5R
                4H9YywkAoAPIiNeHBkW7pnJWRLxviYduJKbve65u4nrtdQyrh08m5NR71KCYRN1cqfaI8V7N2yzpj/uR
                9sTSFh50wTjriLimGvq80yAPmnu3JHN6yxXYnAB81EHqbQ3UHYEgKHYArKVSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpVs+sPThbernTHmjTldRgRiMq2PLW2V4
                ZMVvd0oomDqEkwTAxOv2Z4misJBN0mAolHkoiFYlNjPVJPFx7eO3/qEfpwepnSNcMnYjuBk1PZndz2gz
                dHUiJ6DBYqYOUDoiRcp0uvlNQpuQ4EAkBft+36/fTn19A+f7PqNWUWbIHyXrKv66IpsVxbGErEDFB5sD
                CdJ1d10uWV0XBGND9PH9ETQbpr8G/X7CHNXsUpSlKUpSlKVTj1H6/wAPl2rDZuDbNWE9ZNwlzpi+5ZXS
                9rAhETqW5qBxo2as3s2umkVNKHybDJFBKdjVgTTQcovAU6keSCUxREowf9YGhjURpI1GQ12XypFaEtZL
                OfSdYo1Z4QTcWNpJ1BTQPwSYqTysamkysqalHZ0vaUF0E4sxQEV0UgMPOdHbr8SpfmPr8htJe8DajPE+
                T0ztYi3tRLBkg1sK+S+b7vZzcutDgeMBJ0YhlSyccoDRQogYpSANTH7Uu61r6gIy67LuCHuq2ptqi+iZ
                2BkWsrFSDRcnmIrtHrIx0zlMUeQEDffxX0lKUpSlKUpSlKUpSlKUpSlKUpSlKUpUP/xRu7Lqt0K2bC6d
                cL4vtpOxNSuMrutu6MyXXFqXE2axs80Wtu4rZg4nkrZN8LVZQSLO+sCgbrKkYQAQ8wo5jHMY5h5Mcxjm
                N9RMPJh4+0e9aKUpSlKUpSlKUpSlKup0dYrwBl/NDG1NTeclNPWIErduibuDIja3VrqkUXULCLP4iDio
                NJRIFnL90RNskB1SByb154Ab58c6x9HmgLLKuUtCNgZLy9l60vaWOPc16kwgoiAgnS6CjZzd1u4ntQyp
                iOQAxPY/eEocSdImOmAm6Q+Q1S73+57rGty8LHzdqnvOSx7fSZW1xY8tpCLtCzHccQxzFihiLfQR6m/x
                8GKqc5jgUvWYwlAaxP8APft9wc+v7eKpz+P667u04YJvTU1nXFeAsesTyF35XvWAsyFSKURBJxMvitTu
                lTehSIkEyhzD2AC969qnbv0Q44299KOMNNOOWiIN7Rh0lrmmSpEK7ua73xCuLgm3qxAATmVX6+gTehAA
                A7VfDUb7xTWoEuEtqbKUC3EpZLMczBY4aCPHV5ci6By6MQAHkeCJ9+1eYJoNwMpqd1n6YtP4+0eRljNe
                O7Nk1WX++G0LK3I3JOOyCYBADJtPOU5N/wA3uHFe5ZExjSFi42HYJFQYRMezjWSBOxEWjFuVq3SKUOA4
                KQpQCv0KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKpx
                +376w7bgO2IjnfJdnavtOdxOsTavcXpcRs/EOzxkRkiEb8qhbV4ptunzT9gK2XMPw8iQ/KYiFdaWfum5
                mwkxSsnWdpaytAXfEsX4Hvu17fl3tnzx4VND2pU8miwMwKc4KGVKZu+U6ikUHyyAQRHt/GusDPGueUuK
                xsFY7nsB2NFtihc2Zb9iJF8+VRcLexOIexEfISjzyBDAfzD+0rHRAOTppGAANkiw7iS18K2PHWPa4OV0
                Gyrh/KS8isd1L3BOyCouJWdl3inJ1nDhUROcxh7dgDgAAK7UpSlKUpSlKUpVOA7/AG/MPX047DXVeZcI
                Yl1C4+nsV5rx/a+S8f3MzVYzVr3bFNpSMdIKk6BMVNYBFJQvqRVISnKPcBAahtbjfh+LxxTac64092BJ
                atNJqISEkvpskp0GebMJM1BMss/053i/A5jlapB0oQzgwpmLyUpDGNWFDRfuG609nt/JXngydurVLoWg
                Jwsfk/C+Q28hB5Dwq7WXM1UhLygVwVdW68SXOKST4iXsTk5ADgvPTU+bba3c9IW59YKFx4HvJJhfjFim
                4vHD9yuG7S+7UXMJyn62XIA7bfozGK6b8l6ekTgQR4rKFyHb7fT6fvqtKUpSlKUpSlKUpSlKUpSlKUpS
                lKVb1qU0p6e9X2N5DE2o7Fdp5WsZ+JlQiLpjUngx73yjJJSEU8DhZsuTqESKJHAefXmvKA8QHtxxWhjW
                nfULgXTvlbHGl9lHW0lb97T0dNS9iTNwSqKzh8EHdZ0RbpJdYCgi0WXFUBTEe4GLWAwQEB79v41SlKUp
                SlKUpSlKUpVQEQ5+0OB7fKqUpSsy+wjh3ULlfc/0vOdPMU8VmLDyFD3feNxlZg5ibTsiOW5n5aaUOAlT
                SFATJE79RjmACgJhCvZeTAwEJ1iBj9JesxQ4AT8cmEOflz6BWuoG3jWs8C0sjSlp2ZuEuqZn7iyLMtwU
                HzTN4lqEYwKcnIBwKqvIch6h2rCB4TXCSOVt2+xbqfRgPovCeNcgZHMZZqDhBnKHYktWGXFQQ4TUIvI+
                Ykce4GJ2r1iKUpSlK+B/OrjT84AYo/L20fzmDDjcAWD+UEZ+VwwhTgmaU9wAr7T5ACIB5nl8VQuVcany
                Crigt+2ibJqMOncCtghcEYN3JwapxTJKngAU9pBARAeFPL4/Z3qiGV8ZOchOsSt7/s9fJ7GISn3uPkrh
                i1LwawrjkUJRxb5VfaiImABMBzJccd/TgaozyvjOQv8AksVMb/s93kuHi0ZuVsJtcMWtdsfEOD+WhIu4
                FNUXKaJjdgUMmAfvCtbHKmNJO/pfFcbftov8lW/EtZ2csNpcEY4uyJhnqgotJOQgUlBcpIqGASlOdMAE
                fvDlG5UxrMXzOYxir9tGRyLbLJtJXDY7K4IxxdUNHvP96vJKDSUFyimpyHSY6YAPIfUK0Q2WMZXDfNy4
                xgr/ALQmMiWa0Zv7sseMuCMe3TbrGQABZOpiDbqGcN01OovSZRMA5EAH1DmsLlfGVx3pcWOIC/7Qmr/t
                Fu1dXRZkZcEY9uW32z0OWi8xDN1DLtyqf5IqECqwWVMa3ReF04+tu/bRnr5scrM942jET8ZIXFbJZAOW
                RpuIaqmXbApx8IqkL34D17VW3sqY2u267qsW178tG4LzsZRqleVqw9wRshP2uo9ICjUk7EtVDLthOUeQ
                BUhf31otjLGMr1uW67NtG/7Pua7bFcos7ztuDuGLk5u13S5etFvOxrNU6rY5g7gVUpaWtlfGd8XHd9oW
                bf1oXRdOP3qUbfFuwNwRcpNWk/WEwJM7gjmap1WqgiUwdCxCiAgIDwIcVqtTKuNb7m7qtqy7+s+67hsZ
                +SLvGEt64IyWk7YkVC9ZGU6zZKnUbKCHoVUoD2/ZWm0MsYyyBL3hAWPf9oXbOY/lhgr4ibduCMl5C05k
                E/N923A0YqnO1W479CoAPYfmFUsvLWMMjyV1Q9g5Bs+8pax5QYS8I22bhi5l9bMuAdQxs22YKHO2W4/y
                FQAflxzVbJyxjLJS9ztsfX/Z97L2VLngLvRte4YubUtqbTTFU0XNkj1Ti2XAoCPlq8D2H6DxrsrKmNcj
                qXIlYF+2jeatnzDi37pTtmfjJo9uzbUOXMXMlYKnFuuT/KTU4EP2DWmxsrYzyaW4D46v+0L4Jaky6t25
                TWrcEZOBAzjLs7iZYY9VTyF0+/UmpwId/oNbdh5dxblFrcD7HGQ7Nvllaky8t65ndq3FFzjeBnI8RB7F
                Sy0eqoVBZLpHrIoICHA/Qa37FynjbJzKWksdX5aV8x8DLPYGae2rPxk41ipmOMJX8XILxyqhUl0RDhRM
                4gIfOtuxcr4yydEy07jvIFnXxCwMrJQc1K2rcMXOMImXh1TISsdIuo9VQiKqByHBUiggJeB57BzVbGyv
                jLJsLIXJju/7Pve34h8+jJWate4Yybi41/GCISDR+9YKHTSUR4EVCnMHAByPatuwsu4tylbDq9cb5Ds2
                +bQYPZOOfXNa1xRc3Bsn8McU5Zm6kmCh0k1G4gPnEOYBL6j2rdsvKuNMjW08vKwr9tG8bTj3Em1f3Hbd
                wRkvCsnEMcxJVJ1JMlTpJi3EhvO6jB08CI9g5rTZmWMZZFtJW/bDv+z7vslueSTc3ZbtwxctbzZSHMYs
                qRxLM1Dopi36Ded1nDoAOR4CtNoZbxhkCzFMi2PkGzrtsJEr86142/cMZKW4iWK595CtMM1DoE8jpHze
                o4dIdx4rXaeV8ZX3ZZ8j2XkCz7psBJGQcrXnBXDFyVsot4kThJrqzTVUzcpG/ln84xlAAnSPVxwNabZy
                zjC87EDKFp5As648cC0fv/y5hrhjJC1gZRZjFkXR5xuoZuUiAkOCoip8PHfiqwWWMY3PYZspW7kCz5vG
                5I55LHvqMuGLe2onGR5THfv1J1BUzYqSIEOKpzKABeB544rTCZbxfcmPU8tQGQrOmcYqRa02S/424Yt3
                aPuhsAmcyIz6KgtgRTAo9ZxUAC8d+KrGZaxhM4+NliKyDZ0jjIkW4mz38zuGLXtEkQ0ARcyJ58iotgRT
                6R6zipwA9hozyzjCQx4XLbHIFnO8XHh1LhLkFvcUWrZ4waJTHVlQuAinsvkEApuo/mcAICA9w4rQTLuL
                Vcdjl1PIdmnxaWINPGyEW4Yw1nlhiByeTG4AV9mBEPmfzOOe3rQcvYsLjkMvmyJZhcVjDkuEMiDcUWFm
                +41OATlfyhFX2byDCIACnmcc9vXtWtzlrGDPHhctusgWe3xeeITnyZAWuGMJaB4VUvUlKFnzKezCgb5K
                AoID6B3pKZZxjCY9Wy1L5As6Oxe3iE59bIDy4YtCz04RYoGRlTXAoqDXyDgYvSp5nA8gAciIBWmYy5i+
                3sfFyxOZBs6JxieNazJL/kLhi2toniXwFMzkCTyyoNjJKgYvlmKoIGEe1VncuYutfH45XuPIdmQmMwjW
                0x+XsncUUztI0W8KB2j4k8uqDcyagCApmKoPV8q3bjypjWz7HHJl137aNu489hZSZb2mJ+MYWueOkSlN
                HvU5tyqVuZJcDkFE5T8H5Dp55raujLeL7JsgmS7wyFZts49USYLJ3tN3FFx1rqoyhwTjVEptyqVuYFxM
                AJdKg9XyrTd+XcW4/spLJF8ZDs208fuCxh2953BcUXF204JNHInEHbzDtUqBwciomCAlOPX1AJeQGty7
                8sYyx/aSF+3zkCz7Sslz7vFtdlwXFFRVvOfepikjPZ5Z6qRE/tAnICPScerkOPWq3rlfGeNrUQvvIF/2
                hZlmOnMYzbXTctwRkPAOXc0oCUQ3byr5UiJzuTCHkFKcROHcOQARpe+V8ZY0t5lduQr/ALOsu15J3HsI
                64bmuKLhoZ+8ljAWMbspF8qRJUy/UApAQw9QCAhyHetF95axhi+32F2ZGyDZ1j2xKSEZFRs/dNwxkJES
                ElNKFSimTN+/UImoo4MYoIlIYRNz2rcvnKuNMZRMbO5Ev20bIhZiSYQ8TK3RcEZCR8nKShwTjmDB2/UI
                RVVYRDyyEMIm9Q7d6X1lbGeMI+Gl8i3/AGfY8VcMuwgIGRuq4YuDZTE3KjxHRca5kVUyLLLf5BCGERDg
                fSqX1lfGeMG0I8yNf1oWM1uWXaQFvOLruCMgkZuafjwyi4xSSUTBZdX/ACEyciNUvjLGMcZp28rkPIFn
                2Sldku0gLYVui4YyDTuCbfGKVnFxB5BVMHC6gmKBCJCIjyH1qt75WxnjQbcDIV/WhZI3fNN7ctULouCM
                hBuKedh1NomHB+oT2hc4ehE+R7h9Q5re2VsaY2dW2yyBf1o2W7vGWTgbUbXPcEZCr3FNLBylFw6cgomL
                hc3+SmkAmH5BW1e2XMX42fWjG5ByFZtlSF+zaVt2Uyue4ouFdXVPLF60omAQfqpmcrmDuCaQGHuH1Dnc
                vDK+M8fS1rQN839aFoTV7yXuez4q47gi4eQuaU9fYIRq+VIdyr/5CQCP7e1VuzKuNLEnLQtm9L9tG1Li
                v+TPDWTB3BcEZEyt2SqaQrHj4Bi9VIo6VAoCPQkUR+QdxCqXXlfGViz1p2ted/WhatyX2/Vi7Mgp+4Iu
                KlbokUSeYqzg2LxUijlQpe5ipFEQ7fMa0XRlrGFk3TaNj3fkGzrYvG/nCzWybYnbhi4ydutw3DlZGAjH
                ipFnRi+ggkUe/YOR7Vu3DlTGtpXTatj3Rfto29eV8quELNtaZuCMjp+51mqYquE4OKdKFWciQoCI+UQf
                39qT+VcaWrdlsWHc1+2jAXrevtX5I2pMXBGR8/cnsQB7V7kinShVnPRyHV5RB45+taJ7K+MrXvS1scXH
                f9oQd/3ug6c2fZktcEYwua52zI/luloOGcqFXclIb4RFIgh1fD61SYy1jC375t7GU7kCz4fIl2NHb+2L
                JkbgjGd0T7JiPDt1Ewq6hXC5E/8AKMmmIB3+lbknlTGsLfVv4wl79tGMyPdjB/KWzYz64IxvdU9HRZQN
                IvYmCVVByumiA8nOmmIB+waSGVMbRN9w2L5S/LRj8jXFHuJaCsZ7cEY2uuXjGg9Lh9HwSqgOFUiD6nIm
                Iev0rS8yvjKPyDGYmfX/AGg0yfNRK89EY/cXBGI3fJwzYTA4k2MAdQHKqJOg4mORMQAAER7AI0c5Xxmy
                yAwxQ8v60G2TZWKWnY2wVrgjE7ufQzc3QvJtoE6gOTolEBAVCpiH21qUypjVLICOKFL8tEmTXEOpcKFg
                mn4wLuVg0lATUlU4EVPaRQKIgAnBPjv9O9BypjUMhBiUb9tH854wgXL+b8Z+N/LD8nxUFEJn8n/M9p9n
                6iiHm+X09ueeO9aU8r4yWyAvihK/7QUya2iiTriwS3BGDdyMMqboTk1IAFPaQREewKCnx9tUb5Yxk7yI
                9xE1v+z18pR0Ilcj/HqVwxil4M4BcxSJTDi3yK+1FbmE5eFDJgAgIDzwPNa2mVMav7+ksWMb9tF5kmHi
                0ZuUsNtcEYtdsfEODdKMi8gSKC5TRMPocyfH760sMr4zlb/mcVRl/Wg/yXbsU1nJ6wmlwRji7YiHen8t
                rJSMCkoLhJE49gUOmAdw+oVSLyxjGbvqcxhD5As+TyLbLBtJ3DY7G4It1dULHvP96vJKDRVFwimpwIlM
                dMAEO/pVYfK+M7hvi48aQN/2fMZCs9q2fXVZMbcEY9ui3mbw3Q2cy8K3UM4QIcRAoComHcQAeOQrVC5U
                xrcd6XLjmAv20Zm/rNQZubrs2MuCMe3LbreQATMlpiGbqGXblVAPgFQgc9vrWmByvjK6bwufHtt39aE7
                fVlFbGu60Iq4Ix/cVtleF6mozUS2UMu38wP1fMIFaLcy1jC8LwvDH9q5Bs+474x+o2Rvi0oW4YuSuK01
                nZepulcEQ1VMu1Mb0AqpAEB7DwPaty2sqY1vK5bps2078tG5brsddBteFuQc/GSk1bDh0TrbozsczUOq
                2McAHgFShz9/alsZVxpe1x3fZ9n37aNz3XYD1GNve3YK4IuUmbTkHCJV0Gc/HM1TqtVDEMUQKqUB78ev
                atNp5Xxnfc7ddsWXf9oXXcVivgjLyg7fuCMlZW15AwAYrOdYs1TqNVB546FilHmqWblnGGRJW7oOw8gW
                deM1YMuMBe0VbVwxcy/tSaAon91z7VgqodqtwUw9CwFEeB7dhrcs/KmNsgyV0w9i35aN3ytkSnuS8I+2
                5+Mmnlsy/lgr7tm27BQ5mywFEBFNUAH1Dill5UxrkZ1czGwb9tG9HlmTClv3Y2ti4IyaXtuaRDqVi5pJ
                gqoZusUPUigAPr9BrbsfLOMclmuYmPMgWfex7MmXNu3YW17hi5s1tzrMTFdRU0DBU/s65BIYDJq9I9h+
                g1rsbK2M8mhPjju/rQvcLVl3EBco2rcEZOBBTbT/AH1FyoxyinkLJ/5RFOBCqWNlbGeTmk8/x1f9n3wy
                tabf21cju1bhi5xtBT8Z/wBsIiVWj1VCorpch1pqCAh6+lVsfKuNMmR8xK48v60L2jLflH0JOv7XuCLm
                2kPLxphLIR0mvHqnKgsiID5hFBASh61osPLOMcowsnceOMgWffUBCyklCy8xatwRk5HRktDmEspHP3ce
                ooRJZAQHzUziAlDuPaq2LljGOToSRuXHeQLPve3oh+/i5Wbta4Yubio2Ri+0izfv2Cp0klEeB8wpzB0h
                3HsHNarHyrjTJluPLvx5fto3ta0e9ko1/cNr3BGTUOyfw5hLKs3cgwUOkko345WIcwCUOBHsIVpsvLGM
                sjWs4vewsgWdeNnM1ZFB5dFt3DFzEC0WiFDJSibmUYqnRTM3MQ4LAY4dPHI9u9Us3LOMMiWk4v2xMg2d
                d9ktPePtd2W7cMXLW+09z9XvUXUszVOimDYCHFYTnDoABEeADmqWhlvF9/2WpkayMg2ddlgpBImWvK37
                ii5S2kQiTGLKCtMM1ToE9nEo+b1HDp+fFblq5VxpfFmnyLZ1/Whc9hJoP3Sl4wdwRklbSTaLEwSK60y1
                VMgQqHQfzRMcAL0iI8Vs2xl3Ft6WD+dS0sh2bceNfYn0iN+Q1xRb+1CMYsxyyTpScbqmbkTQFM4KmMoA
                F4HnikBl3Ft1WCbKltZDs2dxqRi9kj35FXFFvbTTYR3V7e7UnUFTNikR6TeYJlA6eB5rdg8r4yuWwE8r
                W/f9oTWM1YtzNkv6NuCMdWkMOzKY7uS9/JKC2BFICG8xQVOC8DzwIcVojst4vmMejlqKyDZ0hjAsUtOG
                yA0uGLXtAsO3ATLyJp9NUWwIk4HqOKnAfP5VRtlzFzzHSmXmmQ7Nc4sShnFwq5CQuGMUs9ODaFEzmVPc
                BFRbAgn0mA6gqcAIcD37VVDLeL3OPE8tt8g2cvi5WIGfTyCncMYazzwgFE5pQtwAp7MKAAA8qeZx2EPU
                OKqfLOMU8dqZcUyBaBMXJQv5Rq5CPcEWFnEgekD+9jXAKvs3kCAhwr5nSIiAAIiIBVHeWsYMMeEy29yD
                ZzXFykOjcBMgrXDFks88I4KBkJQlwGVBsKJ+Q6VAU4Ee3r2rTK5exbB47NlyYyHZsZi4sWhNjkF7cUW3
                s/3Q5MUreRC4FFQbCicTABDgpwIiAByNa5XLOMYLH4ZXmsgWfF4yNFNZwl/P7him1onh3xQMykiT6yoN
                jIrAYvlnBQQNyAByNVnssYxtawvzp3Hf9oQeNvYGcoF9ylwxbO1DRsgJQYvSTq6gNhTWE5fLMCnxc9qp
                c+WcYWXYv5z7tyDZ1t45FowflvmZuGLj7VOylBIEa6TnXKpW5iOBUICJiqCB+oOnml05ZxjY9lEyReOQ
                LPtjH6qLFylek5cEXG2yshJgAx6qU06VK3MVcDAKQgp8XPbml3ZZxhYFlBkm98g2faePzEjTkvS4Lhi4
                u2VSTCpUYoyMy7VKgf2kxyAj0nHr5+HkK13hlXGmPrUb31fV/WhaNmPDRpWl1XDcEZEwDoZgSligbSzx
                UqKntHWXyeg49YCAhyA1tXvlzF2NLVb3zkLIdm2XZrtxGtGl0XLcMXDwLpzMqlRikG0o+VIioZwYxQSA
                hx6vUO3PG5fGV8Z4zt5nduQr/s+yrXkXbBjH3Dc1wxcNDv3koIe7WzKQfKkSVOvyApFIYeoO4dqpfGWM
                Y4zgo26Mh3/Z9k25MPo2MiZy6Lhi4WKkpCYOVOKZsX0gqmmqo4ExQSKQw9XIcetL7yvjLF8PG3Dka/7Q
                saCmJKPhoqXuq4IyEjpKVllATjI9i8fqkIqsuIgCRCCIm+XatF+Zcxdi6OhZjJGQrNsaKuOVYwcBI3Vc
                UVBspmXkhArCOjHMgqmRdVbkOgiYiI8h9a133ljGOMGkC+yNf9n2MzumaY25bbq6rgjINCdnpIeGERFK
                yCiYLuFf8hNMREfpW5e+U8bY0TgVch35aNkp3RMNoC3FLon42DJOTbz/AHrFRRpBRMF1z/5KafIj9O9b
                V8ZZxhjL8mfziZBs6x/yzmkLctP8qrhi4P8AKSecpiqhEwvvFVP2hcxfiAiXI8CHPHIVW98sYxxo6tlj
                kLIFn2S9vSYTt+0mt0XBGQji5JxUvUnFQqMgoQzhcwAIgmkAjWu8cq40x4/tWLvu/rQs+SvmZSt6zWFy
                XBGQ7u6JxcgqIxUEg/UTM5XMUBEqaQGEfQO9LwynjbH8pasJfN+2jaEvfMoMJZ0bck/GQz655cCeYMdB
                tn6iZ3KwAICKaQGHuFaLtyvjKwpy07Zva/7QtO4b8kDxNlQdw3BGRMrdUmmAdbGAYvVCKOlQ5AOhEph7
                8evatN15axhYtxWhaN6ZAs+1LoyA8XjrHt+4Lhi4qXux82KB12sAweKkUdHIBi9RUSmEOQ+oVu3LlTGt
                m3NalmXZflo21dt9OV2dmW3OT8ZGTd0uWyYquEIKNdqFVcmIUBEQSKP09e1LiypjW0LrtCxbpv20bdvS
                /wBR6jZFrTVwRkbPXYrGlKd8nb8W7VIs6MkBy9YIkN3EA7j2rTPZXxla932zj+5L/tCBvi8yuT2laUvc
                EZH3DchWQdTo0LEuVCrOATDubyiDSbyvjO2r3tbGtw3/AGhCZBvhF44s6y5W4Ixjc9zIR6Z1XqsJDOFC
                ruSplIcTCkQf1TfQa1S2VcaQN7W9jWbv20YnIN2tXT217KkLgjGlzz7NkHLpzEwiygOFyE78mTTEOw/S
                qSOVMaw99QmMJW/bRjcjXLHu5a3rHfXBGNbpm4xiboePoyDWVK4WSTEQ6jJpiH8eNMjljGUPf0NiyVv+
                0I7JNxRrmYgbEeXDGNrsmIpobocv4+CVUBwqkQewnImIevHpR3ljGUff8fil9f8AZ7TJktFrTcXYTi4I
                xG7ZCIbByvItIFRQHKiJQ7mOVMQAO/oHNa18qY1bZAZYncX7aKGTpGFWuJhYCtwRhLueQTc4JrSzeAMo
                Dk6BRHuoCfHHfnjka0rZXxmhkBvida/rQSyc6iDz7awFLgjC3cvCJn6DyqUAZQHJkAHt5gJ8VT87GMvz
                ijiH8v7P/OmWDC5Rx3+UEZ+WXuAwiBZf8nhU9q9nHgRBTyuOA6ueO9Esr4zXyEvidG/7QUya1iCz7mwS
                XBGGu5CFOp5RJRSABT2kEBN28zy+P51qQyrjR1kF5idtf1or5Pj4ZG4n1gJT8Ye72kE4OKaEs4gCqC5K
                gYQ7KCnx8+eB5rS1yvjJ9f8AIYpZ3/aDrJkTFoTcpYLe4IxW7o+Jch1N5F3AkUFymicO5TnTABDgeeK0
                xuWsYTF/zeKorINnSOS7ajm0vP2EyuGLc3bDRbwwFav5KBSUFyikoIgBTnTAO4fUK3Y3KmNZi+5vF8Tf
                toyWR7bjmsvcFjMp+NdXTCxb4wkZv5ODRUFwikoICBTqEABpFZUxrO3vcGNYW/bRlchWm1avbmslhPxj
                q6IFm9DqauZSFRUFwiQ4ehjpgFaITK+Mrlva6ca2/f8AaE3kGyEWbi8LKi7gjH1z2yhIEKoyVmoVuoZw
                3KoChBKKiYB8QB6iFUt/LOMbrvC58fWzkCz5++rK9nG77QiLhi5C47aB0XrbDNQ7ZUy7frD9XzCBzWu3
                cq40u67LusS1r9tG4r0sE7JO9rVhp+MkZ+1FJEDGYEn4tqoZZqKvQboBYpe4cevaq23lTGt43NddmWnf
                to3LdtjOEGl5W3CXBGSU1a7h0n5rdGdjmih1Wxjl7gCpQ+nr2rTamV8Z31P3datmX9aF1XLYT9OLvWBg
                LgjJWWtWQVT81JnPMGah1Gyhi+hVSgPr9KWplfGd+Tt22xZN/wBn3ZcdhSBIq9YO37gjJaUtWSU5EjGe
                YslDqNVR6RDoWKUeQ49e1arQypjXIMrdUJYt+2heEvY8oEJeMZbdwRcy+tiXEnme7pxswVUO2W45+BUC
                j2EPkPFLOyrjTIT+6oqxb+tC8JOxplW3bzj7buCMmHlrTqBAOtFTrdioczVcgCHUmsBR+Xr2pZOVsaZJ
                c3Kyx/fto3q8s6XVgLrbWvcEZNr27NoByrFTKUeqoLdcvPdNUAEK02NlnGOTfym/N3kCzr3/ACMm3Ft3
                b+S1wxc4FtzzVPzXETNDHKqezrlL8QpqcDwAiHoPG5ZGU8a5LTnlce35aN7JWtMOrfuRS15+MmyQU2y7
                uoqVMwUP5C6YdzpqcCFbdi5Yxlk9tPPcc3/aF8M7WmXtu3I5tW4IycQgp2OHh9EyyscqoCC6XfrTU4EP
                31SxMs4wyhHTMvjnINnXzF29KPYWekbVuKLnGUPKxwiV9HyTmOVUIiqkJTdZTmDjgR+VVsPK+M8oQ8lc
                OOb+tC+YKGk5CFlpe1bgjJyOjZaJUFOSjnzuPUORJZAQ4VIcQEvzDilj5YxjkuDk7mx7kCzr2t2GkJOL
                lpu17hi5uKjZGGUMlKs3z+PVUTSUbmIYFSnMHTwPPYOaWNljGOTbfe3ZjzIFn3rbEa7fsZG4LYuGLmYd
                g8i+feLZ5IsVDpJHQ6RFUDmDpAOR7d62bGy/izJtpL39jvIlmXrZLReSbOrrtm4ouZgGq8Mcycsi4lGK
                p0SGbiUQWAxg6fn271yLNytjPIlqL31Yl/2hd9ltTSRXV1W7cEZLQDUYcThK+0yzNQ6KYN+g/nCc4AQA
                ER4CtNoZYxjf9lGyRZGQLPuywCFkjqXnAXDFydtJFhlDJywrTDVUyBPZjEOC/UcOjgeritFr5cxfe1kK
                5LtDINnXNj1u3kHTi9YS4YyRthu2igMaSWXmmqhm5CtwKYVhMcOnjvxWq2Ms4xvWxvznWjkGzrkx17K+
                fDfENcMZIWsRnGdQSLlScbqGblIh0H84xjgBOB6uOKQOWcY3TYQ5TtvIFnzmNvYHsoN9xdwRj21Cx0d1
                A/eHnEVRbgmiJD+YYVOC8DzxVYnLOMZ7H5srwuQLPlcZEinc4e/mFwxbq0SQ7EpjvZJSeSUFsVFECG8w
                4qcF4Hnjga0RuXMXzGOwy5FZCs6QxcaJVngyC0uGLXtD3KgAmXkxuBNUWwIk4HqOKnAfPgaM8t4vkcdj
                l1hkGzneLSw6twHyEhcUWpZ5YRAgnWlDXAVT2YESgA8nFTgB7eo1rSyxjJfHaeXEb/s9TFq0L+UaWQiX
                DGGs5SB6BP72LcIKezeQAAPKnmcAICHPIcVpXy1i9tjw+W3GQbNRxelEBPq5AUuKKLaCcKYoHCUNcHm+
                zeTwIfH5nHfj17UeZaxhH49Llt7kGzmuLzxCE8TIK9wxaVnHhXQALaUJcJlfZRQP1FAqgKcCIgADz2pI
                5bxfEY9DLMpkGzo/GJopGbJf7u4YtC0TxDgOW8iSfUUBsKJwEOk4KcD8q3JvKuNLbsBTKs/ftow+NEot
                tNqX7Iz8Y0tIsQ8AotJIZ5ZQG3kq9ZPLOCnBhMAF5EQCtFwZaxhaliBlG5sg2dBY4MzZvyXzKXFFsrVU
                ZSIgVg6TnF1QbmIsJigmIKfEI8BzWm58u4tsqwhynd2Q7MtvGoM2Uh+XczcUWwtQzKSMUke6JOuFStzE
                WE5QSEqg9XPat26cq40sizCZGvC/rQtmwVG7F2neU5cMXG20q1lAKMaulMulSoHK4A5BREpxA/IdPPNb
                d35bxfYFlEyPe+QbOtOwVQjhRvK4Lhi4u2lglzASL8mZdqFQP7QJg8rpOPV6hyFab0y7i7HNotr/AL9y
                FZtnWO9GMKzu247ii4m3XYzXR7o9ll3ipEFPaesgodBx6wEBLyA81qvXLWL8b2u0ve/8g2dZtnP141sx
                ue5bii4eCduJgxSRSLWTfKkSUM4E5fKAhh6gHkO1bt8ZVxpjS3Gl4ZCv20bKtV+9jY5jcVzT8ZDQzx/M
                GAkUzayL5QiSijgR/QkIYRMHcO3Nbd9ZZxjjGDjrmyJf9n2Rbsu/j4uKnLnuCMhYmSkJUf8AU1owfvlC
                JqnX5DygIYeoBAQ7DzWm/cuYuxZDRVxZJyDZ1iwM7Kx0FCzF13DGQcdLTMtz7sjI53IKEIssvwIpkTER
                MHcO1bl8ZVxnjOPiZbIV+2hZMZcEqxhIN/dFwRkI0mJeTN0R0fGuHyhCrLLDwCZExER7cVw8i5GxLYEf
                Au8qXlYtpxdzzjC3LcXvSZhotlN3BKgYrCKizypykWcLAI9BExERAfoPfevTJ+LsWJwIX7fFm2EldMyh
                A22FyzkXb5J2dej/AEaLigeqJgsup6lInyI/StV8ZbxdjJS10siZBs6x1L2m21t2gS6bii4M1yzzwA9l
                iIQJBVP2lwfkvSmlyPxB9Q53r1yrjTHDm2Wd/wB/WjZbu85lK3rTbXPcEZCr3HOLhylFQyUgomZwubtw
                mkAj3D6hS8cqY1x7I2tE33fto2fJ3vK+47Qj7ln42GeXNMeWKvu2Ebv1EzOVukOQIkBhrTeGV8ZY9lrR
                gr6v+0LPmb+lRg7Ji7kuCMh391zBSeaMbANX6pDulgL3EiJTD3D6hyu3K+MrDnLVtm9b+tC1Livl8aMs
                2EuG4YuJlLnkChyZnBsXqpFHKny6EiiPPb1qtz5VxrZVx2hZ94X7aFsXVkB8vGWPbk7PxkXNXbINkRcL
                M7fjnipFXShSFMbpRKYe31Cq3LlTGtm3Ja1nXbftoW1dd8LuG1nW5OXBFxk1c67UnmOEYOOeKkVcmIH6
                wJFHj7603HlfGdoXdaVg3Vf9n27e9+qLp2TaczcEZHXDdR2pgK4JAxLpQizoSiIF4RIbuPAcjSdyvjK1
                7wtjH1yX/aEDfN6ldGtG0Za4IuPuK5Ssi9Ts0JEOVSruPLD9byyDxWqaypjW3LztrHU/ftowt+3ki8cW
                pZsncEYyuW4kI8vW9WhodwoVdwVIP1xTIPFaZnK+Mrdve3MaT1/2hDZCvBq5e2rZUlcEYzui4WjM3Q5c
                REKuqVw4IQeQEyaYhyAh6hWmSyzjGGvuFxdL5As6NyPcbBeUgLGe3DGNrqmY5qIg4ex0GsqDhVMggPJy
                JiHYfpVZDK+M4m/4XFUpf1oR+S7jinU3A2E8uCMb3bMRDI3Q6ko6CVUBwqimICBlCpiHr9BrW8ypjWPv
                2NxY+v20WeSZiMWmoqxHM/GI3ZIRDc3QvIs4JRQHKiRR7CcqfHr9K0uMr4za5DY4jc39aDfKMlCq3HH4
                +WuCMTvB5AoGMVaXbW+dUHR0C9BxFQE+AAoj6BWlTLWMEsho4lUyDZyeUHESeeQx+e4Iwt3qwxDdJ5NO
                AFX2kUQH/wB8BPjsNa/zq41/OCOJvy9tH854QhrlHH/v+N/K/wDJ8qgJGl/yf8z2n2cDGKHmeXx3AfSh
                cqY0VyAricl+WifJqEMW4VrBLPxhruTglFBSJLHgPM9pBARAQBQU+nt9O9YhtZ22Xo21dZ0XnMW5qQ0s
                68rchCSTi/MNyNqyN5Slpvv6Ks0yvh2ZOaOuSHcpiKKqEm24OQwkMfpN0jiAc+GVwVC6qoK7NKG5pKaU
                NWFjw0fd962zhLH8QwkVHqyhQC8InHaF6ouIFi+L8TqOKouzUE5vLTSQOCRZSmnaef2nHtsBZW1QWPqK
                1A2NBsnV3SsbbduY6vV7GK/oms1cmPIKVkitjKDx1Kp+WQw9+gBHke5YzKmNZq+7gxfEX7aMnke1I9jK
                3NYrG4IxzdcDGyfIx76VgklRcoJLcCJDqJgA+vPcK0w+V8Z3Be9w41g7/s+XyDabVs9uay464Ix3c8C0
                ehy0cSsKgoZwgRQO5TKEAKQWV8Z3Pet043ty/rQnMgWQg0dXhZcVcEW/ua2Wz4/ltF5yGbKmXbFOb4QF
                UgfF29RAB1QGVcaXXdt0WFbN+2jP3tZINRu+1Ii4IyQuC2vbQEWvvuKaKHWbdfA9PmkClv5Uxrdl1XXY
                1r35aNwXnYyrdG8rVh7gjJCfthV2mCrZOcimqhlmwnKICAKkD6etaLYyvjK9Lnu2yrQv+0Lmu+wnKbK9
                Lag7gjJObtV2qACm2no1mqdZsceQDpVIUeew96rauV8ZXzP3XatmX/aF1XLYj1KNvOCgLhjJWWtZ+sTz
                Umk6xZKHUbKGL3AqpSjWq1MqY1vudu62LLv20bruOwJJOHveDt+fjJaUtSVVS85OPn2TJQ6jVUS9+hUo
                D6gIcgPC0MqY2yBKXTCWNfto3dMWRJjC3hF25cEZMP7ZlgL1jHzbViqc7ZXj/IVKA/Zz2DbsvLOMcjPb
                rjrAyBZ95v7FmFbevNlbNwxc26tacR582LnUI9VQzZcOk3KaoFHsP0GtVlZWxnkh1czKwL/s+83dmyyk
                Ddja2bgjJpe3JpEBFaMmU49VQW6xeO6anA9h+lVsjK2M8lmuQmPb+tC9jWfNOLcuotr3BGTY27OtS9Ti
                JmAj1VPZ1yByIpqcD2H6DWmx8sYxyYncKuPMg2deyVoy7qAuhS17hi5olvzTERK7i5c0eqoDdZMSm6yK
                iAhwP0qlhZZxjlJrNPsbZAs++2duS7uAn3NqXBGTqENNMRAHkXJKxyigIrpc/GmfgQ+dLDy1jDKUZMTW
                N8g2dfUPb8s+gp2UtS4YucYQ8xGB1SEbJOo9VQiKqId1CHEBAO49q3LGyrjTJsTJTuO79tG94WGkn8PL
                StrXBFzkfGSkWcU5Fg/dxyqhEVURAQUIoICX1EOO9bdh5axhlG339144yBZ98WxFSEnFSc/a1wxc3Ex8
                nDKGSlmL1/HqnTSVbGKYFinMAl479qWLlrGGTrde3djvINm3va0c7kWEhcNsXFFzMMweRJhLJtnkixVO
                kkduJTecBzB08d/StVk5Wxnkm1V75x/f9oXnZjVzJs3V021cEZLwLZ3CqCnLt3EoyVOiQ7YSj5xTHASB
                3HsIDVLOyvjLINpL35Y1/wBn3bZTX3h7VddvXDFy1vtvdJjlk/aJVmqdEns4kP53UcOngefStNo5axff
                1lK5IsnINnXXYCCcksvecBcMXKW0glDiYJVReZaKGQIVt0HFYTHDoABEeK02nl3Ft92MOTbMyHZt0Y7K
                i+cGveCuKLkrXIjGGEsiopNtVDNyggJRBUTKB0/Pit62sq41vGyPzl2pfto3Fjz2J9JDe0PPxr61yR8Y
                BzSLxSbQUM3KmgCZxWMKnBOBE3HFbUDlzF10WAGVrcyFZs5jIY1zL/l9F3FFPbSLFswEzt+pPIKi2Kkk
                ACKhzKABeO/FaonLWMJ6wD5WhMg2dK4zTjXcwpfrC4YtzaScUxKJnj9SeSVFsVJICm6zCoHHHeqRmWsY
                TWPEMtROQbOkcXuYhSfb5BZ3DFr2erCpAYVZQtwEVFr5JQKbqU83gBAeeOBqrbLOMXmPBy01yBZ7jGBY
                dS4DZARuCMUs8sIkXqUlDXAVT2YECgHxKCpwHp6jT87WLwx0GXvzg2b+awYX8ogyH+UUV+RowXHPvULh
                832byfUOvzOOfh9e1fS21c9u3nAxV0WlORNy23OskZGGnYR+2k4mUYOC9aLtg/ZmOkqmYPQxDCFfu0pS
                undQWaIDTrhPJ2dLrhrkn7axVZ0xes7E2hFnmrjdxUG2F09LGRpBKKhiEATmETABSAY5hApRGvMY3f8A
                xPeatwewsh6ZMQ4ltLEWmq9Ewip414REXeOUbkj2jxF23V94uiGaQ6nmpCYDsiGWIBg6FiHL1jFRHjgA
                47hx3+8O/NUpSlKUpSlKUpSlKUpSlKlNeFh0ra37x182FqFwdGT9p4FsJdywzbfsiK8dZ07bD5oor+Rw
                EVACyS7pVIvlpIlOKRwBQwkAomr1XvT9lK8tPxe2Xk8h7lcTY7KWTfxmJMTQEMqzTKBQjpe4XK0m8TMY
                vcxhImlyI+g8AFZIfBL4lRcTmtHOC7FEFGjDHmOYp4KYmWJ56zuemG6SpuQApuloYxQH1ABH5cegXSlK
                UqghyHHI/s+f31iScbPeAl9z4u6UF8ZKRy57haxS9jIyiRLKXkWduFtVGUMcoA4BIWaaQHY8+UY5ROPc
                41pidnnAcTugP90xO+ckuMuPIKQjEbGdSiStltJOUtgbQeSqZz8uDJewnVKkwEfJTOYpy9yFrk2ltC4J
                tDdHvTdTY3vkNxl687ZWgnNiOnrdSyGL53YbfHDuWQMYBcnKaMbFBNoY3lJqj5hfkAbNibP2BrB3NL83
                P4u+cjucrX7AScQ9sV1IIDZbF9Msm8fJSaB0+HByHTbl8tmoIpEMPUAcgAhpxfs94DxRua5U3QIG+clO
                MrZUipdpI2I8lUjWVHSdxQDW3JuSIYoe0OElEG/WgxWHykDmKZP/AARADdwltAYHwXuO5n3KbcvnI0pl
                TM0HMQ0lZszIN3FowprhRZt5t4yUHlwqChGKAIoqm6Ufi6PXgGnjaBwRpw3FdRO4/al85FlsoaiYy7WE
                3Z0w+bHtG3z33cDC5boWYGSDz3BFXUeiLZBcehuX4UwHpKIbWnHZ8wLpq3AM97hVo31kiXyTnlCWSlLQ
                m5JFW1YFe4DoKTazQyXCzkqhkAFBNzyCACAJ8dIVu6VdoDAukrXjqW1+WNe+RprI+paLuOKnrTuGRQcW
                pbje77rYXlcakd0B5zlRR5GtvZzuREUE/MTJyChq06Rdn/BGjzWzqf1xWLfWR5+/9UEjc8ncNsXHIN1b
                ctxa8rp/LG4EosyQecuQz0R9mIuPCCfCZOxQ4aK9n/A2iDVrqb1eY8vfIlx3tqZculJi37mfoKwNrtZC
                dUuJ+2jhS5VdCdwcPLVcj1JkASl/WGq6INoHA+hPVjqt1cY1vjItyXnqumLkk7jt+636DiCtdO7b6HIc
                42izI8KOjnkeBTcOeVE0+ogCIGMItBmz9gTb/wBRWp7UjjC98jXPdWp6aXlZ+Hu2QQWh7ZRd3A6uZyxi
                itgAzjl28WEqrjkxCcELwAd+Jt87OeAtuvMuqXNGLb7ybd03qikzrzcZecsm4Y2vFKXA9uRSPZLIh5r1
                f2h4IA/diKoFKIf++Hr9Tb22iMEbc2YNTuZsU3pkC6rg1PXMvP3CwvB42Ujbbbrz7m5TRcSRqAecPtbp
                UfaVw8zo4J6B3/N24dnbAW2ndOqa6sTXxki8HOqecipC4214yKBkLYiYV5Lvo2JiAZdILqFUmnYnfuCi
                sYCkAOAAept17Omn/bedak3OLb4yZeP90vNO3tyEvCXKIwUU4UdKJxkasw6TKLk9rOHvBUfPHgBEeREa
                /R20dovB22L/AHRJ8S3zkK9XGo28GtzXKpejtoZOFaxgPRi4iJQZgBTCmaQdGUdqCKqoCmU/ZMK/G24d
                m3T5tq2JqTx5iy9ckXrCalpQ61yrXjJIFfwUESMfxDKFh12HSBlEkJFfrfql85Q4FMPHHA8zbt2eMBbc
                mOtRONcZ31k+8IbUhNS0jdjq5psGTyFj5KJWhCMLePF9IIuEUF1OJEP05jAQwj8BeOLt2bOGAduTB2oT
                BmNb5yPekLqNk3bq8Zm6n7ZtJR8caAdW7HRsKnGdJEjt0Xrgx3XY6phIJ+AIUK5m37s+YC299NWftMOP
                72yNetnajJK7HV7zFzSLdnOs2V12opZKrCAWjS9LYyDBQSkcBycyv6Ufiri6CdnLAWgfSxn7SlZN9ZIv
                a0NRc7dMze8/ccijHTTNC5rTRs4WMCjF8IthQao8g4IHmKnEBUEQIUA0aINm/AWhzSBnfRxZF/ZOu2xt
                QQXejeVwT0skwnY9rdlvK20qjbqcZwi0Mi2VHk5A/SnDqUD1AdzRls6YD0X6Fs8aDLPvnI11481Du8ou
                78uycetWN1InylZTXH0kWBNGgCbT2WMZNSoGJ3FYp1h+JQa3NJGzxgXSNoOy1oFti+8kXRjvMw3updt2
                TEg1YXMkve0YnFuVYdOPAEG4IJopcEKHCnSPX2GtnSzs36f9LO31mjbvt++ck3TjLO8Zk2Mva7ZiUSZX
                WkTJ0GNvSKsCVj+gZ+ztwT8tNMvQocpjqFMKh+dWnPZ0wNpz25co7bUJf2Srhxfl0l+nuu9ZN+2aXim8
                v1o0ZP14QGQeQ0TRTYthTQTDoE4KGNyKpqphHZzwFhDbWyJtlw185FmMWZMiL2j5+9375u2vBN7eskEw
                vIsEmnDdIqDgqRitgDy1ClEinIHNzu4i2d8B4i2zrw2w4y+cjyuKr7ir5Y3HfTt+1b3kq+vuRGQkH7FF
                qHsyBExBIpGpQFM3SYTd1DVtY82csB482wrx2tmd9ZGkcSXvGzTaZvpy+bJXsWRmLnbXcMizKTlBIibx
                mgINCh5RkwOmPwnGtu1tm3ANq7W0jtVNL7yWtiOUiZ9q9v48mije5pe4b2Vv91LJJo/0YiQSCn+8Ch5J
                kgFM3IGMI78Rs7YDiNsOQ2ty3zkZxieThnUe6vpV+1C8veDm4CXH7yQQAvsxEyrppgDMA8rjn681V1s7
                YDdbVim0+N85FJh1S3mEUa/ivGg3yEvHZLRy03mgKIezgT3ygQ5mIB5QtxM37EGuPcOzhgK4tsCD2tXF
                +ZKb4mgIxo3ZX4jJo/loaUaXKtdPvFwkf+jHSM5cKgLHgEQJwXjkOR1X/s34Bv8A2v4Pa0dX1kqPxPb0
                VaTSMvxCSRXvMklaNzJXS1kXLdf+iqoqLpnILE4eSQpi9AAKZBDlZO2e8C5O2wrS2tn98ZGjcSWZCWtH
                xF9NnrVe9xk7XuY93oyzoHBfIORV8ssYWY8JkSEqJR6SANcXN2zhgLN22rj3bMl76yJC4vxi0sYlsXzH
                vG7i8AkbGWWFpISiLvlu4IuRy5Io2MAJlExDkABTLTUBs4YC1A7cWKttiav3J0Di/D8Lj+Kte846WI8u
                1wrYJQBs6mUXvLdym4MKhganDykeSAkBQSIAadTuzfgLU3t64p265u+8j2rjTDo2UtaV4xL9s+uszuzG
                rhogtLIvv6O5BcrtfqTOXgnJegQ6e/O1c7PeAtXWgTC23xc97ZGtTGmBWOJmFg3ZCP2zy6/KxHaw2XDG
                n/bigi9FxHHWIv1gHCpirF+JMoVwdYWzdp/1i6H8L6GbuvjI9rWJglOzU7Ou2FkW765FhtCICGKeaRku
                pBx7Ql1CPX/gh48vgAAK163NnLAmt/RhgfRRet/ZOtOw9PEvYcvZFzwksnI3K8NYloO7HbpXJ705Remc
                MXq3WsqHWmoIKEHnqA2rXfs54C16aU9Pmki+74yNZljaby2S2seatqQbOp55G2TZyNjNmk+aQDy3J12C
                JQOuYOoqnKhQ6vTc3CNnnA+4dpqwVpoyFfuR7KtvAEzBSdnz9tP2r6Wet4i2vyWVZTiEoBknBl24JiVw
                b40zAbo7KGqu4Ps66ftw3AunvT9kS9slWXbWm6Tth3ZExa8sR1NvWFtWuS0SMZxxJdXnqrsyABno/piq
                cqFHkRAeLuO7N2A9yjD+nbDWUr/yXZsDpuepKWo+tKQaqvpqMNAsLdfx9wEkAEiqqzeOQ6HfHmJHFQxP
                1xCv09yDaDwPuU2zp1tfKF75DspppuuZCdtZe0X6S60uxIxbx7qJmSyXUUx1CtEBK9ABWIIH6R4UOA8D
                ce2c8AblNs6c7VylfGSrMjdN0ui8tc1nyqQuZqKKzZsHUZKLPA5IqqizSAHyIgqUwiId+OOZuTbP+B9z
                VxpgcZcvfIlmqaXLjmZm1fyKfNkyz8dcIwxpqJmivQHpMoaCYCi8S/SpB5vT2VNW3uJbPeB9x679NN4Z
                TvzJloPdM880lbebWlKpmQuNg1kW0kMdKi/6hTWMo1T5kEv0wAIhzWncT2ecBbkF7aVb1yte2RrTdaVZ
                t7IW6xtB+2TRumKkH0VIu4iWXeAJ26hjxKAFet+FQATB9OObuFbQ+CtxfM2l3NmVb5yHadwaW7iNN25H
                Wa9ato65G559lcho2WFcOtEfamCAg5QEFAJ1ED9bkODr02dsAbgWoPSvqHyffGS7YuLSzLwz6DhLRlk0
                Iq6GEDdiF5MGD9VxyqzX9rREDv2pgWMQSlEf0ZRrd1zbPuBNeep7THqiyZfGRrauvTLIJO4eCtSSRRhb
                pbNZ1C4mbOQ9p6jMxK4QL5izQAOqQ3QfkADjka2NobBGuTVzpN1g5GvXIFvXvpMl7ekbct62XbdCAuxG
                1L4DIcGymjn4XbgSRARWVbHAyiQgmPAAA1xtY2z3gTWjrN0ya1b+vnI9uX3poRimsRbdryKTWAuhlA3O
                pdkIk/VNwuzUSdLuAVWaiBlSGIU/+DKNNVuz3gPVvri0566r7vnJUPfunNaDdQtowUoknas+4tiVNNwR
                3nnAKrUqbnpM4TbcAuUBKp+sI1yNSu0LgnU/uGaZdxW8b3yJD5N0yx1pMYGzoV+gW0bkNYd3SF7WmvKe
                0AKyAIvpFYXSTfgjlMCkPx3EdOobaBwNqN3BsC7iF13vkSKyXghhGMo2zoiQQTtK4DwftAwq71T4XDby
                hcnFYjc3C3YD9uQHZzjs94DzvuQ4M3LbivjJURlTBzO3EY+zYWUSQtK4HtoC6Nbjp8sYPaEEUxc8O2aA
                +U6KUxVQ4VU53cq7QGBct7lOI9zadvfIzTLGIoeJjYmyWkggNlSDqAReN4d+4KqArJFTK+X81skIJqj0
                mHgQ5Ffm0Fgi/wDdAx5umyl85Fa5dx3BNIphYzJ+3Tsp89jrKc2FHyS5uPaCEKwdKAq0TEE1VOTn/WEB
                2712fcD3tub2ZuhP76yO1yxZtvRUQjYzaRQCzXzyDjV4mNkjq8A5TTBFb9KxIIoqHATGARObncltoHA0
                tuhW9uoqXvkZDMFvW6pCI2OjIoBZDt4ezXFiFk3XUAuBIWPcrADPq8rzQIrwBiBVFNoDBCu6avutHvnI
                xswOLbYwh7DM/bjYxH8fjpHF6Eq3N/vgifutukJ2RR8ozjzFh+JQwVohtn3AkLucTO6Ije2RFcsTFvOY
                cbGUkEBsxu+eRJIR1KkUHlwYgoE+FnyCRTj1AACAVqtnaAwPa+6Xc+6yzvnIy+X7ntp3Cr2G5ftjWQ3k
                X+P08ZvJYpw/pKhBi0uE2Sgiikr0qk4EhQDXYW0FgbH+5pkTdBi74yM4y3kWCexEhZLiQQLZTF1IwzSB
                kJBv5QAudM7ZkgBWigikQ/UcORHtx8S7PWBsQbmeWNzyDvzJchlbKsHcsY7sWSkkFLNh313t2bWekW6v
                HtK6Rk2og2Yqj5KAnKJP8CnxycK7QeBMHbjeaNya3b0yHIZTzNFSLGQsyTfoK2hBOpmNaxcy/ZKcC4XB
                VJsXykVjdCIiIk7AABowHtAYI097jOoHckte+MiymUNQMVcsfM2XLP0PyNgFryl2M1cjuPBuBVlwUWj0
                vZkXHJG4CYCAI8CXb03bPeBNMu4BqG3C7PvnJUxkrUKa4nExaM7KJLWrb7u736UncSjI6Yee5SOsQRat
                3A9DYolKn2TLxXSls+YF0k65tRmu6yL3yPOZB1EtZZpK2rcMkk4ti2krgmUZyb9iP3XdmUXbpeQZyblE
                gGKTsceOTpN2hsD6Q9derLXpYl6ZBm8h6spK85W5LUuB43NbNqO8iXylka7zQwtgKquVaUSEzYjkDA3R
                N5ROekDVxNF+z1gXRHq61LawMd31ki4b01KPJB3MW1c8kirb9sll5s9wSaLAW3CjvqcqG8pR0AiiT4Sd
                uedOhvZ4wDoQ1S6qNVuOL4yVdF56pXEsWbhrulUnUTasdP3gN7zTNgukHnPVlXxURI7dGFRMhDEKP6U4
                1zdBW0Pgvb91EaqtR2Mb4yHdF1aq557MXJD3a9arw9roSF0uLwdsIjyg8xcTPXKglcLiJwT4J3AOa4m3
                /s9YC28c16qs24uvbIt1zmqiTbuZyKvCRSXY2nGIzcjPnjIxRr0mdnOvIG/pjooqlKQClEAOfmm31s84
                E27Mpansp4qvvJl0SWp6afyU9F3ZLpmjrYYSM24n1WMUZnwddcF3BgI/X/TAQBLz8QjXN24NofBO2hem
                pq+MSXvkS8JTU7c8XP3Onez1s5RgWkJISkpGRcX7MAGVMVaWdio7WHzFA8sDfqBz+Ttu7N+ANs9rqRZY
                nvnJl5N9SkuR3cgXjKJCpBRLYj9NlGRazP4lFkyyC4C/X5WOIAI9xHn9Dbk2gcEbbH90cGLb5yNegakb
                lXnbmC75FFP3GyU9q8mLiPd3TyoT2tXl6fhY/wAPI/AXjh7bezngLbOsXUrYOJr6yTeEVqZmm7651rvk
                WwLwEVHRcpEREVAlYgUhVUkZd35r0weasIJCf/BFCqbeGzlgDboxJqKw7je+cl3rAak5Kac3fI3ZKpIS
                8XGy8AtbfsEM5jRKJVkmy5+Hxv0xj8HEQEK5G3Ts+4I24sG6gMF42vzI97Qmoq5pSfvCYul+2aSEc3fW
                2NsNY6CRjQBNE6CB1TGd/wCEVMJOvskWuNt+7OOAdvXTjqF0046vjI15WjqQWuQl5yt0P2zeXjo24LWc
                2f7DABHgCaCiLN0rw5KAHOp0nN3LWvQjs6YB0GaUdQGkixL6ybd9kajpK+Ht8T1wS5GFwsUL3s5OxXDa
                3DxfSRmo3YJEAjpMPNMqAKGHkAANnQ5s4YC0NaPs36OLNvvI952Xnta6T3lclwv27CcbJXJAfk75UIhF
                8ItzIIiJusvdU3HmdgAK52jHZ6wBov0O510JWjemRbux3qIjsrxWQrnnZBqyucGWWbLUsCXJACwJ5TM7
                eNOUqChAERWL5xviEQrgaRtm7AWkbQVmHQBbd+ZJuzHmcHF8u71vCYkUI66SuL3hm0E5PBpR39HaAggz
                Q6QSDk5gEVBHntTTLs26f9Me33l/bxt2/Ml3BjfNTC+ml23jJSiTC6kVb4beyruIZKP4btioACfKJA6F
                uDAsAgocB52mjZ7wJpo25cp7bUDe2RLmxfmRrlBG9ryl3zRtdp18pR6UPKOIVJoX2dmVu1bNSJJJgJTK
                FUWN8apq4mD9nHAODttnIW2bEXzkWaxdkxjdyVyXy+ft2t5BI3XIIyqj+OSbALZAiC7ZAQakKBDlAxTj
                wca04j2bsA4j2yr32v42/cmyuKcgR18tZ++ncsk2vEH98y4y715GoNf6M3QSUBIgsUy+SqUFPNARWUEd
                ePdnHAWPNsi7dr6PvvJD7FN6Rs63mb6dyDdO8gk56YQmlpFkij/RkkyLNkelmACkIAbnuYRrkWzs94Et
                rawmdqJG+MiucPTdtTMO8v075ojfRZWZyB+c480l5QezlISYAp/YePKM3AWw/AYRrjxezhgCN2wldrcL
                3yMvihaLkWqt9mfop3ieVkbjUuUZYG5eWpSEWOBQZFAETFL3DkwiOh3s3YEdbXK21aa/8nlxIrEsWYX9
                72SPe5JNheaN+ISPlG/owt/b0Cf6niUUQS/RgAcFENy5dnLAVx7W9u7VJ75yMyw/bMQ1ZML7QfNT3upJ
                oX45yOtKOSmAG5yKSjxcwsxDywREqQfCUBrfyBs84FyBtlW3tfPb7yQwxRasNbEdD3y2ftVbxK8teY98
                tXzxBUPZlkjnMoAszB5RQEoh3IWuNk3ZwwBk7bDsja3kr6ySwxLYEHakbCXy3kUHN6Hk7VuYbvRlXybn
                luqmq+OqPsRg8lJISpJgBUycas4bOeBs37a+OtsuWv8AyZC4rxi2s8tuXwxkWzq9FnlnOXTpq5l/ag8h
                0kqZ6uB2xw6Ch5YF/wAGFbeozZvwFqN248T7bE7feR7cxdhtjjNraN5xT9u5u062MmRo6OcTCDz+juiu
                EVFwUQOXy0zGIdMAFInHK1PbPWBdT231i7bxuO+8kW5jbETWxUbWvCLftnt1KOLGQMg1cyyT4PZ3BV/M
                UHyjB0pgIFJ2KFbWrTZzwHq32/ML7eV031ka18a4GeYxkLFvCFftnt2Gd4vtZ/ZcYed94AKTwjhhJPCr
                Jq9gVFNUvxJF50aydnDAWsrRHg7Qzdd+ZMtLH+AGtgsrJueFlEX9xuW1hW6S2GZLgTkuUXnnNS8CCgcJ
                mEDJgHSAA1xbOWBdcmjXCWi+8L8yNZdlYFkrQf2bdEA9byNwrktO2V7WKhNIygig49obrmMZQ5epMwB5
                YgAjzz9euz7gHXvpNwLpBva9Mi2RYWnOQsBxYM1bci2fXCqzsCzBx+wYz60iXodmXjDnIquYAMCwgsAd
                QcV+buAbNun7cG02YC0z5CvnJNmWxp2cw5rNnLZkUXks/YRtvoW06ZTqUr1JuDrt26Qgub40jdQp/rCF
                b+4Xs6YD3EcIad8FZCvvJlk27psmYGQsuUtqWI/lJOPhLbJaox9w+9hEjhVZsmQfbjAKxD9Zij+kMA7u
                4ns76f8Accwrp3wdk29cjWbbOm2Xi3lnv7UftVpaUi2NvNLYdxM2vIFEFDuGjNEPaygChFOo5QExq3Ny
                rZ/wPua2hpxtLKt85DsZDTVczyctJ5ZjxqZSXYSsawjZaImUJABKJ1Qi2R0nhf0qIgoBOQWNWxuKbOun
                /ceh9N8Hk++cnWey01TDB7a42pMgsrNxjJu2anjZk8j1D56hGqYDIk/TgPUID3Gtvcg2cdP+5cnpgb5Y
                vjJNnNtL029fW4SzZJAp7khZQkSSWhZdR/1eUoqEO06X6BfOIInHvz2/Y3Ido3Bm5feWnG98s3vkGzpT
                TfdxrmgEbNdtk2VwNl5FrJuYiURchykJlmaPS7QEFSF6il7Gr8bcQ2cNP+45fmmG/co3zkyzXumKWQdQ
                LOy5UiJLkiG8sylyRT525EVWi3mMwAJFqYFwA3PPJCiHP3CdoDAu4zmjTHmvLN75Gtic0xz68vARFoyK
                KMTcrZeZYzx2Eom5Awtze0x7fly3DzBJyQ3IccateG0JgnX9qR0sal8m3xkS17q0sTkPL25C2i+bIRFz
                EgbvTveNaygrgJ25iPkwE7hsIKGT+AR4ABDY12bPeBtfGpXS3qZyVfWSbYuvS87SPCQlqSSCMNdDBtcb
                e6GrOQOsHms1SuUR8x01MCihDFKbsmUa3taO0DgbW7q30u6wMhXvke2r60uy0PKW/B2rJIN4O5i2/cyd
                2xLSVFYBUQIV6kXzhb8Csn1Jn7GHmmsHaBwPrN1vaWNcuQ74yPCX7pYQttpb9pW7IoIWrcyFn3u7yFbY
                yQKB5rRVOReri5WaiB3CQJJHEASKNaNUuz7gfVbro08a8L1vnI8HkDT0lGJxFp2/IIpWzcIwb5SRiDvT
                q8rNehRU/nA1484vAH7BWvUztBYJ1Q7gWmTcMvG+8jQ2S9Mh7SWgbPg37Ylp3I4sO5XN2WseTMoHnoES
                euTGdJID0uE+U1A4OblqF2f8DajNw7Au4zdV75Gh8o4Gh4KIibSgpBu2tSfJa799IwC8ipwDhEU1JBx5
                5UDcLF6Sn7F77GaNnvAubtyTDG5bcd95KZZRwyzh042xo+TRCzJd9bcY5i4J4qY/LhqmQrgDuGzf9G4M
                U3mf4Q1buVdn3AeW9y3FG5vPXrkNnlPFEBARMfYzB8gFmyr+1ivCwUq7UW6l0Spg8EFmiPCSvRyYOo5x
                HXkjaBwNkzc3xtuhTF75EZ5ZxvbzCGZWOwft0bMk3cTbbm04uTcqF6XKYJtHanmtkzeWqfgx+fQdm8Nn
                zAl5bodrbp76+clNcu2zb0PElsVnKJJWW9kbftI1lRcmY4B7Skj7B5YOGCY+SsoU5zgIqqAKU2esCyu5
                3D7oy99ZJLleGgSxSFiFkkDWWpIkhFLfSlBOpy4KkVsqoHsJRBLr4OAAIVzUtonA6O6ofdjC88gfnlNZ
                ytslsMXjc1jFk1sYDiBW4BMcBciHuMTplZcgiC4+eHxABQ4Eds9YEjNzyW3R0b6ySOWJeCGMXsM0mgSy
                ySRoNO3DypDpdLgUjNkkw9hMIpdYCce41qtHZ8wHZ+6Fc+6exvjJbvLtx2/MxI2M7lUVbLZSVwWmWypS
                TA4h7Sqj7B5hUI9QfJSUMRQvdIgBvY62gsD423Ocj7okRe+Q3eWci27IQr2xn79Bay453LWw1tGTlG5z
                9Tk4HZtSAk2Oby0jiJiduADRizZ+wHibcuypucQV65EeZUypb89EyFjyD9AbPin9zkZEnJZoqkAOFgUK
                zAEWa3KSQm5KAmIQQ28LbPWBcH7kWa9y23b7yTI5RzQ1miSVkykkgaz4Z/csc2jp54gomALukzkQEWzV
                wIptxEoJ/wCDLW9p82gMC6ddw7PG43a175Hl8pZ4hpyGlrSnZFB1asCS53rF9PLsFBAXCwqqR7fyCrG4
                QL1FJ2N2aZ9oLBGl/cE1M7h1nX1kWZyZqaG7FJ+0Jt+2Paltr35cjW7bqNGmS/TuE1XrQhmqLg3Q2T4T
                TDghOKaXNn/A2lPXRqJ142VfGRZvIWoZOSJL2rPyCK1t26M29TkJczI6PCrrrUTKCIOgHyS8lJ2Gq6QN
                oHA2jTXBqm1z49vfI81f2qZtcjS4bTuORQcWtbKF43u0yDcgxwJh5rpRWRYoezKuREzdLzUyCIKmGq6M
                NoHAuiTVzqi1hY9vfI1y31qjlZqUuGCuqRQXg7Z/KG51Lul20SKIeauQzxU3kC4H9ClwmQOAAa2dCmz3
                gXQRqX1Ranca3zki57s1Qu1DzcJdkkivD2uwc3Evc7xmwOkAqvFDOVg8ty6MJ0yAYhexzCO/oQ2g8E6A
                9SmqjUzjK+ci3NdWqibmZe4oW7XzdxD2ynPXgpfEm0jBQADuTGfKiJHDnlQqfJAHgRGtO3xtA4H26s1a
                nc3YovjI10Tup2eRl5+Ju+RRWiLabITb6fIwi0WwB7QYHMg4EHLjlQCdJC8AA8/nbduzdgDbiv3U/f8A
                i2+8m3o/1PSq7iea3vLJuC25ELTD2YUjGTtrwq7cea9MAyLkRXHpEeeTnEf29t/aMwZto3pqOvnE975B
                vCU1I3cW5rgQvN42UZW82SknUs1iIlJr3VEizxYTOlhFQxeko/qhX4u29s3afttA+qD80185KvFLVBMs
                ndwp3jJpGG2YOLCULFwkSZl0gsqmEs565BcorH4L6cD1bu3Vs6YB24YnUhC4wvnJt4MtSszIPro/KuZK
                itCRb1By2TjYdWO6R9oTTdHKEicfPEeB5AQre22Nn3A+2baGpG0sW3vkO+W+pi5Ws1d7u83zcikRHxka
                /jYqHhUo4AAp0iyj0yzwR81YTJgfjySjWnbq2d9P23BhfURhHGN6ZGvK29SUvJPLwkLrkGqMrGRTy33d
                sM4mEWjygCZ27R4sHtZg8w6nScwAJapt67PGA9u/CGojBWPL5yXetvak5u4ZG9JW5ZYjCVjo+ets1re7
                YAYrgjdVFsooIPSgCxziUxh/RlAOJt/bNmn/AG99N2ftNOPL4yRedsaiXMwa8pu55FBnLMWMjbri2mzO
                CSiuhNudBBysJly/GqbpE/6oBX6OgrZ9wDoH0n570iWRemRb3sTUW+vxe/pu5ZFsyuBJnf1mfkC/YwS0
                cXpaGRjQKVNYgCYVuVhDqEa/P0PbN2AtDejjN+jKzL6yPeFm5+kLsf3vdc7IIxtxIhdFuI2x5EGjGf0d
                r7O3RAQUTL1KGERUEQAoF1aNdnDAWjLRLnHQ5aV+5Mu2wM/tb8ZXtc03KJMLibNr7t1S2HhIBKN/QtBR
                an4Dyw4UOAmUAeoQHd0jbO2BNIm3/mnb1tS+8j3PjbO77J0hfF4TL5qyuwjvKNqMLKkzQXu8ARZkbsIx
                mVEifYyoKLG+JUa16X9nnA2l7b8yjt525fmSLkxtl1tfKV03fKSLdldKTi+W5W7pxEpsQBBuVEE0xBIo
                dKgAYp+xu2zpx2c8AactubKm23DXtka5MW5kYZMZ3neUpIINLuFXJrMI6RXiE2f9HaFbopoFTRTL5ahi
                GOoAiqfnTg7ZywPg7bYyNtmQ9/5LmcWZQQvH8pL5fSLdreiL68XDRw6dQ4NQ8hsmiLFuBGyYdBgBTq/w
                pqYv2cMAYu2w732uIu+cjv8AE2QIK7I2bvtzIN0L0LJXZcgXavKsk23DZIiT0iRhZgHlKpgZJQDFUPzy
                Me7POBcebZVx7XzG+8kSGKLqhrojpi+XMi2RvEz26Zf3y7ftEUQ9mRTIoCYFaFKKY8GMbkTmrZtjZywH
                bO1xcm1UnfWRnuH7oiHbKQvtd61Tvcko4vptkVCVbAUBbkIlJtEDexgHlmSAyQ/CYa22WzfgRptbp7VZ
                MgZPNiQkQ/Zmv73qiW9jScjea1+uZEEif0UrcX65/wDU4oAiKX6MQHkwjpkdm3Achtgo7W5r7yQjilvG
                MUE7+JIIDefvRhcRLkJKHbG4aikZYolFiIeSAD2DkAEOdc2z3ga5drCK2olr5yM2w/D21DQ7S/U3rRW+
                RlYfIIZQTmlAUL7OZM8uJjiw48krcQbFEEyhXDv7ZuwBf22Ta21+9vrJDHFVoMIRGJvttIoq3kaUhZle
                aTkXiK4i3USOs5WAzLgEgAS8ByUBplvZuwFlzbJsva/k7/yfF4qsOPshvA341lknN5e8bImPfLN7IIOf
                6M4QVUMoX2FQoopAKflgAopiG5m/Z0wJm/bWx9tmSl85EgsW42ZWclAXwxeNnl4nkLRkVpZOQfpuuG6p
                XC7hcxm5i9BCmAhOxAGuRqV2esCalduXFu21OXxkW2sXYcZ4wb2VecS9aOrsIvi9irExjiZTeF9nelcN
                XDkiqSgAUFDkVKPUkUK4mpvZu0/6m9vjEW3hcN85Kt3GuFo2wmNpXfFyiT26FlbFaA0QdTKUiJkHJXAC
                oYUT/Aj1ACQACZADRq42bcB6ttA+Htv6479yVaWO8HObHd2VeERIoSN0KL2RCuoJsedSkf6O7BdB4uJi
                qhyQ3SZMQ6e/6OszZ70/6ztDeCdCN23nkW0cdaeI3E0Pj654KQbPboFjiOzE7Ahiz5pAvlPTuI0hirqH
                ABBY3nF+IoBXE1xbOeA9c2j7CWji9L8yPZtl4GWtQ1n3Jbz5s9m3SVsQAW6CU42kgFBwK6AAPWbumbno
                7DxWrXZs54B146TdP+kS+77ybaFk6cZOx31jT9vy6chcDxKyLNVsNshcZ5UDJvFF49ZQDuVA80ioioQe
                TGAabgOzngHcI026e9MuRL4yNZtoacVLaTs2Wth80czMlG27arazgYz4yICmuddm1T5cCHWRTqUL3Ea5
                O4ps/YI3G8E6f8D5IvvI9lQmnW5omfs+ath+2eyEkhH20FruWE6hKAKa51kCImK7H9KkYD9HZU9bG4ds
                56f9xfEmnbD2Sb2yPZUBptlYV5Z7205NNeTko6HgEra93TDiS6hOoq2QJy8AfOKfk4DyI1p3JNnPAW5j
                YemzH+Wb6yTZ0RpnmV31sLWfIthXuCLkYyMiJaKniyAGKZVVGJagi9APNREVRJz5pq5u47tBYI3KE9OR
                MpXzkayw02XMlO2yNoSKKgTbMgNirRcuEhzwob2RHpek/TE+LgfiNzwtyDZywBuXNtNjTK985Js5vppm
                TPbbJZ8miB5+IXKxTeRMqs8+JNVUseiAP0BBYoiIh344/S3IdofBO5heGmS9Mt3rkKzpTTDc0rO2wnZL
                xq3Qn2c0/i5KTiZYHICZMTLRDMyTpEQUTADlDsca4W4Ls8YD3FMn6YsoZVvrJdrSWmKaYSUBGWnLJlYX
                Kwj5tvPJMJUzzk6C4rty9UggPnCUeOewDTcB2eMB7iGatK2bMpXzki1JrSxIrLwUTZ8kijHXVFqzrC4P
                dsmZ1yZooC7AgGeNQBUxTdJuegnHN17bQ+C9wPUJpW1GZOvjIdr3VpWnmkxbcRaD1shD3Oiwuhvd7VhL
                CsHmICV61TEzhuIHFPknbnmuHrl2eMBa8dUelfVTki+MlWteWltxFe5Yiz5RNpFXVGwN3Be0QwfrqB5z
                NVN8KplHjU3mqEMUo8eWUarrP2esCa29XWmvWBkW+skwN5abXkc6h7YtuTSTty5CRE2SfjUnhXHKjMSu
                Ey+co14MsQOk/YA45OrTaEwPq+106TNeV93pkGEyFpLlLLmLatS33rYlsXW9x3fSmRrONNC5AyqBUJQ4
                GclbcA4RL5R+ORMOxqu2e8CauNcunHXbfN8ZHg8g6dW0S0irVt6RRb2xcyFvzK05C+3KdnDQya7hXzzN
                jAKxRKU/YgU1KbPeA9Tmv3TxuD3hfOSobJOng1vLw9pQMoila1wurRfqydunfHUAVmyRFlOXSDcelyTq
                Ip2OatzP20DgfUJuMafdyS6L4yNF5R0+RdssYazIqRRCzZ5ezJl9O228f+0AKyAJryC3tKDfhNcoF6wA
                RMYdzMe0JgbNO5Dh3csuG9MhMMq4eh4+MjbMjHzclnzDqHinUNEv3onAV0QTQdqeagkIEVNwJx9eeLlz
                Z7wNmLcxxLudzt95Kj8q4og7ZjGVjRkmilZ0w+s9F63gJBwqIe0oIlI6AHLFIfJXEhxOH6ZTnfv/AGgc
                DZD3MscboErfGR22WsbwTKJjrJayKA2U+dRsO7g49+480BXIQjd6t1tUx8ox+k48CHfRdG0Bgm6t0q1d
                1d9fORkMv2rbjaGbWI1fty2S6kGOPlcZs5Y5x/pBEwi1RKqyTEElVeVD9zmAdE5s+4GnNzmE3RF73yIn
                liFt5rDlsZKQQLZrl+xiFIRrLKKFAHBSFbqB1MwHyjHATCHJq1pbQGCEt0tDdYLfWRxzE3tt/CpWIL9s
                Nji+kMfK4zXk1jce0nSCMXV6GRh8oq3QqHxJl41Rm0FgaM3RJ7dSJe+RVswTtuJQqtjKyKH5EtXqdmN7
                CGTbCAe0AmaPbJcsgHyvOE6vcxxCtFm7PuBrL3N7x3Q2F85Hc5YvC3pSHXsZzIIjZjN5NRiERIyKavdy
                omKKI+WyOPlJmEDFDkha3LE2g8EWDugZD3TIy+MiOsu5DgHUS/sZ4+bqWWwfSFlNbCfybc4ADhQho9qm
                VFooIppHHrJxwUAYr2gMC4m3Kstbm8FfGRnWWMtw0tGy1lPJFALKjnU83ZtJd82BIAXVKoRih5bZURTT
                N1GABEeQ2cHbPeBMFbkOcty63r4yVL5UzcxuNB9Zk1KJLWlbz67/AGUbjdMVgD2hdE/swlaNFx8pqQxS
                pBwknxr087P+BtOW4PnjcRtS+cjS+S86sZRnJWfNSCC1qQCk77OM0uzVDlw58z2YnkJrm6UO4E7cBW7p
                s2hMEaY9w3UvuL2fe+RJfJmpiOu1hP2dNPmxrRtw9+XZHXndi8WKAFWX859GN/ZUnHJW6YiQnPYQ4+lb
                Z7wHpK1y6jNdliXzkqXv3UWtOupq0Z2USVtWAcXRKlm547LyeFXRTuQOdsm55BApgKn+qA1o0c7POBNF
                2s3UxrWsG+sk3JfupVCVaS1u3VJJO4G2Gc/cqd1TaTFcnK7xRVyg3BFZ0ImSIUxCdlDVy9E+0NgrQ3q3
                1Y6vsc3zkO5L31YS1wyVx2/dL1s4gbVTuq9xyBON4k6YCs5E8jwKSzkwnSS5SATAIjXH0ObPmBNB2p/U
                3qkxrfOR7kuvUxIrO5iAuqRQWhbXbu55e43rWP8AZuDvDGcrj0LugE6ZA6ScAI87egzZ2wFt/ahtVOon
                F985Mui49U0tMvZ2Eu+VTcRNrMJ67lrzkWMeq34VerC7VDy3zo3nFIBigP6U41ztvfaFwTt05o1R5uxX
                fGRLruHVJcITVyR15vWzmNtpqWfeXMEbEigHWsPtT5cRcuDCoJOkg8gWuHt2bPGANt699U974nvXI12P
                NVM2zfXCzvCRbqIWvDxr+UkmMNEKtAA66hVJZwJnzgRVEAKH15bd2z1gTbju7UxeGLr5yTeDzU3PvJS4
                214SZBQt+PdyDqSGMixYiHmqgo6P/Tlg84QAA571v7bW0BgXbLc6nneI72yLeKuqK44aZur8s3zZQsBH
                26MwaGiYUrMocmTNOPvNdq/pFQ8oD/4MK/P239m/T/tqW1qMtbF185MvaN1ISyju5z3lJo+1Q8UDJ2wa
                xkYuyABOsmk8VAX6vKpzcGHvzz+jtx7QOBtti2dRds4tvfI14oakrkczd2O7skUm7iIZqMXLBpGQZY3p
                ImoiR2v/AE3jzjj0iYfgLx+btxbN+AttbEGonDWLr8yTekBqQfKqXW+u5+1Tfw0UWBf26xjYEkeUCJqI
                t5Jx1u+PMVMCZj/4Mtcjb52dsAbeOBtQWn/Hd7ZJvO2NR0nczq9Ja6JYjWaYR9yWypaKjCCWjOkG6qLI
                4gV6H6UynChh5AOG3ts84I28NNud9NeO78yPeluagZuelbwnrmfNWUqxQl7a/JZFjAoRgAk3Mi3McRcB
                8aphL1/qFANGg7Z0wDoL0p6gtJViXvkS8rH1Hhera+Ju5HzVrPMo69bQXsdyzgjMA8tudBguYCLFL1GU
                4UMHVW3oi2ccBaHtGOedFNkX9k+67D1Dy9+y173NNy6UdcrEb8s9rY7lK2vdfCTIzdgzRAi6QdZ1eVDj
                +qBdOjzZvwBo40RZp0OWhfOR7osXOyd4kvG7JqRQY3Gj+V0P7lEYVKN6UW/s6XT+p2VHnzOQEQrnaRNn
                zAmkTQNmnb7ti98jXXjXPTDLUdf12TUg2ZXUCOXbUGypkbfBgXyWQt44EioeWA8rFMsIdahgrhaYNm/A
                emDb2ytt2Ql95HurGeYhvZa7rwlX7ePuorq9GjZm4WiEmP8AR2pUCtEBKRMODiBusR6q06f9m7Aen7bj
                yttsQl/5RnMX5giL+jbnvR/MJsrubLX4PU5cQyTHhu2SQMVPqakL5SwAoCvIKn5rhDZuwFhDbUyFtlxN
                9ZHmsX5ObXyF03y+fNmt4Gkb4UR9rexqDThu3Igm2bEI2LymcSnMfuqauZjDZ6wJi/bEu7a3j75yNJYk
                vWFuphMX06ftm97BJ3Rcid2LSrQG4eQmmk+RRMDMA8syQGRN8JxGuHYGzdgCwdsCd2tW19ZIk8TXHGXc
                3k77cSSCN5mlbtuZW6nEm1bpf0VFJJc5CgyIAJHKU3XyZQ4jqt3ZxwJbu2HO7W6N/ZNdYnn4t21eX4vK
                JBeiUm6uRC6feLVFPhsREjlukAMekUejqDj4ua2zbNuAj7VKG04F+ZILh1vEGaBf5HzQl9nmFMpHzErL
                nApQb+WaaOYRYceV7N/R+eir1NFGkqxNDemTFWlzG0xcNwWhiqFXiY2aulyVzNSZ3kitKPXbsEuE0+tZ
                Y4lRSACEDgA+fN1VKUrhSMawl49/EyrNtIxkozcx8iweIkcNHrF6gZs7aOkFQEp01EzGIchgEBKIgPav
                O18S7sHabdKuLr03AtOc86xvGyN6wrC68IpRIvLUGWup6DYZC1XiAgaPIZXlQ6CgCmAj0kEvIBUGAQ5H
                njtzwAc888fIBrTSlKUpx+Pn+6lKUpSlKUpSlKVqAQD1DuA8h9v2DXp2+HA3wdJOZsQYh0GzlnWtp2zp
                acQ1tS0oKEZpR9oZTUj2ZjhKR70eDe9nPQJ10lzCZRQR6DD6VMJrSYekDCI9IFKJhHjkOADkefurxs9/
                fJ8VlbdY1cXDEyCkm3ichfkf7WCPkIf61oxCNWQSRKI8+WsCxRP6cgH2iM4HweOLEbN2zbnv4zYE32U8
                43ZJqOhSEpl2dvNW9vNigbj4gKZE4h8g5qWbSlKUpSnFU4/H7eacevce/wBtOAqvAU4/Hrx93NU4qtOP
                7PpTgP3elB704qnAfj+yq04/H8aVTinFVpx+P404D6U4pVOPX7arVOP41XgP48/tp+P48/KnH8e32/vp
                x9/76cUpVOP7acf6arwFU4D6fj76rxVOPtGnH47VWnH4+6nFOPlSlOKpwH7/ANv86rVOPl3+yq0+v2/j
                tTinFU4CnAfv/r+6nHHp2pxVePv/AK6px/X/AB+2q1TgP58h8h5+tV/z/wAaU4oIc04+/wDfTj8fxpx3
                5qnH8KrwFU4/Haq1Tj9n3VWnFKcUp/H76cUpx+PnVOPx/XTgPuqvHFOPl6fdVOPl3qtOPT7KU478/j76
                U4px9/76cU4+/wCXz+lKpx/p+Y/fTj8ft5pwH8OPt4++q8cUpxTj8cjTj7/66VTgPx/Gq8f2fZ+6qcB/
                Dj9n0qtU4/H0qtOApx+O315CqAHH1/H04qtPWnH8uKcfs/dTj8fSnAfj+NKcf2VTgP8AT/Cqh2px+P8A
                TVOPtH8DVePvpwHf7acfaNOKVTgPwAfKnSH4+/mnAfw4/A1Xj1+39v8AOlKoIc/spx+38eg8VWlKcB/D
                j9lU4Cq8VTgPx/Kq1Tj7/wAfMKcfj6U4D99OPxyNVpx6/bSnH8uPv++lU4D+HH28ffVeKcfj+ulOKcB+
                P3U4+/8AfTj7/n8/rVOP2/fTj+fNV4/q/hTj+r+Hypx/H1pxzT0pxWjqDq6eQA3HPHIdXSBgDkS+vHfj
                mtfH+j+dKU4/H+aqcBxx+P21WnAfj7+acfj+un4/zVTj+36fypx/o+VO/p9Pv7/tqnPAj6gAdvTt8/p+
                P41q4/H3U4/H3+tOKpx6/b+PWq04/H7fSlKpwH3/AH04D+X8Krx8qoIc/MacfaP76cff+PlTgKcB/m+Q
                /eFOPr3+/iq8VTgP6/66rTj8fdVOO3H49earVOPx9PnVeP7aUpxxT0px/X/HvSlU45/Hr99VqnAB8qcf
                fVePnVOPx/Gq1TgPT9n7vSq0pSldEamMH4g1G4NyPiDO9qML0xZd1tSTa6oR+2K56mbduZ0DxkUQExHL
                cxPObqE+MpylEvcK8SLWfaeHrH1MZftDAUHekFiK2b0m4GzEb/eC/uZ1Gxb07Qr56uLZqIAqJepNMUuo
                pRADCI1a5xwAc9uR+fy/ZVKUpwI+gCNZnto3ZL1Nbs98yaVgHb41wlaKxm995vuVgu6gYt+ZuLhpAwcc
                kYikg+W44FNE3QkA9Shihxzl43HvCR5B0Waarx1J401cWflSIxjbK1yZCte+LL/Nk6I0YkKd6a1J4srJ
                IOj9zCkg5RbnP0gBRExgLUOsSiAiHbsPA9w+vHNaaUpSlKUpSlKVvtmyztwi1bJmWcOVk27dFMOTqrrH
                BNFMgfMTGEAAAr0wfDn+Hej9KEJY2uDWFFIP9SM4zQuPFuNgWFdhiCClGia8XMTLlmuKDmbdInE50BTM
                RqQSlAxlesCTMK/InngR0LMPxUBMGUY/dCcwCJSeztDq9ZgD5BxzXiBa/bgc3Xq9z3PvRKq5lsqZDlFX
                oJlTVlfeF5v1275QvI/rIimQvfuBQ+teqT4cbF44u2hNKEeqzIyc3Rb0xfTghDHMKxrrmlpJNwoBw7GM
                Q4CIB271nLpSlKUq3fPmrXTVpab2+71EZpsLD7e613La3Fb3mkogJlZkQFHabEFAETimBgE/AcByH1Cr
                bi7uu2YcxCF1s4CEyhgIQPy0bByYR4AORLwH7avPxjmXEuaoP8pcQ5LsXJsCUxCKyti3TC3O0bnUARIk
                8Uh1lfJOIAIgmr0m478V2VXUOa8+4Y042YbImdck2riyxySTKHNc94SScXE+9JE4kYsAcqAICqqJTdJQ
                DnsNfUY7yRYeW7MgsiYyu2CvmxrnZg/t+6rakEJWFl2YnFPz2T1sIlMAGKJRDnkBAQEAEBCvtqt7tbVf
                pvvfMlzaerSzRYFwZtsxNwrdOMYycQc3dCJtEU3Dsz6ML8QeWmskZTgR6QMHNXCV0BnvVTp10uxkFM6h
                cxWPiGKud8vGW+/vaWJEtpaQbIC6cM2ShwEDnImAnMHyAOatj/vu+2X3/wBuzgIeP/qyR7D6AA/BV4eI
                s74Yz7bhLuwnlKw8qW2YE+uWsa54m4m7UyomBJJ+WNVUO2UN0iJU3BCGEO4BxXbFaern0+vHpz3/AGfz
                q3zOOrPTNpojzyefM64vxOgRAHQIXnd0TFSirY3PS4bQiigvVSfCPxpIGDkOOatPtzeY2tbtlm0HA64s
                Cu5N4dNNu3WuhWOIc6ipUSALuTQRRL8Ry8iZQOA7j254yIWledoX/AsLqsW6bdvO2JQoqR1xWrNR1wQj
                8hR6TGZysSoqgp0j2N0HHgeQHgQr6WgiAevzHj9tW33FrA0v2lmyF033LnXG0Jne4zsE4PFclcjNreEi
                rKsxfxiDeMUHkVHCJRUQTMIGUDgCgImDm5CldIZ31J4G0w2zE3nqByrZ2JLVnZ5G2IidvSVJFR8hcC7B
                eURiWyxwHqWM3auFQL/zUzDXZVn3lamQrWgb3sa4Yi7LRuiNby9vXJAvkJKHmIx2XrbvmD1sJiKJmD0E
                o+vIDwIDX0tcR4+axzN3IPl02jFi2XePHSxuhFs1apCu4XWOPoUhCmMYfkADWPZ1u37aTJy5Zu9amBW7
                po4VauUFbyQKoi4QUFJdJQok7GKYDAIfZW2nu6bZqqhEk9bGAhOociZA/LRsUBOcwFKAmMUADkR47jWQ
                qMkmEzHR8xFO28hFSrFpJRr9qoVVs+YPkCumbxsqXsZNVM5TkMHqAgPzrnUpSlKUqyfKm49oTwffE1jX
                LmqfD2P79t06Kc5alx3SgymYs7hIF0iPWvSIkExDFMACPoIfWuvP77vtlj6a2cBj915If/8AFXk4dzbi
                XUFY7HJWE8g2vk2wpJ0+YMbrtGSSlodw+jVvIftCuke3mIn+FQggAlGvsLuu22rCte4L1vKbjrbtO1Yh
                9PXFPyzgrWMhoaMbmdP5J+5P2TSSTKY5zD6AAjVg39942yuQ/wBuzgPv6f68kPpz8yV+lDbsG27cMxGQ
                ENrOwM/mJl+0iotilejUqryQfLlbNGqZlSlKBlFDlKHUIByPcayE11bmLNuJtPliyGTc2X9bmM8fxTqP
                YyV23W/LHQrF3LOysIxu4dmAQKZdY5Ukw47mEAqzX++8bZnAf7dnAXf/AOrNDt6/Qn2etXJ4Q1caYtSi
                bo2BM8YuyuqxAx3jKzLviJeVapEEpTrrw6SgOipAJgL5oo9HI8dXPariaUpXUuXc9YVwDbprszblSwsV
                28UiyhJO+rnibdRdg3ABXJHJyKpFHRyAYomTbkOYAEBEKs2szeB2x8g3RGWXZ+tbBczc8zIIRUXFJ3Oo
                zVeyLlwDVuzRXkUUUhOdQxSEAVO4iAB6hzkgIoRUhFEzFOmoUpyHIIGIchg6inKYOwgIdwGvlb6vuz8Z
                WhcV/wB/3FF2lZVpRbmaua5ZpwVpFQsSzKBnT9+5N2ImmA8mMPpViP8AfeNsoPXW1gIP/wA80OP2D0V+
                zbu6vtyXbPQ9sW3rKwTLz8/ItIiGi2t5NRcyMk/XBuzZtwOUpROocQKUBEOREKyBV1LmnO+HtOlkr5Iz
                lkW18XWI2kGMU4uq75AsZDoyMor5MczO6MAgB1jgJSBx3GrPv77vtl8/8dnAXb1/15t+3Pp/kVc3hHVZ
                ps1JtHDzAecsYZaI0Ioq8bWTd8PNSbJFJUEDuXkO3V9qRSA5gICqiJSCI8AbmrgK6nyxnfC2B4hpPZpy
                tj7FkTIHXTjXl+XZC2yWUUaqIpu0olKVWSO6OiK6PnFblOJAOUxwABAa7RQcoOkUHLVZJy2coprt3DdQ
                iyKyCxQOkskqmIlMQxRAxTFEQEO4DXy1/wCQLLxXZlx5EyLckXZ1j2hGLTNzXROOAaREJFtxAF379yIC
                BEy9QcmEPnXw+D9RWDdS1pub6wFlSy8s2iyll4J9PWVMt5hiymGyKbheNdmRHqSVBNVI4FUKHJTAIcgP
                Nd0U5q3Fhq+0wymcHumqOzpjd3nuNBb27FCNxsz3k1O3ZEkVkVYsB58wqChFRTA3X0iA8VcdyHPHzpVu
                OftXmmbSwW2jaic2WDh4t5Gky2sN8TJIgJ00MCIygR3WUfM8gHCHmcenWX61bl/feNsr5a2cBD3EP+Gb
                fnnjn06KucxBqs006gCImwnnnE+T1XCCjlNhZt82/My/s6P+FXUhWy4vCELyHJjoAAch3rv7n6CAh8qr
                T5/j9tWTZv3IdB+m+YNbubtV2FcfT6axm68HKXkweS7NwQwkOhIRsOLlZucBAQEi5CDz8q/TwLuEaI9U
                Er7hwFqgw7k6fMYxEYCAu5iSddnLyJisIWSFB04EAARHyEj8AAiParxefT8cfeFVq2pTWNpaRzsppiXz
                vjZDUCku1anxI4uNohentb2GSuFm0LFqiAiqsyWScpJAPUchyiUB5q5Wuucq5dxlg2xprJmX74t3HWP7
                dK3PN3ddMglGQkYDxyVm1B07V7FFRU5EyBxyJjAAciNb2MMq45zTY8DkvFF5QN/WDdDY7u37rtp8nIQ0
                s2TWM3UVZuk+AMBTlMU3IBwIcV2BSlKUpStJjAQBMYQKUoCYxjDwUpShyJjGHsAAFWCZZ3UdunBtyLWh
                lTWPgq1blbCBHUQe82kw6aK9+pB2MADoqShRKIHTUMU5RDgwAParg8A6otPWqe2X946dsv2NmC2op4hH
                ystZMyjKoRb10iLlq0kUy9KiCiiYCchVSFEwAIh6V31XUds58wjeuQJ/FNnZax3deSbUaLPbnsi3Lvg5
                u5bfbtnwxjoZmKjV1VWx0nBRRVTVKU5Dh0nKUa7bEeO4+ncRH0AAD1Eeatwwdq/0w6lpa6YLAmcsdZXm
                rJBE12RNnXC1lJKBTXcnaJLP2ReFCpiqQyQqdIlA/BREBMXm5CrHcmblegnDV93JjHKeq3DtiZAtB6nH
                XPaVxXOkxmoR8szTkEmz9qYoiQ5kVU1ADn9UxR9Br52B3Wtt+5ZZhBwutHADuUknCbVk3PfkYyIs4VMB
                E0xdPhTRJyI8cnUAPtq/SKloudjmUxCSTCYiJNsi9jZSLdt38bIM3BPMQdsXzQx0lkjlEDFOmcQEO4DX
                6FKtvvXV/pgxxl23MCX5nTHFp5lu5ONVtvG83cTRldEwnMLKN4szNgqPI+0HRVKlyICYSiAVcfz3+X76
                rXTOcdQ+EdNNotr9z3k60sUWY8mGsA1uO8pIkVFrzTxBVy1jU3BwEBVOmiqcpePQhhr7PHmRLGyzZFtZ
                IxndcHfFh3jFoTVr3Zbb5KThJyLcCJU3ke9biJTl6imIYOQEpimKYAMUQD7Ord7R1aaa7+zNdWniy802
                Dcub7HJLKXdjGJm0Xd2W8SCdJMpkZONTART9lWXSTWAR+ExgAauHDv8AvH+A8VWlKUpSuBKSkfCRshMS
                ztFhFxTNzISL5wboQZsmaJnDpysb5FIQpjG+wKx5hu8bZYjx/dsYDHvx2vND6eofB3+ddpYm3DNDudbk
                Ss/EmqnCF8XU5Mimzt+Jv2FJLSC7hcrZBrGMXyiKjlY6hykIi3Kc4iPYtXj9Xfj078dwEP3f21truEWy
                CzlwoVFu3SUXXVUECkSRSIKiihxH0AoAIj9lW64H1gaYNUDm4menzOmOMuvLTI2VuNnZNxNJd3DoPFTI
                NnDxsmIHKmc5RICgFEvPAc8iHNyAen4CuoZLP+D4fKMNhKTy3jpnmC4AXGIxitd8GF9PAbxQThxC2CrC
                7J1MzFcp+YkXzEx6idQV299fs/s5roTPWqPT1pdibfntQuXrKxDC3VJuIa3ZO9pUsSzl5Vq2B2uwZrqA
                JTKlSHrEoiHw9/kNdv21c1v3nb0JdtpzMbcVs3JFspqAnYd2i/ipeJkW5XTGQYPW4mIokqmYpiHKPAgN
                cG+L4tLGtnXPkG/bgjLUsmy4OTua6rmmXANYqCgIZoZ9KS0i4EBAiKCJDqKH47FARqw7++8bZfr/AHbO
                Avn/AOGSHy9f8iv2bc3V9uW77igbTtnWPgyauO6JmLt634djeDdR7LTc2+TjYqNaJiUOpVddVNJMoiHJ
                jAFZAqUpX4dxXNblnwshcl2z8La9uxKAuZSeuGUZQ0NGtwMBRWfycidNBEnIlADKKByIhWOq4d5Pa4tW
                ec2zOa4cDNJpm49lcNUroUkEiLicUwIV9HILNzByA/EVUQ+fPHer3cSZyw5nu2U7xwrk6x8pWwcUymmb
                HuWKuJo3UVL1povRjlTmbqCHfylykPx36a7UoPoNfN3XeNpWJBPrnvi57fs62o0gKSFwXTMx0BCsUxHg
                DO5OVVSRTAR9Oo4c+gcjWP8Am94LbDt2eLbMxrcwI1mjKqog0Tu4r1PzETCRQovmKSrfsJR7+bwPHYRq
                8LD2oTBeoKFPcWD8u47yvDopN1nbqw7thbkNHpuzqJtBlWkasos0FUUlfLK5TIJukwlAQCu4q0mOUoCY
                xilKUBMImHgoAAciImH0DgBERqxzLe5joAwVKOYTK+rvBVozDMRK9jFr7ipV+zUKqKJ0HjWCM6OioUwC
                BklAA4CHcoV9HhfcD0SaiJNlCYV1SYUyDOSSyTaMgoa+oZOelHS5CqItYyEkFEXThUxTAIJopGN9nYeL
                wqt3z1q002aXSW0rqGzTYOH0rxWfN7XPfE0jDlnFozyhkCRwq89fkgsl5nyL1l5HuFd8xcrGzcbHzMM/
                ZysRLMWkpFyce4SeMJGNftyu2L9k6QExFUVkjlUSUIYSmKICAiAhXMOoVIh1FTkTTTKY6ihxAhCEIAmO
                c5zdgAA7iI9grp+f1E6frUUVSujOmHLbVQFQqyc/k2yoc6QolA6oKkkXqYlEgCAmAfQBAR9at0vDc+28
                rCVURurWVp7jlEllUFAQyRASwFUQT81UoHh1XBR4L35ARAfkIj2rtfTbrG0wawYm553TJmmyszRFlybK
                Gup/Zrxw7QhJORbGeMWj0XKSQlMqkU5yCACAgUe/arl62V3CLVBdy5VTQbtklF111TgmkiikQVFVlVDc
                AUpSgImEewAAiNW94I1b6Z9TylyJafM3Y7y8raCjdO5krHuFrMKwovDnI1O+TRHqKRQSHApwASiIetXF
                UqzXMe4Zok0+Xw9xrmzU1ifGd+xrNi/fWpddxpRsy1ZyaPtDBwq1OUeCqk+Ig89w+6rr7cuSAvCAhrrt
                WYjbitq44tjNwE9DO0JCKmYiSbFeR8lGvmxjJqorJHKokoQwlMAgIDXGu+77ZsC15+9b0m4+27TtaKeT
                lxXBKrg2jYeHj0RcPpF84N2IkkQBMc3yCuv8H6hMJ6lbOWyDgTJ1oZXspvMPLfcXLZkqlLxbebj0UnD2
                KXXR46F0yLonOmYAHpOUfQwCPclWU5X3HNC2DL6mcZZe1S4fx7f9vC1LN2nc1zosJqMM9aletQdtBKIl
                FRI5VChzyICA110G7xtlD/8ALawEH33mhz//AKVeFhnO2HtQ9lNsj4PyNamULEdvXsa2uiz5RGViVZCO
                WFs+Zgul6KJHASmKYAH9nA12zSlWx6xdWGK9EunLJ+pXMUmWPs3G0A5khakUTLIXDNqEFKCteHTOIdbt
                +5EiCQfIBMcfhIYQwFbFFx6/9dmecx7sOqC/bisXAmVbMlMP6aNM7dZ8WyhshG7Gsya/GkM4UKmmdqrH
                FaNpcUBcPhVdmE4NQQJUpGsfM9ut7cVsTctbk/rJwXEzkFIO4qYjHl4IJuo+RYrmbO2bgnQPB01CmIcO
                fUK+lsHcu0AZPmk7csXV/gOem1jEIhGlyJAx7hdRT/BpIe9lUCnOb0KQphMI9gAavcRWScJpLIKJrILJ
                kWRWSOVRNVJQvWmqmoQRKYpgEBKICPIDzW7VtjXWHpde5wc6am2dsbKZ7ZqLIuMUDcbRO8yuGzQHy7Yk
                SoIGMqVEfNFIgifoATdPACIXJAPPP2DxXVOZs6Yg072S4yRnDIlr4vsNq/ZRS903fJJxcQnJSRjEYMRc
                q9vMWEhugoByPA1Z1/feNsvkA/u2cBAPADwN5odwH0/yKukwzqi056iGgvcG5uxhlVMiZllkLJvODnZF
                siUAEVncSzWM6RJ3Dg6qJSj6c8hXewCPrx+PsrGRu36bNTmp/RtedlaRM4Xfg7OFtScVkG0JKz5d3b7u
                839nr+9m9jvpuPOm4QQfHIBBAp/LUN0prFOkYwDZpsTbs8tr2xnduBNRLALN1t6ZVCWrmK2XxAjnl3tI
                xwMOF9sotXpOQ4uEjISKJCiVJYSmAehVPmQIHoFKUpSlK4ErKR0JGSM1LvG8dExDF5Jycg7UBJqwjo9u
                Z09euVTdippJEMc5h7AACNdD4F1aaadUaNxL6ec2Y9y+naSzNC5gsifbS6sIpIAoLH3g3T4UTKr5Snln
                EvSIlEAHkOKuHpTkA9R4q3DMer/TBp7u60LCzdnXG+L7yv5NJezrbvG5GcPKz7daSCIScsWy48+UZ1yg
                VU/SQTgYOfhNxcfSussu5mxZgOxpPJmZr7t3G9gQyzNvK3ZdT4sbCsFpBwDRkm4dHAQKKqpikJ27iNda
                YF1laWNUTufYaec8Y3y8/tZFq5uFjZNxNpZ7ENnyhkmjl40JwcqahiGKU/T08gIc89quYq3yY1XacLfz
                nCaZ5vM1hxmfbjat3kFiZ3Mpp3nKNXUctLt1mcUIdRinat11y9+5CGH0Crg66nzPnXEGnayV8kZxyHbG
                L7DbSLGIcXVd0gWMh0pOTMYseyO6OAgCiwkMBC8d+Bqzz++8bZf/AI7OAvTn/hkgPH3iBO1d1Yo136Ms
                5vEo7Eup/CN8yi64Nm0RD5Ct33w7cGEAKiziXi6ThYw8hwCaRhGrsOf5c/jiq1bvnjVppr0vha46hM02
                BiEL1XeNbVG+JxCGCdXjvK9vTYCqA9Xlecl1mHgA6g5Gu/I+QYyzBlKRb1pJRsk0bvo+QYOEnbF8yeIl
                cNHjN0gJiKJKpmKdNQgiUxRAQEQHmuZ+P66t+wXqs046m1LzS0/5msPLauPHsbHXunZU2jLnth7Mi6CK
                by5EuBSFwLF4CPPY3kqcD8I1cDX4dy3LAWdb07dt1zEdb1sWzESE/cM9LOkmMXDQsS0O+k5WSeLiBEkE
                ESHVVUOIAUpREe1dK4E1Z6a9Uja4HenjNeP8voWoszb3GayZ5vLmhlpAh1GRH6SfByeaBDCURLx2+tXD
                VbXnrWLpc0uO7cYahs6Y6xA9u5F84tppe0+hEOJpvGHSSkHDBFQBMciJ1kinPxwAmAOauAhZqKuOHirg
                gZBpLQk3Hs5aIlGKxXDKRjZBuV0xetF0+QOmqmcpyGD1Aa/UpSlKUpStCiZFSHTUKU6ZymIchygYpimD
                pMUxTdhAQ7CA1Fa8R5fG2VpK0uzMzlfS5gLIGpHKicmxxHFmsm34y6lZoqPlOLtl5aFSbvfY2onAxxMt
                wqcAKHI815W7tYHDhdwCSSALrKrAggUSIpAooJwTSIPPBQ54KHPoAVx6Uq4rSdpkyZrF1CYu044jiVpa
                98o3XFW2w6UznbRTZ67IjIzskJP1GrJExnC5xHsQo17TuijSThfbq0o470+49NFQtn4ztponcd2SBWUQ
                rc9wkaF/KC77heD0FFd0sUyhjHH4S8F9AqAN4lbeLuTXlnSL2+dIEjL3Hh6zrmawlzuLVMq4WzDlFV0D
                NOKaJs+oV2DBUQSQ6TCVRQTH4EOKxR7smypkHaxwXovyPfl2q3FeGoOzpdzli3E40yEbjLIDciEyytJl
                JkESugIxcigsofpHz26olAUxINYLaUpSlKUpSlKVdjoctDT5fuqzCdo6o8hXBivCU7fEKwvC/bbjm0k8
                t1JZ8QrJ28RdHICbMVugrxwmJjpIiZQhTGLwPuL4/Rt5tYllt7RkUZe1W1p283tqVQcmeISUChEooxD5
                N2Im8wqrcEzgcTCJuee9fYV0JqjvQ+OdN+dL7SOKatq4pvmaRODYXXlrsrdcKIqGbF7mApwKIh9Arw9M
                yTMpd+WLqmZkEhmJeVSdPgZkMBDPniRHLo6ZRAOOpVU5hAOxREQDtXtMbYlrGsrb10d2wcipFIrAOO0V
                CqoggqB1YJJcwqI8dhHr59Pvq+6lKUpSotfi5MUWfd21opkyYjEVrsxLmrGbi0ZMUyA4ZflnKja82iCv
                HV5ajZY3JAHgTAA+oBXQW2h4dXaf1R7felDP2TsHXw+yPl/CVq3hdsyxzdleJTXuCWZnF4+bRMbKJM0Q
                6w6ypJoAmHp08dqxV3hga6fD+b52lrGmlrLN/XJp+1Fq2W8lMeXJKpPXS1o3rdri0rmsieQbFTbvAbKo
                FdRMidsVcoGKBjHVRMqp6Mofs/YHFYj99rGNnZR2lddDC8YpCURs/Al7ZLt8VUk1FIy7seRhrrtmUamU
                KIkOi6apj1F4EQ5LyACNWKeE3l5OW2hbNLJPXT0IrOmZ4iOByqZUGUY1kGKrdi36hHpTIZQ4lKHYBEak
                tCHIcciH3VBE23eDeLA1xBwAD7uzEPAdv/BWHD8fxqd5UaPxXmN7VvLaZvW7ZmMQcXFjbKeMZy0JU5Op
                zFOpWfLByoIHD0Bw1WURPz8h+Q1ZftIbA+1Tq125NMmdsu6e7jmMl5MxywlL7n0cx5PjTStwoODtXspH
                s4qRbosE1xTAwNmqZSE5EA55Eaxw4lwjKbLPiSsB6UNM2SLulcDagnmOG0hZ9xTzeaMjZOYDPbfkYC6E
                o44JrOYt8wWdxi7xum5IiLY5/MEfaFvRKrEVvZ7jRtsrQpe+c4Bq1kMrXVLx+KsLxz/4mJ8h3Szcum8s
                9L38xGKYNH8qdHsKoN/L6iCfqCOPtc+H2PuI2BC7gm7DlHLOWLqzuKt6Wfi78rZaBUPaj9Y/u+Zu+cam
                I/QF2BfNZR8eo2SSQ8sRFQpwAMu9/wDhXdn28recxEFhu/8AHcscpiNLptLLt+KyjE5i9AqFZ3E8esVx
                AeBAHDVQAHtxwIgOVXbz0MY926NMlr6XsY3Tdt52na07c00zuK91o9a4nalxSPtYovDRSLZsAJEKmkUE
                UCFHp6ukBNV8NfO3ddULY9qXLelyOgY2/aUBL3LOPDdPDWJg49STkVwA4lARIkkcQARDnj5V5COqHMOq
                jPmpPNO9DZrGQa2JYWtO1ISzL8TUXOytq84c6l7YvgGiYnE4N0I2KQVOUqnSQDlTEQ6y8+sjpV1B2fqu
                03YO1J2CsmrambMY2fkOOQK6QdrRK1xQ6byVtuQWbCYntsU8FxGv0wHlNwgqmPxFEK7/AKwI+JfxzaV/
                7PWp11c0U0fPrDLYt92nILN0VHkHccNe7FJN9HOFCmMgdZsq5ZrGT4EyKyqfIAca4vhlrhmbh2ftOvvl
                +4f+5JO/ICLFwcTmaRDG4zqtGSZh79JBVP0/Tms/FbaiSaxFEliEVSVIdNRJQpTpqJnL0nIchg4EDB2E
                B7CHavN80ZbXOkPVT4hrcZ0gZ5x48uLBmOofUDkSyLUtu7rpshSIl4jM9pREGf3naLlk4MmiznHyRm5j
                ikInKYSiYhBqTIHhYdl4OP8Aa7352+Q6gc2cdg9OPfXf+upAdqWxD2Va9tWbbzc7SAtKAhrZg2ii6zo7
                WHgI5OLjG6jlwJlFDERSIUVDmExhDkwiPevoKUpSlKoIAPYa8+nxF2mTDN2b8O3PbF2WwpJ2xq4e6eLT
                zNFR0k7t5xPxs/nsMQvTIy8UZNygsaM6QFdBQqvUHJTFMIGDPmPhYtl8QER08X4Pz5/ugs2Bz3+ybrL5
                o40Y6f8AQXhKM086aLUkrNxZEz9wXMxhJW57gu94nMXM6B7MOTzVzuHLswKKABgIKolLxwUACu9siW3D
                XhYN62pcLFvJwVx2pcEJMR7tJNds9jZKKVaPGyySoGKYpyGEBAwCA/MBrzcdgnan0S67tUWvnEepvGk/
                fFtYEuB00xwaLyFfFlPIxqjkOQtoEXa1nvmftIC3bp8isA8GARDjmpWlu+F+2b7VuCDuaG093unLW9LR
                0zFqOM9ZmeN038W7I+aHWaOZkyapQUIAmTUKJTByBgEOakGVjw3asZWjl3bH162ZekU2l4gNJ+crqYJO
                UwVLHXXYGPX99WTPtwDgQWjpeOYvkeB7nSAB5ARAYe/hu9njbn3CNE1/5X1OYcuC/ss2zne67IPNo5Dv
                q2IlOzgtSFk7fZMom3JJBv7Qk4VkDquRbgoIHIXrMAABLbN57RDY+whrK0e6lNv26r/sePuyZc3KGO5O
                6Je5EmkhYU21PIwIykic7t/Ey7Rz7K4YyCq4j1KgBuk4ED0omiplmrZU366rdFU3y+JRMDD/ABrkUr56
                7LljrNta5rvmBVLEWpb8zcsqZFM6qxY2CjVZR8ZJIgCJjeUkbpKAciPYK893bx0tXB4lPW7qv1Qa7spX
                k4wLgO5YC3LLwnZ08vCsV0Llfyqtt2nGqonBWKi42PjxO9XQRTdvXDkpwdAZJcDSJn3hftpNGYsu4rIx
                JfmPLksa7Lbu2LmIDK97yJnbi2pZCXbsJSOuZ0+aLILnRKRUToeYBRHoMUR5qQs2bIs2zdo3J5bdqik3
                QTAeyaKJATSIH2AUACut812Zb2RcP5RsO645tL23d1gXbATMc8QTct3TCSg12q5FEVQEo8dXUHIDwIAP
                yrzn/Dw7UehvcBybrssbVLjG4r6QwReUCwsB3EZKveyRYRcncE1EOGjhG0HjPzziWPSP5i5jcdwKBe4j
                KzsjwyWz3jy8bXvy2dPt5trjs6firkgnDzOuYpJqhLQrwkjHrLsH0wdFYpVUyGFNUglMAcGAQrP5WLve
                oxhamWtq7XNbV2xrSSax2njId5wpnbcrj3Zdljwat1WrNtyCJRBVo+aILFEpgEekQ54EQGLT4eHZJ26N
                d+3mhqA1N4amr6yhI5jyfZK801yVf9tNE7ftsGAxDdvD29IN2iSqYOFepciQKG5DqMPAVZ3uoaOrc2BN
                yTRFmvQHeWRLTtvJz33+rjx5cMncrhstat4soO67PO8eH86UhpqOkkm5mUgdY4mFwUVOgyZSek9UavxT
                2jZXU3tk3Nla2Yk0jkPSDcjfNUaLZNdw/Ux05TLb2WWTcifwgkgwO2nXShw+FGLPwIciA3V+H61jBrN2
                udPF1y0r70yBiOGNgDJBjh0uPfuLWqEXAvVjDwZY7uAUiHS7gwfpHB1uTGMBhHL/AHtZVq5Hs+6cf3zA
                xt0WZesBL2tdVuTLVN5FTdvzrBSMlouQarAJTpLoKHTOUQHsPPrxUIfwh8nJWTqE3OMD2vIOZrD1uXTb
                0lBSXmHcR/vC1b4nLQgnjdYSFKVSRjVDqqCUCCqVAgiUQTL0zoq6Z1EZptPTrgrLud74fljLSxHju7cg
                Tz05CnBFhbEKtKqiVIwl6zD5XSUnPJhHgORryS8f5q1VYl1NYm3r7rhJhCzMiaxLrfkuhFwq4LKv2T8k
                pf8AZTYFfiFJGEfHZNRMAk4AgB3JwHryY6vuAyfYdmZGtSQaSts31a0HdkDIsHCbtm9ip6NSk2a7dyjy
                U5RIqHBy9h+Xb1+2qKr4vbF1tXZtg23kV7HMj3XivUXYC8BMnbgaSaxN3Q8tBXDDtXJRKYiTpT2FZUoj
                0mM3TEQ5KAh13t3eHM2l9R2hXSVnbJuAbtf5EyrgPGt5XtIxmc8xxTGTueWtputNSqEWymSoNgdL9bgU
                G5CJJicSJkImBSls/wBy/wAMmx0kYpu7WNta5cy7YV/4NjZPJM7i+QvN2u+c2haqBp2WkcdXij5EgWQj
                EEDuwYv3C4O00zESMVcE0182Hh2d0K7NyzRdIL5jfNpDUXp4uSOxvlaVbIg2NeMTJxZpCwMgvGyZSpou
                pFBu+aPSE7HcsVlwAgLAQuf3kfpx6+v2enNRKvEp7qOcMESeF9uDRS/m2mp/U+zj5K6LhtMFFLqtmxro
                uFWzLLtS0jtAMonLXFIN3wKqk6VmzRuUxCmF6mcmxos8J1o9tewIy7NecvfmpfUDdbFtM3sUb6uO2LLt
                edfog5fxEOe23SbyTMgc50lnz94qVY5fMSTSKIBVtW6V4XLEuLsPXfqe2v5rJWK80YZh3l/I4gLd1yXQ
                1vyKt5r7fNsLEn3qysxHzwN0lnMekDhZu6VIVn5SHnFco5K/DW7pl6bh+ky4rHzpNjcOoXTfJRds3Lc7
                tQAmMgWRLNzmta7pUpjiZZ8kKSrORdFKUqhgRObqVOoY0keoDu/VbsVjzxBu3LkayWxLZvK8mmH3Vyzc
                QHsbuXfQmSnUJHyDs6PAncFZnBqZU3ImSImQeSplAJ8VYBPE5lD+80aoOQ5/1UxGIc/blWI/HevuPDkd
                9nvSII8D/rauDjgOOwXO64rOHSlKUpSojvipdema8IY30+6MdPl1v7BvHVjOOmt4XbHSXuZ8FlllUbbY
                2+1mUTFWaJPHyw+3LEEB8ogFA3cwD27pj8KntnWViW1kNQNt3zqJy7Kw0bKXzkabyFeVrNH88/ZldSZY
                G3bYfIINmZVjq+R5xlnAk485wqYOocs23ftcaY9sSKzJbmmBC84y1cz3dBXhMW9dtyuLpRgnlvxKsOxZ
                wchIFF2KApKnE/tS6pxHgeoOKyPcfaPpx/n5qAxuZ2/L7J2+1hfcNseNfsNOGq2YOtltsxFRGJTmZpUk
                Nl2McezlFMgrpHQn0SHKZRRQHRygPbieXb1xQ1127CXXAvEpGAuKGj56HkEjD5LyJlWZH7F2Tq7gVRI5
                Tdw5+Q1Bb8OqWLypvhbqudcKoNo/T64lc2HhnEIkqhbcxGXhnv2yyxYES/REB6ggpKoJDwBSAYCAUA4C
                eDXnq+IA004IvLxDuiG1r+s1WTsHU9Z2ntLO8DByb63pG8hHKk9jqRekmotVFw3dLwsfGsfPbqEOUGxT
                AYDCIjmo1NeFj2qJzB+RfzU44vnD+RIayrglLRvmIyjfVwBGzMNELPmBpaCuh68ZPG6iqZCuQUR80SdX
                lqJm4MFqPg6dReWcgYQ1oacb+uaXuuz9NuRsUymNnc06cP3EM0yyzudjcduR7x0c5ysUl7UQeoNQN0pH
                dLCUA8wamYVwJOSZw8bIS0guk2YRbJ1IPXKyhEUW7RkgZw5XVVUEClKQhRExjCAAAcjXkO64sw6jNZmq
                7VVu5Y1jpRzhzC+pOw4C1L2KZRNta0Y0kzsMJtEmvVyQj1rFFeOkyD0lVXU6h/ScD6n2hfUxbusPSNgD
                UhbLkjlnlPGtt3BIJlXQXWYXAaPI3uGNfA34BNwi9IsVVIQAxB7GABq7OsMPiDcY2xlDaI1kNLijWD1x
                aFiRV/2y9etAdLQlx2vdzB2hJRxhMUySx24uWnmFN/g1jgIGKIlG3rwskjIP9mLTyk+dunacZfWeo6PI
                5WUVBkwTzFLuU2TXzBHoSKoqqYpA7AJh44qRF+PwFQRNq3v4rfclH6G1Zhx8XHfKMJ3Hn68c/Sp3gdv4
                /wAR5pSlKUpXEfMWskydxz5FN0yftXDN43WKU6Thq6SFBwgqQwcCU5TCBgHsIDx6V5q20/tlaN9Y28Hu
                Jad8/wCMXV1YoxFeWXZHH1tRF3XRZyNvqRuXnkSxaJqWm6aGWbJNRBBNBcTEApS8B1ByN9O/ZsDaLNEe
                iW7tcGjEl54Nv/BV24yWlYFTIt0z8VdkTfOQo/HoHgVJ9dy8ZSzF5LMXqJ2jtJIGzd11JmP0GJJ+2T89
                5F1N7WOjXNWWZle4sh3TjWTjbkn3hhUfzS1i31L4+ZS0kubuq6ctYpBZysb4lFTHOIiJhGspRyEUIYhy
                gchyiU5TABinKYODFMUewgPzD0H09KgmbJVj2/hfxIe57inHTcbbsCLDOjeMteP4aQ7CMUygwnGMO1YI
                AVMrZkot5TRPp/RplIUBHjkZ2vcA7iH8v3jUDzxL2N7p0N7mGhXdoxk1XaMpWetC0sjvkE1xYFv7ED8r
                +CNLKgIgcZq1jqsQbBwUyUQbkoiY3VOLxjkK28tY6sTKNnPE39q5EtC3b1t52mcinnRFyxKUuxE4piJQ
                OCaxSqF5+EwCUe4Vhb8SViPGOU9oXVJI5Fbxib7FcRb+Tcdzz1qVZ5BX9B3I1ZxCcSuHB0lZRNyrDKCA
                8GTdmA4CXtXH8NVfF23xtAaZ1LtUdOFbXUvezoJy888y7m24i6F1ow4Lr8ioRMV1UUzAIlAhAKUeC8Vm
                zyFaVu35Yd6WTd0QxuC1rutWftu44OUbpvI2XhZqKVj5OOftVQEp0lkVDpnKbsID3rzaPDw7VGh7XrmP
                Wzi7VXjq58hJYOmGSFgv4nIN62IDJghdT233xHpbQfNBcKLAmicBWE4F4Hp454qWlj/wzO0BjG/LIyTa
                GAb1ZXbj67rZvi1nrrOuYpFs0uK0plC4IN24jn0wdFciTlumcyCqZiHABKcBKIhWfcOwAH0pStpVZJuk
                qsuqmgigmdZdZY5U0kUUyidRVVQ4gBSlABEREeAAORGvPRy1kjVd4m3ctv8A0tYdyjcuINvLTq+dvrjk
                ov2hsxVtGLmQtxK7pxg3MRKTuW5nZFwhI54oKTRsRZQAORq4FTPpa/hVNn+BsZtacxiPI14TaccDV5f8
                1mC/WVzP33lCl73O3gXbWPRW6h6/Kbs00ee3l8dqjW689HGpfwyOqjCWrfRbly97v0sZGuxWDkLXutd2
                pGKPWShJecwtldCO8plINpmNRUcREiQiDrlu4MmBF2RXCnoT6cc62dqcwLh/UJj46hrOzJjy1shQaC6q
                aruObXJFJyC0NIKI/ALpisdRm6AnYFUjgHIAHPZ9yXHB2hb0/dl0SjOCtm14WUuK4puRW9nj4eChGKkn
                Lyr5wPYiLdukosqcf1SlEa87vHcVqy8U7r3y28ncq3rhTbwwRLKEZW/BHWQJEWdJSKzWy4BtFFA7J3dt
                xItVX8g9kPMI3ImqCZTpoIIGkNwPhS9niLtptCyuIsm3NMItBbr3bJZvyUyl3bkEhIR+qxg37VgQ4CPX
                0JNCpiPqQQ7VevtkbN+mTanm88y+ni5MmzqOe1LGCUjMizEPONrSZ2KaVOzYWu6j2TVyKbo8oY7sz5Zc
                5hRR6TFADAbLbUKLxBW4fqgzzrNxVsqaBrhmLYvi/wB5acXnO7befqxEtJzeQmKc1C2IE6zHzGUHFwax
                Jq4XKZwE5VfJU6CM1fNu605eEo24bEsdgjqWc5S1MZVfNUnN13o+yDdePoU82qXl+MBA2Y7bKFbCcR8v
                3g6dL/5RlORAC9/Yk8Mjty6ftUeENU2DFMz46uPBl+xOQoGyyZAPdtnzsvCGMrHt5417N5CS8gigkUEG
                r9IwiQvxccgMiWot/i4sZ2hdm1qjfsxENnF2Yyzxjt1aU55KIyMahczZ/DT8cm5OUTFbuyAidZMogBjo
                omH9QArLPs5SD+W2rNvt9JPHL94bSnhxA7p2so4XMiytFuxaJmVVETCCaKZEy8j2KUA9ArvbXLpdLrS0
                p5g0wHyJc2Jk8sxMDDq5Ds7gbltxGIu+PuhdWK6lEg61yMTNDcn46FTcgIdhib6xvC1aQNOejXUpnxzq
                K1V5RyFiPBmQcgRCV53baJbbeXLbdqKSCHtMfFw6LgWh3CIHFE7sxxKPSdQ/HNWveHS2S9vncD0XXJnT
                VNjC6b6v1jl64bTYOYzJ1+WdGtoWHbILNkBjLTfNEVTGMoPWdUphEOA9O1TO9EW3PpH27bYvi0NJuMz4
                5hcjT0bcd4Jr3HcNzu5aUh48YyMOd/cblyqRNFIxwTSIcCgJzm46jCI3w1hH8QnrPHRZtcZ/uWDlBi8k
                5qj0tOuLVEVPLeJXBlNk4YXHLslCCB0lY23EZp+3XIHwOUkA5AxgGoX2wTfeXtrfdH0/421BxTmwbK12
                YNst0zbyTpNuxe2tltqa4cPXU7cL/okAF62KCpTiBw6vLHgTV6fHPf0+Q8fb+30/H2VWvPX8XNgJPJW4
                HoRtXG1uw6WWNQllRWMkHp1EIolyXLO5SCy7LSm5FTghSpqu0kPaFf8ABpciI9IcV3T4Z3dhvDCOQpXa
                E1uOpWzLjtS6p+1dP7+/jKxsvZ17xsoohcmn+4wk+k6QKuirLQRVBAU3HmMgAwLNypSyd0jj+9za1+3/
                AMm/KnPb/wCpdcOP2+lYLfBzgH97EymIAIf7b/IvYfl/sZ2d24qWRXnweJc0+4bm97jbwbXPZwSdt6j2
                un+BznDRsk7t9zfcMrn9bHcumpNxZiOWjhzAkSjgeNjFUSBMihBBQOaz9h4WLZe4DjTvfnp8tQWbBHgB
                7es3WXLRpom07aBsNtsC6Y7Qf2VjRpOzFyJREnc1w3c+GYn3Xtck5Wm7mcOnR+o/HSQyolIAcFAAq7Kl
                KhOeJJyDdmsfXpoD2iLDkpEkPft6W1fmW2ESuqi8WbXBJGRQVOQPhUBjBNZSQQ6+xFS8/PmpkuLca2jh
                3HFi4qsKIZwFmY8taEtG2IePbptWcfDQMcnGsWyKCQAUoAQgdg+2vvq84C/dB2l7UZ4qPKWkzL2P15zB
                +UpXIt53Ha0HcM9ZSiNyKYLeZU9vj5W0l2bhEvvNv1CkVUCiQ4lMAh3DNPrW8Kltuk085OurTXH5JwHl
                Ww7Kue9rYuUmTLzvuHeSVsxKs2hHz8Perx7/AEdXyBTEzNRBUomAxVOwBX7fhLtW+ZdQWjHLeKcxXRL3
                sppyyk2s6xrim368nJN7Nlbfbyja3XD931LLEZuBXBsZQ49KIkIAABeRle1Ak3prZi8Y+JG23r8sRALb
                ufI114AXu6Si+Ga0qsfI5LPcquBRAOoy8codsuJuROUwgbmp7dYwd5zFdrZh2vtZ9p3YwavWTPC9zXdH
                KuGxXR42cs1Itxxciy6uBTWIdv5YKEEBApzB3ARAYmnh29lXbe3D9Bstm3Uxim5L3ypC5xvuwXstDZUy
                bZjZCKiImLl4dkrD2xItGgnKi/BQVU0hMYDgBzCYBrpDep2z7b2Hch6Z9bW3xlXI1gx1xZSXhF8eTV3v
                ZU8XLwLILkbos5dc5Hj6JdN0lWj1o/M5OPVz1lKI8+hXhe93WS8Q4wyG+Yu419e1gWldL1g9aewumryd
                gkJJ2kqzAxvL4OobpJ1DwHHeuzBKA+v15qCvutRxNp7f50b69cemC1sWarpWIt7PDZsgLWFcoSs6hYWW
                FXLZsflycjByxuQA6Sh7Wkl68BzOmIcFCEOQeSHKUxR445KYoGAf3VrpSlKUrZXboOkFmzpFJy2cJKIO
                G66ZFUF0FSCmqiskoAlMQxREpimAQEB4HkKgieHJtCGxFvxbw2E7ERUhMa4+eanrSte2G6hixzGGx/rH
                ZWlaiQNy8FMZow5bpGEvIFMYA46hqeDStJhEPnx9vH7P515SG8/kbMu5rr2176nsNtnNzYH0B2/ZlrBP
                sXC68fB2DBZKZYyiJKD6QETqy87ISdxinwXoaJPVxHobiFehls36xm2ubbq03ZxcSRJG807MZ49yiPmn
                WdI5Gx6gnb08vIqKB3cSCabaWU4EQD2sADj0DJ+HcAH61YbugY8tTKW3zq7s29IptLwT/Bd+u1GrlFJb
                ynkVCKyUe7Q84pgIqkskQ5DgHJRDkBAe9eUnoC1Dar9su/8ADW4niuBk3WKZG9prGlx9LlYln5FYRBm7
                m98U3UqmUxUHC7NVJ2wVUSOKSgJOUQOdI5K9czSNqtw5rZ08Yx1MYIuIlxY6yfb7eXY+YCaUxb0sl/Rb
                is652KZzg1lYh6VZi/bgoYoKpmMkdVEyap4e+qkR/wCzH9JXHPA2XYg/b309XX2/iNTmqxO75OPrVyPt
                S60oe7IprKNYvEr26IszhFJVWMn7ekm7+KlWJ1Cm8tZIxRKVQodQFMcoCHUNRcPD2bJm25uE7f7TOOpX
                DV2XblRhlrINkydwRWXsk2kxfxkK5bvIYEYK15Jo1S8pu5IgYwJdZxIJjCPUHF9+sTwj+k+ZsmfuzQZf
                GTdPubYCOXkrHh5i/Je7bHnJZmgKiURJytwHVl2RnRygRN4hIAVE5gMdM5AEA4/hk9zzUHlm7s4bausu
                anLhzhpyjZKesO47rVcObrc2hatwoWbetm3C+dEKo4Uh3rmPUZuFjGVUQciX9RABGYVUUvxf2OrQuHbJ
                s7IMpDtF7wsDUdYrK1p0yRBfxkddtuTKNxRyS5gE3ku/ZGhlSAIcmRTH5d8xezhOS9ybVW31Lzj9zJya
                uk/DDRZ66UMq4WQirObRTEFlDdzGIggkQTmETDxyIiPNZKagyeDKDi6t2Djn/hnpbD58chI5X5HvU5us
                QW/fk0+Jdn7Xnc6S4t1JbCrnGhVQUIkP+zJccfiMyZTGMHc4TQp8c8jz8ICbgKgreGf1NXboi3H8YY7y
                ai+tbG2tbHiNushlj+xx8iaTknRsd3W2WcCCXknko50084OREQMn1APIV6kfX8+OA45ER9ADn58fcP2V
                5SPiDc831uAbhmrjIGPE1rhwXoVj4HDPvJuPQzj2cTeyVj3TNpEIJiKmd3c+dtiOEhHzWiDdbkSF5D0N
                dmTJ/wCd/a50UXurI+8pF1g21YqXVMoqsojKwSRoZyzWUW7idIESlHuIcccDxWTylKUpSlKf1/P6ffXn
                9eII2Fd1LWdrFu3UxiOUtjUBi6Qi4+KsWx/ytCCu/H8SwbiZWDQt2TbIsjpGV6jFXQdmOoYeVA571HDk
                PDobzMc2dSD3RDkBOMZJLrKvi3FYCoCm2IossYkcnLC94AiZjAItgDgShz1DxWF+dg5K25uXt6ZbGZy8
                FIvYmUaiYhzNn8e4M1doGMQRARIoQxREB+VflAAD8x9O3Ac8/j7qdPfjn6du/cR+QcV6UXhMdqRjgPB8
                ruEZzt9FllDL7Nw0xIlMpt0z2ZiVumBnU9ydQ5UlpZUDKiqYqZiNykAQDkwjjR8S34gNHPM+70M6I76k
                yYutGUdNc35Vtt4LZvkK52igti2bab9koJlopkPIu3ICALrj0EDoSEx7uPC0bHTiAYQ+5HqxtNULomlT
                u9O9iXPHqFexccIiCuTJdpIEA5V3YmEY7nnhIPN9ThxdZ40S3GL/AG/MFXGYACTt/UbFoIh5RxAI2XtK
                QQedKxSCBRBYrbsYxeQ54544rzJaUpSlKUpSlKrx/D1q/wD26duPUpuUZ9tjC+ArJm5OOPMw/wCcjIoM
                VgtDFtoOXoJyd0XPMHAEE/KRBUzVqJ/NcqgVJIphEePaewPiKAwFhnF+FLVcv3lu4tsi3rHh3kmt58g7
                ZW9HEj0nT1X5qKdAqH9AATcAAAAcdtVj93U7jXtHbq1jTzRykzdM8EX2Ddwqc6RQVcxZm4EKon8XUYDC
                BePmNeMlAIM701C28yatlPd1yZUt9mg0TMbzgbPbjRakQKYe4m6R4ER55r3LcTRKMHi3G0M3SFBGKsK0
                I9NAwcCkRnANkQTMAcByHTwNdhUpSlKVG28V4Af3nLKYf/XjwOPoHfi+0h71gc0kb6e5zp72+dO+H9Pu
                1/P3dZ+LMTW7aFqZ6liX/dMDd0fFNRElwo2nARSBTIq9YHKCUkIcBwBh9Q6H2ec+2Fr83k47Uhur5rl2
                eqW35KKYadsQztpO7XsRvdkUKq1t2igWR5Th2sUdZReMiFeVXTpU6zhVRVRQ6vpRhxwHHz7h9vPzrGlv
                Lh/uUO4b/wCqPm3+NkO6xheEn/xQ1u9+f9sLm714/wDwyP8ApUmuoIW22HHiwdcQ/WOzEA9w7CFrQ4jz
                +yp3tR3/ABSg8bOuchHntfOI/wDroiFRRdJfiR9Y2jfSPpu0Z4a0i2GM7GWpG2/jXImRJ25X6d/+/ZcW
                sJMR9rJIRiAoqODigXy5YSCb1UJwNZ0NpXaE1t5J10ye7huvSjBvm5yoErjLFDYY72uJkyQ4W9b8lLRk
                UYzaIZwrIhU4uOTUM4MoUHDk6hzKKrzCqg9+MxknSzDbds109OlbE7knMknMshMYWqzuLRtSKZPV0hEC
                iZFvJPCFESiIAoYAEAEQGWQ5vcdPOhlnftg2g9ySXD2maDnLOsqBBQjy70rOxygpBQkaVAixyi6IikQn
                lpnMAG+EphAAGLJfW/8Ab1MpYN35XsDZ3lbExrYtryV3XReV6Pb2nY6CtqA9ofzdwyxXDGHFJBJoip5p
                Q6vL8sx+o4CBQzMbDe5PmPdB0n3pnfNtsWJatzwOXp6yY+OsBpKMon3GyjWr5l7SSWculDrlMucp1QOU
                pu3BC/PN/UdjxN+sw2lXbQvuzLdkTNMkampRnhe1E2xzFfkiJUgvrykG3lD5hDJsElSEOAdzHAo/rV03
                pZ2fo2U8O1J6LJWAQb5dzphyVzUos4bN05BvnSU6ch47QWeD0GKRF03j4wVeoDFaKKJjyUTFG3/wg2sF
                9fWlrM2h6+Xq6V8aXb7e3JaEPJrKEfNscZAkVDzsO2YLfGmnE3GR4o5AQKBVJIheOQEamF1hK8RUAf3n
                XWYHADzZtvev/TWOGuo/C+/4n7BX/SvI/wD93wqQjSvNk/uvtR2i7xGO5Rk3S3pelNWuT7nDNmNy41in
                8vHqxEHN5Btm4XN8rHhmL5VZJk5iWjY6JiJkMLkA84hukDZ1NPu5l4g3L+ccUwd57VTHFOFrpu21W96X
                VPsLkBSDsuQcEGYmUZV67QKQxEDCoQTNRAg8AJREeAlj0pXDkHzeLYPpJ4YSNI5m5fOjlKJzEbtETOFz
                FIXuIgUoiAB61FryP4tzbvsu57itS2cc6iMkSNuTL6DdDb1mMI9Nd3HyKsauZuE05RMJBOnyQRAOoDBx
                35rMHtj7kVhbn2EbzzljvFGU8RQVm5VmMVKQmWWEZHzkw9h7XiLpPcEWlFLrpmYqpy6aBDGOBgVSVKIB
                01kdpSoBPiksgXHiXeD2t8q2hZznIt2YytjEeQbXx+zWWbu76uOzNUDu44Kzmq7ZJdRNSUdNk2SZ00FD
                lMoAlIcQAo3rL7xniE8iCnI4r2XpK3IVy/8AKSUngu+4iJEBuUTIrPFU4kQEDGKoZYUgAAEA4HgRqWXg
                +fyHdeHsZ3Jlq2kLNydPWTbstftptvM9nty6n0am4moZLzDGN0t1jGT4MYR7dxrsCd/7RzP/AJqkf/tQ
                9eXttV659X+i/WZuEG0faNJfWBeOS8g3hFS8fGyM40TsdpE5Zk3jaVdtoZi6Fcrk5zIgRRVAAHgwGMIC
                FSxNvzXxvj6gNX2M7F1Z7dDLTdpdnFL/AF7/AMgvoefTlrebxuN5ebslq1kX74EzC6nEYtioqZn8RVTl
                AhBHqLJaqzLccD/c9Nd//qaan/8A2JTg15ru1tvtZ/2ptJV5YyxpphtrIUDkTL0pccdly87iuKOgmNyl
                ttk0d2slERjAyLlZNuik5MAyKZ+k/YnAdQ5ptLG3duT73urTBmv3c/QtywdL9gGtu8McYsh02zSNvW3I
                +TTuaKta2LXbu3ayMXJrlTPLSj12ZVdIVEkhLyUE545SFIQpCABSEKUpSh6FKUOAKH7K1Ur8yYiI24Im
                UgZpmjIw81HPomVj3JRM3fRsk2Mzes1yhxyRVI5yHDnngRqAPK7Xu9Tsm6rsr5u2w4xLUHgbKEi7cSFm
                MWaFzJXDa7WWWmoGAyVjVRwzdFfRHtSxGcpGOCHKCi6aS3lLLonuhxJ4sbKOH8gQuLtyjQreGDna7wsd
                MXraXv1sq0MDgGzuVGx7ubIHUatzdZlQYyDk/AcFAeO8yzFuT7GzTjqzMr4zuBjdVg5Bt2Muq0rhj1Ot
                pLQku2K7Yu0h+XUQwdRR7lHkBDkK/avIP9aF1f8ARuc/+5ateYDs7a8dZujDPmvCN0b6KZXV/dGUb9RS
                nSxz+daI2Albt+zBmDl60h2LkFwf+2KpEKouh0mL1F8zgwVLc27Ndm9xqC1Z2hZWsPbxZaadM8ixv15d
                F9PIedTmIl0wtV3JWXGIyEg+FM/nyBWjVRX2T9JybgiYj2kil7Bxzzx+8PsGrAt1j/Fp67x7/wDFTzd6
                CIf+AT0a88jbg8QLqS2vNCdv4IxzpStm77ZnMo5Hum282XxcNytISVm5gjIJe3GULGsCoLKR/lJCr0yY
                HEDhyQocDWYnRvtqbj28DrXwxuQ7rCUDZGCMcktm7sWYliys2aF3QcXIBd1q2jbVtMHDtRnAOXaqbyTk
                nrtRw7TMZFNQeSijOsr5O+7KtrJNkXjju84lpP2fftq3FZd1wT8nmsZq2rpiFoKeiXqQ/rIuWq6qKpfm
                Uw1Bo8OHd9ybeu6Prn2msmSbksbJXFOv8dKSZhQLLzuNXSry3JxkiuJCpknLVepvulIgGUN5ACAiUOmW
                3uW6po7RfoR1O6jXkmSLlrBxVcpbIVE6fmrZIuFoNtY7QRTUMAnEZh2zOoUvxAkVQ/HwjxgI8IFpdmMY
                aGctan7oYrtJjVflo6luKOSiY7/HuIfbLbj5hJQ/xgDmcfT6JgEfjBsmp6CFS36iZ+LX1ZyGONG2KdGd
                hvFDZJ1m5LZRb6OZHH20cYY9kGclMkKCBvMIMhNuoJgmAl6VkBdkAR6TFH7bWTtCRTXw8MVpIt+30Ryx
                p2xDEZzaHTZNkJN5laBYmvDJDRy4REBMdRJd+0E4CYypW6BOB7cfY+Fb1mG1L7bkXh65pQzvI+kK5VcQ
                SzZ04A8h+QDtAZrGD46A/EmgRkK8QkI+p49Xv2EKky1Gg8WWIBtDXaP/ANfjDP8A9uP/AKVk32dQ52st
                Ag//AGLmJ/2f62UeADj+VZHnjRq/auWL5s3eMXiKzV40dIpuGrtq4TFFdu5brAJDpnIIkOU4CAgIgICA
                1Af8HS8kYrUvuJWfGAqlZwQVoPjolMsdqEhBX9JxsDyr1CQTFaungEEwdRgEwgPAG5n08B+Pl91QKsrR
                kLfvjP7chL8egeFs91iiStdN2mZ2k1m7X0VRmQbTaNklDABOudOVQhi/qKKCpwI88z1ekPxwH8v31wpB
                BFyxfN3Al8hyzcordYck8o6IpnMf17cCNQOPC1QsXZm65uu2HajhBSyLXRyBC26Rgn5UYrGQGpFaHg3L
                RPj4SexkJ5ReexB+yp6tQOvEOdt9Xa+HuI+7sbcenPIZeW71PFrAN4nP/E0aoP8AzniL/wBq0TX2/hyf
                8T1pE/6N3D/1od1nCpSsFe4L4gjRPtz5ud6eMvROV7nymytuBuhxD2PaQvmIR1x+f7uKSXeqIomUHyDd
                RCiIhyHqPIV+BtzeIDwHuT6jSadsWae9Q1ivlLAua/iX5kCFgG1nez2y+Zsl4lReMdrLFXX9sKdEwk6B
                6DFE3UIBWfMOfmHH2etKenf5VHk8QPs63fuk4bx5cOD7gh7f1FYKkJR5ZjS4np4uEvOAmClUf22tNAIl
                YuE1yEcNF1ABPqE4KHKAFGsIFkbs3iFts60oay9aOhmT1BY3sRAIVDJD635qPuOTiIgnswKPMhWISQYP
                SIJAmBHakSmcxQ6llVDHMpUhPaW32NM26qrMWFbEFcGI8/WtCmnbgxTdirZ57fFoKAi+mLSnGf6N43RO
                YoKEUImsQB6jplCs49Yjd7fQTF7hGgDL2Kmsai6ybZkW6yfh175JVHrW+LSZqPk45ocQE5QkW4Ks1Cp9
                z9ZS9wGodGHvEP3XhbZalNEjcLwca9YmQubS5YD9Nq+NI2xjWSSLGtr4K9QAFCy8WzdqwkWkU5nAv0iO
                RASpiUZUXh4dtuS269BVvs8ixHuvP+oJ6wy3mBmskROQttN1HeRYmP3xyGEBUiGCiizkpgA6Tt46RHkE
                yiOeevPa8T1ky48L71+gjLNo2YvkS6MeYPxRd8BYjVw4aOLsk4HOt2P2sAk6aIuFCGcGJ5fKaJzBzyBT
                DX48jvs7xW8G/wAgaM9E2m3H+I5e64CWt/IjqEmnUzeto2nJrDb84K123WMc3i0+lRRs7de7TqJAY3SZ
                FTpOEprY82pWu1NpXlbBuW4I+887ZfuVnf8Am67IwqgxfvhpGhGwFnQa63CizGISO5Ei6hQMq4cuVeAI
                cpS5ox7AI/SsC3iQ9Zw6PNrXNJICUGPyZqNFtpvx6VFQpXyYZCaLhf0w2ABBQnsltISwJOEw5SdKNh5K
                JijVou2/tIwb/wAPdL6Zb0t1JHI+rvF9xZtllXLBE8pH3jdcaWZxKCCrkDGIdBk3jDpGEAMkZysAcCI8
                2z+ER1Ty6WOdTO3fkh6dtfOnK/5G87PhnywkcJWrcEurDXpFsGqwdZisJ1BRwucfQHqJeOOKmd1im3xg
                /wByV13cf/QdKf8A3bY96hu7OW7buRaetDmOtMGjnbQuLUpCWtdeQ5Vrl9J/dp4uYfXbejuZfRLeLjYz
                2UBZuHSbcxwkhHqIYDEKI8hlC/viPiprtFVS2NtHFtlEOiksgleNi3M4OiPUJVUzmVuhn1mN69PSUSh9
                ax5+H2uPO93+Ih1bXPqgtmGszUNO461FyWYrUt9mrHwtv387v6AXuOLjGK7l4dFFFwJykTM7VEA45UN6
                16ItKVbNrF1X4s0Pab8mapc1qTaWMcUtbcd3QpbsWtNTIEum8Y6xokrKMQ4MoJn8m1KcQEAKQTHHsUaj
                hy3i/tDHnqpWTp21UZDLw4FqpA2vbjUXnkKimQEkZJ8mcOsA6uTAHSA8G4HtUovDmS2WZMU46yvGwsxb
                sfkWzbfvJlA3CkRvORDa4Y1OSQj5VBETFKukCgEUAphDkB4EQrsqlK8sHEO5LlLa/wB1rc+z5jLACOez
                yWUM121cbZ/OTMBD2TFrZdeLt7ol3kRHvzCj5/Sj0KAkXkQDzAEQq+ta9N5jxP1u2lZAWvjXAuhWLySi
                /vC4YBVRrbik3bAnSE9wvXbleUm3scVwf2SNbtkERVMm4USP5aSqc9jS9p4sHSZp7xDpvxi2Ub2Ph6x4
                ezIM65SEdyQsEhVlJ6QKnyUHUi8Ucv3QE+HzVj9PAdg77qD1tPc/9lD7pg8B65rDnnvx+WkTwHFThRDm
                sOm/Do0S1tbZmoXHMZFBJX/Y0CGYsXeWiKz5O9MclNNIsI8BMUpDSLMruMUOYBAqbg48c8CFlHhXNYI6
                jdtqIxLcEko7vvSzdT/GD9FyKQOfyRfCM9Zypi8+acSJqrJHUUL2EpSgIgAcdE+Lx1QmsLRBibSFa7oy
                1+avMvw5HkQ2MU7hbHGJnrW5pA/QmPmEMvcTi2kUeC8KEK4LyPQIDnn2xNNBtIGgTStp6dIC3mrCxNb4
                3Ukommm4TvC5Cnuy62rkxP1ztn75dqBzDyJUihzwABV8cp/2tkf/AORd/wD2uavLa2g9dGsPRhqe1wf3
                HujGW1fXdkm7J2Ml2UdIzbQllIReQnjlpIu20MxdeeC5zeUBVFUQD1Aw8cVLZ2/de2+Rn7Vlj2ydWW3R
                H6cdM0wa8VL2vx/ET6EvBkZWi7krWRav5F95ZhXkiNWyhhaD1AcwAUnHNSWqUq1zXBKP4TRZq+motwo0
                k4jS9n+UjnaJjFVav4/FEs6ZuUjBwIGTUIUwcDzyADUWPwXlv20GlHWZfSIpHvq5NR9s2/civknK5Uty
                2Matpi1DLuv1TlF5NzopkDuQesw8gcvEz4ewD93oH9XFR2PFQ2fbNy7MWoGZnzNAlMfX/gK8LLK5SKoq
                e5nmYomxHRI85jF8tb3NNywmOAG5SBQnAdYmDvXw6Dp292X9DSz46qqxbMyO3IoscFDnbNM5XQ2aFKPr
                0ppkKQgD3AChx2EKuc3d5uTt7a61/ScO6MzfBpNzdHlck6esjaZsV5DSIJmMHwmO3cKkKcvxFEQMUQMA
                DWEjwdFs26w2zsrXUxbIflJcOra+4u4X5UfLdqsrbxvai0BHrrD3Omh7wdqpiHYBXUAO/VzLN4qvFB7g
                IfWoCe3Ek1vrxb2tSevJQwTli3Jq8PZAPfLFc7mHdEx0wTZiAFHgsA7eCTgBN5IDyI8jU+sA4/t+nAcV
                WlRr/FfDxtC316d81YfAf2v3tZG9mHttQ7fQfTSxib/q2lWTXj8fWsfG7CH+5na7/wD1Wcy/b/4FO/rW
                FLwgP+LKuz/1gr3/APtJrUrSlQU99Obktzver0KbU9mvHT2wcXT8TPZi92KAYGDi6UUr6yrKrKIGApjR
                VmRKZESqiApuTrJh0iobnujxaukRxAYb0r668NxCdv3HpVvCDsGQWhGZGyMPZb543e2G4ErcAN5cZKMW
                yDYnIETTWVAAABGpOG3bqmhdaOi3TzqPh3SbhbImOIF3cSZXJHK7G749oEZdLB4omBQBZN6ksKhOA6RH
                ir1Kgq+KFduo/dK2in7Fws0esblx68Zu25zJOGztrqIZOGzhFUnAlOQ5QMUwDyAhyFdueJx2fZjIMO03
                QtJ8M+js5YxjoOQ1AQlponTlbxty126YwWW4lNkAKjNQaaaSD4xAEy7JNJTgFGoit95o73gorcn2WdZ9
                gZRmmiOq7CmljIkRkNmquVJ1f0AjaazKKyRHoHHqOZcCASRAvPQuAnHgDgAdl+DnDjbEyn3Ef9t/kb19
                e2NLPCpY9efz4re9J7HG6jtt5Dta1lb4uexLDx3eduWYgqsgvds7a+omRnIe2W7hsmsqmd+4bpNSmTRO
                YBPyUhxDpG95TeM8Q3koCyeJ9mh5bkK6crptXFwtrxuFJEDIEVRIs5ce6R+ADlMY4plAwCAcAIDUsHTx
                ceU7vwZim5832s0sfLs9ZEDJ5GtFkkoi0t27XbIqsxEt0llFTFKkqJigUyhhD5iNdz0pUG5mmW+/GCvD
                XQ6F0NhWEse1gWMQfZDRGOykj2qIr8j8IPXRigTge48cd6nI8UrzbNbOpnKOkDxQmUc+4awXLakci2a1
                km9v4ehXkhHyF0HuXTmrbT1Ur2KaPlyJskHir1UU2xx6Eh7AHcOHugb+G7/lPGF04kurS3NaFsT340eW
                xek82tO9pi6nEE9UFhKw6eQ5xq0bNEl0zGSW9mZEXOXkE1SdQhUprw2tjaK7F26baaaOsjLZQPNXI4nM
                7XPKsV4O5TZfcRyCUnHS9tuR62KTRsRBuwTEB625CKCYwmEakC1BF34/+UK7U3/SbAH/ALb0andVYbui
                hzt061eOOf7nDKfAj3AP9a6/HaoCuyXuv64tEWjHIOJNLm3pceqWBkMx3XkGTyu0k7qRhbalpS3bdtwb
                fWiYCJeFcHQBu3VUAXaZ+HJOAAoCaumbj1z3luh7kGBobeivmS03YMsC5WSsLiKLx1cds2syeO5JPyIm
                UQlxO6QJJnImjITj5Q5SogYiJUymEK9Sa2kYNtbkA3tkWg223hYtC3xYqAqyGERYppxXsioCIGSBuCfl
                m5HkvA81+5ULDxo0OxX006MrgMuCUvCZkyOzjQAxCrezzFqxqj9RI3PWHQZq3ERIHzDkfSpiWLZiRuHG
                WOZ+YKQstO2HaMxKFIkZumWRlLfbvXxSIG5EgeYc3wCPw+lfe0q1PWhrGw9oQ0/XbqSzo4nW+PLOcRLO
                R/JuGczsuq8mngM2KLdg27j1GERE5hAoAHcQ7VHXlvF/aGPPUSsjTtqpyIkCSyqC8Ba1utgc+Sv5IFTS
                kXpD9/hETCXgvPSIgNSjMOZJZZjxHivLsbDy1ux2VccWPkiPt+fSTQnYNjfFstbmaw82ikJiEdtiOioO
                SFMIAoUwAIh3rsilKgzbCn/KON7wPl+WetL+GuxmIVOZpWMDeP1hN9D23ZqNzchIFYXepZr2wcccLnbu
                Fb9vxupAQqrFVMQMVZqVRZ8mYB7GRD9uGnw5O3HbrnaAzM8zNBC8mdyZrfr6+BeEMhJO8VycK9sex2h1
                lCgIFUTcyM21VDkSmkBOHcAqyTwseZbq0o6t9a+1HmB8o1m7cu+5Ljslq9FZMrm6ccSqtuXYaGbqj0FQ
                k43yJQp+BFQhUhARAQ5nYVaJr9/4keq3/wBAmTf+qrmonHh1tGWHdfWyRqL0x5tjCu7TvnO11mjJtFui
                vM2PeDOAbfkzfVtHW6eh9HrHExeDlBZIyrc5vKWUA2OXa81dZz8PTuPZH2/NZLh+203ZFvNo0mJABdKW
                tFPZUxY+wdQ1je1AHMdJtCoN5cE+kwpFAqxRcMSkJfpqWk46b8Ybo5moh82koiXx9jqTi5Jkum5ZSEe9
                053U5ZvGjhIRKdNVMxFCHKIgJRAQGp1FY0d5D/Fda4P/AEC3V6+n66P0rEn4QsONquSAP/GQyj3D0H/U
                +J781Ka4qAZpXRNafjC8yxtoNzEjLluHUKpdpWawgimhJYndXI+VdJthKUSGlEGYCmoAgBxKIh1FAQn5
                1GD8XGIBtLHEf/GWxF/9w7hrJ7sqf4pjb2H/AOxYxT/1fTrJ/UGXwZX/AAs3YP8ApppcH15/745X+f8A
                VU5qouni7MkOrK2m0LRauvKHMmpzDtgPGhVjEUfR0PFzuVDEMiXudNN3bjM5hHsU/lj2N0c4Dt5PQrNa
                f9trZ5134pYBF3lhjC2E7dvqYjWphUjnV1xzbL1gy0oYSEL/AEKXduWoE6QATrn5E4CBqlNZe3brWt/Y
                xk9yO3pVqnd1zafWUZZTQ67VZwTUJdjUtiRMWoioBSKKR06qaQfNylAQbtl+A+Hio1ehfbsWZeGm1/ai
                71jXDjJWp+ImcsW25kESuZFey8KSxyWw5I5dcrEPIS5Zd0sI/wCEKm3V5HkDBnZ8KFk9tfm0xZdri5O4
                lcW5UyXasiAmKYqDd5N+/IZEpQMJg4auEx4MAAI9wAQqS7SlKUpSlUEOePsHn91OA+n0/h6VoUSIqRRN
                QoHIqQyahDAAlOQwCBimKPqAgPAgP9tYU9V2wvt1Z8xHqJtqztM2Jsb5dzrFzDocvR0E4cXLC3s8VM/a
                3DGuXi6os+p0PU5SZAkmoBjdRBEQEIW+lbwg2ty+NTMrZGpuQh8Uad7UlXpH2UbelI2elr4jm4dbJOzY
                YDgYpnICUDKugKCXxcgYS8Dkt/7DQt+yNXOPr7gdQcddWkaGvGIuO8rKvKPcsMgktuJOR1IQSkuy4aLl
                XOQ3U4/RCCZjFEoCACPTniMt+23oOz3u2ft+3AlCWdAxbWz8xZUsyQUbFQiYdNNq2xjY0ixMU6SZASFO
                Sdpn6jhwiQeOsRsP8NtsVzOuXJ8Zq61MW49a6WcdSychbcTLthKOZryZOBVQaIFdkMVaKaqk63yv/vhu
                EyjyJhD1DIiGi4CKjYOEYNIqHh2LWNi41ggm2ZsGDJIEGjNq3RACkTTIUClKUAAADtUKvxr99xMdpJ0q
                4+K+SC4LjzrIzfu7qT88YGEst8Vy9ApiiYCldKNycgYvPPqPpXm20pSlKUpSlK7Jw9jhbL2UrAxc3ua2
                bNXv264a1krqvORLEWrb55d4VmWUnpI4D5LZHq61T8cgAdgEako4w8M3q6x3q105W3nDEs1qF0o5TuCG
                SubKemu6WDhhHWzKIgqaeUmnaKwN0EeoqoidLhQnPSYo9w9HfQft06WNuPFrjFGmKxCWxEyb48ncM9KL
                Jyt23K9MJhSVnZ85CrLlRAwlQTMPSmURAoByNXzcB+P6uKrWJ7e4ZOJTbU1HxTZYyR5CBikFUyLGbGdM
                yzaCr9oKxfTzEinJ6D6+g+leR9oxtE+Q9amnC12bd0se4c+4/blQaJmVV8ha8kHHBSJcicSEKYTCUvp3
                r3FIxoVhGx7EnPQyYtGhOeeelsgVEOefurnUpSlKVG28V4PGznlPnj/uxYI+YB2/LpPke9X7bIA87R+3
                2PyDTVYfIhyPf2ZT07d6igeJ5tXCqG6Ht9x2nOLg2GrCZlYp3lhvYyTdpKqpOshQ44mfXMjGFAAfq8TK
                hDm/TmbgUygGIZER9ACJI/SioxKWUSWlU49mSTVQERRUkCNye2KJDwXkoqdRi/CHb5B6VYNuz2nP33tl
                a8bNtaPXlbhuTSxmaJh45smdVw8furLdEbt0UyAImMYfQADmsIHhAs3WDdW3JduDoyaZHyLibNl7XDdV
                vC6RLJJQd/lbPYGWSYmEFBbmFuoiKwAJPMDp5Ae1Su5SUj4SOfy8u8bR0XFsnMjJSDtUiDRkyZIi4dun
                KyggBCJplMc5hHgACoJWxW5T1aeIC3EdY9hCWQxRADkppE3QxKr7lnGtxTaNm227j3KxR8z21tH+8Eii
                JTCkfr6QDsE8So7/AIpMf9x1zn254vnEXzEPS9ER+lYc1to9nuSeHg0b3xiqCQNq0wFiGTuXFThp5TSQ
                yHCoSS76exa8eG46lHZCHWhzKGApHoFIJ0011ThkG8M/u7vNYGFlNFuoqcUR1W6bIUImJd3Guq0uDKWL
                oE4RbZ08QkBBRWbgOCsZNMP0iiBUnBiCYjpSpUw+g8evyqJ54urSlc+adA+PtQFkRL2Um9KOURuq5SME
                zLLssZXvGfk/dMsRJMOvpZv0oZ44UD4U26ayh+xOS5JNivcHxrrz0FYcdwlxRh8t4ase2MW5hsoXbYJ2
                Cl7QikoGLnVWHmGWMzk2rdJdB0IAU6nmlHgS8VdjugCH97g138d/9qPqB4EOOP8AuXyfT/Xx/VWBvweA
                87cGTTfXUZdAcfQPyejwAe/3fKpaQ9q86zf1vnUVuX7x+OtFWjezEsu3HpFt5s5Z2mpJW+2t11kQCtr/
                AL9kZp5PuWzAzVizTjGqya63V1lcogAmES1kgZYo8Xfk2OYxiuVdK+EI1CJFgyYJOrQtwsSzaARFoyBS
                x4CVMChSABUDkE4AUvSJw7Vho0lw+q3Y/wB9zEZdbk9Za8tqyO+fZZuzHkw+k7BuWEz1dj9i8uAjhWPj
                jiuwuBAHq7MGKYJqFT6QFM5DG9MkO3Afj76wleIrH/cddZgDzx+Rtu88AIjz+Wsd27f2V1H4X0f9x+wU
                Ih63XkcPl/8AP4B371IR59fwIfTniq1CL2tP+Vcbpgj6/ml1FAHYR4/2c8dDzz/IPnU3PpD6cj27j69v
                Tkac9ue32d+eRqtK0KJprJnSVIVRNQh01EzlAxFEzl6TkOUewgIDwIV0jF6ZNOEL1jFYDw0xOq4Wdqqo
                Yzs0q6rlw4F2suq4FkJzGMoYxxExhHkRGu2YS3YC2mYx9uQcRb8eKplxYwkayimYrnAAOsLViRNPrMAA
                Am6eR4Dv2Cv2KUqDL4hMP9362TP+melwf/00ijU5kQ59fwA/Kq8fjtX5M8P+okyHH/eqQ7+gf70P8xqD
                X4UowDr13X+wh/rmkAAOwcCOZ5jn0/s4/Z6Tp+e/z+4O/wA/Tn8cVrqzHccH/c9Nd/8A6mmp/n9uEpzt
                UMvYr25bC3KNjvVLgu941COnnupG5JrD1/u2CojaGR4XH8SZg/YPekOpIRVTbv0UzDyir8Re5ee5vDkb
                i2R9J2e712XtcLtza92Wfd8/AYCk7pcKIEYXPGqqLSWLSv3ggUW0imQz+3jGEAOJjNiiKiiCQzmue/A8
                f18fIa1UqwTdKzdkjTft76sc4YhdGYZKx1iaWm7QkE2nt6kbKKPm8d7zTaiUwGM3SXUXLyUQKJAMPYKs
                o8PJrZyrrt27rZy5njLcNlXNEbkK/bRvj3fFQ8LKWmhDTRk7WibgZxPHmLuowW0mV0skQyhHIBwIE6hs
                q8W1I6c47bhSb5Gj7TdZymsk2m2weosSPJfSCjV4Za63UOsYPafYEmfPtxQHyzdRQ/WEKyR7CFiXrjra
                V0YwF+t3zGcXxghPox8kC6b6PhLikFpeAZOG7j40hTaqpFBIwAJQ7cB6VlfvIf8AWhdfb0tqd+/tGK/K
                oRfhEuB1E7qYiPP+vazgHj07XzdQd/6/xzOXHgO3HyER7APf07/Ma1VYFurhztp67g/+xUzd/wBQXtRR
                to/bcsPc48OlPYQnkY+NyNEaiM63Xhe9nCJRcWtkBg0ixj01HYB1lYv+AaPyl5DoMB+DCmAV9/4arctv
                zCuT7y2ZNbrt5aeUMYXJcdu6fHd3uRRXRlbdcqhc2DXb1yfpFQoEUfW2Im4WICzRMxj+xpHm6gPIByHA
                j6evHf07/wCaq8cDz3+fb5d/WoLPiNrDnNBm55oN3YccNBi42Yum3LKytIN25SsV7gsN2C7VSTBMepwr
                I24u+QU6i8eWwRJ8w4603ltc09vbar9NW1DoFmgurGMpc9vXnlvIMOoD623MupGA/kJiQfNDiieKtKKc
                OVVD9QAs9OKCYnUMiWpyGnzB9iaasG4m0/4yjCxNg4dsC2MfWszKBRV92W1FJxpHj1QgB5jpyYh3LtYQ
                6lFlFFDD1GEa7h5/lz99eanuE3prH3Wd+2/H+gXH0TmqT0GK2/buOI6feWopYMVEYTu9Ml03dOq3S5bx
                r1lIXnIvDoJFOody2FAAIoRIRLl8kMG+LpzZHyDW5M6aVMWMpKM9meRaklb8CVZs4E7dePMnZtsShBOZ
                MTAt1G6DkEA6zDyFYt9ktznPZ130Z/QtqrkrbZPdT1sx2ObtdWrKvZOxZLIV0xiWSsJ3LAPXDZkdyLl4
                utAIdTRMU1JNYpylMQQD0eAHn9ojx9ofIe1RoPFmd9oW7g4DvnjDIcm54KHtj/4hEPl2rJxs6CIbWOgQ
                B78aXMTegfP8mkQ9BrqfeZ3Q8Sba+kzIlxSN5RBNQl+WdcFuYBx02fIKXTK3hLsTxcfd60WmYVUouHUU
                9tcO1SlTOZIG5DeYoHGLbwkeiW9NP+i3JGqDJcM8grl1kXbAXFZsbJtjoSA4isZu9b2tcxiL8KJpzr6T
                knaAGKALNE2bkgnTXTGpY48Bx9RDjkRHnj9lefV4ha37226d7zSVuhW/CyElYWQjYvuWbek6wZu71wgD
                axb5sVwq37pA8tRGEVS8zpMt5jkEwMCCnTOw0+6gsSao8P2PnbB94xd841yDDNpq35yMXSVEpV0wFxGS
                iCZjC2etVBFB21UHqSUKYo/IRsy3YtxfEu2vpCyNma+p+HHIUrb81beDMcrPCe/sj5KfR50IZixjkxBb
                3eyUOR5MvuASbNijyYXCrdFbA34RXR9fNlYNzzrmyrHvm9yao7lLE2PISZFkn89ZcDKLSdzXOJVAAFEJ
                CaOIILFH4jN1vkACMxioGnigVBwpunbYmpW6wOjjtojHNX8l5fS2jvyBycylZtRy6AwgAlbSZVwKYoD0
                pnEOoAN0zrLXuiAvW24G77WlWU5bVzxEfPQMzHrFcMpSIlWpH0e+arE7GIqkcpgHn7/QeI3fiuc84+xn
                tUXtiyfm2CN/Z7v7Hdr48tkXKXvaXG2LvZXjdEmlHlN5wtWTFqbznAJimRVVukcwHXTKa/bYsxJc2E9q
                PRpZl4sncZcS+Lml0P4183O1csE7tkV52OROkcAHg7VZBYhhAOQOFZbaUrqa4sC4Pu+6V73u7D+Mrqu9
                0yZxq9y3LY1tT02oxjznOyajIyrZVUCJCocSFA3bqHivqLbx3j+zVRXtGxrPtVYUDtRWty2YWDVFqc4K
                nbCeLQSHyxMUphJzwIgAiHIBX2IAAdgpVB59flwPb581Ez1jboOp/CPiIdNGjFPMMbjbSbfdvY6a3TET
                sNDuYmclLwtuTeppFlJInmIOXcokxjkFUjgYDqEIAcmqV9IEjlWD0koRmrFnaLhIEkComYGYikYXXthX
                H6MUvL56+v4ennntzXn57aUNjbJnildRF76OUIppp9tE2VJWSlLJbpJWM4bHt9hC3AnGmZpnblaSM8Do
                WpkRBNY5TKIm6DAI+g3VOA/hx+yvPg0Pae8LXB4sDVJZ03ji1pO0seXNnjI1m2y9i2y8FBXlEPY1SJm2
                cYoUUgUaqPXCyACUQIoYDgHUADXoP8B/XVaggb94FP4ifasKYoGKaz8AgYpg7GKbUTc5RAwD6gIdhD6e
                tfFb4ujzLm0PrnxxvB6H45SHx/dF8oLZdtWJRXTt6EvGTP1z0RPs2gAQsJdTcFSn4HhN0BjlApwIapme
                hLWdijX7pdxdqew/JN3VvX9Dk99wYOSLytj3pHADW7LIuBIAKZJ5HuupMQOQoKpCm5S60FkjmvBrzyPE
                g37nTci3XcGbcekq1VMsXRp8teTeoWS0k4ZlEyeUJyDLkbIj+VlZlw1YoIxkDGx7Rz7W4J0qoroE6llS
                JnyCxeLfF05EjIyETyPpRwPCMI80VGRqSlk24lCxjFqmgxYkPY8FLmKCaZASa9Im6AL36S8COEjFsBrE
                2NN8DTflbXXdFiP3upeWUHMt7Y8l5F9YE5jvMtwq2XdU4/fuI2KEp4SVI2nXaBWZen2QggBiHAR9Ojnv
                x+BrFPvjf4pXXbxx/wBw6T9fTvOMQ71ZV4VkP9xmwOPI9sj597c8B/3WpMPwFSLBAeOwjz8uf596gi7V
                nIeK33JA+ptWgcevPGUYQe3H05D0/nU7z9n+b7KUr5S9rFs3JVsSllZAteCvO0Jv2L3vbVyxjSYhJP3d
                IIyzAH0a+KdJXyXKCK6YHKPByFMHcoV8fHYAwREHIeJwpiSLOmBwIaOxxZzIxAOPJwIZsyKIc9+ePX51
                2siii3SSRQSTRRRTIiiikQqaKKKZQImkkkQAKUpQAAAADgA7B2rdpSvP+2WsV2JnDen3ksRZNgGl0WDk
                UmfrUuuCfEIdvIREtmJ40XAOw9ChOQOiqX4iKFKcogYO3UGnrJGU/DF7tVx6esuvJ+b0C6lZJo6bz6wL
                uGQWPKP1WFm5YiEUOSBK2y5MePuBsUnmLNSLAQpjCzUr0S4WaiLkiIm4bfk2E1Az0awmoOZinaD+Ll4i
                UakfRspHPmomTWQcIqEWRVTMJTkMUxREBr9WoPG07x/2URum8D881chx3H/XnE/Opw9cV60bPmbpi8RI
                5aPW6zNy3VKB0nDdykKKyKhR9SmKYQMH0qAJoxyVaWx1v5avcCZkuhhjjS3na3LtvuInZlVGPgY6HVQc
                ZLsl+iQygkIBOJSNRQSAyypioIpkE5ykr9fRizvfxDG93Ma4rxt6UY6HdETyCQx7EzjXmNkTW/IuJXFd
                iCisJklZCXkRcXRcRE/MKk3KVsqJAcMuqfYX07hx+3n1rhSg/wCpsh27ewu+/IevkGqCp4SMQDV9ucAI
                f99lA49B/wC6e/4Dj7vp/Op249hARH17Dzx/X+/j8DrpSvgMq2DGZXxfkjF00odGHyTYV4WDKrEKBjpR
                t4285t18oUoiACIJOTiAD6iHA15/fhwdUzHbE3EtW+21qsetsZp5bvZla1rydyuSsYeFzVi+Yk4iFiVX
                7kxECNrnjJEU2z0xhIqs2YEIboX669EHqAfT7fT17Dx25/ZUHHxVGu+H1APcI7SGmB2fKWZbyzLZ09le
                HspUJdRpcvK0BjfEZjMTGItIuH0gEk/agP8ARjINCnEFfNTTlqaCNMzTRto0036Y26yDlzh/FduW1Ou2
                hxOzfXgsiaavd+yOYpRFBxLunqyPUUB8sxeQ55rsrU3hljqL04Z8wBJOE2bLNuGsl4pXfqpCsSNC/rNe
                WsnKAn6iZqd0VwTgeQMQBDvwNQZ/Cz6047RTqB1L7X2q18TE94XLkpVzY7S8HZIePj8z2copaF52Mqu/
                FNIrmWQRaHYqibpcGapppdQrE59AkR7/ALOfqPr9K4hX7M71aNK7amkW7VB6tHlcJC9RZulVEWrtVqA+
                YVJQ6KpE1DFApjEOACIlEA5YiAeo153e4nNS+zZ4lOw9cE9BShcBZ8mSZKeybVFR0SVtbI1rmxvqCZth
                4ImtIRMg7dyqTPr6iFVjznEoKkEfQLxrk7H2Y7DtTKGLLvgr8x9fEMyn7Uuy236UjDzUS/SBVu5bOEx7
                GDnoVSUAqiRwMmqQihTFD653IMmIIGevGjMrp0gwamduEm5XL50fy2rJAywgB1VTfCmmXkxh7AAjXMqN
                d4r7/FC3z8v9mvD/AHH0D+nvfWsjmzD/AIqHb7+f+1YxN3D0H/W2l6Vk1rHzuw/4s3Xf/wCqzmb/AKlO
                6woeEBER2yrsH/7IK9+Pu9iaVK1rrDNOV7XwZiLJeZLzdos7WxhZFyXvNrOF02pDsrdilZEzUi6wgUqi
                5kwQSAfU5ih6iFeZ1ttwe85qj1eamN0Hb+xjZdyXdkK9cjWRL5ZymbH7iEt11eEowumUiLch70WFb2pN
                gLFA7pozMmRE6zcD9RlU6zCajNvLxR2tPD184yz/AJ70orY5vJF82ubHBLjLDnl2qQlfJFYNrbtJZsUA
                UACtA9rTMUwcD0F4GvrPCH6oZ634zVVtvZQdHZXrhC85LIVmQr5Vb2lKKcS5rWyNEx7ZUAEEWMuii7UO
                YoCIvycdgHibFzx69v3/ACqCd4pDj++e7Sph5DicsUP/ANIRmWpzh49jLQgxcm0QfRsjF+xP2TpMqzV2
                zdNPJctnCKnJTJnIIlMUQ4EBrzNN9jbbyttDalrk1O6TTS0Bpa1OxN7WXIIRZFFYayH9/wAWs0vDFtwI
                lDoCPeEUM7iAW+EBJ0kN1JAUJDXg5w/3MTKfYf8Ajf5F7j8/9jOz6lkVBD8Sh23sdoYf/wB6wJ2547/3
                V64j69hqd2HHqAcfu/bxxWkREBH+rn1/H+itdKVBY3IxLoe8T1ow1RXEgrHYwz8zsmBfyocIt1ZGUbOs
                aTAruzgCRATeu41RQTm7JFMYR47hOkIcqhSKJmKdNQoHIcggYpyGADFOUwdhAQ7gIVrqCHZoFN4zVbnj
                /tdkD7fXSFK9v28B2+zn5jUz/U/C4MmsA5ZR1IxlpyWFWdi3I/yAW9Eow8I1t1rFKqSDo6stwkkqUgD7
                OoBim8zpAg9QhzDb8HWwffnK3LZizUpguAHF249YY6OqV0WHB83n7jckRIBw8v2wsKrECuHIn6BTE3bi
                p0NQQ9+QePEKbUv23PgAOfp/s3o1O8qw3dFEQ26danHPP9zhlPgQ5H/wYX59KwSeDnAf72RlXkAEf7r3
                IQ8cf/W0tAQEPr+791dJ+MWhdNzXSvhaYmY6z22pqRyk3RsV80SZIX2/stBgcLrF+ZoAOVo5P9EUpnHU
                mVUSgQQOPFSSNr1hfsXt2aLI/KASQZAaac8XI3WEyVcsoEsFsoeb7aDkROCnSJeQMPNX41B78Tm8X1mb
                ge2Rtn2OIys/NXo3uK9Uo1JV25gWGUbjYQ8g6lGyZREE46AiXM0oYAECtxOceO/E3xo3I0atmqRCETbN
                0W6ZEygUhCIpgmQhCF7AAAAAABXIpXyV7WFZWSbdd2jkG1LfvW136jdV7b1zxTKbh3ajRYHDY7iOkCKJ
                HEhwAxRMUeB9K+QjMAYIhfL9zYVxLE+UQyafu3HFnMhIQxuoxSi2ZlEAEe48eo9xrtdFBFuik3bpJoN0
                EiIoIIpkSRRRTKBE0kkiABSlKAABSgHAB2DtW7SqCPHyEfu71Bl2FDf+6Od7315C9NaQGDgewjrrZcen
                IVOZ6vX6h9/z7+n7adXrwHPA8D6fu/H1++oIviuM05M1Q6lNJe1hp1iX175Cl3JcgzVlxLpo1cTV33Om
                qxsyJdLvVkmwJpMm7t6Y7hQhUgKYwiADyPbWK8KeLQRxtjzFFnTmlvTzYNhQEJZNpwDlXHkYtb1uwcGj
                HRyDt/Z0XMqKJJJkAgdJ1DeYAiBRKAGHCTqWxLuP7PG5npW19a7L0x1ft+ZNyMzmrsvzF81KTsTOwMGD
                O1rsjLpO9h4X+lGiD+akiRA4KlQATGAQHn097SuiHva1rbvG3nSb6BuuDirhhniSiahHMbMsSSDJUDJC
                Yo8pqFEeDD35+lWy6/f+JHqt/wDQJk3/AKquaj3eD1AB23sjD9NQ90/xhGVXm7/m0HBbmumhe58exLJn
                quwfFyU3iObKiRNe74opRezOMJhyUOo6D7pMdiIiPku+k4AIHUKaD3ssZNzHkDfB29bezi6l3F6YZmrn
                wsVvcSCra4YSHsDEd1RzC2pnz+FTLR4+Y2AFR6gKUCjyBQCvWDrGhvHj/uXWuAB+eBrq+QjyHWj+BrEp
                4Q0eNquS+3UhlLpABAf+98UHHPYP4/fxWfnV/rBwVoewZeGfdQF6w9oWha0a8XZNXz5BvL3dOJNjLR9q
                WrHnEVXj92cATTRQTOJeROYAIUwhD58NDh/JesfcI1qbwWTrbcRFrXfLX9aeNXL5sdJCYvHIlyITF0u4
                Qx+OskNGNUI1RdPqTFR2ukButI5QnT1Gv8V5ZNxXdtEXvJQUes+Z2BmnEl7XQqiQxwjrdIvIWoaQW6fQ
                gPZVkkIj25UAKu68P7mew8zbRmi51ZE0yk1scYqjsP3tHIOkl39t3vjdU9vy0VMNicHQVWTTQkEE1CgY
                zZygqHJVCmHJPqSzrZmmbAmW8+5Al4yFtTFNhXHecg7lnJGrRwtERqjiNiSKHMTqWfOgRZt0iG61FVSE
                L8RgqIt4M3GtxoYp3BdQrtg4bWjmDNWLbIth0qUUk38hiuGuK57hM1IcAMZNIl6sEhVDkgnA5AHrTUAJ
                rFQhfGX3m5kIXblwbHLGXWvDKGW7zkYpMxgP50M0tm0rZcHAwAU3mGmZNMnB+Q6T8hwIcyY9Z+h+39SG
                2/kTRa4QbvBHA0dZNlOAQIb2a7bBthFCznzQqvZM5nTNEgH55IU5h9a8tTG2S9Umfca4G2Uoor5Fo91y
                OnTGPWUemRZXfeThjjxswkWIFDyY6EdqTsw4WEAACu1lT8FSAwerpf2muwbM0C3dpSs+I6MeWdpemcQ2
                xGCVMFlIe2ccHgoYzrygIU66ooJqrn4DrUExh7mEaiy+DQyC4ZYu1v6e5I4+87Dy9bF6KInIoB26czCn
                tJwiXq5KBfaIhUwgAiPUI9/SptFKUpSlKUpSqcB2+z51w5CQYRLF7Jyj1rHRse1Xev375wm1ZsmjZMVV
                3TpysJSJpkIAmOcxgAADkRqAd4hPxLUVIxl46Kdv270JFB4Dq38u6gIB0cUPKKIovrWx1ItzgVQpuDJu
                35AEvHwpGEB6qwpbDmxbkrdIy6zzJmtjcFtaQrOuBOSve63ZXbOUy3JoODLObNtKQVEFDeaoHD+QJ1Am
                XqKQRVH4fVwxljKw8N2Ha+MsZWxE2dY1mxDSDty3YRoiyj46OZJAkikmkiAAJhAOTnHkxjCJjCIiI19y
                I8dvoHIiPpx9/pXkk+KL1wJavdz3IFoWjcCkzifTTEQ+HbSKi6TXjHFysGhJLIsu1BuoqkInll12YKFH
                kybYnUADyUI39KUpSlbhUxOBzEAxgIAGNwAj0l5AvJuPtEA5rRwHI8D9OO3r9apSlayiJBAxTCBiiBim
                ARASiX0EOPmH3/KvQ58JnvCZHym4DbhzcnN3gtattPJ7C1/GFR4tD23CIAL2zrhXWU6hQTJ0mYqFKIl7
                kN8IgITu/X6/xCq0rCR4gxzNpbZmZEIAiqjtd/bR3AoPUWC6UYylCPpJymusBuySJDnN0lEQABHjtXmj
                7Jdsmurdd0UwwqHTA2aoKSEwKebykzKq+TEen16gKHf5V7N9KUpSlKxxbrGgJvuYaL7/ANKSl/mxm9ue
                atO6IS7jRBpxqwnLNmSzUajIxqayBzt1jF8tUSKdRQHqAoiHFRo7J8Pjvn4qtOCxfireen7DxTaMelbt
                n2pauZNS1qRduWy35Sbx0JAwiJG7EiRBEEkGqpSkH9QwfrVkq2wfDi4X0RZnQ1a6hcx3Xq/1Xt3riahb
                zvFs6b2tZ1yPyCD652rWadSEhMTQCY4oTEk6IKfWJytSrlIsWSdwHr8/8/I1xnrFnJNHUe/bIPGD5s4Z
                PWblIizZ20dpCg5bOEVAEpyHIYxTkMAgICICFQ8NS3heMj2RqFn9S+05rMn9GVz3Q+kJFzYys3fNpQ1t
                qyrkXspFWrfGNPMfhDLKjySFeR6ySZQ6AUOmBEydfT2wTvmajY42L9X+8k5nsGThkm1523Z19Ztug1wR
                QqkO4Yy1oybC3I+UTDoKdNvIuzIgoHX0gYANUlnbk23tOu2PgVDBun+LfuPeL5OeyDkK5Bar3nke6QQ9
                n973A7apkIRJEgikxYpFBJsmIlL1HOqopkBrHjukaE09x/Rhk7Sn+XX5t316r29Lw12qRR5pnHTdryxJ
                eOJIx6aiRzt1Dk6Feg/WUo8lAeOB+l22tJs/od0U4F0t3XdMPe1xYjtIkBK3Lbzd80hpR17Wo5MtHoyR
                U1vLADlAPNIUeQHt2rDxqD8PPI3Buj2tuPaPtSTLSRKLXFF39kq2Yawz3OM1kIrw5bzmYaJQdxzH2W52
                Zv8AVpm6P0qujuXJ/MM6OUsmxPzATIChiGUKQoHOQhiEOcA4OYhBMYSgI88AJhEPmI1+HdVqW1fNtT1m
                3hBxty2pdERIQNxW9MtEX8TMw0q2MzkI6QZuAMRRJVI5iGIYOOBqHJn7wquQcZ5sf532ntbF16RpiRdO
                V21mzNy5BtoLRRfCZV5F23k/Gx1ZVWMMYQInHv2KolIHB3CwV8jduwnv4Z6hnuO9Ru8saYxXPMXEPdVu
                W/lTUHKMrhhXqRkX8bcFr+64NlLN1S9JTtpFc6RgEwGD/nSIdpPbGtXao00PdPtt5SnMvupy9ZK/Lgu+
                Zt9laqSkrJsW7MzKKgWbl6KKCZUeQFV4qY4jz8HpWUNUpzpKkTU8pQyZykU6QP5ZzF4KoBfn0j345qP5
                tV7KNxaB9XOrnV/mXOEJqEyjqJlphxAXO1tV9bkjDN7xu1xeV7PZGPfLuUmzl04MgikRkuoQqPmJ9RS8
                FGQP0h933fv/ABxWA/e82W3G7C305TljZRt/CmT8F3bMKGvuXhH8ws4sS4UEXkhFsGsWKZ1HaEixYO2o
                LrETKBVg6iioPObDFFpTlg4wx5Y1zXOa9rgs2zLateYvE8cMSrc7+Bh0YtxOrRorOfJO6MkKqhPPPwYw
                /ENW86/9IcPrw0hZu0ozd2vbEa5etM0G1vBhHpS61vSrZ4lKQ8opEqqIe1IpOUEjLNwXSMoQDFKomYQM
                ET/HPhz96TT3bKOMNN+8M/xjiSHePXFvWlauS9QlgRDMXqwqOHBLWthJZk2VWNwZUqKpgE3PxG9ay+7T
                m3Pul6QdQF9ZH1ybjtxavsXTuHJqybZxpKZIzDezSFv2QvaBnWN9CyyKmk1RVax8dJR5FUOpXpenL8JB
                NzIKqILrL8OprIu7Xdm7XToP3BXWmq+M7S8vI3CRJ9kPHtzw8fc6jeQuS2G95YyMss9jFnrRs4K2cIkL
                ymmY4GURIcerk9jzxDAqFKrvj3qUnWUFDJ571RnOUgm+ISkM3KAiAegCYOfqAd6mN4/hJy2rDsm3bnm1
                rmuSAtG2oS4bkXWcrr3DORcKgwl5xdd2IqnO6cJqODHVHrETCJu4jX2FKUpSlUHntxx9vNR7NzLZ0y5r
                l3JdAetmysrY4s2y9Ik9iOVu60Lpb3OrdF0JY4zuGWnyVuKRLNdoBnDb+iJe1LpgCvxGHo71ITDn58fs
                5/rqtbDlBJ0gs1WKJknKKyChQES9SaqYpqF6i9w5AR7hUKW6fDM7gmG9QWcctaA9zZxp/gs3Xpcl0S7S
                MmMs4tuQsZPXE5uZpbMw8x6o+JIpR6rkyaCqyoCcA8wSEMIgH3tibJ+/9B3taMzdG9tektbUTc0JIz8W
                XOGpaSPIw7KSTcyDAI6SbkbL+ciU6fkrnKQ/UBTiBR7TJK6kz7iiOz1gvNOC5eUdQcTmfEuRsUyc0wRS
                cPoePyJZ7y0Hsqzbr8EOq3TeGWTIcekxigBuAGscOyrtsXftXaR7k00Xlke2spv5LOV7ZSj7oteNlIlo
                MPdFswMI1j3sfLB1puk1IpY6nQY5BKcnBxHkAtB3g9geA3Is24d1M4XzAjpg1CWK8j2t4ZHjod+9f3FF
                W6ulI2XcEeMEszcoz0K4TAGj0XZRFMESgdIyBTGz/YzgLrtPHNg2rft6Dkq+basm1YC88imgGtqmv+7I
                eBQjrivU1sMFnCMaMq7TWfewIrqkb+b5RFDkIBh+5pXyl9WRauSrLuzHl8QzW4bMvi3Jm07qgnwHFpL2
                /cEepFy0ev5YlMBVUFTk6iGAxeeSiBgAQhWXh4W7WvpszJeF8bVO49Nad7Kvc6hX0HOXzlzFl0solR2q
                6bWrMT2HUHbe4GjMxiGbLPmqAgb4vJKoQpzduab/AAu2VMg54trUHu1a1rl1lzFoO2TiPsNC6ci3rGXE
                jGLg7jYm5r/ykZKRLEkUDqWiWMemRYBEorEKJwPMUjIyPho5hERLNvHxcWzax0awaJFRasWLJArZo0bI
                k+EiaaZSkIUoAAAHFapBk3kmD2OdlMZq/aOWTkpTCU5m7tEUFilOHoIlMIANQmV/DKbi2AswZhvfQRuh
                ucFWvl67JK4ZptFTeW8T3C/ZOJdzMRMVcI45O+RfewmdrpoqqK+nJgKUTCUO5sTbLu/naOT8f3Te+9Xe
                FzWbb132/M3Rbp81akJss7AR0om7lYg0TNIFZrg4RIdEUnJwTN1cGEAqYWA8hzwIffXROp/CTTUrpzzh
                p9fzi9ss8z4uvXGrq4WrUj1zCI3hALwhpNJmoYhVTIAt5gJmMAG445DmrF9mjbuu7bA0bJ6Xb0yFbmTZ
                Vrla/wC/Wt1WxHycUwWi7t9i9jaLsZUoKEXS9lN5oFE5O5eDD3qxfdp8P9GbgWp3DOsDAWa2mlTPlluo
                kuQ77jbafSj+6htFwg+x9e0V7mcslCXDDmR9kK5VcF81uRqXzEhaF82Q9ZETcUDZloQd33OF73XDWxAR
                Nz3oEO3t0LvuKPikWk3dAQDNVdJj7wckVd+xprqER8zyinOBQMP1NYw93Xbyabm2iy/tNLabgbRvV7IQ
                d1Y4vK42rpeMty77efldNF3x49NZyRu4TBRs5MgkY4pnEAKPcKtm2VtknFW09jiZl5eUhsp6oshtU2mR
                ctNWC6cbFwjdfz2tkY8JJpkctowDgVZ0soQizxYCGWKUiSKSedTj8dq+VvuHuC4bIvKAtO4z2ddM5atw
                w9tXcRkSSPa1wScQsyhrjJHnOmC4sXJ0nQIioUDiTo6i88hhI2SNmU+1DG6lpq+MmQGastagL+h3pr+i
                oN1EqMMdW0xVdxUKoSVA7lB47lpKVdyhEXKiKpSMBExjoB054eA55+zj7w+2o6m71sYz247qr0s6q8R5
                2idPGRMIMEYO77oXt19PzEiwtW70r0xtL2sziztSjIx7txKAqo7epgZMzUpDFBIQqRAyTcpM2aL5yR49
                SbIEdu0kPY0XToiYFcOU2gnU8opz8nBPzDdPIB1G45HHFuxbezTc50Z3lpXUyGtiySmLntG8rdvEsMS4
                GLKctCQFyi1mIgVUFFWrhBVwiYUVyHTOYigdZSGSUjaWV4fffVxbasFjXF29BcNj4xtCPTgLPtW2szal
                rci7dttuYSNI6GhIlEG7NJEg8JN2ygET7FIIAADV1GkrwrOGrayqx1A7hmorIOvLKSUijMu7evRebGxJ
                WZbq+citfEvdD+Rm7lSKYpTezu12yCgckcILpCJBlgMGDKLYs4yNZtY+Ojmrdkwj2KCTVkxZNEgQatGj
                ZApSJpJkKUiZCFAClAAAOArmCHP1/eIfyq0XW3oi09bgWA7l06akrQLc9jzqyEpEyLJVNjddkXYwSUTi
                L0smaORQzKTaAoqQqnQZNVJRVu4TWbrKpHiWQPhl90TSJeE8ntybqrjFuNZuQUemh5668wYvdug+IGpb
                ktXHzeahJJwiQ3l+1qpEE3HWVNLnoDu/T74Wy/sn5pis+7ueta9dZ1xQS7AW9ix12ZBuGLn2sacHDOGu
                TJORTpS6cQU/KZomLYteogh5bpH9WpgVs2zblmW7B2laEFEWxatsxMfBW5bkBHNIiDgYSKalZRkTDxTA
                iaDZs3RIRJFFEhSEIUClAAAAr9ysdu5btpYA3RNPy+Cs4klIVeKlS3PjvIttEajdOPbuRbHaEmIxJ4Ap
                OEVUlFEHjNUSgskYxQOmfpULGasXw+m+TphjnGN9IO7+ytDDLF0ua3ralr7zfaqEegoqYxfZLMj4uejY
                4xwEDrEYuQKJue5uw1cLpq8MnkW+M+2vqY3a9a9563L1sl6xdwOPQuC+bitN2WMeklI6Omr0yCqnIFh0
                3HmGNBxkY0TPyA+eQBOmaXU0aNWDVsxYt0GTJm3QaM2bRFJu1aNWyYIt2zZukAETTIQCkIQgAUoAAAAB
                XIpSlKUpx/IQ/fWB7ea2McSbr0TaV8R17LYS1KY2YKxdo5NaRQSkNPwJ3AvE7ZveLbGScKJorj5rN+3U
                FZvyYvQsQSkJhDHw7m+vddrkw1kbeNkH2B3LNK3JW00c96qLkbL2gl+gShFLRmGjVk5bEQ4TLHOHoNwK
                Uqf6hQqSFtVbROm/akxRJ2figz6+Mn3uLZxlPNlzsmjS6LxXZ92kTHsW5lCRkQ2Hk7eOSWV5OJlVllTi
                USZW6VHZ04bM2W8Kb1mf9z6Zy3jiXxnl1jk1CHx1GNrmLfUY4vtxGqNPeartoSP8tAGavmGSdHEREgFL
                wJhCRNSsCe4RszSmtHce0R69ITLcZazTTO6siMv7HczGv/Muu1LKyI5vpstac3HlWBF+p7xeoqEdpAkP
                SgIHL+krMVn/AANjHU7hnIuA8yW63urGuULYkbVuiHXKj5hmb9PhGQjlliKFReM1gTdsnAEEUl001AAe
                nisKGytsuZc2lLzzyZbVyOVMI5aHzIvBzex3DCMibijJUgW3kZa45B+czaVTigXin7Vkx8p6VRE665hY
                tQCQjUfPbY2Trj0Y7gGrjXtmvOELqCyPnxGZaWJLI2u6gZa1Ur8u4115DfzLSRM6TTeLeyxbFouxdiIN
                wdpn4I4ElSCxAPX6fMR49fXvWCTfH2a0d3LHeDIi2cgW3iXJWHb7kXid73BCvZZF1ju6YwELpgwbxRQX
                XcJumjBzHprLERIPtPJ0zKCI5gcC2FdOKsIYfxjfF9r5QvDHeM7Gsa5skOo08O9v2btO220DIXhIRijl
                4ZFxIqIC6cFFyp+kUMIDwPAdZa3NNLfWNpNz1phc3MrZieacey9lpXUkxLJjBPXYkdx0grHGOn56RXCK
                XnJgoUwkEwFMBhAQtv2hdB91bbOhvH2k2876t/I09Zl2ZMnlrrthlIx8Q+aXrfL25o1JJrKlIsVRJu4T
                IuAl4BQDgQTFADGybiIhxwHqPH3faNRtLc2Ocs4k3pZvdKwbqBsiCsW/b1lbiyPiK7LZnJS4JSIyFb4R
                OWoeMmWZiNymdOlHEjFKnMUG6vkgoVQqRwVkmAABzx8x5/bSlKUpSlYEtCmzLK6KNy/V1rdisuQt2Y81
                MIXA+jrEViJNldtq3BdV0BdMwi9fGFRq4alXOt5ShFCn4EpTJh08jcTvCbVmON17S+fEE9JR1kZbsmYJ
                deD8tOo08ipY9wLKoIXFFSKDfpXXiZpkl7NIN0lA4VI1dAVRRomQ3aO1xo4y3oL0h2Jpky5qFV1HPrAc
                P0bTulxay9tmtS0HIkPH2CzcPHz1d+zjlAWFk5cAiciagNwSKiikAZEhHgBH6ftqPxo12fMs6aN3jWDu
                LXDlXHdx471HEvj8nbEhm1yJXpAKXdNMZZIs0o9aJsRBEGyhDCg6OJuSiAB34kEUqNfvl7CsluxZM0+Z
                Rx5lCy8Q3Rj9B3ZeTZW5omXeuZ7HbyTTkUXMGjCIKe1yjMRXK3RfKooiUSk88gciGZXQ9onwRt/ac7J0
                1afbcLCWZaaKruVl3hUFrnvq7pEpRuG+bzlEyFM7kn6hS9ZzgBEUSItW5EmrdBFO7oA4DitlykRwgu3U
                EwEXSOiYQ9QKoUSD0/bwNQlJHwxu4VgfNuYMiaBNztzgi2st3ROzkkiwmcr4rupWKlZ9aejreuBxjczx
                CRKyMt5RHBzkA4l8wEkusSF7rw7sw79ll5dxXeGQN6K8bwsO1Mj2Nc18WifOGpSSJdVowV0NZW5LbPHy
                zcjVwV8ySWaig5OCSgKdCglIJhCYPSlU4+/9/wDKsBO7tsAaad0yVZZfa3I/0/6ooiLZRBMvWzDN5yMv
                eIiiCWIisk2oK7T25VoQPZ2Us3dJO0EelJQXSCDZBLDpC7B3iBrctMuIrf3mVYvDqSScK1immdtT6MlH
                2wk3FmSIi26cWJ2bcERFL3c2kyNugekfh7Vl+2mvD6aads+6VM7XJdErqR1XyEe9ZfnfvWLbNYuxffCR
                k582NbdXUdqtHj1NRRs7mXTtV4qgZRFMWyLhyktIDAOAAOR7fxpx/b/Hmo8O7t4eHTjubXL+fK0LoW05
                6pkGDdlIZIt6CbyduZJSjUSowwZJt9uo2WVfNSFI2bzbZcHJG4FRVI6TRbERxO21sNeIYsS3UMd2TvQO
                bexvGppxsKwYag9VTKQiIVukZBq1hypxRjx5EyDwRszfkTLwAlEBKUQzD7OWy3eu2pfmZs65l1Z3dqdz
                fni14u3L0ezDCUUi2Ix00WcUkRuu63z6Yl3aipQ/pLkGwAUxymSUHpULn4AOwc9vn/Hn51YXuG7cOmfc
                zwapg7Ulbb101jZE9wWDfttuEYy/caXWdoZiM7akuqksThVIwpPGLpJVq5IBQVSE6SCiUVq0vDT7uGky
                em4XQRuxfm0xU/klZBvCur5znin21VUBTI5n7CsVvNwa7khOCC4Mcwm45KBOQKFzulzw6+ulXVNp91T7
                g26Dfmf5vTllvHmX7RspncuVMox0nL2BdKF1t7fC4crPWQREe4XbERcFYxKgqInVIBUzH6wl/Vio3ldA
                N87l+iK5tLmOr4tPH10TF92PdzW4r2RmFoAje1niyztm4LBoOXAHVIsPlmKkIdQcG4Aeaui0Iae5/Sbo
                10z6aLpnIe5rjwfh6ysbTdwW+R8nCS8lbMSSPdv4pORTScAgoYoin5yRDdPcxQ9Ku1q2jWVhCY1M6UNR
                Gny3pmNt2czPiG+sbxE7Mpu1YqIf3ZArRDWRkU2JFFjIpHUA5wSIYwlAekBGrCNkbbVyDta6R5XT3kvI
                Vm5HuaUyZcl8HmrGbTaECgxl0UEGrMhp9Bq4MqXyjCpygBQ5DgTd6zHVj63QNHuQNeui/KulnHOXW+FZ
                jJ6cSxk7tewjifYPbfYPyv5K2X7RougqRF6KaRVF0xOKYF58s/pW1tdaEYLbh0WYk0sRsnGXHOWgykZW
                /bviWhmba7b7uSRUmLlm0CqppOBQFdUUmoOQFQiBE0+eCgAZCOkO3ce32j/EA/lUc7GmxdcmHt526dz3
                FueoKxcZXa/uGYuLCEdaki7k7tWvu0lYu87fk3iK7JkyYGlRbyzMUSriCjdPzEuwhUjIOB9BHj04+X3c
                Vgb3bdmyU3HM76ONQNnZZhMcXXpfvi25KXirliJSRjbts6KvxnejhlHOow5jN3pTILlS60DEUE5AMomA
                chnfbpikgiiJgN5KSaQiAcAboTAoiAD8hqzPcL0mstcGjjOmmNYLTQk8oWgtE2xN3lFnlYe2boRdJPIe
                4hTQTVXSUbnIIlXbF80oCPT2EQG1/Zf2yJHal0mS+naayuxy9O3PlW48qzFwRduL23Exr2et+Kt33FGI
                u3K6zlJJOJIr7SqVExjKGJ5RQIBjZcqjn72WxxfO59lHA2oTCuo1DAWaMC2+a34F3KxcypHrGj7oPetr
                3BE3JbSxX8XIR8iqqciyTdQR+A5BTOkHXjj/ALx34hz/APbjXl//AH91Sf1NqkebY+mvVXpU0xx+LdY2
                pmV1XZkRuy55p5k+WuG77pX9xyr8V4aDTnL5AsiqRqlwUCqFKUn6pA6QAayIUpWCnf22vXG5Po8dIY4a
                FJqRwS8eZFwm6QDyH885Qaf6vWKV0mJDgaQRTKZl8QgRymTpL1KCYPktgjdOY66dOqeCMxuHlta1dLUU
                xsLN1lXKmdhPXPHwCn5PxWS49q6AiigORRIjLpFTKLR91EMUEVW6isgOon+5N4e/UxqK19z24Poi1rI6
                Yss3PFQ7VwAnv61J+1pFpZpLEnX1tX/Yqzp6ZOWZAt7U3FuiQoLKIgBk+KtgfeGv3QdSx2Fla794fJGT
                sLtpBs/kLOYXxmzKCcgogoBzGJbeRncfEkcAACRF2smuZLkRAhu5TSltC+hPT1t44DgdPOnG2nMNaUU4
                WlZubmXJZO7b3uh6UvvK6bslyppAu7WEoFAqaZEkSAVJFMiZQKF5I8/IOe/7g+tR2txfZmy3rQ3M9Gmu
                WzstY5tOytNcrjqRuezrla3OpdM8Fj3+S710oBSLaLM/06RASILhdPpNyI9g5qRKHPz9fsrpPUjhiN1G
                YCzHgaXmXdux2Xsc3bj9zPMG6Lt5Chc0MrGJyiTRcSkV9nOoVUyImL5hQEnWQRA4Q0MXeGq3e9LsTM4/
                0j7t58QYskbhd3P+TtnXxnjF7SRm3rZGOWnJS2bMTXZA7VbNWqaqoLnEwJlJ1CBQq7zSX4XpBvnqC1Q7
                merW99c+TLfkmEy1tOff3XOWrJykWr7TGDeF43+7cy8oxbqgBk4wqDVHsBT9afKYy12jZuybN2bNugza
                NEEmzVo1RTbtmzZumCSDdugkAFIQhAKUhCgAAAAAAABVrmtHWHhvQrp4yBqOzfcDWFtCyIpZZoyOsUkn
                dNxKkEkLakE3ADHWePl+lJIiZDCHInEOko1GU2EtLGZtZWr7OO+Rq9t1zFTuUX9wQOlu0JxuuZW3bTkA
                CIc3TDpPxMo3bNYtMsLFGKIdSSjsxQ8pUlTFqUpSlKVQRAAHn0+yob+ovw3GtlhrX1K6w9AG4zIabJfU
                zkfIWQrrZNJTJmOLmYJ5RvE+RLrtFxdONFHBpONLMqC4apOEkygBERMQVEgOO1Y+ybv/AMLetoTF0b21
                6y1sxV0QElcMWlnPUw+UkoJhLJO5diRi/QTQWMsgVRIEVlCpnEwFOYpREQmNs0FW7RqiusZyui3bpLOD
                iYTLqppARVY3Pfkw8j3H51H9whsnXJZe8NlndHzFnCAy82uVpNL4xsg1qyUHL2HMS0chBR5RMLhdqKUY
                wSOi3URV/SHVUOZEgnGpBZQH1Hnkfl/V3rELvRbXLTdb0rxmEI67ILH+QrOv6Fvmwr6uNg/k42EVRIaO
                uJos2jeVh9sZKGRAxQHgQDnt3q8LQfp0vLSTpHwVpuvzJ354bhw9YsZZKl/+4j28MuyiSChHJ+wquHKp
                vZ0ehDz1lhUVAoHOAGHgO5s4YwY5sw7lDEElIuIdjkuxLnslzKtE01XMaS44hWMB8kiryU4pCoCgkHjq
                AOnkOeQxkbK+2Vd+1XprvXAF35LtvKak5lWdvmJuS3I2UiEyw8gzRaNG0kwky8puQBHqVKkooQBHgpxr
                MVwH2/geajzT2xg2kN661d1a2si2Rj6y7UKxuBziK3LPeq3BfF/r4/kbIuafn5UFW7RqLwz8roy6RXCh
                /KApkyibqLIaroLVFgaF1Q6dcz6erhk1oWJzDj247FdTTdt7YtDKTTAyDOXIyFRHzxar+Uv5Iqk8wC9A
                mKBuoIdWNfDY7v2mKHkscaS93d7ijEqs29nGltWtfWe8XsnMo/AiDuWeWpZwOmKLpdNFIFjpODiYQ7mM
                Icj3li3wrl95kyPDZS3UtwfMurt3CrF4spldN9TJJNoQ4LDGOMnZLeuZNoxOYOhVnHRqBhTEfKcIG4EJ
                aWHMMYs0+Y1tLD+FrGt/G+M7FikYa1bPthiRhExTBAOxCJhyZRQ5hE6y6pjKqHEx1DmMYRHs6uucu4lx
                1njGF94ay3akXfGNMl2zK2jelqTKZ1GMxBTDYWztAVETFVQWJyCrZ03UIs3WKmugomsmQ5YcMp4YfXNp
                Pydd10bUu5pc+BLGu94Lhzal63TkixZRGOScKGi4a55HF7V9G3H7EmcQRePYhsPIiIIkHkxv0XHhw90T
                VrLwNu7mG7Nc+VcKQ8q0lHNhWHdeUL0CSUbG4EzWGvtrCwzJ6JDGInJKx7tRIB/wZw+GpaOlrTDhnRvg
                nH2nHANpoWdi/GsQEXBRZDee+eOF1jPZafnZAwAd3IyLpRZ4+dqfEqsocw8AIFC4KsAe7NsuTO5Hqn0V
                6ionLdu2bFabLghm992PccFJPQu+zWmRWV4SQW/KxvmAm+O3I8bgi5RKkY3k9SpQExi5++Oe48/aHPbn
                isW9g7NG3xjLWc+182bhdaL1Jvbnu28i3IN33Q5tuPue94lzCXDMRNjLuTRTVVRs8dETBFsBUhUMZMCm
                4EMoDhu3coLtXKRF2y6KjddFQpTJqorEFNRE5B7CUxREDFHtx29Kj67Q2yvfW2dqV1d53mc521edualJ
                RwrGY5te2pRojAx6F6SV1Qi0nOSJ0CmWbJySrcqKLISdx4V7B1SE6UpSlKUpStIiIfL7+/AfTsP7asX1
                xbjukvb1x6vf2pTKcFaZlGy6sDaSLpF7eN0Lol5BrCQCJhXUEw9usSgQO/Ju1ebfvDeJf1ObiCM5g/BP
                vbTtpacLg2ew0BIummR8oNyiQAJfVxxywCRgc5ROnEswImYBD2gVhAAJ9bsbeHFy9r4ue2NQGqKEn8X6
                To2SayybSSbOIy6swptXHnDFQCLkCqox6wlEjh8PqURBPkR5D1C8V4px3hHH1p4qxRaUNYuPrHh2cDa9
                rQDRNlFxMYwSBFBuiiQO48Byc5hExjCJjCI967CrHPuvayrf0JaDNROfpWRQZXDFY7uWAxs3UcJoLSOS
                7jhnEVZqDcpzpmP5bxRNwqVMwH8tM4l7gFeJtPzclcs5M3FMOl30tPykhMybx0sq4cu5CTdmePHLhdcT
                HOdRQ5jGMcwiIjyIiI1+RSlKUpWXfZH1dYM0b687AvjUtjq0sk4MvuKk8VZEjrvtKAvSNh4i8XLcja4v
                c1wt3DcxWjtBuouYScgkCnHzAZJ+954XxMsfO6xtsW3WklZMnFFvK8NOkGYx1mjJ20TemnsTIkAxFGh0
                hM5VjQPyURH2cBJwQsNnTVo6z9qyzwz01YbspeWzG+b3AslaMu5Qt52mpbLQ7uUaOTywpFSWKBBTKmfg
                wnEC8cjXXmb8D5c04ZIuDEmbbEuDHWQbYeOGUvbdxsFWLxFVu4O2Mqh5gdKqJjkN0LJiJDAHICId6+eu
                fGGQLKUthK77Qn7ZG84thN2uebjXMcnOQ8mcCMJONUclKCqCg/qqFEQGpbG0j4UfNuqF9HZc1xSMzgnB
                SSUHPW5asESLkb4yywfpmdlQRdGW4iGIlBEVXaiKiqhDiREhTCKpPQI0b7cujDQJbju3NK2CbPxkMmAh
                NXG1bKSl5zpAVOqmlMXbKmWfLJk6xKRIVgIAAHwiIc1e5xx/pEf50pUdPxKU8ZjocdRALLopPUr+knnQ
                8O1Iu0i8dSYi26U+DKqHOoUEUuODH4D5VAu8N/a4XDvBaRyAj1EiJ+YnTgKQq9BI2AXU6ymL/khyHxD2
                CvX9pSlKUpSqCHPr+75U4D7vp9lVpSqcBzz8/X7/AL6rSnHP7O4VTgP4CHYRD1+6nAB+Pt5qvAUqnH30
                4D6B8v4elOA+Xbn6ffyNOOwh9fuqvAfj+VKpx9/7xpx+P9FOPx29PpTj76cB+P6qrTj8fT5VTgO32en4
                Cq8UpSlKUpVOA7dg7en7KrSlU4Dt8uPp2pwH4/lVaoIAPr/Mfl9lVqnAfu7fs+lAAA/b/pqtKVTgO4/X
                j+Heq0pVAAA7BVeKVTgKAHH8f4jzQQAQ4+X0Dtzx6UAOA4D5VWggA+tU4qtU4D19R+o04D+Ij+/19KrQ
                A4pxVOA+n+j6U4D+v+PNOPp2781WlUEoD37/ANf76rwH0/HrVOP581WlU49Ps/HpVeP6/wCPcapxVaUp
                SlKUqnH4/bzTgPv++q0pTilKpwH8efWq1TgPXv8AjvVapwH4/t/bVaoAAHp9OKcfj7qrxVOA/mP19fWq
                1TgKrSlKUpSnrVOA7fZ2Dnv/ADpx+2gAAfs9OREeP31X1qnAfj/PVaVTgPupx+P4VWn9VU49Ps/HypwH
                7uePs5+lVpSlU4D+PP1/dzVeKpwH8/41WlOA+n2/t555qnAfs/HFOkPp93p2+6q1TgPp6en7fUeKrx/b
                VOAHnn5+vcfpxVacBVOkPp9n7AHkAqtU4AfUOfv7/wA6cdxH61Wqcfj6fdTgOee/b7R/lVacfL8fdVOA
                /jz8/WnAB+P66ccfgP2VXj7/AO2lKUqggAhx+A4+n0qtKVTgPx6evI9qtLsvQ1pex3qsyFrUsrFUFbeo
                jKVhIY6vi9opMWgTcESYQm3jpaMS4QK/eLNGQPnxSgquVukBxEQOJ7tacBVOA444Dj6cBx+6nHfn8fdV
                RAB9fkPP7aoIAPr8+w/aH0Gq1TgOOPXnsPPfn76AUA54+Y88fbTpDjjvxwIev1qtWy6qtH2n7Wpj6Ixd
                qOsRpkGyIW9Lbv1jCvF1m6QXBaz0H0aZZRAQMZA5gFNwgI9KqYmIbsNXCQMDCWtCxVt23FMIOAgmDWKh
                oeLaoso6MjmKIN2jJk0QApE00yFApSlAAAK/WpSlKUpSqcB9/wAu489qcB9PwHpVePx/bTilU4D8CP8A
                VVeKoIAP9X2fdVeA/H9lKoIAP4+vy5qtKpx/D+zjmnH1/H7qrSghz2GqcB+P596rx/D696pxx+Pt5Gq1
                QSgPr8/X7Q444Gq0qnADwP09Krx+PupSlKUpSlK61yxmPFuCrJmMjZhv61cb2PAtjupW5bvmWUJFNkyB
                6C5fHIBjiIgBUycmHkO1QfN1fxe1uwozeH9tqGGfkSpO4+V1AXhHmQjGjwv6PrsW3lREXBC9xB26AoCI
                AJSAHeoWQG1xbo+odMgqZT1OZyveQTSIU6j6bUZpulxKQhROINI1ilyPqKaRSgPPI1O82gPCc43wLIWf
                qA3AXcPlzJbJNtNw+EGRDLY9tWQWROBUbtWMI+9nDcRKcCF6UQOHHBuOamnxcVGQkcyiIaPZRUVGtUWU
                fGxzZFkxYs25ATQatGjYpU00yFAAKQhQAA7AFc+leet4z7W0aZujAuh+1Hb5FpapJHKmSQ9ndN2chIyi
                KcfazJNZUhCLezpkXUN5ZjlAVPUBDioGFKUpSlKqA9w78fbxzx+z9leoP4TLcszHrI02X9pnzKyeXI70
                lxNkwVsZKdCuupJWTNoLxttWrNLHIYp3LJFgqRJU6nWokXv1CUwhIasfbu0c431O3HrDsfB9oW3qAuuE
                Xgpm9otim1Os1dqlVeuUI9MAQScriQoLOCEA5wDgR9at03LNmrRZuiW+y/P1Y6kXkm32arO1cv2aqWGv
                eIbmMKoMHjxIOh606xEwt3JTBzz0iHI19g92kNDF34LwFgvMOEbTzHE6cbetq3seXTesckpdzRtbHSLI
                7iYYeSooBugoKJHExDfMvIiNZIImJjYKLjoWHZoR0VEs20fGsWpASbs2TNEG7ZugmXsBSEKBSh8gAK/R
                pSlROfFmXJcEBo8scYNqmumaSuhWRWVfSDMzJqaLKxFyh5CSrcxwBYQ4XKPwiPT0j8QRWfChWSrdm7bj
                +ZTXTInaGOMjXAsiCRTJHD3MLYqCQHMUS9IqAJRADAAdgr1bKUpSlKCPACP0DmvyQnYYZX3EEvF++/IF
                17n9va+9PZg55ce7wP5vl9v1+jj1qvv2EGVGBCYihnQb+1mhveDT3qDXgB9pNHdfnAn3D4+jjuHetITs
                MaWPAkl4o04mgVypDlkGppVNsYOoHB48D+cCYh6HEnFak52FVk1oRKYi1ZpugVy4iE37Q0og3Nx0uFmB
                TiqQg8hwYxQD7aoSehVZVeCSl4tWbaoJuXMMnIMzyyDdUoGTcLRwH84hDAYolOYgAICAgPAhRKdhV5Ne
                FQl4taYapFWdRKT9qpJtkjdyqrsSGFUhR+RjEAB+Q0QnYZ1Ju4VrLxbmYYEIs/iUJBotJsUVBACKu2BD
                iqmU3UXgxyAA8hwI8hzVCdhXUk6hm0xFOJdiUqj2KQftVpFmmfgSHdsUziomBuQEBOUOeQ4rS3nYV5Iv
                IhpMxbqWjyFNIRjeQaLSDAph4Kd4ySOKqQGEeAE5QDn61VrOwj6QfRTGYi3knGAT3lHNX7Vw/YCp/g/b
                WaJxUS55DjzChzyHHrRrOwr589jGUvFvZKNEhZCPZv2rl8wMp+oV60ROZRIR4HgFChRpPQr98/i2EvFv
                ZOLMBJKOaSDRw+jjmHgpX7RE4nSEfocofZVWU5DSTt8wjpeLkH0YcqUkzZP2rp1Hqm56UnzdA5jomHge
                AUABH5elaWE9CSjmQZRkxFST2JWFvKNGEi0duY5cBEvkv0EDmMifkDB0KAA8gIfIaqxnYWUcvWUbMRUg
                8jT+VItWMg0eOGCoj/g3qDc5jpG7fqnAB+ykfOwsss/bxcxFSTiKWFtJox8g0eKxznkQBu+SbnMZE/JR
                DoUAo9h+g1SOnYaYVeIxUxFyasesZq/RjpBm+UYuiG4O3eFbHMZI4CAgJDgAhxSNn4SZM8TiJiKlVI5b
                2aQTjpBo+Oxch6oOytjmFI/YfgPwPr27VWOnoWY9tCJmIqVGOXM1kAjZFm+Fi6IIgds8Bsc3lHDgeSKc
                CHA8gHFIydhZsrg8LLxUsRmudq8NGSDR+Vq6T4E7ZwLQ5+hQA9SG4EPpVI2fhJkjpSGmIqXIyXM2dnjJ
                Fo+I0XIAiog6O1OcCHLwPJDcCHHfjvVY2dhZpNdaGmIqWRarnbOlY2QavyNnKX+EbLnaHOBFC/5RDCAh
                8wqkXPQs43VeQsxFS7Ruso2cuouQaSDZBwgAGXQVcNDmKU5AEBMQwgJQEBEA5Cqxs7CzLdV3ETEVKtW6
                iiLlxGyDR8ggsl2USVXanMUhi/5RTDyHzqkZPQs01Vfw8xFSzFBZVus8jJBo+bIroAAroqrtTnIUxOQE
                xRHkoeod6Rs9CTDJSSiZqKlI5EypFX8bIMnrJIyAdSxVHTYxiAJA7m5MHAdx4rVHTkPLszSMTLRcpHkM
                qRR/HSDR6yIZDnzimctjmJyTj4w6u3fn0rQwuCClo88tEzMTKRaYqgpJR0izex6fs4dTjreNjmTDoDub
                k3b58VVlPQklHGl42YipCIIRc55VlINHccQjXn2k5nrc5kuE+kfMHr+HgefnxVjPQsnHe+I2Xi5CIAqx
                vejGQaO47pQEQWN7agcyXBOBA49fw/PiqNJ+DkI00ywmYl9DJprKKSzSRaOo0hGwCZwc79A5kgKQAETm
                E/BeO9VbT0I8ixnWcxFO4QEVl/fDaRZrxXktxMVdUZFI4ogRMSmA5uvgBAeRDgao3noV3GDNtZiKdQoJ
                HXGXbyDRaLBBMf0i3vBM4o9JeB6jdfAfOiE/COYo063mYlxBlRVcDMISLNWKBsgIgs4GRTOKIEIID1nE
                /BeB54onPQisSM8lMxKkH5IuffJJBoaJ9nKYSGXGRKfyegBDgTdfAD61qLOwp4oZ0kxFHgwbi7GZLINB
                iQalDkzoZEDiiCYB/l9fT9taSz8IaJ9/lmYk0F5B3QTRZFoMT7KQRKZx7yA4o9ACAgJ+vgO4c9q0mn4Q
                sSM+aaiiwXkA598mkWZYkG5h6Qc+8RN5PRyIABusQ57c1rPOwycUE6pLxacIZuR2WYUftCRYtVCgdNwE
                gJ/JFMwCAgoB+keew0VnoVCKCdXmIpGE8kjkZlWRaEivZ1DAUi4SJjgj0CIgAH6+B57VRefhGsUWedTE
                U2gzIJOQmV5FolFCgvx5C5ZBQ4IiRTqDoP18DyHHrR1PwjKMCadzEU1hxTSVCXcyDRCMFJbjylSvlTgk
                JTc/Cbr4H5DVXc9CsI0Jp9MRTKG8pJYZZ1INW8Z5S5gIgp7escqXScTFAhuvgwiHHqFUeT8HHRhJqQmI
                pjDqERUTlXkizbRx03AAZuoR8scqQgoAgJBA/BuQ455o/n4OKjyS8pMxUdEn8kCSb+RaNI8wuP8AAdL1
                wcqY+ZyHR8XxfLmj+chotgWVk5mLjYs4IiSSfv2bOPMDgAFASvHBipiBwEBKPV35DjmkhPwcQwJKy0zE
                xkWqKJU5KQkWjJgoLgOpACPHJypj1h3Jwb4vlzVZKdhYZonITEvFRTBU6REnslINGLRQ6wcokTcuTlIY
                TB+qAD3+XNJKeg4ZmnITEzFRUesZMiT6SkGjFmqosHKJE3To5CGE4dyABviDuFJKdhYVsk9mJeKiWS6y
                aCDySkGjJqsuuAigiku5OQpjnABEpQHkeB4AeOa0yU9CQyKDiYmouKbuliN2q8lIMmCLldUf0SLdV0cp
                TnN/klKPI/Lmqyk/CQiCLqZmIqHbOVUm7dxKSLRggu4WDlJBBZ2chTnMACJSgPI/IOK1SU7CwybdWZl4
                uJSdrkatFJOQaMCOnKg/om7czoxAOcwdwIXkR+QVpkp6FhQaGmZiKiSv3BWjEZKQaMAeOVP8G3aGdHIC
                qhuQ4ITkfsqslOw0L7L75loyJ9tXK1Z+8n7RiDtyf9Ru1F0cnmHH5ELyI8elUkZ2GhjMyzEtFxRpByVn
                Hlkn7VgZ86MIAVszB0cvmKDyHBCciPb60kJ6FiDskpaYioxaRWBswTkJBoyUfuOQ/QMiODlFU48hwQnI
                /YNVfzsLErMm0pLxca4klgbxzeQftWS79wIgAIMknJyiqceQ4IQBH7KrITsLErMG0rMRcY4lFxaxjeQk
                GjJaRcFEAMgxScHKZY/cPgTAR7h271R9PQkW6YspKYio95JqihHNH0gzaOX6wdjJMkHBynVMHzKmUR+y
                j2dhY55Hx0jMRbCQllBRimL2QaNXkksUQAyce2XOU6xgExQEEyiPcPqFUeTkNHOmTCRmIyPfyZzJxrJ6
                /ZtXcgoUOTkYtnByqKiXnuBCiP2VV3OQse9YRb+Zi2UnKCJY2PeP2jZ/ImL2MVizWMVRUQ9BBMg8Ucz0
                Iyfsop7MRTSTkur3dGuZBohIP+j9b2JkqcFFeO3PllH1qrqdhWMgyiXsxFM5SSA4x0a6kGjeQfgnz1iy
                ZqnBRYC8Dz5ZR44HmjidhGki0h3cxFtZaQIc8fFuJBohIviJ89Z2bJU4KqgHA8iQggHHeqLTsK3km0M4
                mItCYepnVZxSz9qnJO0iAInVasTHBVQoAAiIkIIBwPfii87CtpNrCuJmLbzD5EzhlEryDNKTeIEEQOu0
                YKHBVQoCUwCYpBAOB+g0VnYVCTQhVpiKRmXSZl2sSrINE5NygT9dVBgc4KnKHcBMUogFDzsKlLIwKkvF
                knHDcztvDHftSSy7QnIncpRxj+cZMoAbqOUnAcD9KKTsMlKJwakvFpzSyPtKMOo/aElFm3Ih7QlHifzj
                E7DyYCcfuqpp2FJKkgjzEWWcUQF0nDGkGhZZRsAci5JHGP5wp9h+ICcfbVPfsN71CCCXixmxQ9q9zhIN
                BlfZeB/pQR3X5wp9h+Po47etAnYY0oaCCYihmyIg6PDhINBlCNR/+EGj+vzgJ3AOsScVUJ2FNKmgizEW
                M4RArk8MD9oMqRscOSuDR4H84Ex7CBxJwPyGqEnYZWUVg05iKUmkEQcrRCb9qeUSbGEOlwrHlOKpSDyA
                AcSAA/WqJT0KvKrwaExFLTbREjh3DpSDRSVaoKFKYi68cQ4rEIYDFEDGIADyHHrWpKdhV5NeEQl4paZa
                pFXcxCcg0PKN0DB8Ky7AhxVIUfkYxAD7aohOwrmTdQreYinEyxSKu+iUJBorJs0TiUCKumCZxVTKPUXg
                xygHcO/eiE7CO5F3DtJiKdS7ApTv4pvINFpJkU4AYh3TFM4qpgICAgJyBzz2o2noR5JO4dpMRTqXYFKd
                9FtpBovIsiGHgp3bJI4qpgPPYTkDn5UazsK+kHsSzl4t1KxoFGRjW0g0XkI8D8CX21kkcVEuoBDgTlAO
                4fZzVpOwsg9exrGXi3sjGGKSSYNH7Vy9jznHghXzVA5joiPA8AoUBqjSehX759GMZiKeyUYYCyUczkGj
                l9HGEeOl+0ROZREeRAOFChRlOwsi7fMI+Xi37+MMUkkyZSDRy7j1Dfqpvm6JzHSEfkChQ5oxnYaUcyDO
                Ml4qRdxKoISrRjINHbmMXMI9KEgggcxkDj0m4KqUojwP0GqsZ2Fk3L1nGy8VIuo1UEJBqxkGjtywWH/3
                p6igcxkj/wDkKAA1pYT0NKrPm0XMRUm5jFgbySEfINXi0c4MIgVB+i3OYyRxEB4Ip0mHge3aqx07Cy6j
                5KJl4uUVjFzNZFKPkGjxVg6IIgZs9I3OYUlA4HkinAhwPb14R07DTJnZIiWjJQ7BcWz4sc/aPjM3IByZ
                u6Bsc3lqB/zD8DSOnYWYM9JETEVKnjnAtJAkbINXxmDovPW2eg1OcUlA4H4DgBuw9qRs7DTXtIwsxFS4
                MnBmj0YyQaP/AGR0TkTtXItDn8tQPmQ/AhSLnoScTcrQ0zEy6LNc7V2rFyLOQTauUw6lEHKjQ5wIcofr
                EPwIfSqxs7CzKbhWHl4uWSaLnaulIx+0fptXSfPmNnJ2hzgRQv8AlEPwIVpi56Em0FnUPMRUs1bLqtXD
                mLkGkg3QcogBlG6yzU5ikOUBATEMICHIc+ocoyfg5psq8h5iKlmiB1ElncZINJBsiqkHKqSq7U5ilMUO
                RMURAQ+YVWMnYWbbKvYaXi5Zmgqo3Xdxsg0ftkXCPAqoKuGhzkKYgCAmKIgIc9wCqRs/BzDJSRiJmJlI
                9EyxFn8dINHrJJRuHUuRR01OdMokDucBN2D1qsfOQ0uyNJRMvFyccUVimfx79q9ZEM3HhcpnTYxk+SCA
                gf4vh47+g1SOn4SYYHlYmZiZOLTFUp5KOkWb5gQUC9a4HeNTmTASB3OAmDgPWjGehJOPPLRsxEyMUmC5
                lJNjINHcemVtz7QZR43OZMAT4MJxE3BeB6uOKqynYWSjffMdLxb+I6Vje9WUi0dxvS2MJHBvbm5zJcJm
                KYDj1/CIDzwIcUaTsK/jTTLCYinsQQiqh5VpINHMaRNABFZUz5E4pAUgAInETcAHqNaGs9CP4sZxlNRb
                uFBNZcZdrIM3EWCLYRBdU0giYUgIQSmA5hMABwICNa289CuowZtrMRLiFBI6/vdCRaLRnkJjwosL9I4p
                AUvAgY3XwHHrRGdhnEWM4hLxS8ICCzoZhGRaKxZWqACZZyMgQ4o+WQAETn6+A4HkfpRKfg14kZ5CZiVY
                MEDuffKci0PFezkMJDrjIEOKXQUwCBj9fAfWqFn4Q0SM975ivcYIC5GaCQaDEg2D1cDI9fk9H1P18fbW
                os7CmivfoS8WMH5AugmQkGoxYtQ5AzkJADeT5YCAh19fH21pNPwgRIT/AL5iQgvJByM0MizCI9mEQAHH
                vIT+T0CIgAG6+OR9R9KHn4RKKCeVmYlOCMgRyWaUkGicSZupx5bgsic4IimbkODgfgfkI1qVnoRCKCcX
                mIpCFFIjj3wtINE4sW5xACLBIHOCXSIiAAbq4Ee1UWn4RvFBOuJmJbwZm6ToJpeQZpxIt1xAEXASJ1AR
                8swiAFN18DyHA9w5OZ+EZRZZt5MxLWFOmmsWXcyLRCMMksHKKpH6pwSEpv8AJN18Dz2Gqu52FYRnvp/M
                RbGG6ElvezuQZt40ElzAVFQX6pypdJhMUCj18CIhwNUdz0IwjQmn8xEsYcxEVCyzyRZto0yTjjyFSv1j
                gkJVOQ6B6+/bj1o+uCCjI4JeSmomPiTeUJJR9ItGkcYF+PIEr5c5Uh6+fg+L4vlVX85DxbEknJy8VHRp
                /JEki/kGrNicrgAFAxXbg5Ux6+Q6eDfFyHA96pIz8JEMCysrMxUbFnFECSMhItGTE4uO6AFeOTlTETh+
                p8Xf5UkZ6Eh2achLy8XFx6x0k0X0jINGTNZRf/AEScOTlIYT/wCSAD3+XaklPwkM0Rfy8xFRTFwZNNB5
                IyDRi0WUW7oJpOHJylMJw/UAB7/KtUnOQ0I1TfTUvFxDJVZJuk8lH7Rg1VcL90EE3Do5CCc4APQUB5N8
                gqklOwsMgi6mJiKimzlVJBs4kpFoxQXWW/wSKKro5SnOb/JKUwiPyqknPQkIi3cTMzFRLd2sm2arycg0
                YIuXCodSaCCzpQpTnMHcpCiIj6gA1WUnIaDTQVmpaMiEnS6bVspKPmsem4cqdk26J3RygdQ3yIXkfsGq
                Sc9CQpWp5iYiooj5YrZmeSkGjArxyfjy27Uzs5AUObn4SFERH5BVZKdhYb2QJiYi4kz9crVkWTkGjEzt
                0f8AUbNQcnL5ig/IhORH5Uk52FhhaFl5eKiTP3ANGAScg1YmfOzCAEbMyuTl81QeQ4InybkQDjvSRnoS
                HMzJLTEVGKSK4NY9ORkGjJR+5HgQbMiuTlFVQQEBAhAER5D76rITsLErsmspLxca6klgbxzd/INGS8g4
                H/3hik5OUyp/oVMBGtL+eholdi2lZeLjHEouZtGISEg0ZrSLgogBm7BNwcpljh1F5ImAj3Dt8QVV/PQs
                U4ZM5OYi495JK+RHNXz9qzcP1vmkyQcHKZU32JgI/ZVHs7CxryPj5GYio9/KqGRjGT6QaNXkksUQ5Tj2
                q5ynWMHIclTKI96PZyGjXbFhIzEYweyZzJxzN6/aNXcgcnHURi2XMU6pg5DkEym4+fHNVdz0LHvWMbIT
                EUxkpMxiRse7kGjZ9IGKIgYrFoscFFR5+RCjR3PQrGQZRL2Xi2kpJdXu6NdP2rd+/wCjsf2JoqcFFeBE
                OfLKPHp68UczkMzkGcS7l4prKyAGMwjXL9qhIPikARUMzZKnBVUC8Dz0FHj5j2o5noVnIsoh5LxbWWkS
                iaPjHMg1QkH5Cjwc7NmqYFFQAQHkUyjx8+KLzsK1kmsM5l4tvMPiHVZRK8g0SkniSYcqKNWKhwVUAvqY
                SFEAqq07Ct5RrBrzEWhNPUjOGcQs/aJyjtuTq8xZrHnOCqhC9Juo5SCAcDyPYaKzsK3k28K4mIpCZdpm
                WaxKsi0Tk3KJDdJlW7E5wVOUPmYpBAPrWlSdhUpZGCVmYtObcIGdN4c8gzJKrtSAIncox5jecdMAKbk5
                SCHYeRDiqnnoROUTglJiKJNqoC5ThzyLQkoo2ABEXCceY/nCT4R+MCcdh79qGnYQkqSCPMRRZxRAzlOG
                NINCyqjYodRnBI8x/NEnHfqAnH21QZ2FCWCB98RXvwzf2ssN7e196i1459qCO6/OFPsPxgTp7etVCdhT
                SpoIsvFmmyIA6PDhINBlSNh44cHj+vzgJ3D4xJx3DvQJ2FNKmgizEUM4REHJ4YJBoaVI2MXqK4NHAfzg
                IIcD1CTjj0EaEnYVSVUgiS8WebRRBytDkftDyiTcw8FcKR5TiqVMf+eYnFE52FWlXMElMRSs20QI6dQ6
                T9qpKtWynT0OHMcQ4rETHqJwcxAAeoOPUKqlOwq8kvCozEWrMtkyrOYlOQaHkm6R+BKouwKcVSFHkODG
                JxVEp2GcSTmFby8WvNMkiLvIhGQaKybRBQQ6FnTBM4qpkEDBwYxADuH2c1QnYV3JO4ZrLRjmXjyEUfxb
                d+0WkWSaoAKajtikcVUym6i8CcgAPIcUbTkM8kHkSzl4t3Kx/SMhGNpBqu/YlOPBDPGaZhUT5+XWUOa0
                tpyGeyL2IZzEW7lo0CGkYxtINF5CPKfgUzPmKJxVRA3IceYUOeQqrSdhn759GMZeLeyUaJAkY9o/aOX0
                eKn6gPmiJzKJCPy8wpeflRnOw0i+fxsdLxT9/FHKlKMGcg0dPY1Uw8Am/aoHMoibsPwqFAR/fwZzsLIP
                H0cwmIp9IRpikkWLOQaOXkec/wCqR81QOY6Qj6ABygNGM7Cyjt+xjJeLkXkSsVvKtGMg0duoxc3IFRkG
                6BzHQOPSbgqhQEeB4DsNGE9Cyrh80i5iKkncasLeRbMJBo7cR64DwKD5Fucxkj88/CcAHtVI+fhJZd81
                ipiLk3MYsCEk3j5Bm9XjljCPQi+RbHMZI5uB4KcAHsPbtVY6dhpdR6hFS0XIrxi4tZJFhINHqke6KIgZ
                s9TbHMKSgCUwdCgAPYe3YaR07CzBnZYiXi5UzBcWr4sa/aPhZOS/rtnRWpzimoH/ADDgA/ZSOnYWYM8L
                ES8XKnjlxayBI6RZvjsHQCJTNnpWpz+UoAlMAkPwPYe3YapGzsNMi6CHmIyW9hWM0ejGv2b4GjsvYzZy
                LY5vLUAfUh+BD6UjJ6EmknC0NMRUuizcKNHasXINH6bV0iHUs2cHanOBFChwJiGEBDkOa1R05DTBF1Ie
                Xi5ZJoudq7UjX7R8Rq5THpUbuDtjmAhwH1IYQEPpVIyehJtBd1DTEVLNmy6jVy4jJBo/RbuUgAVW66rQ
                5ylOQBATEMICHzCkbPQky2Wew8xFSzNuoqi4dxsg1fNm6yAcrIrrtTnKUxP8ophAQ+YVqjJuHmmyjyGl
                ouWZpKqoKuo1+1ft01kB/TInXanOUDF/yiiICHzCtEbPwcyzVkYiZiZZggZUi76MkWj5midAOpYijpsc
                xCiQO5wE3IB6hSPnoWXZKSUTMRUnHJCsCkhHyDN6yTFv/vgFHTZQyYeXwPXyb4fnSPnYaXYGlImYipOM
                KKpRkY+QaPWBTIByuB3jY5kwEnfq+Lt86qwnoSUjzy0ZMRUjFJAsKsmwkGjyPTBsAmcdbxucyZfLABE/
                Jvh+dUZz0JIxppmPmYl/EEKsc0qzkWjqNKVuIlcGM+QOZIATEBA49Xw8CA+lVZz0JIRwzLCZiXsOUiqp
                pZpIs3UaCaPPmqC+QOZICk45OIm4D51paT8G/jBm2MzEvIUE1ljSzWRZuIwqLbq9oWGQROZLpT6TdZhN
                wXgeR7VVvPwbuKGdazMS4hASOuMwhINFooEUhEFVhkUzij0FEB6jdfAfWqozsM4izTiEvFrwhUTuRl0Z
                BopFlbpgIqrjIEOKPQUAETH6+kPmPaiU9CLxXv1GYiloPyTuffKUi0UiRbJiJVFwkSHFLoKICAm6+OQG
                qFn4Q8UM8nMxR4PyBc++iyLMYkrcDdJlxkQN5PQA9uvr457c1Us9CmignQmIv3IKAugmfeDQYkzUP/hR
                ZED+T5fID8fXx9tBnoUIo06MxFBBlRByMyMi0CJ9mHsC4yIn8kCciAdfXx9taTXBBpxHv9SZiSQXkFdB
                NGkWZYkWpwAU3ISQn8nyzc9lOvp+2qqz0I3ignHEzEoQpkiuAl1ZFonFigf9RYJA5wSEhvkYDcfaNVXn
                YZrFe/XMtFt4TyEnITK79qjFezLiUEHHvBQ/leWfqL0n6+B5DiqOZ+EZxYTjuZiWsKZJJcsu4kWaMWdF
                cA8lYsgooCQlNyHSbr4H5D86O5+EYRnvp/MxLGHFNJUJZ3ItG8Z5S5gKir7escqXScRACG6uB+Q96q7n
                YaPjQmZCXi2EQZNFYsq9kGjaNMi4ADIKg/WOCQlOAh0GA3BuQEOeao+uCDjI4JiRmYmPiDFSMWVeyTNr
                HGKuACgIPVzlS+Pn4BA/A/LmqyE9CRTAspKTEVGxigIiSSkJFmzYHBzwDcSPHBypj5giAE+L4ue3NJCe
                hIhgWVlpmJi4w4ogSRkZFoxYGFwHUgBXjo5UxE4dycG+IPSqSE7DRDNOSlpiLjI5U6SaT6QkGjJkqouH
                KJE3ToxSGE/bo4N8XypJT8HDNEX8tMRUWxcKJJIPJGRZsWiyq4coJpOHJyEMY/boADd+e1VlJ2GhGqb6
                al4uJYrLJN0nkm/bMGqrhcBMgik4dHKQxzgUekhTCJgDkPSklOw0Mgg7l5iKimjlVNBu5k5BoxQcLKj+
                iSQWcnKU5j9ugpRER+QVSSuCDhUG7mZmYqJbO1k27RxJyLNgi5XWL1IoN1XRyAc5wARKUgiI8dq1Sc5D
                wiaKszLRkQk5cEatlZN82YJuHSnPltkDOjlA6g8fCUvcfkFUkp6EhSNlZiZiopJ6uRszUkpBoxI7cqf4
                Nu2O6OQFFDchwQoiI/SqyU7Cw3svviXi4r25wVqyCRkGjEXjk4fA2a+1HJ5ig/IhORH6UkZ2FhzNCS0v
                GRZ365WrEklINGB3rk48EbtCOjkFRQfQCEARH6VSRnoSHOzTlpeLizyK/s0eSRkGjEz5xwAg3Zg6OXzV
                O4fATk32UkJ2FiVmbeUl4uNcSK4No5vISDRks/cCIADdmk5OUypx57FIAjR/Ow0U4YtZWXi411KLC2jG
                z+QaM15FwHHKDFJwcpljh1FASJlEe4du9H07Cxa7JrJzEVHOZJXyI5s/kGjRxILdv0TJFwcplTf+SmAj
                9lHs7DRrtgwkZaLj30qqKEWyev2rV3IrAYC+SwbrHA6x+RD4UyiPcA+YVR5PQsc8YR0hMRTCQkzGJHMH
                sg0avJA5OAOVi1XOB1RDkOQTA3r+2qvJ6EjnzKNkJiKYyMmYSRse8kWjV7IGL+sVk1WOCioh8+go0dzs
                MwfsYt9LxbKTkxOEbHu37Vu+kBTHhQGDRY5TrCURDqBMo8VVzOwrORZxDuXjG0tIFOePi3Eg0RkXxU+f
                MMzZKHBRUA4HkSFHjvz6DVHM9CspFnDvJeLaS0gUx4+LcyDRCQfkKPSYzNkqcFVQAQ4ESFGqLzkM1kWs
                O5mYttLvyHUYxa8gzTkniRA+M7VicwKqAHfkSFEA+dVVnoVvKtYJeXi0Zp6idyziFn7VKTdtkgMKi7Vg
                c4KqEL0m6jkIIBwPI9qKzsKhJt4VxMRSMy6TFZtEqyDROTcol56lUGBzgqcocdzFIIUUnYZGUQglpeKS
                nHKB3LaHPINSSjhumBjHcIR5jgsdMoFHk5SCAcDQ09CklE4M8vFkmlUBdJRBn7UJVZsURKZylHCfzjJg
                ID8YFEOw09+wwShYMZeLCbMh7UEML9oEqLbjn2gseJ/NFPuHxgTigzkMEqWB98xgTh2/tZYYz9n72Fr3
                /pIR3X5wp9h+MCcdh70CchhlBgiy8YM4VAHRocJBoMqVqPo5NH9Xmgn/AOWJOKoWehTyykCSYizziKBX
                KsKSRZmlUmxuDFcKR4G84CCAhwYxADv6/OtRZ2FPKHgyTEUebSQByrDlkGhpRNsYeCrqR4H84pP/ACxJ
                xVE56GWlVoJGXi1ZtqgDp1DpSDRSUbthEoA4WjyHFcpB6i8HMmADyHfuFEZ6EcSbmFbzMUvMs0irO4lK
                QaKSbRE4AJFnLAhxVIUeQ4MYgAPIURnoRzKOYRtMRLiZZpFXeRKMi0Vk2qJ+AIs5YJmFVMgiIABjlAO4
                fWjedhXUk7hm0vFuJhgmRV/FN37VWRZpqAAkUdsUziqkUeoogJyAHcPqFVbTsM9kHkSyl4t3KRwFGQjW
                0g0XfsAU7Ji9ZpHMol1d+BOUOeB4qjaehXsi9iGcxFu5aOAppCLbP2q8iwKcA6BeskjiokA9ReBOUOeQ
                49QqrSdhX797FspiLeScaJQkY5rINHD5h1j+jB60ROZRLq+XWUOaM52FkXr+Nj5eKfyMUcqcowZyDR09
                jVDiIEI/aoHMoiYeB4KoUBHgePQaoxnYWTdPWMbMRUg9jTgnIM2Mg0dumChhHpI9btzmMkI/IDgAj9K/
                WpT8fdWjr/W+RS+pjdg7eo1ahqa1z6S9Hdpu7z1G54x1jGJaoqrEbzlwsBnJAUQ5OhFQDY53jlTtx0Io
                mHuHy5qIXr88Zpi610Jix9vrD0lkWfJ7S0LmTL7VWAstssQwkTdW5ZLVQJF+Tj4vMeqtAAfRNQvBqhd6
                rtwnX1uX5EQVzplnIuXZKTkDpWvjC3gkErOhTuj8Jx1qWDCf0dP0ABMCR1T8AKhzj3rOXtleE61g6qVr
                cyRq7UeaVcKSBUZIsLKNEHeYbkjD+YZL2W1lTAWMKoYhQA0iJFPLOChUeBL1ehnoa23NH+3bjhpjfS/i
                SGs5EEUvf14Py++r+vF+QOFZW57rfAZwuqcREQTIYiRA+FJMhAAKvr4D+uq0pUInxp+HsWOdMmnDNakf
                ER2XYzKchZrSURYNgmbitGRgzPHbB0/4BUUmLhJNRIoCIcrH59ArzfuPXkfQfxxVKUpSlKAIgPIVmd2U
                93fJu03qSLecagpdOCslrxMHnXHJhIUJyFZqKJR9xxa4cGSkor2hdZmbr6DdR01AMRQQH17NOmofFWqj
                Dlj51wvdDG7se39DtZiGlGShTCl56RTrx75LnlJygYRTWSMACUwCAhXdwgA+v4+6q0pSlKiHeLTuh9Fa
                XrcjmD9w2OW3roeHIxUTIuUjyTj4ZyZ8JjAb2RRBdZM5eB5OJR47CIR8vB7wnte5xdEmUqZk4bAF3nE6
                hxMty8URalBPj5gI/F6dq9P6lKUpSqDwADz6VhqX2gbbW3ZSbphM/wCS0ZsLSQt5XDhBJ+TJlW9uFtoG
                xJTzfNJGKJkBypHgkJDLic4/riNaIjZ/tyK3aJHdQNqAyW8nXlpv7fRw85FM1tIqSVsjayrQ8t5vmni0
                khF03jjJdBHBUzc/oiiPOtfaPgLZ3dLz3WC53yDITN22J+SZsNOk0jWuyWPYDfHJ00nxFQEY9Ju1JIIM
                /J4K8MZXuYRMPHsLaFtqxN1fIW6A3z5kp9L37a0hAL4eXUKS2GziQZoR5yrSRVRUWj25W/mtWB0wIRU/
                UAh0hzoxdtA27jPdgy1ujp6gMmT81k+3ZCHDEEmYo29EqS1tNrWXZKyvmio5i2abf2iMYHSAqChidPZE
                gjvYR2i4HC+6VnHcwQz3kS55fMtqSdvGxNLkTNb0KaXbMmzoAfkV6lmzUGRDR6ApACRlFOO48jt4A2g7
                cwPuj6hty9pqAyXcstnqBuGLXxFIGIjbUS5uZ4ycrpvJEixjvmMcRkKcQyUTArfrKYBDySAO3pt2gLc0
                67lOoXcUa6gcn3jK52YybY+Lp5QDwMGaZTRTcpuZEVjqPEGnkgEYiomAIFHpDgChzzNKO0Zb+lrcf1W7
                hjLPmRr5ltTcFcEI4xjcSaQwVtpXNdkZdzpYz8iomdDHqRhWcUBki+Q3WWKHHWIDxtJO0FbulTcM1Ua+
                WGoDJd7SGpdWddOMZTQkRt+317jlyS7pN08TVOZ+ix8sG8UkqmUG6XSUvYgc6dFu0BbejfXbqo1txmoL
                J+QX2pVKRQUxzcqhAg7eLLTic8us8dlWOaQWanSBvHqqplFFEyhQ4A4hW/oY2iLe0Ta4NZmtGNz7kbJU
                jq3k7lfr2LdaaXu20kLpvtO/liGkAWOd6pHqkCOjVTpl8tmIpgBeemtGgraFt/Qxq71barovPmRsju9U
                cwtJLWRcgglE20DqbWnFTunBVlDP10jLC3aqqFKKSJQIXsPAcbb12e7a0B6pdYepWF1AZNyapqtmJSQW
                s26DkSj7YJMXYpd67568TUUNJSSCqgs2r5YpTkQ8wOOVTAH6O3PtGW9t86idXuoCKz1kTLD7VZdC086t
                68E0iMrWQWuRzcwFBwRZQzp0Q7kWhHJylH2dMhe3HAcHbZ2gLc268y6xMuxGfsmZVV1YXE3lnEFdK3s7
                O1kUJeRmPbVlCKqC/lRNIih7wV4OVJPpDnzDAGrbV2gLb25so6sckQmf8l5V/uoLpfzy8NdJk2re1Un8
                05mzOQXRVUF3JFM5Mh7wUKU5iFDkOREA5G13tFW9tn3Zq0uuIz1kLMTnVNecVcz1vdzdJslayEK8l3bV
                RsZFVXz364y6hHbs3BlCIIAP6gccDbD2fLb22ktVqMVqAydlxPU5dbiccr3QqDJ7bDdQXxQeFdIqqe0z
                B/bjCvJnApzmIU/zHj9La92ibc20UNTjeEz5kzLKWo+9XF0uCXEoSMLaCShXJSLxSSCixTyZ/ajCvImK
                B1PLS5DhMK/I2tdne3tszHeqXH8VqEyTl8NTVxllX05cySUbIWog1jZaKayEWVusr1Sjksqou/eiYBVV
                RRNyPTyHM2x9oC3tt/E+pTFkXqAyZlNHUZc8/OPZ+cVGLlLTTmoVWEK5iDoLKcyQFVFwrICIHOsAGH0C
                uPtj7PNtbb+C9S+EYrUFk3KLPUfdkrPO5qWFODWspB5b69vor20xaKqppSSpHAuHz4pgMudNAB7IFGtW
                2xs+QG3hpn1Jaco7UJk3JzfUZJ3W7f3lKdEPN2WS47Wc2oD21it11ARfgRyLxV0BwEzkpTiPIc1v7b+0
                Hbm3xpJ1A6V43P2SMkNNQF0XzccjeL8E4WUsw95WsnaAjaiDZVTynJEkSvFnXJTKOREwh8IDXB29dnO2
                dBejjUDpEZahMnZDi8+O7wO7vN35cJI2Wlc9vq26Va041sqok3c9KvtDpQpwFdQC88AADXJ0D7P8Foc0
                IahdELHUNk++WGoMcsle5JWOELclgBlKwy2Cq4sRJsuYGa7JMoSKSqahBM9OdYeBNzW3oX2erc0W7f2Z
                NCbLPuRb1j8zOr/eyGQVCJwcraat7wyMIJbUYNFjlQBMjci6pvMAVVDH57CAi0YbPFtaSNu3N236nqDy
                beENm6JyhFv8lCZOKnLMLkqBUgFVLNjU1TpNytinBwdIDlKuoJxMIeYIhp0fbPkFpS2zsubcrXULkm54
                3Lw5QVd5UIBIe4bKNkmDZwSzOyGLdYxWjZqDIroiRVC9a67lQQAVBrd0v7PltabtsbJm2+2z3ka44zJ8
                PkKOkMqcFi5y3lr7N1mJbsW3VMRJsgJSlUQBUAWIZQpuAONbem/Z4tjAG1jkfbILn7JlwQ2S4jKEe+yy
                JiM562lckh0Kt7ThwVMk1YNAIQ/sRVQIqodwoYQFc1aMI7PUDhranv7bCS1CZGlom/Yq7mK+YCpJMrlt
                411SraWOxt+OTWEiTBIWoIi1BQAOmqsUQ+MQHdxVs82zjHaYujazQz/kt/DXZa16QTrMSYpMrjjHF43Q
                rdaraIiklRSTjE1FAZqMfNAqzYVSHEvmmANVhbP1tWVtPT+1wOe8jPYa4LZuCFVy8mUiM8wXnJss4DeN
                hzKikSOTMQqQsQVAhiic36xhCtEFs+wcJtDTm1EGoXJSsROWovb6ma+koXWyFfIjfIvu5tHisJCxIqNw
                iFI/zeg0eoogPwmEK22+zvbbbaRb7V6eoHJZYdG23kSrmIvlkuBR2/u5e712QRBVfLCKBVcWnsAqiUUQ
                79xEobsrs925KbSgbVp8+5GShfyVjIMMwgmmrcCjmJulG60WqsMqt5YxiiqBWx2AKgQqA8BzxxWi69nu
                BufaJtzalPqFyUhEW7a0XBkzWcCr3Y+UjMgK5CLHu2B1gKMT5qwxScf5vQSPIm3D4SAFMmbO9u5C2o7W
                2vR1CZMjoi1oO2o0mXuoi0/NLW/KKSvsMzEGVBNWMVMqKfsIqiUoETMHIkAK3sw7Ptt5Y2nrN2tl8/ZF
                ioWzbSsW3W2XvKSe3FMrWPPpXK3QmIpVUEzR6yifswMvNEqSAJkLz5YAOxnnZ6gc3bV2O9sdfUHkiIjM
                dR1ltmuYDlK/ue4FLQkHMgkzuBkssBVmKouhRBqKogRNJAoBwQAqmpvZ2t3UXtdYv20VtQ+ULficXscX
                t2+WzHLI3Dd6uNW52xWt4xSiwJOmLsFTK+xnVMVJZJsoUTC3Lzuardnq3NTW2jizbnWz9ka3InFMbj5j
                H5ROQknO3J+QZRIkS5IxRYqSyCwCIERFQxUQKmUvPTzVNZmz1bmrrbXw5t4Ps+5FtaPwy6xa+jMpmTJN
                XDdzjGVuvbcQQvJm5VKVyg6I/O5MQVB6HCLdQORTCq629nm3NYu31g7QW91DZRtCKwfHYyj2uTAMnKzt
                8kxxbxLeKtesaosRJ17SUguSkMobyVugwCYScjXXrs925rb0E4Y0Nr58yLYsbheQsJ5H5AACTsrdgWVB
                LQHl3VHuVSJuBVIuZwkYxx8pQpentyIbu4Ns/wBta79D+nrRc9z/AJMsBhp5c4qViMjJCSeua9fzYWIa
                wEHN7C7WJ7W5donGQUXMoJvbSkW9Q5ribi2zrbm4BpF0+aUJLUHkvHcfgNzaZ2t5Mk0ZmRvRG27dQtw7
                i6o9ysmms5MRD2luoYxhSVMbjkDCNcvck2gLc3CtLunbTO8z7krGrHTzc9lz8fdDRQs6/vUlqWwNrAe7
                EXKiYLvRSEXSD0TiZNfqMAfGIhXcu2f7b3FtO+m7T/JZ+yRixDTnN21KRt3wgElZq7E4G221rmeT4uFk
                xM/BJsDtB2JxMRwYxwHkRGtrdA2fLd3KMO6ZcRy2oLJeKmum67Gc+1l4QqMypeqScK0hFnFxM3KqRTSK
                ANCrsHvUJkTquAAOFTDW5ua7QFubjuO9MmPpHP8Ak7FjbTddEDNs5GIXGXdXe2ho1vFg4mRcKpiEoBUA
                WSku6hVDHMH63NbW6Xs929ua2TpWs2V1BZHw6GmK6FpxhL2qilIP7oRfMYiOcP3x11kRTlGhIkqsc9KI
                mSUWWEBDqER5+6FtF2/uWO9MLiXz/kzEJNNt4p3M3QtcxH5brTA7Qxln/nKo+XJJA0AG8gXkxPMV4D4x
                r8vc32drd3IH+k57Kag8oYnLpfuZjMNk7cWK+NdCDVwyWGRMqsomLWYL7EAJSZBMcBPzwAlDn9bdC2jL
                f3LL30k3pL57yFh1xpYvOWuZmysxFFdO6k5l9EvnCqyiiyQt37f3SRJo7JyJCLrh6HHnh7kuz/bm4ll/
                SXliU1B5PxK40u3JHTDeKtFUq5LmQjp1CdK5K6OqmLKSMdv5AyKZROCZh4DkACtG5Bs+25uHZ00fZrmN
                QWT8Vr6UZpaSQty1VQdR90FNNMJ1GQbnVVTGPlCnZezqP0gMdRBQCjwKRer9DcR2joDX9qZ0c6jZTPOQ
                MVu9J9zoTre17TSIdjdZG1ytrpIHtBlUxauFFGwNFlilMJm5zk7gPSPB3A9n22teerfR5qsk9QGTsWSe
                lCSjHDa1bRMQzO428Rd5byRcRz46pDRj9yqX2J29SKYyjfywEBFEgDv669oS2tb+snSbq5l8/ZMx060v
                yTeRQsK2jlUhbkOymk5xsq2XUVIMcssZL2d4qkQwrImEg+nA7+tzaNt/Wdrv0Wa3ZHPOQsdv9Icnbcgh
                j+2Ck913d+SN9qZAYAD4ypTNDPl1RjpY5Ux89kBUjdQB0jxdZO0Dber3XxpY10vs/ZLx9LaakI9qlj+3
                BTNDXClEzS04gdm/FUh49R0dcyEgdIhvOSKmU36gU1XbQNt6ptxbS3uAyWfsl2dI6ajQSzTGMJ0Hgp1e
                3JVWVapISB1SqMW746goyqKSYg4S6yG5BQ3HL1NbR8FqQ3MdKu428zzkG1JPTPDwEUhiiLIRS2riC2Lj
                kblYdDoFSGbJv1ZJRCXIBDeeikkUREAApePqH2g7Zz/uZaf9x11n3JdpTGDYlhG/mthFCEgZ0Ihu4Qao
                ISgKgqzbOhcCaSbppiVx0dJuxhENvO20Dbmcd0vA25m91AZNt+Vwjb1uRDfEEeYh7akVrVXeLs0WckZU
                qjRhIC8EZZiRMSrmKYTCPnH6eTlbaMgspbquGtzxfPeQoeVxHazWASw82TKrbEorHxb2KblK9FYpkmi5
                Hx1XjcEhBRRNMR56e2xkjaCt3Im7Li7dKWz/AJKhpnHNrMoH8zsaYiNuyZom1HFqtGScuVYFUIxyDkXs
                iwKiJHCxTdXHnGMVem0Fbt57rVk7oC+oLJzOWs212EGjhxI5TWyutGRy0ai3SkvNBRONWBcV3DAEukyw
                dQiPUPG9KbRkDJbu1s7rQ58yISYt2x31rBhY5E1bXXXeY8dY39nCQ8wDEjSoOxk/Y/K49uTTV5HjqrZe
                7Qduvd2hHdOHP2S0JlO0GVuHw43MRK2TnYWwW2EGpZUFfMCLOUvtq0f5fQdwY5x7nEa0Rmz/AG7Gbsj3
                dKLqAyapLu7WeQX5mjqFG2BXfW6a3FWy0mCvWpGJkMLpGOFLoI4AqgDyQBHftfaIgLZ3dbv3WiZ9yNIT
                N02Ye2Aws+Ikra7BRzjtLHS7VOUFbzBjU00vebZl5IFTeHMcA7AYdFh7Q1v2RutZC3QUc+ZIkJe+7TeW
                8ph9YSlttqs9j28aomtJgqKirBArfzWzAyYEIqYxwEB9dnF2z/beMN2HK26O0z/kyWl8oW3KRLjDjzoL
                bjV1M243tpw2eyxVfNdxjQjcHMYxUSAqCwkEvZAgjy8L7RNu4c3Ss17mSOfMj3JMZfteQt780kuVM9tw
                gS8ezjnKYSPnCdZs39iKqwQFIASOop9eR0YC2hrdwTuj6hdy9rnvJFxy2drdnoQ+JZA3RbkMrczti8eE
                eyBVjHeMmHsIFiGR0wI36w6RDyygOzpx2gLa07bl2obcWjs/ZKumSz0xk0HWKZcSBb8SvNIIIuSuZEqx
                lHjdp5IDGoqJgCAGApR4IHO/pU2hbb0u7kOqbcMZ57yJfEtqUhZ6GUxjPpohBWwhctyR9zuzqSBVTHeC
                xUjitYwTpl8lBVYocdY1q0jbRVv6U9wzVrr5YZ6yLfEnqjczrlxjef4CGtg1yz6VwvGykgRUxniDA6Qt
                YlJQgA2b9CZf8GHOzoy2g7a0d67tVGtuJz7ky/HupcX3n45uIxSwVumk5ck04WeuSKnNIKtjkBCPVWTK
                KCRjlD9YQrVoZ2hbf0Ua5tZWtWPz/kfJknq0kbodrWJdhUQjLTSu2+0cgO/OfJqmM+XYLJhHRq50yimz
                EScF6hKFdBO0Pb+hfV3q41WxmfMjZNfapppzKOLOungkdbIPJ1e4FPOdlWOZ8oidcWzU6hA8pApSF+gb
                G3vs/wBuaB9VGsXU1D6gsn5Nc6sZN2+c2fc5yt4y2gkboXuxw/erpKqe8pFFVYzRo+WIB02/mAAfpzhX
                M26toyB2/NSGr7UNF5+yPlh5qruV5OL2xeJUk461kn1zuLq581JU/tbtJRwLRNyYhR9nKUnb0Djbae0J
                AbdGYtYWW4nP+Sctq6rrlYTbqHu8CJktgkdKyksR2s6IqoZ9ImNKHQM8UADeWkUvfkQDRttbP1ubdmVN
                W2S4fUFk/K391Lc8hOOYW5lSsm9sEkppxOKvfNQVU9slCmcmRLJHKU/ll9BE5gDmbXW0dA7Z97arbwhc
                +ZEzEOp28426V4q8k02zK004x/JvkVW5EVlSuH7gZIyLt4YAMomggUeQLwH5O13s7W3totdVTWJ1DZQz
                CbU3coy751dxwaPbcbpkflSkxdpLKndzKwyKhnMkcQOcxCD3ER4/S2v9oi3ttVHU6hFZ8yTlgmpO8ntz
                PCXAcIstqJuvaf08YKKqvXJGK5N50iYAOfy0+Q+AK/P2stnq3tsiwNUtgweoPI+Wmmpe6CTSr65UUotW
                zEWkfKxjd/EINllAGVdllBUkXvICqdu37j5YccvbF2gba23sT6lMXxef8nZXLqNumenJKfn1Qi5K1kpa
                GWhSuohRsqoY0mJVhXXkBMBzrFA/qHNaNsTaAtrbdwfqUwxG58yTlJvqPvCWuJ/NSxiwqlnIvYBaASUt
                tk2VVIlIKEXMs+f8gdc6aAGDhAojxttbZ4t/bs0z6ktN8TqEyTkxjqLf3Q4cXZLJpxEpY6VwWw7tYr62
                UGqyhU3/AEOvbF3AGATuCEOI9gGuTtwbP1tbe2k3ULpbjc/5NyK21CXDfk3K3s8OnAzFmFvO0k7O820k
                2iqoIPU0k/bVHvUBjuR6hD4AEdvbv2fLa0EaNc7aQmee8i5DYZ0fXo4kL2cFJCSVpp3Xb5rdBa2I5BVR
                NFchTi4XVKYPOUAOrgAAa1aBtn+B0M6FNQmiOO1DZOvmO1ApZYbOsjLeXD3Dj1PKNjnsVR1YjVuscjRw
                zTN7xTUKcvU9E6w8CYRrjaF9nW29Fm39mvQmw1A5KvJnm1/kB/J5HECQUvaJr2gW1vAnZ8e1VOVt5KTY
                i6pgUAVVTn5AAABHkaL9n229Im3jmjQE3z9km7orNMbk2Mkcm9KcVPWmTJEOpCLntSNTWMk39nIoCpiA
                oUFlOsTcdYjW3o82fIPSdtn5f25mmoTJN0RmYPzrndZU6SRk/ZBsoQbWAWa2KwTWMRm3aFaFeESIoUDu
                l3Ko8GVER0aYtni3dOG2VlHbibahcnXBG5SYX21e5XKKcVP20e9FU1DIW1GoqiRBqmCYJqo+aALEUVKb
                pA1cjTbs/W7p/wBrTIu2UTP+RZ2FyPB5SiHmWkyIsLhtsMmnOZZK2YkipkkGrUBAQbAqBVTnWMbgVRrj
                4K2eYDDG1VkDbDLqDyRNxGQIq8GTjLhilaXHbZrrkm0iZnbccVYSIMETNCkBqVUCmKqv2+Ma04s2d7ex
                rtM3ptaJ6h8nyMXels3XDOszJmBlc8Ovc11hdgsoaLTWFNOLSOUrFWPFUCLtTLJH4BUwBvWBs9W3Yu0/
                P7XKWfMjP4a4bbuOIUy6IJN56NXuOZ99LNYyHTW8okcmcBSBkCnQcoqGN8RxCqQGz1bcNtET21Gpn7I7
                uDnrWVg1czCQgXQyWPkBrkNJoxjRV6CxnnNSRxmIK9AsjqI+g8VRrs9QDfaPbbVo6h8mnikrYewxszEM
                RK4vOkLwcXkePTiU1uj3QmdwLEI8ywkM2L0jwA9Ibsrs92y/2lh2sE895HThQtWOgwy+oBD3AdaPuVG5
                vZ1YgqoJjGHOj7OMeKokBIe3IlAK0XTs92zc20NAbUCmfMjIwkFaUPAJ5pVKR3dTtzE5DPkkGzlgqr0e
                6xcKDGJR/m9CceCbcvJSAFbWS9niAyJtR2jteq6g8ksIq1IK3o1LMIFTcXDMKwEqtLAylokVgTUjVRXF
                H2MVRKBCJj6kAtbuYtnq2srbT1o7Wxc/5MiIOzrasWEb5eMKbu4JpWyJ5OfI2nYgygJqxrhQgoljwU6E
                kypFKIgkUB3c+bQFt5x2rrB2yF895Cg4iwYex2LTLgpkkbkm3NmSK0mm3nGC6oFUZLHXMl7L5ggRMiRA
                5BMArj6nNnmA1GbXWMdtNfUNk634vGDHGDdvloxiSVwXcfGrZRsRpeEYqsBHLF2CplTNTKiCaybdQBMK
                Ic01VbO1talttDFW3KfUBk22YjFMVYEeyykoYkrOXSNjl6fLuqKVVKmu3W5Hym4qCVACpFIIgmA1vazN
                n23tW+2viTbtc57yDaUZiJbGTuOyeKBJqdutfG8E9gUWt3NHCpSuG7kr8zkyYnN0LItzhz5YCFNbGz5A
                aw9vjBegp3qJylaEZg2PxYwaZP6k5i476/NrbRLaI4vZiusUjkXYFF50mVN5S4EOAmEgDWxrw2dLc1r6
                CsKaHnOoPJlkR+E17IXYX8AknZG8gtGHNDcXjGOVSEcmOB/PbmFQfJUKAF5AeQ5+4LtCW/ru0N4C0WvM
                /ZGsBhgKUxZIxmRGpU5q4b0NjOxlrEQNeJHKxAcKuknAyB1BOYQeETV79ICHB3ENnO29fOkLT1pRkNQu
                TseNNPri0FGF8s/Kmpa807Zt5C3FHN1s3KyZFnRiIA5QVMcRSWERAR5Ea3dyLZ4tvcL0uacNM8nqEylj
                lnp1ua05xndrRYLgkb7Qt21/yXUNeDR6qmVw+EoFdtnpzCZFbzOkP0phDd3LNoG3txTTfpt07yOf8j4w
                bacp+1JRhd8SUJebvBK3bXQtU7m4TLLJ9b8yaHtiLoTCYjkwn9R5rRuhbPdt7lWGNNGIpbUBkjFBdON0
                MZ2PnoIiMs4u5NKFZwi7meZuVUiGkUCsyOGD0DCZFRRYA7KmGt/c12gLc3Ice6Z7BmtQWUsYoac7pg51
                CUiFwmnd6oQ8ajGi6niuVEg96CCILpSQcqFUMcwBybmuLumbPNubmmP9LFgy2oDJGIUNM11jMtZa1+l7
                I3WzdxkXEunj1VRZIU5VsWLTWj34CJklFljAICcRr9TdK2i7c3NHmmJ7MZ5yLiBfTZfBrsZfkuVOQSuV
                JczM6x3pF1UgSkE/YiA2fE5MmCioccKDX5W5xs621uSyelN9OahMoYrS0xXIzmEEbaVK+UupJssyXM/U
                cLqpi1l/6GBSSZAFQPME3qUOf0NzzaJgNye9dIV4S+fMiYjHSne0lcraNtMqbhtdjeWeRT1ysqY6qRkJ
                FE0Okk3eAJhImsuUAADiBt3cs2i7b3GsyaUMwTGesj4heaYLwbXM1h7NFI7S5EEJ5vPHMiudVMzF8JkA
                bg+SAxipGEAAekAH83ci2erb3E84aPsyzWoTKGKzaUppxIIW5aqpXDS50lpphOe8WrlZVM0fKiZgDZSQ
                SAxzomAOwpFAf0dw7aNt/X7qY0e6jZTO+QcYu9KV2NbjRtO2SFcRN1psrja3OUAMKyYtXCijUrRZcpTC
                duc5PQeB424NtB25r11b6O9VMtqAyXix/pPnImSQtGzjEKyuRtEXgW8gUj5IVk1Ix87OQGLt4iQxjNug
                B5FIoC147QVva5NYelDVpK6gcmY4d6Y5Bu7RsS2TlPDXEVpNJThFGjoypDx665kgbPFUiGFZHgg/qgFc
                jWptFwWsbXpoy1xP8+ZFsJ/pInrWmm+OINNNe37rGz70/LdmgmuZUhmYSK3DCWEpDee05THkOChsazto
                O3NYWvXSnrjkM/ZKx7J6ZkY1qjj61xISHuNCJuBa4kjtJHziKMFnii4tpBRJMwrIkTAeegoVo1Z7P9ua
                p9w7TDr7eag8nWNJ6clIRVPGkCcowVxHt2RNJtEW78ViHZIPTGBGURTTMDhLqKbscQrf1O7RNv6k9zHS
                1uNvM/ZHtKT00xlsMUMSRZEnFr3CraNyvblaHQdHWKZmlJC+FrLpETHz0kUwER7gGnUTtD27qA3MdPu4
                06z1ka05TBUOxjC4shTAWDnTRSThFumjI+aU7Ru69o5kUk0hBboADevIbWeNoC3c37pWAtzNbUBky2Jn
                CMJb0Z+aaK8s1vTalrqOhZtW0oZUqjSPfg5/1YYppiVx0m5EfOPxystbRNu5V3UcM7nDrPeRoeWxBbTC
                FbYebFTVtaScRrN6xT8t6ZUDINHRXplHrYiQgqommYRHp7bOStoW3ci7s2Kt0tfPWRoeYxpajWAJh+OM
                BLek3DC03dpINU5QVetGMcJuhdyDAiYkXWKYTf4Qxg0XvtAW1ee63ZG6IOoDJUZN2fa0bAHw+2FM1tPl
                IlgvGINySfnAolHLlWFV1Hgl0HVKJv8ALNxvy+0Pbktu421urKZ7yKSbtqzl7aQwwZNJS1llnFgusfmS
                NJ+b5gR/kujSIMvK6faypqf5HNanG0XbzjduDdTHPORgmfyHa2oOGhEg2ymq0s4tlgi1kgVBROMUSKD9
                WPBLoM7MqoPdURraYbQdtsN2N7ukpZ9yYM0+tFe3VcPCoUttKLOIMIEzdxKFV8xSLIQAcpRpk+gq4FOA
                8kARW1tD2/bu7xdm65+f3I8jNXNZx7aSwu8Kia149ZfGqWMlmpZPzes8Ykil7zasvJAE3hxP36QMKw9o
                e37I3W8iboSee8jScvf1pOrdPiB1wFuRx30a2jFEiSPmic7BErYFm7IU+gqpzm9RrRi/aCt3Ge7DlPdI
                b6gcly0xk21JeBWw66FNK2Wq03CNYFVu9lCKio8jGSbYrmOj1UwIiv5Zy/4AnO7hvaIgMQbpmZ9zVDUD
                km5JXLVtP4I2IJUERtqHNKw7SHXTNIFV63DVsVoCzBAyQAkdQ4h9RYA2ioPA26LqJ3LWufci3TLZ8tu4
                oBfE0uBBt+CC6JOPlHCBpEFDHcM480eVOJamTAECHEAEOkAHa07bQVuafNzPUJuOMc/5MumVzxHybZ1i
                mVEiduxK8ygg2XSdyBFjHfNWYIFGNQVTAEOQ6eAIWtelbaGt/S9uPantweN1AZKvSQ1HQ83Fr4rn/L/J
                +3/yinGE64WcPgWMZ6ZidgDeLFRIvkpKrFDjrGtWkXaHt/SluIau9f7LP2Sb7ltVDy53bjGs+RIIO1i3
                ddSd2u2RpIFjqO28YomVlComIUrdqBUi8AQpR29GW0Jb2j/Xfqo1vxufskX4+1KmfCvjufPxBwASUoWW
                VUevAVOd+o2MXymJ1SAKKZjFL6iFatDW0JbuibXPrJ1qRGfckZDdatH1yu3OOrnKmWGtk1130hfzpy6e
                pqnNIOmCyIx8Y4VTKZNoooX4ROYta9Bm0Rb2hzV9q91ZsM95IydJ6qZt3Kr2hdIkLG2unIXCvcapFXYq
                qGeqNzreyMzKAXym5CEDt2DY2+doO3tBWqnWNqci8+5LyY71Yya7pez7lVFKMthu6udxdSrt6uRVQZKS
                RUXBq1fLFA6SHmlL/hjhW9t17RFvbfWpbV9qIhc+ZGyipqruiSn17QuwiScba3vO617tUVOukscXrtJR
                czRN0chTezgBRDuIBsbae0Bbe3LmTV5mGIz9krLr/VXcrKadQ93Am3Z2ygxlZKZK4UWTWVM9kFFJI6Ht
                ioFEqSJChz1Dxq209oG3NufJOrfIcTn/ACZlpTVLdru4XTC6lgbmttF3Lu5c7hV0kqp7bJ9TsyIyShQU
                6S8/5YgHO2vtpC39tG/9Vl8weech5eDU5fTa7Voa8EyNmFqkZyL+RIokkksoDh+sL8yLp6YpTKJooFHs
                SvwdrnZytzbQS1WEitQ+UsxLanbiSk3ry7DlYvLcatiyQJyYOEFlTOplc0moZxInEpzCkQeBE5uP1dsH
                aIt/bXban28PnrI+V/7pG831zuFrjUBgraqTorghVWp0lVfOkh9oEy0iYAOcSl59OK421ns/29tkWVqp
                syD1AZJy631NXgncK7q5kk478jUmcdJxqL2JaoLKkNKOyyhjyT7kDLGbtgERBIBDZ2y9nm3duLE2pnFs
                ZqIyrlUupGcnJJ7cM4uERKWejKwriEK/hVG6yojK9LgzhWQ6imMsQp+Oe9cvbD2hrf22sKakcORefMi5
                SQ1FXpM3S9nJgpIp1aJJK3lLeIpAt0VVCg/OVQV3b3kDKnKkBuyYDXC21Nne3dunTZqT05xOoPJeT2Go
                qTuVw5uaaISLkLJQnrad2uV7bTVuuoRJ+ZN2Lpy6KYoqLppmH9UBre25dn23dvzSdqL0uR+obKmRmuoi
                Xv8Aevb1duAgJyw0L2s/8i/aLLBqsf2d+iT+nmekOU53Qgfj4QEdvbt2ebc0B6N876R47UBkbIrPOkle
                D2QvV6mnBP7SG57fNbnm2ywZrHIiuCYgu5WA5RVU4A3YoCO5oE2fLb0N6GNQuiVrn/JF/RWoRDKzSRv9
                2BIqcsdLKFlK2O4cWQ1SVORq4apKi/KoU5et2JlR4ERGtnQps8QGizb/AM3aE2eoXJ16x+bZPIsg9yKI
                kt+asn8u7fbW4KFltGipwbeURqV0qcqgeYuqqPAept/Rbs+Wzo+288z6CGOe8k3lHZnj8lMZLJK3lxEz
                axshRCsQda1Y1qsYiANwOCqhQUDzj9XXx1DWjR3s9W1pQ2zsybcaGe8jXdEZnTy+STykoUkfP2ebLFvt
                7aWRseOSVMmyQZpNU3ZEiqAB3arlceBWEa2dMGztb+nDbHyftvN9QuSrhjMntL7RdZVKVOLn7WG81UTg
                2tqOQWMRJsj5BSqIgqAKgdUo8AYed7Tls821p92tsk7ZzTUBkycismwWS4qQy4n5cZcNurZHUMdynbMU
                goZNuyb8gUzQqgAt1rmMJRWMIa8FbP1tYX2qr72wyZ5yFNQ1/wADesY8y2CabS4YFS8H6D46NtxgKmTb
                M0RblKDYqgFMCiwjwKg1s4s2eoDG201eW1qTUPk5/FXnbN0wa+Z0xTaXRCnuS6y3aLOGjSLGTTjEjEBg
                ow80CLNDKpG6QVEApjvZ2tqwdp+c2uktQGS3kVPwFzRjjLxDFaz0e5uSZGaVaRcQmqKacWkbhH2AFQKc
                onMbgVBAN229n23IDaPuHanDPeQloS4bTWgVsy+UmNzMllL3aXyDZhGGW8skcKrQrA7IFOkWiiiXoPA7
                LDZ5gWe0Y12qR1D5OUiW9rvoVTNICmW5vOfXsvfBo5GKFXyyxCR1wj04/wA7oFoQCD089IJHZ2tt9tNk
                2ti6hMnpxKdvs4v88AnIa4VnLS4CXALFzECr5Zoo5y+zjH+b0gTgefh6a5V0bQFvXNtDxO1CrnzITeEi
                rOgrbLmgUUlrpcLQmQy5FBurHHWAnu06xRjCsQU6SsOlAvIF4rhZF2c7cv7agtTa7X1CZLaRlqQsCxQz
                EYSOLilHMJLrS5WcpFKLdCkaYVxbgyMqJQTIn/zQAK5i2dbeyztQWltdH1D5Ri4iz4OxIxrmJRUH1xzi
                llTpJr2GfiDrAkvFOAA7cscKopokBAS8+QUB5Oedn63s1bVNjbYQZ8yFDRFhQ9kxzLL6yRH1yzSlmTCs
                wmhNR5lQIdksZYyANfNEpESJELyUgVt6m9nm2tRm1zjLbSd5/wAkwMXi6Oxk3YZZEqUlP3O4xw2VaIoX
                dFqqgm6ZuwXOc7YyogRVNBUOTJFpqm2ebe1L7Z+KNuV1qHynb0XiiGx3FNMrnOWVuC6wsMgJAldcSqqV
                Jw2WABKi2MoYrcpUgL1eWAju6x9n+3dWG2ninbqPnnIFpReJl8aOozKB0iTE9dCmOot5EJNLsZqqkK4b
                uSPTrCkJx6VUm5gAfLAQa29nq2dZG3lgvQI8z/ky0YvA0XiKMicndSczcV5Die0yWi3c3sycKlTdmdpl
                9rN1KCKbkE1AEwkAa4mu3Z1t3WzoNwhodf6hsmWVG4SWsc7W/wAoEnZS8y2fDDCB+V0a6WImuY5DCs3E
                xx8k4AUvJR5rl7ge0BbuurQzgLRQ4z/kiwI3Acvi6TjL+QEk1N3qGNrMcWOkN6JrqE9pWcIOTvQWFQeh
                4RNbgTFAxdzcX2gba3AdIen/AEpyOfcjY2aafVrGGKviMRSlpS7C2Va7a1CvLoZOFiFWdqJtwdprioJk
                3BjGD1Ea425Ls925uHaW9OumaQ1C5QxtH6e7otS4Wl0M1SXC+vgLctc1q+bd7Z6qkVd8UhhdNHpjiZFb
                zAAOFTCGvcr2e7b3ENN2m/TtIZ/yZjNnp1mbQfMLqi1Al5a8G1sWwjapnVyguqn5sgZJEHSTwTCYjkRU
                DuPNa90XaAt3cuwtpuxBKZ/yJiNPTnc0dNx09biCMotdHssGzgTvZhm4WSL7xQIzBdi7A4mSUVV4EAUM
                Nbm51tBW7uR48004/lNQuU8UtdOd0w060kIVz77d3ilGRiMSLqfO8VSE0qBEQVSkhEVCqHUNxycRr83d
                F2c7e3K7A0u2HKahsm4kb6argav2shbhiSLq6mgR0fFryL4VlUxTmESx5VGb/qMJFFVBDgRER+g3T9pG
                A3Ol9M68xnjIGGldOF9rXgzLZySbpC5AeiyFY7hFZVIEH7cGRQZPCcmTBVUA7HEK/H3Ndne2tx+R0rP5
                XUNlbEhtMlwsZRsNsuvb17qatFWqwv1nKyyRm0uAtgAsoUDKB1ibjkoc7u57s/29uUXlpDu2Y1A5JxCO
                la6ZKcQjrVAj1tdyUk5iXntygLLJeyyjcYoE270vUYE3CwB0/Pnbl20bA7jeYtJ2XJXPOQsSONMF5I3Q
                hDWiUqrS5E0pxtOcpKKKp+xvRM39nB6QonKkcwB24AfzNyPZ6tvcQzbo/wAzymoTKOJXulOc9vbw9oqE
                cJXM1CbZTxXrRyqqmaOlRUZggaQRKY5kjgA8eUUB/R3D9oq3df8AqV0iaipfPmSMXraV7oRuBGzrXKmt
                D3WLa4GlxpHKdRVMWbk6jQGqy5CmE6Chyj2Hvo3Bdoa3deurXRvqmls95Ixe70mXFDzSNoWifhlc6cJe
                SV6oKMnoqkNGvHKqYsnbtIhjHb9BR58soVs69NoC29cmsLShq3ks/ZKxlJaYnyS6VnWv0KRVyINpxKfT
                Fo6UVTPHuFjpezu1kimFVEQKb9QAHe1sbQ1u6zNdmjvW1J56yLYL7SfM2xMtscQBEl4G6VrSvIL1ZkB0
                oqQzMH6gAylAIQ3nNQFMeQMIBr1kbRNv6vNf2knXZIZ6yLYklpdbxbZHG8D0mgrjJCXM5udq4aOxVIdg
                s8O5M1klEyGFdBJEo9kwAdrVntCW3qn3CdL+vl5n3Jdiy+nIIwCY6gDl9zXEWFfqSDdBvJeaVRki7E/l
                SSSZDA4S6im7HNxq1RbQtvamNy/StuMv8/ZItKS00RdqMW+JYoiS1sXArZV2v7tjxRenVIdojJnfi1mU
                CpmBdJIgcm6ukurURtEW7qA3MtPW447zzkW1pXBEKxiksVRYga3ZsYxN0RD2d6KpTs0nXtRhkUk0xBfo
                J1c1s532g7ezhuk6ftzJzqAyXbExg2GhI0uJoYSBATY24m7KyZIS/mgq1j34uzDMMiJiRyUDlN2WPxrz
                BtEQGWt07Cu5qvqAyTCymIbbi4RDD7MqKtrSisOk9RSTI+80p0mbsr0x3rQEhBQyZBHq+Vci7RMFkHdn
                xZumq5+yNFzGNLVJb6eG24Jntd8ZvZbqyiNWsgdUDto9wk6M9esyJCVZwUTjwJxENu/doO3L43W7C3RF
                NQOTIqbsq1oy3hxAyMQltvRh45aNbNSSgKgqnGuAWMs8j/KEiioGMPPmG41ze0Jb0vu12xupFz/kprM2
                7aCtujhggkPar1VSzHNlC2WkgVBQY0U3Iv8A2EUhKDsiZ+/QA1RztD2873dP762rn3JATYWUwtYmFwBM
                1qtjsbBSx6DNpJGW8xGKVRS95rMCJdB3yiqo/wCFMatLPaDt5ruwvt0cmf8AI4zDu0lLcNh8BALcE6kM
                EKZsvKed5h40Ch55I8UvLBYAP6gFarc2hbetvd3ufdbQz/khzL3LZq9uOMLOSpGtcHDvHCeM1Wq0oCvm
                KxSKKScm1YmS6U3oEOHZMph3LF2ibcsvddyJuijnzJMrNX3aLm3E8PugIW2Is7yHawqqCUkKplDR6RGv
                tCDHywKVZQ5+3PNbeMNoW28a7sOUt0ZHPeSJeZyRaEvbhsPulBJbbNWch2sK5QfyXmmO7jGhG4uI6OOm
                CaCwpHLx5BOWHdoS3sQbqWZdzlln3I85KZett7CusPyJExtyOXkoFrALFWkyq+Y4aNitCuGDc6QAioc3
                T2KAiwBtC27grdE1Dbl6OfckXTNZ2t+4oUMTSRSI21b4XRJsJF4kpIlVOo5aMPYCJRbQyZSpFUMICHQA
                Dq047RFu6etzHUfuNNc95Hu2V1BMJRspi6aMAwkAeZ9mFw2VkiqmO8ZsvZ+mKbKJgDcnQUv+CDnVpc2h
                7d0x7kOp3cLjc+5Iu+Q1HxUrHOcVTnQFuwZ5yTZyjhZ09IqJnosjMwRjBVSAUE1Vihx1jzo0j7Qlu6Vd
                xjV5uDNc/wCSL8l9U7u7nimNJ4qaUDag3vd6N3vmZ3xVTneNosyBGEIidMoN23SQOATKA00Z7QluaP8A
                Xfqp1uRue8k39I6ljuzrWDcigjFW6EhJ+9F/a34KmO/FA36FiKqYeQl8Je1atD20PbuirXVrG1sRWfsk
                ZDe6tFZw7vHlylSSg7cPcd6oX07dvHCaxxkHTBZAWEU4VTAyLRVYgceaYK1aCNoe39C+rvV9qtis/ZGy
                Q61Vz8nOL2NcpE0Ya0zS90L3U6Dz01VBdnbqLi0ZnOQoptylIHHTxWY4TAAdQiAAAciIiAABeOeefTt8
                6tlz3rO0r6YINa4c9Z5xljSPRSUVKncN0xiMk4Klz1g1iEVDulB5KYA6UuOQ45Co22srxfmgrCaUhb+m
                y3bw1J3kkk6TRlGrQ1q2G1eFSUBsZSVkg9ock6yk6vJRDgDfPiopmsjxUu5pqeCQgbCumB022O6ByglF
                4wZiNyLNVVFPLB/dMl1rCcCmJz5JCcCX1EB7YMoW2NVOtPJZwhorL2ojJdxyBE1nCSVxXvLuHrkwnTTX
                dm80qIDyboKYxCgHPSABzUn7Qd4QHWNmo8Hd+r66IXThZDz2Z6vaLVVG5MkOGBlDAoi4bNBFqyVMQoCB
                VFTiAGDkOeQCcPoL2Wdv7bxYRrjCGGIiTyCzRR9qytfqaF0326ekJ0qu2ki+TErIDDyJU2pCdIduRHvW
                V/gA+X4/HNOPx9PuqtKUrDxvD7RtibuOLcQYyvLIkxjH82OTE7wNcMMxTk3ry3n8eZhcUI3ZrmKkC64F
                QMisoIlIJB/51eWpvDaCH23TrxzXp+i4C5Y7FUbOJS+GZq4jKO17hx5Ks03US7PMeWRNwukcVUFzE4Hr
                J3KHPFYuaUpSlKV+nFRErOPm8XCxchMSToRK2j4tk5kHzkSlExit2bQp1DiBQEfhKIgAc1JO2Dd7nI+1
                xmNthDOJp9/pSyLNtmt0W7NpPUXmLJh858tW84Fo8ADJpiYQ9ublJ8ZQ6gDqL39Wiwb8tLKFl2xkOwp6
                OuezbyhmFwW3cEU4I6jpaIk25XLN60XTEQMU5DAPIDX19KUpSoffiyIVFxpiuKdI7aOpBjj9hHFh3DNx
                5jVg9yNFKuZlB4TygMoBkiokICigFAxjKIinycuEvwa8Is6195sljI+WjE6f5ApjCIcmF7cTZAgGKYRH
                nuPcADmvS4pSlKUpVOA+Xb7vs+VBABAQ+Q1UQAfWqcB+707B247dqcB9AqtU4Dt9n44qvFKcB9A/A81T
                gPx/KnAD8vnz+35U4Dnnjv8A20EAH1++q04/H86px/EeacB6/P6/T7qAAAHAdg9P2fQKrxSlU4D1/H3V
                XgPx/XVOADnjtz9Pr6VXj8fXtxTj+Haqcfj+sKrxTilU4+X9nf76rVOPv9earxVOA+gfu/H1qvH8e9UA
                AD9/NOA/Hy+7inH9tOA/d/V3/wA9VpSqcfj+3mq8fj9vNOAqnAU4D+Yf6arxxTj8ft5pSnAfSqcB+Pv5
                px+Pl6celOA/0dqcB/HnvVeA/H2VTjvzVacf5/tqnAenHYfUPl+6q8fj7AqnAfT0/HpTgPp9f49vWq8V
                QAAKrx6/b+OapwH+f51UA49PT6fSqcB9/wB9OAqvH8apwH7qrwHb7PSqcB9KcB2+z+r7qcfxqtOA7/b6
                04/H3VTgP7Ps+6nAB6dufpTgPx/KnSH0D68/Pn681XinAVTjvz3/AH04D1qvAfj7fnSqcfaPenHz+fb+
                Hypx/H7vX5DVeAH17/fVOA7fZTgPp9v7frVeA/096pwHPPHf6/2U4+0fx9KcB+Pu4pwH4+f30EOf5/1U
                4pwFOAH+X4CnH+f7fl3qvAfy/h6U4/t/fTj7/wB9KcB/Hn9vrVOAD0AA459O3r3Gq8ft/wBPNU4Djjjt
                9KcB+BqvH7Px6047gP09KpwH4H+FOkPv9B+4Q9BCgAAfvEf2j86cf2U4D+z7Pu4oIAP7PT7PupwH7fx9
                Kcfs/d+yq1TgPp+PSnAfj1D7hpx24+/+P2U4DjinAfSq1TgOef6g/ZVeP7Pt/fTjiqcAH8f49xoAAH7u
                PxxTgA9O3AcfspwH3/f/AF04Dv8Ab6/11WnH4/roAcfj9lOPx/CqcAFOAqvH9lU4AOft/Z8+flTgPx9l
                V4/tpx+Pupx+P4dqpwH8/wCI804D7vX07ev3VXgKpx9e/wB/FV/HenFPr9tU4APSnAd/t/Heq8B/p7/z
                pQQ5/H9VU449Px9tOA/hx+ynAc8/P+f31XiqcB9Px6d6cfj/AE1Xj8f21QQAf5049Ps4/h9arxzVOA+g
                D6c8gHfgeQ5pwH4/d3qvH8+aVTgPkHFVqnAfv9fT7hqtU49Pspx/m+yq8VQSgP4D6cU4Dv8Ab/X61XgK
                cfz5qnAB3AOOfX7fvpx+O3yqtU4CnAfu/wBNADj8B8vupx+P2cVXj+2qcB/X933U4D/N8v3VXgKcUpxV
                OA55qvH+n5/wpx+PuqnSHpx9v7h5DgacB9Ps/Z9Krx/bVOPx2/aFV4D8fZVOA/f6/b99BDn5j+B5+dWi
                6qdM97ahbYUjrA1SZ/0y3Q3aKlirlwxcMNHpFdAUwoHmIadYvUHKQGEBUKHQcQDgpy1FU1b7dvih8UvJ
                WX0wbk89qTs9uVw5ZxTq9I7HeRhbJGMZFsMZPtiRzhcSAUeEJAOowiAF9OY3uoHcR8SrpXlncNn7L2sT
                Gzho4FA7udh3BoZc4nMQhmk6wbKs1SKdBjJmTXHqDuHb0/EwR4pbd+wa+S9/Zrh81xhXKyz2FzLaMdPK
                OSKmTAzYJdoDV8gUvlh0eS4L09RuP1hrNDg7xuF2R0UxY6iNFUTdMuBykf3Bi3JKtqNuj4epdKAuGPke
                oQ4N+j9rKHPHxdu+WfGfjD9qq7myP5eRuoDGEioUnW1eY7RulimcfNMsB5KDdh8JAIUSj5PJusAAAEo8
                X9428Rrs4ZNTSFlrNsm03S5iAnHX9D3Rarw5jiJeP6UzMkHHHflQPUPrV2dobs22dfThRpbWujTG8eIm
                Ags3uXLRhnyhhJ5nCDOact1VOw9+gg8dvTkK7TZa/ND7+PaSyGrnTmEc/MsRi6c5isNkm8M3J1rlaleP
                iCoJC8CYCAIgHce1cd5uC6GGDE8i91e6b2jJPjhVxmOwkTKAYgHIKCSj4DKcgICHQUeQ9PSul7p3idre
                zG5XFxa79NTQTgQyTFvk2ClJhRM6KSxViQkYou7Mn0rJ/pQR6OREOrqAwBaPkTxLmzHjlEwudYELd78o
                nAsXj+yr9utwoBS9QG9uZRwMCc+nSq8KbntxWOTMnjM9uGy03DXEuKdRWY5UhnIIuxt63rCtY4E+FsYJ
                C4H535hOPUIlGLKUCgAgoIiIBiNzx42HUNcCLqO076TMa49SOByI3FkS5pq9psCnASlURiosrBmiYo8D
                0qGXAfsrBnqO8RBuz6mwdx1zaoblsq2nYuChamKmjKw4oqDoqxVGzhWEIR05KBVhAounCgl6SdIl6A4x
                3WriXWTrBupU1o2LnfUBdMi6Dz3TCHvC9nKjxyIiUHD45ViEMcTdgMcOoR445Gs4+lXwnO6xqBGLlclW
                bZWmC0pDylvb8t3O1c3QDM4iIrjZdoe3vEDduyT0UFQ5A3l9I8hJ80heDl0M4cVhbi1LZMyFqZuhoRu4
                kYPymthY5M+IIHURQhowVn6yHPIcuH4iYO/STuAygMCaSdNGl+22FpYAwjjjFUJGoJot29oWrExTg4Jg
                IAq5fIpAuqoI8iZRRQTCIiIjyI1cTVOA449A7+n2/ZVaUpSlUEAH8fWo5HiJto3MW6xh3A1m6eW+L4LI
                tj5XGYuW+MgPzQ4srDcWy+YLsE3jFm5eLkB4s2W9nS/5o8FEe4eVnqV0935pVzhkbT9k5SDVvzF9xPLX
                uVS2pBaVgzyTEwFWNGyDhFudRMeQEBOgQ31KFdl2noc1DXrpDyBrat6yX8hg3G+TbYxbcE43QcKuDTdy
                sV3YPGTVMgiq1aHI2QdrFEQIdykA8ABhq057GSMaKISDF4wM4SBduV42XbGXQEeCrIgsUvUUfkYO1cLj
                8ch91OPrzQe34/qr9WCjk5ebholVf2VOTlY+OUc8Ab2cj12RsdfoNwA9AH6uBEPT1qXfe3g4Ncjywray
                LgPOeA8lR9zWrAXS0tm65O6bGucUJ2LSkk2yKqEZIRxzlBUAATPSFEA555+Gs4nhxth4NMUNeGZ9eml6
                Pt/VBjvKkzGYinpycNNNFLMf2yg1fyraHYuFI5wiZU6hGrhduJyj5ohxz2kF6nNojbn1e9LjOWlTFNxz
                afHk3RH240t650Q6gMYqc3BggvwbjgxRMIcDV6GEcL46074nsLCOJYBK1sb4ztuPtOzrfQWXcpxUJGJe
                W0aFcOTGUP0h3ExzCIiPeu1KUpSlRJvF2yzNroIj48rhBGUkLwg2yZDq8LnYDJJOXnlJkMUxuryykN1A
                YvSI8hzwIYcfBgQ7xfVlqmmxcIrM4/B8KwKAFBNUFHV1oGKQEgD0ACD3GvRnpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUqnH2j68/L76cB9/9n0r8qagoa445zET8TGzcU9SUQeRssybv2LlFUvSoku1clMQxRAeBAS1iuz/
                ALG+1hqSbS5sgaPcXNJ6XaKNTXXZjN/Zc6yMc4qe1tT224btxVARHg6rc/rWGbK3g0tvG7FXTvG+U844
                0cKlH2ZgeUh7li0VBHsIg+QIsJQDt09Yjz8/WseWRfBJyqaTpxi7WaxWOA/0SNu2xVkRUKIlAQVfMFjA
                HHxD+oP2fbYPkTwbW4xbSLp5ZeRMI30ilz5LNKbkIqRc8gAgBCPEujuPPqf5fbVoEx4WDeJh10Bb4Qte
                TbrOTtk3EbkOBMqQxSqKFVM2OYqgFEqY8D9TAHzr4114ZTePjw88NNCpieY6S6293QPnmFDqHqBIqvV0
                nAvKY/PkPTmtpv4ZbePVKVX+5kWbpqGTIPtF3QKKxgUJ19QICsJhAvHAj8h7V99AeFY3g5oBO5wnasEi
                IlIUZe/4FFcVDJipx7KkcxukOOnrEeOoQD7auUsjwdm5zPkZrXZcOELLI4U6VG693KS7tBMDFAyipY9I
                xAHgTCUom5Hj5DV72N/BLZgcox7jKusKwopRUTHfR1m2lNSh2hAUKUEhdyQolMcSCceUwEvJQDnvzWTT
                DngydBFoEZL5YzNmvKsgkCZ3yLNSFs2IVNzydFFBqm5W6R9OoyoD/wCTWYXBmwNtMafgYL2fo+sGfl2Q
                AcZ3IZ5W+pJysQ5FSrLEn1lWxTAYgdkW5C9xASjyNZYrOx5YWPIdjb1hWVallQUWgDaNh7Vt6JgI1i3A
                oE8lqyikUkyFEADkAL3+dfYcB9Kpx+z1+nqPzqtKUpSlKUpxXmF74OzhqbzPvazFl4FxxLzMDqtfwd8R
                Nytmb1zbdqt3BE2F4StxSfxpN0mh0zuDFMcDGAQApeR4r0HtDeh7D+h3SdjfSjYMFHPrQtC3kGtwqyce
                ycjeFxu2xBuK4JxJQgkXVdrgYRFQo8FApfQKxqa6fDm6GdeeoS2M95G/KazywFiK2M8x7YLeJt61pVJB
                uqlCywGjyJKN12h1AU+ADFU6CgbtyA+cfvC7Q+a9qrP0jaVyR8jcmDrrkHjzEGVkmihoqchTuFQaw0u5
                IHQhKIJk5XbmEBEODF+Eayn7E/h9LI3R9Huo3MmT7qnMfzIXKzsjA9yx6RlGzKeiWvvC4JSVj1AAjpob
                zEWxiFOUwCIiHPFZfMUeCmw4XFD5nmfVFeamYnDtVaNmbFhmJLQjmYG6UWjyLkw85c5ihyY5VC8D2Dn1
                qy6e8GhqjsbPONXmP8640v8Aw0lekW/uuYlge29dMJb7CRI7WMSHOBiulVEi9BSoK9jdx4DvXooWZbje
                z7Qta0mpxUbWvbkHbzc49QCdCGjEo5I/BhEQESpgPqNfTcAH4+3nmq0pSlKUqI14ukrF9odj2CNqOpWc
                b3Hb70twN1mJCQUcafboK+Y0WTM6c+eYfJ6GhuS89Rw6OaxpeCqhBHJmtaeFdI4N7KsCKAgGMBxFzNmc
                mMBDlAekPLEO4gPI+nFeglSlKUpSlKUpSlKUpSlKUpSlKUpSqc/vqtKUpSlKUpSlKUpSlU+v4+VOf3/j
                inPP7/4fWq0pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKti1O6z9LOjG24G7tUmb7Gwpb90SqkJbr+8p
                BZuM3KooC6XZxjNmms4WMmmAnUEiQlKXuYQCu7rCv20MoWVa2RbAnmN0WTesJH3Ja1xxoqmj5uDlECuY
                +SZiuUh/LVTMU5eogDwPcK+vpSlKUpSlKUpSlKpz39P29/pzVBN9BAfs57/Uf6uKs4xjuEaLczZ0urTL
                jDUbje8M+WSMyFzYrjpJ0hdcaNuuSNJ0pWUgiiVwLU6hAXBsooJAHkQ4719Fqg1saVdF0Na1waps32dh
                SEvWWcwdrSV3qSSTWZlmbYXjpi2Vjm7jgyaQCcwqAUOPnVwFoXha2QrVt2+LHuCKuq0LriI+ftm5IN4j
                IRE3DSaBXTGRj3jcRKokomYDAYB7c8CHICAfT0pSlKUpSlKpx6/b+PUKcduPl+O1V4/HI04/H8KVTj5f
                j7hqtOA/jz379/20pSlKUpSlKUpSuIZgyO7TfnZtTvkUzJIvTt0jO0kj/rpJOBDrKUfmACAD865dBAB9
                as91v6GtPO4Pgqc0+6kbQLc9lSrxpLMXDZY7Cdt2ejuv2CbgJVD9IgukBzhyUeDAIgYBDtX1ekbSdhjR
                Ngiy9O2Bbc/JrHdkNlU49squd0+eu3SgrPZSUeqj1rOFjDyc5/oAdgAKuX4D+f8AEeRp+OPlT+P30pSl
                KUpSonnivphyy0NXC1YpXIKjhez2zp+wcu0YKNQdXg3OkrIFSECisoZPykij2EDG6+e1Y7PBaMUkpHWs
                9SV80VorGZFARVIVsJxcuT8eyE9Dl4EDGH7frU9alKUpSlKVQR+zn7v5VXn5/j+NU5+XFOf81OR+n4++
                gjx+/j/RTkPr+3+NVrHJi3dJ0pZm12ZL288cz9yz+oHD1qXdc+SEBtmSY2rbo2XORUDLQpbgelIk5dAr
                LtjFBv1E4A/JgEOKyNc/y/j91P3fWnI/T6/5ueKrVOQ+QhTn1+zn7f5VjqZbomlSW1+f3tuFnbmlNSzS
                3Zu456NRtaUStaAZwtsJXcZu8uhyUjZVZVkr1kI3MfpMUSnEo8AORUOfn9voH7qrVOfs/n/VVaVpH7Pu
                5D1+6oTuK806rtVnim8p4Mn9UWfLS07abHlyXs3wfYWWr9s3F9ww+IoCNYW3Az1iwL9CLkUX80/aPZwr
                1qt7YkCqCvKJylTmyVQB/HHFOe/H7e/0+6q1T7/4U5+nH7e3FOfT7fx2pz/o+f28VXn19P3/AM6pz/Pj
                t3pz+Pt+lBH6f29vr2pz93z4/Z8qc/d9g/yqtU7/AI/jVaoI/cP0+/0rA1vybk2rbbXwxh7IWlfCNu5a
                f35kJ1ad2SV0QN1XPGWw0TiheRyYw9prtVwUerACKa6i4EA3wgUxhCsjdhLZF1Y6EIFTK6F4aecpZ806
                ineP5uZ+dtC+sQ3dfVmHScSVlXCzVbyDCRiXDgrtgsCpTpqJk6hEAHmNF4SvV3qgz5F61cZ6iM65Rz0h
                jS6bEkbSuDLt9XRkO44VaQ95xM4xjrgu9y7fAzci2bqi3OuJEzE6kyEFRTq6q8QLn7VHoW3XNCWYMG6n
                tQMFj7LUnj2QvjAX548gDhSYdWzkFG1Z+OPjEr4IYGcvFnBN6QWoj55juCdChSGLN5ROKiSSggAComQ/
                AenxFA3zrXz93cO3P1+dVpVOfx3/AKqd+fs/bVapz/Piq1QR4/H86rz/AD4+VU5/H8qryFUDn938fupz
                +76/j+NBH7OarSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKpz+P28ByNBH7B/l/Oq/fWy4cINUVHDlZFu3SKJ1V11CIopED1OoqoIFKAfM
                REArbaPWcggV0wdtXzY4mAjhmuk5QOJDdJwIsiJiiICAgIAPYe1cnn7Q/wA/0p3+n45p/b93864DaVjH
                jhdo0kWDp21EQdNWztuu5biBukQXQTMJicD2HqAO/aueA9/s+X2/dTvz8uP4/spz/m+6uC5lYxm5bs3c
                ixbO3XHszVw7bouHHJ/LDyEFDAc/Ju3wgPftXO5/HpTn7Q78cVxHr9jHI+0yL1owbgYpBXeOEWqIHNz0
                E81cxS8jx2DnmoKvir20RknXZtLWI+fNJ+wLqupa37mi2b1o9YuQnsxW3CvEVypCoUFFGSy6YAcOOkR7
                DxU6CAhI22oOGt2HbEZxMDFsIeLaJlKQjaPjGpWbNuUqYFAAImQpewAHb0pMT0HbzYHs/MxUGyE4JA7m
                JFnGNRUEOoEwcPTkJ1CACIBzzXMZvmUi2SeR7tq+ZrlA6Dtm4RdNliD3A6S6AmKYPtAa5PPH7+wV+VLT
                0JANvbJ2ZiYVryIe1S8i0jG4iAgAgCz05C8/EXtz8wrqm89SOn/HcpCQ19ZqxhactchQPARs9e9vRzyY
                TFcrYqse3cOAMoUVDFTAxQEBN2D7O6+R+nHfj7/ur8GRuq2Id42jpe44GKkHnPsjCSmI5k9dcccg2auV
                CnP6h+oUa/e7/ZzzTn/PzX40zclvW4kmvcM7DQKCxxTQWmpRjFpLKAHIkSUeqEAw8d+CiI/ZX6TV21fN
                0XbJwg8aOEyqt3TVZNw3XSOHJVEV0hEpyj8jFEQrf59PtD/R3Cvn5W7bVgnSDGbua34d46EoNmkpMx0e
                5cGOYCkBBu7UIc3IiAB0gPqHrX7qaqapCKJHKomqUp01EzAcihDB1FOQxewgIdwEB4H5Vr59OO/P8vrT
                mnPf+f2fSrR9emOMs5g0b6j8XYIyevhrM19Ypum38aZIaza9tOLcvB2y5iAQuVookvGmdnL7F7wbqFWb
                AsLhL9ImWsd+wro71s6O9KF3WvrnzBOZQyVeWSHly29ES+UpHL6Fj2qhHJMEGcfeL549TEHyxVHSjdqs
                KZBAph4UOcAwI5QtyDszxm2E29qRqEAjdUMlcdyIxvmNyTU3cGkW5JOZkZEpB4VO5cEIsp18gJylNwAg
                HGY/xS9k2xdez1nKWnYhq+lLHvTEVzWnIrIpKPIOZNkBlDuXcauoBhSMsydOWiwk4EyKqhOQAw1334eG
                YlZnZ+0bqyj1Z6qxseTi2h1xAxkI9lcjsrVqBgDkQIBhAojyPHACPABWZmVm4eCbC8nJaMhmYCIC7lX7
                WObAJS9QgLh2chOwAI+vpVYqah51qV9By0ZMsjiIEeRT5rINDiHqBXDQ5yD+wa/S5H9v8vvr8qVnoOBT
                ItOTMTDIqGAiSsrIs45JQ4jwBU1HhyAI8iAcANc1o9aP0COmLts9aqiPlOGi6blBQAHg3QqiIlHgefQa
                5NU5Hjv2/l+2vn2t22q9fqRbK5redyaRiEVjm01Grvk1FQ5SIozRVMoUTB3KAl5H5V9Bz/m/rr8CYu21
                rdWQQuC5bfglnQAZsjMzMdGKuCiYSAZBN6oQxwESiAdID6D9K/bRWSXTTWQVSWQVKU6ayKhVElCGDkp0
                1CCICA/IQHvW79Px+yuBJSsXDNFJCYkWESwR6fOeybxuxaJdQ8F81y6MUheflybvW3FTMROtCyEJKxsw
                wOJipvop81kWZzF/WArloc5BEPmAGrgyl3WrBvG0fN3Nb8PIPAAzNhKzMbHvHRTG6CmbNnapDqAJvhAS
                gPft61++BgMUDFEDFMAGKYvxFEohyAgIeofQa1UpSlKUpSlKUpSlKUpSlKUpSlKUpSlKio+K3g20poNn
                3KEnHsX7GTtBR41RnjISz2P/ACjIVJR5BIkMZVogqID5nPHWPA/IQsD8F+wYpQusx21cGXEVMZoD1IFT
                OUoleKKAJyhyb4igA9x4+yp1VKUpSlKoIAPr8h5/dWFLeW3oMTbTONrbK5tv86moXKDWQWxbihJ/7vai
                wYqC0XvC8XaIiujFkcfoEyIE8xyoVRNM5BIYwYT7e1W+LdzHbrPMFh6YsTWFZdxIGnrdxzc9r4zh7rWh
                HyJHEc3PGXlIkk2hgKI8Jyhm7gBHhUhe1SCtFurbUVBbesxqd3SrJh9OeSsYEyNK5ViUmqDFoxtGzHop
                REwkxauHCB3MimAFbotFzEWVOmRHqE5QGOtE7129pueX1e8jtIaUbYtLT5Yc87t9LJeSYm3Zc8s4SBNZ
                FGanL1XQjfeJklElzxsSiqduksl7QPBiKH4tneIA3QtvXUjYuEd5rTjb8RY2Q3rFBvk+z4iHgFYmIdPi
                sF7thHlpLOYiUZtDG63zTkrohA/VKbgppWmtvK+X7S0P5uzjpOk7Rkcn2piR9lbGjm4409xWxcbS32RL
                scxos2py9ZpONRXatFQMIJqqpqCUwFEoxBtPPiiddOqPElqaf9PulOFzJuE31dk+xZOLdjlkMdQNhtEE
                Vmd0vohdZNErhExlQXUdOU2ZEylMoImECjrypvT79O17lfEM3uc4OxfcODMnTKjEGtrQFnxYu2DFduNx
                s4G7rHXV8iXZtlwXbt36YpqiPPSqQpwLLQ1e6tsj4w0QP9V+kzDkpqduWVtCxb7xtjiGjZ17JXnbF8It
                ZRk9bxlvlO9MYGDojjoSKJg+YcBXnTaRs9bruVN5nVtmvRRg6Dx7rbyhD5XlMl4lyLFxaDbGVny13W84
                vBm+i8lqtzprtHyUQn0KgLgPMMIJiXkQnv7Xjrdia4uzLcW6QbF8rkE7yAkMQ2tixhBR/skOzgHTm4I+
                bVt5EEBcruzNESAXzAIJDiQxim74O5XcH8TRqyuq8JDSVoeszAeL7cue4bchpjJ9uRDR1PpwkurHovky
                5YdIPHPmlSA4OWTAGp+eUziAcV+Dpu33NyrSZrtxtoj3jsMWhbhcxP7dZW9ke1oeIgFIVndUipA2/dsa
                taKziLlIg71M6T4CgDlASmKJSHIKZpO+4Jr1wltx6bbt1I5weOF4iEMlF2tZ0SqgS5sgXhIAb3Va0ARx
                yUp1OBUXcKB5aCRTKH5ECkPFYxpueeJS3EYh5nLQ9pYxdinT1IvnJLIkrzhbTXSuZmzcGQE8XJZFdEeS
                HPbzXrVqVoJwOVI4iUxC5MtKWs7fDtXTRrVvnWnozhZjNOB7Sgp/A1kWjDtRc5pmpGQKm/hI1DHL18i6
                TQbeYqINBBcDABTFDniohll6mt0zPG+TeWetNenFhiHXteFsXAgTCeQogjBvaMAXHKUNPvZOLygo1Eol
                i0weAC/xDzymU48AM7baeHeDdo5alN1ZxiZNR4jaRcTQ+NWlus3EcJPbBuU00lbSBEes3LcOfPPzwHA9
                hr4ndm3vMQbaz608NWlY0zqN1fZOI1Sx/gSyTOXD9mpNKgxtp/dgRiS7oBfuTkIwi2iJnbsORICZTJHU
                xNudx7xQMRFmzrJ7YdgKYoI2PcS+NUDRK11o28IGdFTGFa3Ce5fOKkIF9n9nF0AhwZEDchWZzaJ3hsS7
                qOPruTY2tKYi1B4jctmGYsLzx1VHkCs5VUaozMK4XIRVRkouks3Ok4TIugsQyShREAMPcW6Puc4S2tdO
                yubMsoubkuK4JE9s4sxlEOkW89kG7vZTOjNEFFAN7OyaJh50g9MQxUSCUAAyqiRDxzsebg/if9ZsAXOG
                mvSFifFOGLmQ94WNG3xDW0ydTUOqTzWUjGjkJ6WUcJrJ9B03KqCaCoGA6RhIPayPYUunUbeXiMtT9wau
                IWLt3UkviDPbTMEHCpRKMVGXpGXTbMbKM2JINRZp0EMmBQFuqYo/IRqZ9uR7hOHttTTLdOonLgrSZmqp
                IKw7Jj1kUpm/L1fImGLgWPmj8CfIeY7ccCCSQCYQHsFRf8fa/fFGavMcrardN+nPDtl4Im0jXDYFgTVs
                2cN0XraxjqKoO7X/AC0clfuUjpkASOHCrcF+opm/mFMURyybIO9k93KTZNwNn/HDfCur7BRFQvizkiPY
                1jcjGLlBt6dfs4Oa4dx8hHvyihJxqgiKZjGMUpCEMUvbe8lvU4p2pbKtWDb2spmLUrlNJVTGeImbtRqg
                nHkcCwLdF2uWYGcEZndcNmzZsXznJwUKQxOjkcMLLVL4t7KVup5etLTXh7GFlSrRW6IuwLptrGTC5krf
                cNCyLRo4j7pkDSbVQEuoooyJkHRTCJVk0zhwHJ8OZrj3G9wDW5qquDVbqJuB9Y+DrbBnJ4RYR8Kxssl7
                XPcK0GCccyjiCVulFDGOATKkqYpzKiICJQ75Vd6/ewjdstLG+D8N4+Lm/WTnVqV9jzG3S+Xjbct55KK2
                9FXTcbOL/pTlSQkUl2cSwbfEuog4OoYhEilVw25P3A/FI6SMbIar9QunrDlx4Hi0mlw3tY8batmDPWZb
                i6pRD8rSWm696NSGBQoKLIHWFER/T+XwPEnzbE3EMa7nWky1dS2NI9e13rqQkrNyBZL5Yr15YWRYFBFW
                Zt9Z2QClXRFNy1es1gABUbLpGMUhxMUsZTKfiVtUuhDXzq50tawcbWTlG28VDc8RiBHGMKvb83O3LIoN
                rhxU2knfUr1ovGL5ujIGKmYxFSqAmAmEOPl8tbjPikbaw5cWtpfTTjXG+m2Eg1clydhK2LZs1dttYzQL
                7a5mpmJkXStwEatmg+0vVDkBwg3A66qZCJqCSSHs37msNun6QIzPB7bZ2Nke2blkMf5YsyPdHdxsXdUa
                0RfoS0Go4MZb3fINnCarfz/jKcqyY8gQDGsa3h9919ogyrZ+jDSFiQ2pDWzkQIwra00kZCThbKG4yD+T
                7NzDwv8ASn8s6KPtRGoGIkgiUFFzGKYwJ4wsg6z/ABZOALIe6gcp6c8VXDi+2o4l0XfY8DZ2NJi4YOAQ
                TB2/CRY2g/UlDgkmAgv7AZdQgdQ8cFEQz1bMe77YO7Jg24LsQtdHG+aMYyDKFytjhKRNIsmqj9AVYy5r
                ccuABY0c86TkIC/J01CGTMcwhzWO3Uruza4NKO/jgnQLegY6uvSvqWl8Rq4+ZIWk3jbwi7SzA/c48byL
                m5UDmWVXi7ljZPqA/AKppAAlApgqVWI/MO/9f071F42Wt2/VZru3A9eenDOCljKY4wGwnJLG6Nt2u2g5
                ZiWLyp+R6TeSkUBE7spmiheRVDnrIBu3UID+v4izcV1nbacPprzBgw+Jp/Cl7Xk8s/Itj35ZEfcsu+uK
                JKnc0a7YyD/n2dA7RFwgCiPxpqiVQPQBqQ1ifITfLWFrAye0amZN8gY6t67yMlCgmZp+UEAlJnaiUDG7
                JmUEgfEPYOeahS+DcHqvzcV7CH+rmP8A1Dj/AL8zXauB4tYP9untijxz/Tm3fnjj/ZXZft/ZUv8A1xZ+
                yVpd0jZfztiHEz7OWRcdWcM1bGMI1CadvLoflOm3I1SZW4g4er9AHFQUW6fWcAEoHIPxVFxbapvFu5rj
                RyVjvS5iPDNqyqJ5WFsO67dxmhcJmBkvPbtBY3rIqSSCpgACFJJeQqBhAFAJ3GrtNkvfMz1q91J5N2/9
                eOKYnF+q3G8dc71jJQ7A9vJzsnYj0jS9bOuG1zmUTbyTVMyr1BZmfyFEEFe3PQY16+8tvV4w2qLKta34
                u1SZh1N5SSOfGeJUnTluySYkcgyG5rucR4GcEamXMCDZo34XcKDwQSlKIjhpgtU3i3sr24yzDZOmfEFm
                WZcDFSfgMbT1uYtjrpWh36PtMUl7JdUkV83OJDkMRKQWRX7cLEIbktSYdtPKmrzMmk2yr31yYuZYg1EO
                Zi6Iu67KZMixxG7OHljx8ZIKsU1l0iHclKdQBbqmSOTpOmIlMFXyTk3EW1Cy9xXBJsYWCgIyQmpqXk3K
                TKNioiKaHfyclIPHAlIkiggmdVVQ5gKUpREwgACNQwMieIM3Bte2oi8sAbKOmONv21LDXXTks235Et3Z
                JJk3cGaEuV0jcazSJiY12cBMwQeGM8WKAHAgCYUiXQaOtRHiWIDVrgjHmtvTpjOf08ZButzCZAyNZkLY
                SaFmRKMA8lzyjlzZskVy3MU6CaSR3DXyTKCVMBMc5Smuf3n98uG23J2xdOGDcd/n81m5bYM5G08dJhIO
                Im04iafqQ9vStxNon+kunci7SWTjoxqYFDlTMqqJE/KBbE7c+rbxb9hWU7ztcOmrF76w4uMPc0tjWIsz
                GEveTCATR9uW82FhZBSVVUTSAOtu1Mq6DkQ8rrAxS5o9kXeis/dixnfEXclotcU6lsLDGfnRx20eKLws
                pBy6qrSNvezfeBva/ZAcoqNJBssUxmqwodShgcpgGP8A3e97fVvtTbh2GrFu62rCvLRtk6BjLyM2YW+C
                eRfydZPTQd7NGcqdwBTOWjgySyAmApVAHoEAD4qtbZ7nfiQtdUHcupjQTpUsbGmlkqsm5xuyvW37KkLn
                yBbscU6yEpEr5BdIOHqiySZTGXbJItFFFOluc4FN0/BYh8Wzl2Z04yONrj0xjfG4uvf7bGNi2TbcbLNL
                Rul2/wDNaHn5q3W3U7bv2Lsnsq0U3MUFDiUw+UQinP4+oTdU8TFoEte0NT+r7BGH0tPMndULGzFsktSx
                DliVZ4pnUXbN0S1mPVJSOO4Imoik6AwlKqAJnVKqdMp5l2i/VNZetjSzhHVRj1k7jLVzRZLO6G0M/WSc
                PICVRdLQtz245dogUqx46UavGIrFIUFPK6wIXq6QufpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSl
                KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSol3i0cbZrjdJ+G9WODsiZJsaUwHkgkP
                exbGvK4LaaObRvvy27R/JsYRygDkzeTbMxA6pTgmmZQBAAMNZ1NrzU811iaB9MefU36b2Vu/F1vNrs8t
                VRZVpeNvtCwdyM3aqnJjLlctzmV5HuYw1Gxv/Xfqk0h+JyjtOeQ9S92XfpWzyvaLO3sb3dNN17WsWKy5
                bQjDxDdummQrMYu403R2Rjm59lMiVU5gERqWxqYxjZ2ZtPuZsW5AlnsBZt644uuHuG4o5+9jX9tsFIlR
                f8o2T6OMRdNWPOmR4mZM3PUn8wEQGDD4ftlnnWXtrbxmlBfK2RHAW+eyZfBl4q3tchLgtrItyW1dKrk0
                RcJHPtiKPn2vBLnbJKFIInPyX9KcRyNeEm1j39lvAeorSxmm7bpufKOAMkDPtRveYkp+6ELYuoRjZRpI
                ycuss4EGco1O3IkYwgQeoAHuIV9l4qbPmrjSDiXR7qY0zai74xDCR+dXuNb+si2JdFmxvOXlbZcZAsib
                ex50zGXIwSt6ZauA6ugwO0iHKIiFSP8ASbnCM1K6ZMCZ8iXrCQbZbxNY98OlYvn2BGamrfQcXFHIFOAC
                Hskh7S1MXjsZMQ5H5w2IGWvXTX4uyLwrhS+73lsa5lSnXuRsbyN4TcjbTNhfmnJ/li7GreOkXBm6acZI
                s0pZommAHT8gqBeeoxR/H0tZVzLtzeJqynpeyhk7JM7gzU5P3OnjuIvO87hm7fRgswGPfmOvcTSfdLot
                28XMFcwoKJgUwlamIA8DxUsrdKRysG3frCmMH5QncN5TsrBl7ZKtHIdtu02UvDOsYx35wpBig7VKcqZZ
                JlGuYxZQS/Cm5MbkBDmsV3hfte2Stbegi6o3O2SX2S814Dy/L2XNTc4r7VdDrHtyRDa5MfSVwvgKUF1D
                uBm2CKg8mBFmQoj2ARx8+MDbSOKrM0a6kcb5GvfHeXo+/bmsxke1rrn4ZvLQcK2bXWzdKMI9YiArMHin
                X5pyCJiqAQeShxUu3TvdNz3xgPCl5XszLHXhdmKbAuK6GBOBIzuGZtZrIzDUvSJg4TcKKF56h5455H1q
                37cf1s2jt7aPMvapLtZozCljQxWln2ys4M2C678mz+w2rAlXKHIFUWEVVukQN5KanSIG6aiA6Ktuncb3
                6bcV10a3NbuXMF4Uv2dlyYjxtil07hXr634yUOyUloCDBZKOjYtJYjhux9paLrOen2kpypGKKmOrdC2u
                W22DuI7bNoROozLWoODy1lyw7ljXmXHybyctU1s5mt2LWZN12x/KMRwd0KhvLSJx0lAQMPevRf1lanbL
                0YaWs56pMhEUXtbCePpq8nEcisVu6uCWQIVha9rMlzgYpHEvKLsoxuYwcAouUTduahOaFdA2snxEieQd
                c+t7VxlvD+C5e9Jy2MQYtxJIqR7ACw4lFyS34uRMdi3io4yhGhF1UFXLpYq5zKF6TdfzzG59WPhx90jT
                7gOe1O3ZqO0XakZq0o+Th74mXcnJQVsXVc5LNcSz2HcLLewS0GqoV8mZn0Ium5RKBC+ZwWT3vk7oqe15
                o4c5LtJmxms4ZSmyY7wlCPyEcMk7jex6sjIXRKtAN1KNYxqkdcSgUSqLCiiYS+aBqwDaWdgzWruTY2gd
                Vm5Lr81B2hcGaIltesFjGw5cxn0Fb04mWQgzzDeUOeLbCsgKapGbVkHlJimBlDD6Yq3O2/aemDxFuk/Q
                /e+Ub71HY3hb4wzeLeUys5CRlH0VMMBvVO2ZBuYx0AblXQBNUiBCgcBEekBGpiHiAd0Wd2y9HKMxixZm
                XUFm2ccY+xQq6RI9Lbopshc3HeIsxH4lWSBiFa9ZBIKxwHuJOBwpacfDS6htWWA4rUhrX186jbX1U5Xh
                hv8Ah4OBuFeRhsfKXI2JJxDG5lZQ/nqOxIKYvk44zdNPnykhEU/NN9xsD629WGCtf+ednPWDkx7mVfHK
                d0r4tvyXnTTjxitZqJJdZqznHiqyy7KVjXKTtJssuosgsJkhN1EOAdU+LIuDK2kPUnoQ1f4Ly/kuxrpu
                13c7WVtWCve5o+0JCdwHNW/c9vTD+2GrkjJb2hOYTaO0zoCVVNAAUKbkef3tPmyhrO3iMboa59xTWzmf
                FM7niLJfmGMN4xUK0hLJsyZL7dZrqThpMxmrZq5aKJOGjRqiVcEDJnVXFRQxCfk+H3zZqe0h7rGqTaOz
                jlu48xWHZkLfDm0pGblpGcbw1y46lWPssjBHl1TrNWknGPji4b9YlIogmUpAARNWUzxGG69lHQVivE+n
                /S8smjqm1VyclCWnOIFQdyFi2kwdNYl/PR7ZURKSQevHzdlGqKl6AEHCpREyHFY9cVeFlzbmzG8fk/Wb
                uLai0dSd1xhLmeRdqTSsxb9mXBKoA9GIk30+sq4cqtlDgVydgZun1AYqQAAFMPQO3Pqh1y7O+7pbu09r
                Ey5N5wwPmeat6AxtclyycpLotgyKZRvi3JVlyM6oq6aoO36Qw84wXXUSSVTcFIYwtk1DX9eLpiLqs/SP
                hDUFjrJWRcb3xZOWkrLMvYt7XNaiM5AXWwO4M0lG8E6QTWFBduCqR1CGMHIlAQDkKkL7dWQbrytoM0fZ
                LvuVWnLyvnTpia57nmXIgLiUm5azWjyQfLiHqdVQxjmH6jUVHdgyxlO2fEr7flk23kq/4Gy5eCwweXs6
                GvG4Yy1ZUzu4Z5J0aSt1o5IzXFUpSlUFREeoAAB54DiRlvV4pjctbWOuJo8mbgtyRxxp3yfnS1J62JiR
                gpmNu7B9nvcnwXkv4xVJTynSkYLFymJhKZFdQBDnjjHT4UHLmRMvbVJV8jXZO3k9sPUdlWwLck7iknkv
                JtbXa2/b11NoxSQfnUWORN3LPDk6zj0gcCh2AKxi52/5Z5p2/wChcB/+pvc1ZnPE7/4mnU1/54xF/wC1
                KLrsDw53+J80hf8ARed/6yuqxWSnhutX2rHKeSsla79zXNDiOuO8rsVtOy8TTMi5NG2kMislaQP3c8Yk
                aBhZCgVVshFF8vgU/NU/XHFBqgw3qk8N/r30kzWFdWWUszafM1T0axl7NyBKuFxfQKVztoa7bbn4Eqox
                x1DoOTOGTxqgkZNQodXPepYG91unH2zNCiOa7JjY+WzfmSYicc4NgpYhXTGPuKdgl7hl7ymWQGIZZnCR
                7dRUxCgYp3irNFQPLWMNR+NGGwrrE3McS29rC3F9fWo6zprOUa0v2y8fWNPGUk4615shZC3ZicRmDHjm
                oPGp012jJozKKSBkhMoJjCUmevaW2hMh7Y+Rc8zM5rFyTqQx1kyDs2IsSzr/ADS53VkOIGRkHk1JulXT
                1yzUWeFcNEyizbIdPlHE/X1F6c5YjwHI/KoI+ujW1rs3kNzS59rfQFlN9gzAWKnkuwytlK3ZF7HLSLC0
                niLG873npiJOi8VaoPFk2UVEtFkjrKiUTnKXzVSXITvhLZGPt1CYxnucaooXMJk2ir65bgdLOrbWkW5e
                y6beDdtJMSFNyKYKPzGAB7mGr1t7/cvyBtIaDsIYkxdcid36scmWpb2JrTvV+2VkHzBGz7Xaw935RCLc
                nVOo9dLhxHlWMpwsoYxhMdMojjWwL4ZXUbqxxVE593A9wTUXEaicmRCF6DaVqTZZhhYjucTUk2kTcL2d
                OqVV0mVVI7pOLI3SSUMqkmJ+kFTW36XM565dhrdbxloM1LZwufUFpX1CTVtQdqzdxvZeVQUa3tIhb9sX
                TbQT6667F8ykTosZFmRyZIxDgYOPhKGZXxXlpTzXbXj8+2RkXIONsgYIzJZJoiRsS8rltQZy3snSCdlX
                JATCVvuW4OCCqaOfInVA4pGbCUnALHEcH23Boq3B9/vFVr5O1YaxssYg0lYUgYXCWPouwXzhG48lStmQ
                6TaRnHBHaot3SyQGb+3SckkuZY4gRMPgOarPdQ9/66/Dga+b1wBp+z7eWbLGyjidT830PkN2/nm0kGQY
                l1B2hcKlqJKqIJTsBNj5zX2UhE3R0vLOmZJYS1lqjPDJ6qc8YDntRmsDX9nRrrXuW1ZPISVpx06eYsqz
                bhWj1JtpaE9Jqr+cdcioETdKRCiDdJUTAl5hU/MPdJ4UbWrnrN+LNTWlfUBd03kKc0tXjDN7auq45Fea
                lmtvTq7yHc2ytMuzGXdEavY1wdA6xhMVM5SgIgAAEuwPQOfpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUqNH
                4pFdVptqZDWR8tBJa5cesHp3sMcWMim7uIotGn5RNEfPRMmomCgk9pIlx/hP1grFv4L9ssjb+tDzm5Ej
                lc4qAFU1AUIsm4ZvVyCU5DdPIh3MXoAQHkOe1TpKUpSlKVQ3HA8jwH1qAlq9tuP1O+Lx07YizHHLvbAs
                qRsF/b1tS5iO4s5cYYKlMz26YrVymQhmshOxjd0s3MBynA5iCJwMIDPsAAKHHHAB2APkAc8AHFRnfFmX
                tctn7R1wsbcfOGbW+8+4ksq6SNzmIV9bS7WXuNVk5EnqkLyNZHEDBx1EL9lXw7B2PLMxxtC6GI+yY9iy
                a3LheLyDPrskgKpJ3lf8g5uq7ZCQWEhDqr+2ulURMfq6SJkSTMKaZKxmeL9saz5jbItO+ZZg0WvGyNRF
                hM7PfKeSDxk0uqMkGtypNhMHWJVUmzcp+keA4AR55Csl2jORkpjYq08Skw6cPpWQ24LKdSTt6brcuXa2
                C0jLrOTH55OYRETCPcfnUfLwYOA7PJjjVnqSfwrdxfbi7bRxbb04sg2UUj7YRilpycZtFTFMqQyzkEBU
                MUxAEodIgb5Xh+MjZtDbYWHH52yKj1trZxq1bOzJEM4QbPcL5CUet0VzAJyEVMiiZQpTABhTIIgPQHGf
                7bb77dmgcTc8m0WaWR7j35HBsEI/56ic7Wwf+6yNzv5f6zNS3I/PkMn2JxU5RZdJukquuoRFFBM6yyyp
                yppopJl61FFDmHgpSgAiYw9gD1HiowOsbxLmL8e5jmdL+gHTjkLXznuGkHUBJGsE7yPxrFzyKws1WLWZ
                h2Uk/lVEFwMRUrNiRucQEhHgH6umK9ux6hNyXUZrN2/ry3FdL1k6WpZtcaDXDVtWvEXFEzsxaTjIsM8n
                lbuLck3KLnXauRbkREG7MP0igCkYREQy6+MVuK4biyRt9YPeu3rXHVyzVxTsiZFQpUAm5O4WVqrLcGIH
                KqbM5jE6lRAPUCc8jU17CVjWpjPD2LsfWLCsLds+zcf2lbltwcYiDaPi4eJg0GkezaIl5AqZCFACgHNd
                o8BUHvDoh/2Y7lMfl+be9wHj05DT+19R/H9k4Tj+Xz7/AI+6vOUwHl25XuYN/Td0uhKNuvUxpbjZCw9O
                Lmcas7jZ4kn8hXwtjBnfNuxE6mskk4hWXsnuoxSARMhXSBiHRXVTNYxfGIIjTvi7aE15zup7ON7axdb+
                bpPKuUrkuLJK7yLhbAgchJwBvIUOAy5nhlFUAfPnj9QipjrpFTIRMBNnp0Yt7YjPFfaq0tOSsQ5xzMYW
                u+Vyp+TLlovbJLgeNoJ3LKkFqINyre8DJGTIjyPJ1RLzycQ6O8QQQmqbxAO2ToxvCQkVMTpRGCYyQhFS
                gLJOdzPnGURvWSZpCYxTg6i4uBbqicgDy2MUQ6QLzPNjIyPho5jExLFnFxUWzbR8ZGx7ZFmwj49miVsz
                ZMmiBSppJJJlKmmmmUClKAAAAFQUNr3gfFj7inf/AOB6se32/nGt8ew/dXznjCr8uy7dRu31pxgYyQu2
                NkSzt1kx8CijVld16Td3x1pQMc3XKA/pXSKyrITl7k80PnxV90RlXxXF22Pa9o4l0baMNMtkwsPFW/bi
                8pN2vK3fDQ8OmnFMm7+Nu+8nqAeWimUxubfTEwdRiByYhQ+c2i9nHc1wLui3buG62rkwsR1f0JkkchNM
                eSsGi+u2673gwYN5RtbNmxraKbJguUrlyYgpCZTqUMU5zmMNljFg11h+LykYzLCLS47c04zE68tO3Zf2
                cI0i2GrA8iy1GjMx+DLNJZw2mCin8Rl0AVOUQA9TxrtUTRtW5lVTkTTSt+ZUVOcekiaZI5QxznMPoAB3
                Hn0APsqD74SRZJfVpuqLtzkVQXuuIVRWTHqTVSUyVcR01Ez/ADKbnko/MKx8anMqarsg+J9zjkHTxp9g
                NVObsE3o4t/EWIL0lXCFoxDLF+MWtqQt0OFG7hiZJOKdCpcZUyukileGFQ6hiip15nctI+LR1QWZd1hz
                mI9FOArGyHaE/aNxQUC8xxNqPLcuWLPEyjF6reNxXc4TWcNXCiJzpgmJB5ECpHABC+Pw6u1vqd2vMIZ+
                srUtcFkO5TLeS7bvi3bYsSbWn4u3iR9pliJhy9fGRQSB25P5SCiaBTkAjVMSqGA3AYCbvwfZWe/F73Ja
                t/xzSZty27ztrIqsNINwdMJSQsrD0VKRLZ2iYQASlc+UsHy6kyiICAcVOD1rIJqaNNWiJkyKJH0y53SM
                iYpRTOQcWSpBTMmIdIgIdhAQ4qLd4MQONIOq3v8A/HpbH05/4Iq/MPWrRNmhGPz74lnXnlnK6LWdvyxY
                7Oc3Y6Mo281SClAvWLssZiFIBSkbqNItZZkn0gUATdqAAfFyE+B00avWzhk8boumbpBVs5bOEiLtnDdc
                gprILoqAJTkOURA5RDgQHge1QMfDqtG9g74m5jjmw1jsMeCGSfMhmAIhFcw+U1VohECtkyppkancuU26
                ZAKBSiJeBAO3ce9SUv8A2TPsvGAn6QzHTIUx+CgYxU9Vt1HIUR+YF6jCAD6CI8etTdADgOPl8uwAAfYH
                FQMvDAukHm7tuquWyyThuvbV3KIrInKdJVM+f0RIomco8CAh6CAiA/WrtPGajxom0x8f+MRIc/d+Qzn1
                /nUm3Rn/AMTDTh3/APiCx7/1Ob/Woffg3P8Ah7uLD9ZzH/xc88/6szPyrgeLUD/bq7Yv2vWoiHb/AOld
                kHFTc8n5Wx1g7GFzZYy3dsLY2ObFt5afuy6bhdps4uJi2TfzFl3Cqn6w9gKQhQExzCBSgIjwMVC+/EvZ
                71JXzPY52kNu7J+qgsM4WafncveNuZnaAnROKXvBOzLVR9p9jOIlMVWQmWKoB2MiUR7Yj9pq89S2QvFC
                yl6awscWpiTUhcVv5dkMo48spm7j7atqXU04KFj2ke0kJKXXIKjErVwuCsisYVVFBHpERIXvbNsQz1Ge
                LqsKzswtSz9qYzlbW/JOCmiouYtwjZuP1bmtwibUh+kCpyCwuyCYOsVEimEBAAqfmUADnjgAD4fQA9P6
                grUIAHf04/01h63+75ubHuzrryuG0pFeKl3mIWFnLvGx1k1ht7I1/Q2PLvZAdAxTcOomVfNjd+OlQQMA
                l6gGxDwmWKrEsnaqiL9t1pGHvDLWYciTV9zKCJRlVlrcdI25Awcg66QMKTRskZwgkJhKQXShg4E5gqTo
                Ieny+/vUB/Sa1jc8+L11PTmWvYLkkcYXPllOwGMo3RVas1sXY0bWbY5o9ityUq0axbEdpKpl6vPILj9c
                xjVPeEgCAgIAICHAgIAICA+ocD9nPaoD20rENMS+Kb1945xKmiwx2/eaqImeiIZuolExUR+WDG7/AHIV
                u3N5aSLGcRbNkgMHSUSFIBSiIAHI8WTj2PyzuK7VuK5dU6MVktinj+TWSMJFUY+885RNuPVkzl7gYqbk
                wlEA5/bU6jH9iW7jWw7Px1akVHw9r2VbUNa0HERrRFlGsYqEj049o1askClIRMCJgAEKUA+yoDWwXp8s
                rJviBNyXI0/ERTxbTtlLVDclnR7tmRVuwmLl1CydntZCPbiQUk1miKgigoHApc8kEBGpK/iQItpK7K+u
                JF8mChGlsYnlG5g4A6LyL1AWm+aqkOYB4+MgAbj1KJg+Y1p8N0H+4o6GhH1/JvMHPAj3/wBsXeAc/wAP
                2VnEpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSrUNcunOH1a6RNQunWba+1IZTxbdduMCFIiZdOdUjDuLfWQUWAQTUK8TQ4UDuACIgID3qK
                54UHVs0xjp71qaRc63MwtJPRve9wZMdurgk0mEZalhPxdp38qKbngCIMpSLfPHKpT8FBcnJQExRGLbrQ
                vPUfuC531r7ytgwkoxw7hvUJjKMt+UeJnau7dt0ZAlrYWjSN2gFIK7aOi49eaBIw9C7gx1DG84DGmx7g
                G8TY8ZsJRWpqDueKDLervBzfEdlQoOUVJM1/3dBDamVXxWjM4KIDGNTSLkFC/wCAWUagP6wc9veGM0Vy
                WkTbEsi5b1iVIzKGqi55LUJdaT5uVKUj7Yno5tB4vgnBzAVTyghGaMuVFXukvJOSjx6BhHxS3NtU+KUu
                ywxN7hwtrcWklowrp55UTzlpE9yxrpwukUCKroXC3dpppCAdJnZAHvwJvnvEcZNv7dL3I9Om1HpVM3ud
                7g9reFyX89bOSKQhMozttln7mNKum/WUELUtyOAqinUUU3Tx62UDrIQavt8LjuBW3EbeOe8L5/ulC019
                CM5clwSR7idC2ewmKZcFpZ019gcm6yFjpVF43FPgBMu4KmBesQCrcPDz2Lc+4Juta5t3u/YoydnwlxXj
                ZeHzrJvBZJ3RkVUG5ywTh2BzdMLaiRWRyGWASklSgAG6TdP2Xi18HTeLbs0T7lOOGaje6cO5Aj7BvCQZ
                Coius2Zyyd6WI4kHIfCmgk5QeMS8CAiLwQEDBwIXUb9265Z9ubONifm3uFo8yduKY1tm3rUawy4A5YY+
                n45s+y3NEamIYxmyqRlLeKQxSif2xQyZupEeMJOwE9zHtO7u8Tou1Ip/ko31fYExm5WjH/tzdo0u6+7D
                Y5Sx2gRBbyuZRhIKv7RemMQ5COgekIIlAqlXXbu8+ju/75Gkzbnxm+LdGH9Okw3fZtkIpdd3CtDIP0rm
                y2DldNNVJFVOOboQRVhSOn7SskBhEOQCd+wZt45izj2pRTbsGrdm3J2DhFqkVBEoiUA9ClAPQPu9Kibe
                MPfXKht0YwYxhlwtt/qCgBugqYmBuKrWFcqQXtHA8f4UyvSAgPfn0rN9tEJQSO17oHJbhWZIgNKeFjt/
                YjEMgJj2O0M5OZQvIioKgnFUTCJuvq6h55qL54pIS/3zLZqABATFvRkIhzyIf7Ptp8CIB/Dmss3iqH91
                s9nDNLe3TLFjJTJmDo+9/JVVTINqFyG1kECuQIcoGJ74QifhOBi9XSPHUBTBhW2pthu7Nc23lptyzd+6
                VqstrDd3wt4Lw2m3Gzp/H2LjNZrkWTip+DiRkLieRwKO3LZV84OSCQEVF+TkP0gY+TWyPCH7cNuXJa13
                3TmbWXkSetuYjZ1VvcOR8Wp23MvY2QJIkQkItCyzPPZlTJgRdEJLqOURDrDkKsE8YQqKWZtqiOlVHBbH
                NdWXFbhJ0JHact7qsREh1jrlEnmAzO8AhTclEonESiAchN3sQIEtj2YFrCBrYLatuhbhgBECmgQh0fdB
                gBsUiQB7P5Y8JlAv/NAA4CoGOp2/7XvvxhWFULXkW8oSxbtwVYM87aLIrtUrohcXJv5qMIsiY3J2ajsG
                bohuDEcJKpiUDEEa+g8YawcTmpHbqt19cby0rcmGdwsHlzlbGdtLZcSN9sWLi4iswURBVVk3OZwCfnE6
                ik6esvPNX4oeFxLmyJh5rUxuva28+hJQEesgsvIe70gbuGyazEjYL0l7q6W5EFFkyIgPHBwEpilKYh7+
                dA3h0NCm3ZqLiNT+Hr21LXzkqChLggYsmY78x1ctvNUbkZBHvXoR9qWjBrnckJx5Cp3Y9A9+k3IhWFXx
                q4c27tslEvUU15amgMXt8QCwsDt+30qcLBQkTbMJD25AsUIuCt+Lj4SHjWxTEbR0VFNCMY5i3KfkfLSR
                TImTkRHgA71BY0U/8ru1e8f/ADbnLn09RZQnT2+8fr+yvlvEkv0bA3vds3Jt8tBcY0bWji0hyPXThrGO
                F7dznIuLlIVcgCBDJpSEedY5OTcCQDcB01PdQcN3bdB01WScNXSKbhu4ROVRFdusQFkVklS8lEpymAxT
                c9wHkPrUD/e3VjsyeJe2xsY4+UazF62VbWmaCvUGwAoMA9dZ7ue/0mEwq3A6hBbQzxvKKgYogRByU4CI
                mNxkO8YAmf8AvZtmmKQxil1C2UBzlL2L1RzwCAY4+giPYOR71m42ozEPtoaD1CmKco6VMJ9Bij1AYBsN
                mIcCXkB/ZUQ/dRyFa95+Kb0SwVuyiEk8x2bBNqXUCJynCMuRV7Lzx4dcADkFU2jtqscP+aqTjnvxMA3T
                w/3MPccEf/EN1ffvHT5cNYSvB7h/uUt3+vbWBlz5/wD1vLL9asNzuPHjPNOofMbMgf4aNrmGsznid/8A
                E06mv/PGIv8A2pRdfveH6umAsjZS00Xrdcm3hbWs/G97XTcsw8MJGsTAW9JvpeZknRy8iCaDdJVVQQDk
                AKNYYW245vEb7WactYy2rpuB0Z6NMYTytsXFqHn0k2V8ThViirHGlL39klHzB+9TSK8axFos0XbVJUvt
                r9VE/UXC7vO7bme9BeYtFU3qK1yZP1qZGy/eTN3LyuRgul0laK8LdTFI7ODmLwnpl48SVE/PmnRaD2AP
                KAay4+MSjJQcN7WVwiKn5KxNwZijZsBSMLX3pK2vYr2G89bjgpwbx8l0EEwdQdY8CBBEJpOnOXt2f0+4
                MnbRM2Nakxh3GUpbRmflgzGAf2UydRHspUhEoJg3MmBQKPABwAD2ruUft+0P2B3qo/w+fzqBV4XaUgrf
                3Vt1Cy7oZkSyFMP7gkLdO8XEJBvFQWZ5s9zpJIiPxlUB9GGOPA9PSX05DmemI9+OfX+Prz9fTioHXi2H
                bS0tau2Rka7Gai2PLdct3VwrKopOWK7WByuznJ1kds4Hy1BFiAiYh/hMU3A881Optp6ykrdgJCPOiswf
                wsW8YqoimdFRo5ZEXbmTOmIl6RKJRASiIcelQX/EwvmGVt3LanwrYZgf5Jg5qy1JckcZVaThG1x5njJK
                MUVbt/i6SNmjl6JgNyUiQj6d6y9+KfQUa7LuXWqp/PVb5I09oKKjz+mUQyXHlOqIm5HuICPfvV13h84i
                Mh9nXQ6jFsWzFN5jq5ZJ2DdMCC6fvMlzZ3Txyf8AWOocQABOYRHgAKHwlAAjhb2EFE3J4mTazhJyPbSc
                S+vLSCD1g8SI4ZvUUc/C5Fq7bKgJFETimBVUjlEpy8lMAlEQqddeAf60bpD/AOpyb+3n/UxXjnmoRXhF
                x51Jbqn1/LW0wDngQDi/Lp/zD+2pzNKUpSlKUpSlKUpSlKUpSlKUpSlKUpSo8niZkC/3rzMLqUUK7jAl
                7HTiY1JiKzpvPjcaXs0gLgvPKXTyVQhi9PTyPId6xJeDUblbWvrGQAypxF1jBVVQekUjLKtXnnkTUIHB
                gIYBL2OPHHy5qcRSlKUpSggA+oAP31BP8SFgDUJo53EdM+8vgWzpW8rbsl1YBsmqsmj98xt24cbK+628
                fdp40pjsoadgh92nemECFUMqQTkMZIDZE7b8XZteSOO425bljc+W7fCsSivLY9b4+ZTBmE35AHcRTS40
                36SDhIqgiUHXlEAQAR8sOOK7kzXLwXiK9lfLk5h/H1x42nbpnbpfYWt6+X7NWReX3hqdMEI5XdNCJopp
                TaIuWSIjyCIuAMYxgINYQdk3f5x3t1YQd7eO5BZ+UMYT2n24bjisfXGWz3z2Xi4aZnF7keWJe1vuzN3T
                YzJy7XPHOyFOVRsokmBQKQqg/K6/9W1/eJa1Q4F0WaGLByCy0r4yu8l2ZYy9c8KeJZopOjptJO6pkhBV
                QZps2QKpxbJZYyzhwYBKUCCbpm3X/iyBxLokvPDVgRaqVvY+04XDYFqRLFFZdb3bb2PloaLZtkEwMYxh
                ImUCkKAjyPAVGj8GsAl0RajSmDg5M+MgMUQEDFELYABAweoCHpx9/au2/GHwstK7VuPn0awcu2ltazMT
                Tc4u3TMolFxS2LL7t5J89MTsmmZ6+ZtinHt5ixC+pg5zPbR2UbKy7tlaF7osSbaTkTF6X8L2BIrNVU1D
                MLqxrYDCwrsiXhCCJklm8hHuCCQ/AiXpOAdJiiMMCU1cWttBeJp1iZ61QWldzTFWaG2TI9KZg4g0hJNb
                Sym9hLxtu74WPOdIr5H2mFTZrEIqAkBRQR+JPpGTfH7mOLt2rQZuCpbeh8mPL8xtiWatCJdXJbRLTlZC
                7r2tKUdQiVtIEcuTqCYjFwmBhEphOJSgXkai/wDh493Pb52z8GZqxrqtta8MdahHORZSRmLwY49NPXHc
                0O0QKzStJ67UOi7aLx6yaqZmKvSQT8qD8fI1ZhvR7p7DcU1f6PtS1qYcv/HOlLEFxvbQxdf98RK7B1lK
                Qg74ibkyfLtFiAZqUjFM0Ul7IisqZIwn8w4mNwEmDxOGje59fOhbB+rjS1Hu8mSuFlk8jskLQQWl5u5c
                S3xEIPTSsCzYdaix2BwSdqJJAZQAE/YPLNx1xod8WboxbacrAtfWRDZXsLPdiW5G2pehbUsgl0W9c763
                macb+UMc49sbKNlHXldazJZP9GfqDrEvpmR2wt5rCG6remcYPBOM8k2zaGGkYJdG+b7SYMUruCcXOimi
                2hmfmizVTAnWZJRyoIl79gqK7rM1ORO134pKa1Xag7YupLCtx2omdxKW5EnkX8lZl+4U/JFKftxB0KCb
                wWEuVMj1FNUOBRWT6gPUu/bx3b9Je55I5WZaX3GQHqGIE7ZPcr+9bTJa6Dk1z+0C0JFEB04Mr5YtxKqJ
                gL3HsFREde+Asr7OGs/WPel34Pu7P21xuP2xccDmVGxyuEntmJTztWUbLKTKSKqMTOW7KOlHcU5elBB0
                U/wmFQoFLj/wnaHh9LphYnEF45918ZrvjJD+2ca4WcXFY0XbTbTo1m7zLJKBAItZNw1MU790od0mmgCS
                oKLHKQp1jHqeZti7POlna0grvDDQXJemR8hC1TvbLN/OEHt2y8cwOKjGGaA3KCbRomYxlDJIj8Zx6jmH
                gOI5XiosB5twjq20U7s2H7alp+EwnG2jYt/yMMwVXRsqdxlkl/kjH05PqMimOk3k/fUgw9sV4TTO2RSO
                cBUTAcgifi2NsguHou9jt8xvcouoFuu5w5G2UB5FO6lGoCtAEuRZx7MKAr8ppPAIbkvBhS78BH62WdV8
                lKeJByFlvUTZUlga8NYjDNDSEsW8WzyCeW3cWXyscnY/t52hMESX82RbM0GjHzEymWWcIAUv6QC1mY8V
                voazplyxdOWt/T3BS113XpFlZJa6Ia3mK8hPRdsu5dpc7G8mDFoAquCx0gwRO5KQBMRMRU9Cjx9VpO8W
                noAufC9rl1Mt8o4nzJb1tM2V5QrC0VLtg5yciWKbZ89t2XauEziLtUp1Ct3CRDEE3SdQfWske3BvmaaN
                0LULlfB+nSxcmM4bF2OkMgKZGvlmwhGc+VW42tumhWlvNzOFkVAM5FcqirgQMQg/CAj2jR7tUTlLZ533
                MbbqDHHU5e+nbK0qlKXM8jU+lo5kbgtRazcm2a5lAKKTWSBNQ0rFkX4KqKaYcmAFQLkQ1qeJrwBmzA87
                hDbbtbK2ZdUebrZlLVtlk/sRzCscdMJiJUTn7nm/0y4qKxzQyyopkDyidIqKKgmQebHPBgxEy1yJr8ev
                ymdJJRuModzLpqi6Zu5hpOSyj0qbwOygmAwKgYP1imA3oIDXy27Raud9mrfHgN2ewMYy996csxum89dD
                iPQdrw7GbuGy08eZgsWfliEORg8fiJ5qIWcCVM6jkqafULc5azNMfFnbTi9lN7neTeb2U6qyTVcWSGMB
                dTTV8KHWoyK6I/K3UIVQRTBcDhyHxdIB2rKrti7juPN0HT7N6isYWHdeP7Wi8n3VjZpGXiu1XlJM1stW
                b0JxMzNMiZEnCbxMQSKY4pmAxDHE5RAItFkMHzLximQzvGjlsR/COX7EzhFRIHbE2FItsV42FTgDpCdN
                QgHDkBEpgAR4HiZtqqtmZvXTBqPs63WZpC4LrwPl62oJiQ3Sd5NTuPpGMi2hR+QqLqpkD76iH+DAyPaZ
                8Iaw8NqSrdtkOJyRZd8L204OVGUVth1DuYJxKosz8H8lu8Km3XMIfAdVMo9zVaLuRW/qA2Md7c+5zZGO
                5i+NMef5mTf3gtEIrowzuPvtNFLIuM5SVRIdGPfpumyMpEA5ECLGRSH4gBUpcp2pTxZ+hZtp/mXWlqGy
                3kzUReUC6hrBsCVspWASgrqlUjR7J1cUgku4E4NlTgskgzIodcSlKUSCbt9z4ZTbizDpnxbmjWPqfhJG
                A1AawpxC4DW/OthbT8FZASLm4knM0zWDzGruSfPXDs6BukxExIU5eQAAx2+KLQyhpg3J9tbcfjbYkprG
                GKIqz7fXl45ouq2ir6xTmGRyYSKl3oEFFBSSYTAGjiqCAqi1c8f4MeLz9WfipdJs/gaRtDQnDZWy5qry
                vFBZ2M7QVsZ7HDa9z3O1Fg3k3xklF1HTpkor1N2rUh/NVKXkxSANYivCaycphTdN1hYGzyRxZGdbowpd
                UMpaVyCmzlnt8WLk2OnL4txNMxh8x+g2M5fGRTER8hs5U/VSEayd+M276JtMYB351DyABwAiIiNiuRDg
                A/H7qk26MQMpox03EKAiJsCY7L0hz1D1Wc26QAAD51EU8H7AS1qZa3MLYnWa0dOW5edowUzHuklEHLGV
                ibmnWEg0XRVKUxDJqpnIYDFAeQ7h2r8Xxa0e+DWHtgyosnQRqk0mwTkDIKAzO+b5SjnKzIrrjo8wiaiZ
                zkARECmKIhwIDWTrxXto5ourapcHxUynpG2bdyzYVw5nZwKK7pQ2OWDdz0vJFu25OLNrKHj3LlTjpIQg
                nUECFEwWKbc3iMtp/Rvt8YexWhZuQ7MyZYFmM4u7ca2hYLRytdd+IJD7wn1LpK4TScFfrcHF44ATkAwF
                EhgKADij26tbSt/eJrt7VRqCsOZ0+k1Kzl3srctK9GjuJkICMyvhRW1cJlkzyZEBMEm3PDgZ50lSOK4r
                F+DgAv78QhhPPOgbc/077x+ELIfXdYcQrapciDGx7p0whLktZJaEk2t0LtSn9nRnIl0ogi7VACEVKUOR
                MABWSiD8XXtdvMeMrlno3PcPfCkQVxIWA0x8zkztpsEeTxaNwEkE0VERU+EroUwDpHq6PlXfeXN+FOM2
                iJbdJw9p0nnyR8ktce2/jLIko5bgZJxcQQYXbLSsGgQ3sAlEFeUQ4AR6BUEQEa4GkbUfdfiE9n/VDE5N
                xPE4MnMsReUsJW8aLeysvaTi4ouFQlbKviIczBQXVQj5oWntJBEf0rVUoCHoEdzZh3ii7JyWYNuvcexV
                lCxo61cmTV0QEtEQPvaYtKbkmyUZOsFYhyoh7dEPzMmzqOfMlhSEDKKlE5VOakH4d8TpoY1I6psDaW9P
                VjZvyBNZsvJC0V7ulrZZ2nC2aq5aLu0pN2xUWeuHiBRSKRYyflgmBhOYeghhrCnvT4oz/tMbx1jbxmF7
                CkbuwdkmVt6VyUEQ2ce6Ye7gtRHHmRbNuVdqU3sSVyRqBXzZ+sHQd24cE5KcpCnyY5U8XPt7xeBHt44h
                t7LN5Z1lIJVO2MRTNplimrC7nDUCNG9yXMk4USFkk4OXlRsmY6xSiBCkEwCHynhlNvjPdmTmpDdA1hQE
                xbmddXr2YQsu37nYqx1ztrKuq6y5Ava9rgjHRSqtFp6VTZAzbqEIsRu3Oc5QByBS2ueJvYPQ3W9mGV9k
                ce7hyBZEcL7yjC19tHUfAOAaeb6eZ0fGBefTv6VOOH6/TvUGTw4Qh/fud6vj5XpnEB9AD/jbP/QA+6s/
                HiII2Ql9mPXc0jGTmQcp47suSUQaInXVTj4bMVuS8s8ORPkQTbNUF3Cxx4AiZDGMIAURrpXwwOWLJyHs
                6ab7RtiYavZ/DMplXH9+xhF0zPYaekMqzV/sCOWwD1kTXj5lookoYvScQUAoiJDAEg2lKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlK08D9g9
                w9f415526Dsm7h1ybqmeWGh+x7kgdPWuFjEJZGyRGyMbCY7hIO6JFjcWQ4O7wbrEcJs20nHlcezIICdw
                QASDkqxgGVFj/Z/wdhnaevvbXs5oWVjr0xTdbC8LyUaN05i98u3DDAo9vtfzeQTVM+RbpsiiP9HbpIpg
                PwdQxGtrHw+WuXO+dcdWtuI2vd2P9Hmke6JyUt3HV1S7BZvf0y9uAs45grWio1dcvuqScpgtJPFDFMKI
                AgTjqHp9GmPjmMUwZRca1QYx0c1bMWDFqkRFqzZs0gQbNm6KYAUhCEKUpSgHAAAcVFK8Tft16i9SUdpV
                1U6Lse3BeuozT9fybNROzAiyXM1gfbkbltmeakkTokWGOlmxVDCc5gKUwB0iXnjufw/2zfeOhq3741ba
                uVwunXBqNaOVrpWlXRZ2Qxnak69TnZS215dUygLzMm7KVxNu0jiHwJtyGMQqgqR+deGxVuKze5/qUxvp
                FtS67Z0n60bpjrwvjJbaYYRWPm1uz02S8Lyg7vFFcHKoMZj2p4kwBv0rdaJA5ABEJzOgrRVirb+0v410
                yYiZlLB2RFieanVkEkpS8Lukje13JdUwsmHJ13bkTn+IR6CdCZeClKAdZbrmkINcmgTUbp3ZxiEpdl0W
                M9lceIrmITysg20Hvu1FUFFuCgoLhIEydRgDqOHIgHI1EM2VNhjV9lrO2KM97nVs3Va2HtISMVb+C8HZ
                EespJ5cEjaz4ZWBZpw7RZy3a27HPjC8URUH+mLh0iQUusT5CvE27bGqTPl+aStaGhiwLsvHPuI5B1jm5
                fyCcMG10xVvmeHuewbubKPV2/QnEyR36PKJjGAX4HEAIQxgvQ2CdnaX29cb3XnnUYslcus/UGQZLIkq6
                dpzK1jwj10aWNaTeWOAmVduHChnMs4IbhRXgnIlTAa+U8SbaG5/cWEtPz/bllMokaxl/XEzzZb+HXqTO
                85FGXaMC4+lVBIJFzR7Jyi+I6BBQOky6R1AFIpjF7uyhtxZ1137JlhaPtYF3e06tzYwt643t8zblJ8eL
                zNbzxzKWx7/eR5QKcU2iycW/UTAQ6hOf4+gBNH20aagPENbTGNC6Ii7e7rUhaNsSszH4fupwZ7LRdvx8
                hIHX8uHui1nPlOI32hUXDRGUBEUiD0cAQOC2864dtzxCOq3LWn3Xxm3DTLJ2UbeveIkLa09WDOWjHq4S
                gbJn211Q7V+ykJFFimSQcNwByZs8XUMcCnUHuAFnOZy0+xO4NoNu/T9qCtOdx0bUPhlhD3rbkkEY6uXH
                N6rNW85FPxBiqu0UewM42ayCBSLHTMo3KHIlEahm6c7C8QfsPyF6YPxHp2bawtLhrwkZ+3Rhm43HbjpV
                2JSGloAkc5JNQ6j1EiR3rH2ZRMqpexxMAmNkf05a2vEb6vdTGBxn9F1v6VdLaeXLNkMzP5eOZNn62N2U
                uk6u6JbSF1PDS3WrH+cmmVKP+NUxA6yCAiGRbf12qJrdG0oQ1vYudxkXqBwrcy994ncSzgWMdNmcxx46
                4LLkJMCmFum+S8tRJQA4K4RQEfhAawY4H1seJmxXiSE0LsNAnvzJVqwbTH1o6iLtaJELbNuR7YImMlZG
                URejBvhZtwIcrs6gq9JCiKRjAJRxN7Vum7ILnxF+NLFeZNTzpkPD2QrsyTqLy8zdLSkFKZDta2HVwZZU
                ZS49QuGzefXPANn3PQ6XIRYnSRcgFmi77O0sbdU0yQ1s2NMRNsZ8xFMvLpxRMzZjIQ0qo/a+yS9pTr1E
                plEkHZCkMmsBRBNQoGEo8jWA7BGvXxJmgOyIfThlDb6kdTTOyIj8jrDvqQZSEu/GLjCot4py7uqyHS5Z
                EiSQlTRUfkROdMQBT4iCNZmNp/N+99nzUHeN8bheCrYwJpwPYLxtZVntW0FHTRbuPLFVavDIsnb14uAI
                lOkY7oUukvfoERAatf8AFMbdurzXnZeit7pQxO/y69w5e2YRvmBh5eBjZhiwv5jaxYWVQTuBy0RVQKaG
                dlX6FusoinwUQMIllg1DegdBOuvTp4lK5Na1q6droyfpXzVOS0bdGUbelLQTY2fA5Ot1Bs8fOo+UkWz3
                /UeSbNTPQSanMLcFRSBQ3ADk+36dotfdP06W0TG0rF25qSwXIStyYfmZdZRrFTLeXSRC5LIlXqAGM3Tk
                BatVUXAFHy3CCRhDo6gHBbg/Xt4l3SZjCK0lz+3k9zPeVsQqFnY4yxPRppNeOjownu+IeP5aFf8AuqSK
                mmQpU1JBdETEAvXx3Echey1s1ajsa6l8hbom5jcbO7tZOTTSzi1LOI8bzhceBdDArCVn52QRAW5JEjDi
                Ij2DMTIMWwHIU5h8sS5RN67QPc247oAyhp4sORYxmRkpW3si4895nBGNlLsspRVdjByLrgRRTdprLIgq
                H6p+gR+HmovekfWn4inRrp5tnb7tfbcl76u3GzI2NMV5YuWLdKp2nAtSGJAs1JBo7JAP28ciBEmjhw6I
                XygKQ4icnA2iT2zlu3aWdaGkDXrkHHdy6t8rXrlGOzPn4tivYyckbGuAtwpe221MO5Bw2BVYIxUx0Tty
                g2SMn7MQQImUTT19e1kXvm7b01oY2x9asjMZGy7oy1FWRZFkeYybS8pe1/YRmIK2rW81yqRuRys+dotO
                pRcqQKDyY4F5MGLPwzOkbUfos27rmxBqjxVOYeyQ91MZJvRrak+9gn75a1pmy7XjIyYKvbzp438tZdg7
                TKUVusBTERKACURtozptx6r5PxNemnX7buM3lw6YELRBpeGRo+UhCtbIfwmnW4cdJs52MduE3gmcyDlq
                mgLZBUB80DGEpQHjJ3voaWcw6ytsvUNgXA0AndWUbjSsyatq2jvWserOntO8GVxvItk6enIiVwsi3ORA
                FVCFE4gBjFAea692wdGeV7U2WbQ0W59tySxJkq7cCZbxNd0NIqRr+TtE+SIuUt0rtc0Mu4bqHRSfAuAJ
                LmAfTnmoveiBLff2JnuZdK+NdBo6lcXZDyTI3pas6yQdzFsOLqXjGdmGveCuO2VwXTResYqOIqylSIgQ
                UQPwHJjG663ENurxC+4I7xPrBznhVjcF4QVynirC01WLL2lHSmJbbZrpTyc3JspCQTZiDx0mQihgfLLm
                6QExSh2qV1r72/Li3c9qyyMM5MtF1gHUYyt2wMn2bE3gdjIOMYZrtW3VYd/b087g1nCSzF42dyMY5O3X
                MXpXTcAAnRIAR7NMecPEzbaWOo/SeOicuo+w8bJrQeN7oejHXIjHW83WEjVjC3TEyCS7mNT9GSLxumdI
                nwAUCgUAzobWt873maZ7Uhd+4hYdo4EtmcxjHRWnq0o5nbKby2r8VUkTnnX8fDOnx1kyFVZmVO5ch1eW
                QvQA9Q1YF4f/ABlvbQWsHUPNbhF25fDDtvQ01b8hHZSlmMpD3pkpaWL7tl8eAgHSLRFIqzj2pqBEBTMV
                Pp6h4J0xuYbQ24VpR3C326TtIsiXfcF4Skhcd/4qYrxSErHzEw3ALtYjb8ws1aSsFKeUCyzTzyKJqgUS
                AcwFEvOd7g/il82xqVh4929bYxDPvWyLSQyJKw8KRvHgsBGysoBLklgSQMUwiflFJUxB9CCBay+7pu1P
                ee6ht54txlkqXt+1tYmLLVt+77fuvzTOrXUyqFqIx972/JPG6ZRCPl3CfBnCaY+ScCKFIYgCUcCmnTWT
                4lHb7xfEaOLi0BvtRCllxZLGxBkqXaLTykNAxZxj4Q6tz208FrJtW5PKIzNLigoCBEyq9ymNV+e0fs+6
                u53WTcW6vutSTCQ1IyguXONMWFdM5FSwXzxEzFOSkyxplGTQrBqYzaMYNVVASAxlDKGMYayeb/mkjNOt
                ja/zdg7T5bn5ZZYc3Diy77as0jtmxd3SSz8iR8tMRUe9kVUW6bj2IHC6XnKFKcU/L5ATgId2bN+Fco6d
                dsvSNhTNVnyFgZSx/j6Wibxs+VXjnT+CkXF8y0oi1dOIlZw3MYzdwioApLHDgwd+QEAwfboG33rJzdv5
                7eGqzFWCLnvLT1iK6NNz3JGTo6StVCGtVpZ2XlLguZd6zkpBB8cGbIQXU8hqoIl7E6jdqlySjFOUjZGL
                VOYiUkxdsFTkABORN23M3OYgG7CIAYR4GohGwNoY1xbfev7XfbWbtN10RmBs7SctL2PnlCZtF3a7h1al
                7yEtBpCyaSBpDplWUsJiGOzL5Z24lMAdZeJg9KUpSlKUpSlKUpSlKUpSlKUpSlKUpSsOG/Taba6dsDUq
                ks0kF1WVusZFFeHaPXssycM5JM6EgxasFUVFDoiInAgqdIhz1AIdqwC+DeQcs4vWS0croitzi0TJIqmA
                i50WztNV4RkobrTE3JQVMJODH5EBEO1TiaUpSlKUr86ViYucj3cTNR7GWi36J272Ok2iD5i7QU/XRctH
                JTJnIPzKYohVmSe2nt6ozY3Ilol0upz/ALaaSCZLhLHwSIyBlPOM89r9g6wUE/xCfnnnvV5MPBw9vRzW
                HgImNhIlimVJnGRLFtHMGxClApSN2jQpCEKAAAcFKFW5Zu0R6PdSsk1mdQemDBGaZhkkRu1lMm4us68p
                BBuRYy5EU3k60WUAoGOcwB1eoiPrXZ+J8HYawPbadnYUxZYOKLUROZRK3se2pC2lEEOYQETAxhEUU+ew
                f5NdnmTKchiHKUxDAJTlMAGAxR7CBgH1Dj5f1V8NYmLMa4vSmkMb2FaFhoXJLLT0+jaNvRVvpTM047Ly
                smnFpJFWcG5HqVUATD8xrm31j+yMn2vKWRke0rbvqz5srckvbF2QrCfgZMrR0R61K9i5MiiKnlrJpqk6
                iDwYoGDuFcfHuM8e4mtlrZeL7JtbH1osl3DlnbVmwcdbsG1cPD+Y6XQjIpNJEp1DfEcxSAIj3HvXVmcd
                IelrU0ZibURp4w1m08Ugo1i1Mo47te9VGDZY3Wq3aKT7ZcyZDD3EpRAB+lfSYZ06YG06Q8pb2BcOY1w3
                BTbtJ/MRGNbNgbNjpR83IZJu7fs4JBBNZQhDnKU6hREAEQDgBrpjI23RoJy9erjI+UtG2mnIN/PHHtbu
                8ruw3Yc9crpzxx7Q4l5Fiouc/wD5RjiP212xdGmDTle1n2zj678FYluaxbLU860bPnLAtiRty2lvZRYi
                rBw7lsZBsYURFMRRIURL254rti3rXty0rfjLTtiDirftiFYpRcRb8OxbR8PGRqBehFgxjmpSpJIlDsVM
                hQKAdgCrVr428tCWTLnkL0yDo8023pdkssLiUuS5cOWLLzUguJhOKrqQeMjqHN1CI9RjCPNXG2BjDHOK
                oFC18Z2LaVgW61J5beEs+AjLdi0iAPwlKzikkidvur4LN2l7TjqWjo+I1CYLxPmuKihcDGMMn2Hbd6to
                8XZPKdexpT7dcEwUL8JwLxyHYea1YR0wac9NTGYjNPeDsWYUjrhVZrTrLGFj29ZbaYVj0zIsVJJKBboA
                sKRDGKmKnPSAiBeORruWTiYuaZLxsxGsJWPcl6HLCSaN3zNcg9hKs1dFOQwD9pa6VtPSxpqsSfdXVZeA
                8QWrcr1YHLqegMeWrFyy7gCHTBwq/aNSqCcCnOAGE3Pca75AB+fA+ny+lfkz0BC3REP4C44iLn4OVbKN
                JOGmWLaSjJBqqHSo2eMXZTpKEMHqU5RCrO7P22NvvH13oZAsfRTphtO927or5C64DCuP4yebvCn6yu0p
                NqwKqCgG5MBwNzzXdc1po09XLkWLy/cWEMVzWVIV5CyMRkSTsa3Xt5xj+3BTGAeMbjcNzOklWQpJ+ynI
                qAp9JegQ4Cu6lUEnCSiC6KSyCpBTVRWIRVJZM5RKdNRM4CAlEBEBAQ71ZHfe2bt5ZOuVxeeRNEmly9rs
                dujPXNx3NhHH0xMuHZzgczheQesDqGOJgARMJuR4AfUAq4nFGCMLYJhht7C+KMeYqgxEOqKx/aMHabEx
                QAAAp28IgiUeOA7CHHYPpXX+c7/0jykVdGKNRt4YHfQwRaTq8rAy1OWUqzJDuG4SKDibt65lBKVAyRQW
                KdVMCiQOoBEO9QtN1Pcq298YW1eWhXZLwBhec1Lajjmxlf8AmTTBim0oqEiYW4nHsUxbFl3ZarRJSbm5
                ABKgDmNMdq2IodQXQrp+SEiLYN2ypPbP0RxVl5DQbEzzl6XDJuZE2xk1U4OYesSNIaziOkzqFWGMaFIi
                uqQQKZUT/AHHI5oLotG174gpK17zt2Euq3Jduq1lIK4ItnLxL9sumKSyLtg/IdJQpimEogYo9hEPnVkq
                G1TtpNZobjb6C9JSM+ZXzhmE8DY3JIir1gfzPayx3XzyADyA+tXt21altWZDMrdtC3oW14COQTbMIWAj
                WcTFs0EkwRTSbsWKZEygUhSlDgvoABXzrvEuMX1/x2VnePrNdZOiI1zDxeQHFuRSt4x8U8Dh1HM7hMl7
                UmicOxkyqdI/MK7AEvICA8CA9hAfQQHsYB5+yunbC07YGxXdNwXxjTDmNLBvG6/awua57QsyAt6dnyvp
                D3o8LLycWgks4BVx+nOChxAVPiHv3r7m9LGszI9tylnX/alvXrac03O0lrbumHYTsJJNlCimog8jZEii
                ShTFEQEDE9PvGrXsa7dOgnDV2J35ijRvpqx1eqS4uk7qs7DdhwE8RyImN5xJOOYpqgbkxh6gNz3Gryyl
                KUpSgAAUoABQAAAAAA4AAAOwfsr4rImNMeZctOUsTKVkWrkOy5pPype1bzgo644CRT+RHkVKpqoqcfLq
                JVuuINvjQvp+ukt8YO0hac8S3iQh0yXRj7ENj2rPEIp/hCklIhkksXn1Hg4d+9dss9OeBI/KJs3MMM4y
                ZZhUWfOVcoNLLt9vfZ3EpGKQ0kupdCSAPDHcNFVWyxhW5OmcxDclEQr9zJ+F8R5rh2VvZgxpY+T4KOfe
                8mEPflsxF0xzKQ8sUvbWrOYSWIRXoES9ZQAeB454r7uLiY6DjWMNDMGcXExbNCPjY2PQRaMWDJqmCLZo
                0aoFKRNNMgAUhClAAAAAAr5S18XY3sifu26rOsO0rWuW/XjaQvaegLfi4mWux8zKcjV5cL9ikRV4omCh
                wIdcxhDqHj1Gtm/8TYwyqlDN8mY9sy/0Lclms7b6V4W3E3ESFmWahVW0rFllUlfIXTMUpiKpcGAQDvX2
                UjFRsxHuomWj2UlFv2yrN/Gv2yLti7aLpCks2ctVwMRRMxR6TEMUQEKsvt/bQ29LTvNPIds6JdLsFfST
                4smld8VhLHzK4U5AigqkeElEGAKgqBxE3X1c89/Wu7rs0x6db8vSHyNemDsU3VftvN4prBXlP2HbUpcs
                Q2g1zOYZvHTLxsdwiRqocx25SKACYjyXiu25qBhblin0HcUTGzkNJN1mj+Jl2TeRjXzVdMUlW7tk7KdN
                QhimEolMUQ4GrOme2pt7R04lczDRRpfZ3Cg8NIIzLfCWPk5JN8cwnM7I7Bh1goIiIiYB5EfWrmrpxNi+
                +LBlcVXhj2zLmxnORp4eYsCatuJkLPkoo/HXHvbecJGaqIjwHJDJCA1yMb4xx1h2zITHWKLHtXHFhW02
                Bnb9m2VBRtt21CtAMJ/Z4yGiU0kESciIiVMgBzXW2Y9J2mLUOqxcZ30/4fzA4jeQj3GR8e2vd67MBAAN
                7OtNtljF5AA9B+QfStWItJ+mPAIrGwhp/wAPYmM4P5qx8fY8ta1FFFe/6UVYZqibq+I3xAPPca7iuW17
                cvGFkLbuyAh7mt+WbqNJOEno5nLRT9qoXoOg7YPyKJHKYOwgYohVo9l7bm3/AI3vBvkHH+i7TFZt8NnQ
                vULttzCtgRNwIux55cpyjNiRUDjyPJgNz39fWr1SEImQpEylIQgAUhCABSkKUOClIUOwAAdgAK+AvrE+
                McnKW+tkXH9nXytacwyuG2Fbrt2KnlLenY5crpjMQykkkoZs5RUKU6ayQlMUwAICAgA12Bx25+fAc8du
                RD5V1NZOBcJ41u26r9x7ifHtk3tfKjpa87sta0YOEuK6VnsgMs8Vn5ePQTXdmVdGFwoKxzdSg9Y8m712
                JNwcPc0NK27cUXHzkDOR7uJmYaWZoSEXKxcggZq/jpBi6KdNZFVMxiHTUKJTFEQEOB4r4XF2E8QYRi5C
                Dw7jGxMXw8q8LISUXYVrw1qsJB+ml5Cbx40hkUU1FCkACAcxRHjtzxXaFKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUrTwPP15H7uPp2qvH
                9vy/bVRDn8fspVOPx+z1rSBRAR79x+Y8CAd/kH4/dWvjj94j+/vVBDmnAUAOPmNOPx9Kr9apx9BEPu/z
                1TpD0DkKcCH7xHt93P2fdWqnH3/vrTwIccdw57/t9Rp0/cP0D0AA+nz/AHVjM3Ld1jTftWWZjS/NSEBl
                acgsp3c+syAHFluW7cTxjJsIVadXcTKE/LxIJoCkiYhDIHVP1mLymBeoxYv+rvxNeoDXa0U0pbP2lfN5
                L4yi0cWy6yxdsHGPMiR7GXSGPfksizLPcyjCKMVNQxjXBJTA+zE5UKg3OmDgmZjYJ2XS7YuKLkytm98w
                u3WZn1g0XydLNViSUdjK2DOCTCGLIGZ6j+2ri84ez8mmYEnLsqSSIHQZpOF5DnH3/gefWnH3/f8AOgB8
                x9eO9OAqtOP5cf21QfsAP38fyqnA/v8AUPkHbv8Af+2q8enz4+tV4+dU447+o889g/hVO/bsPf17h25/
                HyqvH2jTjvzVapx/Pmq8cVTpD7ftDt3+g1QA+oB68/v7j6fbVePv/Hp2qnBuPXkfmAdg9e/FVEoCPI/j
                7acD9n0D6AH+mnH2jVOn7uO3bjj0Dj1Cq8B9v7B4/eIVQeeB9Ofl6j+/05qvAf1hz3qohz+4Q+XzpSlO
                O3H7KUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKsd3IbBcZP0S6h7FaKSCLy4seTTJovGOVWzpu6O3MZFx5i
                PxCUoh8ZQAeQ7cDUZ7wpduSdm5I1vW3KNniKjSOxkLYzloo1Ioggs6bGUSFQxg+MwCpwA9wEB7BwATQ6
                UpSlKUpSlKUpSlKUpSlKUpSlKUpSlR29xPw4ulzcf1S3HqqynlzK9o3Xc9v2Zbklb9powhocGVlwqUEy
                O2WfFFUiiqKQCce/Bh5AB7VeBoG2U9v7bndEuXBOJCzGUAb+zny7kp4neV/NinTKVwSDeuEk28aU5imH
                qZN01ek5kzKnIIhWWLp7h37B8uA7/aNaqUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKV1dlDCGGM3R0dE5mxHjDLsVDPTSURGZPsG1L+jouQOgZqd/GsrqaO0kFxSOdMVUilMJREvPAiFMa4
                Qwxhlq7Y4fxHi/FDJ/5ftzPGtgWrYrV75QiZL2tva7VqRTpEREvWUeBEePWu0eP4+v30pSlKUpSlKUpS
                lKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSvj7+YOpOy7pYMBZg+cwMqm0GQSVXZA5OyOR
                EzlNEQOJAMPfpEB+lRsNgXH7Kxcza0hCccOZiQl45tKw71w9VVKMVcj1sEs0Tkkk1gbmP5qJOQApSgQA
                6ueQk/0pSlKUpSlKUpSlKUpSlKUpSlKUpSlKpxTj+r9nH0qtKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKV
                srpAqiqnyJetI6fIcD0gcol5Ao9v4Vi40babz6ddRmcBUeSNwHySk/uI9wSLd02cE67mXfoseg6qiJk0
                yLAmkdJNPsXgQGsptKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                VBDn1/mIfyrrxeFITI0ZMFWXKY0BIsxbg1VMgJDLFUA3tRS9JB5DnpMbv8grsSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKU
                pSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpWx5SZlCKiUBUTE5SG7gJSmDkwdvr8636Up
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUp
                SlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSlKUpSv/Z
            </property>
        </structure>
    </list-property>
</report>
