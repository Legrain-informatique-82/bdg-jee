<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.22" id="1">
    <property name="author">Le Grain</property>
    <property name="comments">Edition Avoir - VERHOEF</property>
    <property name="createdBy">Eclipse BIRT Designer Version 3.7.1.v20110905 Build &lt;3.7.1.v20110905-1820></property>
    <text-property name="title">Avoir</text-property>
    <html-property name="description">EditionsSupp</html-property>
    <property name="units">cm</property>
    <method name="initialize"><![CDATA[reportContext.getReportRunnable().designHandle.getDesignHandle().findElement("TableLigne").setPageBreakInterval(params["PageBreakMaxi"].value);]]></method>
    <property name="layoutPreference">auto layout</property>
    <parameters>
        <scalar-parameter name="paramID_DOC" id="141">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="capital" id="828">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ape" id="829">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="siret" id="830">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rcs" id="894">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="nomEntreprise" id="895">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="factureTTC" id="896">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
                <property name="pattern">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ParamCorr" id="1110">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">CORR</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ParamChoix" id="1053">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">choix 1</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="flagRemise" id="3770">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">boolean</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">false</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">check-box</property>
            <structure name="format"/>
        </scalar-parameter>
        <scalar-parameter name="typeTraite" id="5871">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">null</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="flagReglementVisible" id="7382">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">boolean</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="controlType">check-box</property>
            <structure name="format"/>
        </scalar-parameter>
        <scalar-parameter name="ReglementIntegre" id="7387">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="CoupureLigne" id="3795">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">54</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="PageBreakTotaux" id="7686">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">28</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="PageBreakMaxi" id="7687">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">36</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="DataSourceScript" id="7"/>
    </data-sources>
    <data-sets>
        <script-data-set name="DataSetScript1" id="2652">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dateFacture</property>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">libEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">codeTCivilite</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">nomTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">prenomTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">codeTEntity</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">codeTiers</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">tvaIComCompl</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">dateEch</property>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="position">16</property>
                    <property name="name">accise</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeFacture</property>
                </structure>
                <structure>
                    <property name="columnName">dateFacture</property>
                </structure>
                <structure>
                    <property name="columnName">libEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">codeTCivilite</property>
                </structure>
                <structure>
                    <property name="columnName">nomTiers</property>
                </structure>
                <structure>
                    <property name="columnName">prenomTiers</property>
                </structure>
                <structure>
                    <property name="columnName">codeTEntity</property>
                </structure>
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">codeTiers</property>
                </structure>
                <structure>
                    <property name="columnName">tvaIComCompl</property>
                </structure>
                <structure>
                    <property name="columnName">dateEch</property>
                </structure>
                <structure>
                    <property name="columnName">accise</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dateFacture</property>
                        <property name="dataType">date</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">libEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">codeTCivilite</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">nomTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">prenomTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">codeTEntity</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">codeTiers</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">tvaIComCompl</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">dateEch</property>
                        <property name="dataType">date</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">accise</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
//liste = imprimeObjet.list1;
liste = imprimeObjet.m.get("TaAvoir");
//facture = imprimeObjet.m.get("TaFacture");]]></method>
            <method name="fetch"><![CDATA[if(count< liste.size()) {
//if(count< 1) {
   facture = liste.get(count);
   row["codeFacture"] = facture.getCodeDocument();
   row["dateFacture"] = facture.getDateDocument();
   //row["libEntreprise"] = facture.getTaTiers().getTaEntreprise().getLiblEntreprise();
   if(facture.getTaInfosDocument().getCodeTCivilite()==null){
    row["codeTCivilite"] = " ";
   }else{
   	row["codeTCivilite"] = facture.getTaInfosDocument().getCodeTCivilite();	
   }
	  
   row["nomTiers"] = facture.getTaInfosDocument().getNomTiers();
   if(facture.getTaInfosDocument().getPrenomTiers() == null){
    row["prenomTiers"] = " ";
   }else{
    row["prenomTiers"] = facture.getTaInfosDocument().getPrenomTiers();
   }
    
   if(facture.getTaInfosDocument().getCodeTEntite()==null){
    row["codeTEntity"] = " ";
   }else{
   	row["codeTEntity"] = facture.getTaInfosDocument().getCodeTEntite();	
   }
    
   if(facture.getTaInfosDocument().getNomEntreprise()==null){
    row["libEntreprise"] = " ";
   }else{
   	row["libEntreprise"] = facture.getTaInfosDocument().getNomEntreprise();	
   }
   if(facture.getTaInfosDocument().getAdresse1()==null){
    row["adresse1"] = " ";
   }else{
   	row["adresse1"] = facture.getTaInfosDocument().getAdresse1();	
   } 
   
   if(facture.getTaInfosDocument().getAdresse2()==null){
    row["adresse2"] = " ";
   }else{
   	row["adresse2"] = facture.getTaInfosDocument().getAdresse2();	
   } 
   
   if(facture.getTaInfosDocument().getAdresse3()==null){
    row["adresse3"] = " ";
   }else{
   	row["adresse3"] = facture.getTaInfosDocument().getAdresse3();	
   } 
   
   if(facture.getTaInfosDocument().getVille()==null){
    row["ville"] = " ";
   }else{
   	row["ville"] = facture.getTaInfosDocument().getVille();	
   } 
   
   if(facture.getTaInfosDocument().getCodepostal()==null){
    row["codePostal"] = " ";
   }else{
   	row["codePostal"] = facture.getTaInfosDocument().getCodepostal();	
   } 

   row["codeTiers"] = facture.getTaTiers().getCodeTiers();
   
   if(facture.getTaInfosDocument().getTvaIComCompl()==null){
    row["tvaIComCompl"] = " ";
   }else{
   	row["tvaIComCompl"] = facture.getTaInfosDocument().getTvaIComCompl();	
   } 
      
   if(facture.getTaTiers().getTaCompl()==null 
   || facture.getTaTiers().getTaCompl().getAccise()==null
   || facture.getTaTiers().getTaCompl().getAccise().trim().equals("")){
    row["accise"] = null;
   }else{
   	row["accise"] = facture.getTaTiers().getTaCompl().getAccise();	
   }
   
   row["dateEch"] = facture.getDateEchDocument();

	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript3" id="2799">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeArticle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">libLFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">qteLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">u1Lfacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">prixULFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">rem</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codeTva</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">mtHTLFacture</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeArticle</property>
                </structure>
                <structure>
                    <property name="columnName">libLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">qteLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">u1Lfacture</property>
                </structure>
                <structure>
                    <property name="columnName">prixULFacture</property>
                </structure>
                <structure>
                    <property name="columnName">rem</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">codeTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">mtHTLFacture</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeArticle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">libLFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">qteLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">u1Lfacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">prixULFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">rem</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codeTva</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">mtHTLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idDocument = null;
listLDocument = null;
document = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
sizeTotal = 0;
entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
nombreFois = 0;
document = imprimeObjet.m.get("TaAvoir").get(0);
nombreLineBreak = 22;
idDocument = document.getIdDocument();

jpql = "select tlf from TaLAvoir tlf where tlf.taDocument.idDocument = "+idDocument+" order by tlf.numLigneLDocument";
query = entityManager.createQuery(jpql);
listLDocument = query.getResultList();
//listLDocument =document.getLignes();

//nombreFois = new Packages.java.math.BigDecimal(listLDocument.size()/52).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
nombreFois = new Packages.java.math.BigDecimal(listLDocument.size()/nombreLineBreak).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
//sizeTotal = nombreFois*53;
if(listLDocument.size() <= nombreLineBreak ){
	sizeTotal = nombreLineBreak;
}else{
	//sizeTotal = sizeTotal = nombreFois*52;
	sizeTotal = sizeTotal = nombreFois*nombreLineBreak;
}





]]></method>
            <method name="fetch"><![CDATA[if(count< sizeTotal ) {
	if(count < listLDocument.size()){
   listDocument = listLDocument.get(count);
   
   if(listDocument.getTaArticle() == null){
      row["codeArticle"] = "";
   }else{
   	  row["codeArticle"] = listDocument.getTaArticle().getCodeArticle();
   }
   row["libLFacture"] = listDocument.getLibLDocument();
   
   if(listDocument.getQteLDocument()!= null ){
	  row["qteLFacture"] = listDocument.getQteLDocument().floatValue();
   }
   row["u1Lfacture"] = listDocument.getU1LDocument();
   
   if(listDocument.getPrixULDocument()!= null ){
	  row["prixULFacture"] = listDocument.getPrixULDocument().floatValue();
   }
   if(listDocument.getRemTxLDocument() == null){
   	  row["rem"] = null;
   }else{
   	  row["rem"] = listDocument.getRemTxLDocument().floatValue();	
   }
   row["codeTva"] = listDocument.getCodeTvaLDocument();
   row["TTC"] = listDocument.getTaDocument().getTtc();
   
   montantTtc = null;
   montantHt = null;
   if(listDocument.getMtTtcLDocument() != null){
   		montantTtc = listDocument.getMtTtcLDocument().floatValue();
   }
   if(listDocument.getMtHtLDocument() != null){
   		montantHt = listDocument.getMtHtLDocument().floatValue();
   }
   
   if(row["TTC"]==1){
   	row["montant"] = montantTtc;
   }else{
   	row["montant"] = montantHt;
   }
  }
	count++;
	return true;
	
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript10" id="3249">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeArticle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">libLFacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">qteLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">u1Lfacture</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">prixULFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">rem</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codeTva</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">mtHTLFacture</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">flagVisible</property>
                    <property name="dataType">boolean</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">PrixRemise</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeArticle</property>
                </structure>
                <structure>
                    <property name="columnName">libLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">qteLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">u1Lfacture</property>
                </structure>
                <structure>
                    <property name="columnName">prixULFacture</property>
                </structure>
                <structure>
                    <property name="columnName">rem</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">codeTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">mtHTLFacture</property>
                </structure>
                <structure>
                    <property name="columnName">flagVisible</property>
                </structure>
                <structure>
                    <property name="columnName">PrixRemise</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeArticle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">libLFacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">qteLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">u1Lfacture</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">prixULFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">rem</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codeTva</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">mtHTLFacture</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">flagVisible</property>
                        <property name="dataType">boolean</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">PrixRemise</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeClose"><![CDATA[if(count< sizeTotal ) {
	if((count/22) == nombreFois){
		row["flagVisible"] = true;
	}
	count++;
	return true;	
}
return false;]]></method>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=1;

idDocument = null;
listLDocument = null;
document = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
sizeTotal = 0;
entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
nombreFois = 0;
document = imprimeObjet.m.get("TaAvoir").get(0);
nombreLineBreakTotaux = params["PageBreakTotaux"].value;
nombreLineBreakMaxi = params["PageBreakMaxi"].value;
idDocument = document.getIdDocument();

jpql = "select tlf from TaLAvoir tlf where tlf.taDocument.idDocument = "+idDocument+" order by tlf.numLigneLDocument";
query = entityManager.createQuery(jpql);
listLDocument = query.getResultList();

listeFinale = new Packages.java.util.LinkedList;

//pour traiter les retours à la ligne
listeFinale=listLDocument; // à enlever si je remet le traitement des retours à la ligne
document.setLignes(listLDocument);
listeFinale=document.calculNbReelLigneImpression(params["CoupureLigne"].value,listLDocument);
		
		

//nombreFois = new Packages.java.math.BigDecimal(listeFinale.size()/nombreLineBreakMaxi).setScale(0, Packages.java.math.BigDecimal.ROUND_UP).intValue();
nombreFois =Math.floor(listeFinale.size()/nombreLineBreakMaxi); 

//if(listeFinale.size() <= nombreLineBreakTotaux ){
//	sizeTotal = nombreLineBreakTotaux;
//}else{
//    if(listeFinale.size() <= nombreLineBreakMaxi ){
//		sizeTotal = nombreLineBreakMaxi+nombreLineBreakTotaux;
//	}else{
//	reste=listeFinale.size()-(nombreFois*nombreLineBreakMaxi);
//		if(reste<=nombreLineBreakTotaux){
//			sizeTotal=  (nombreFois*nombreLineBreakMaxi)+(nombreLineBreakTotaux);
//		}else{
//			sizeTotal =  (nombreFois*nombreLineBreakMaxi)+(nombreLineBreakMaxi)+nombreLineBreakTotaux;
//		}
//	}
//}

sizeTotal=document.calculNbLigne(listeFinale,nombreLineBreakTotaux,nombreLineBreakMaxi,nombreFois);



]]></method>
            <method name="fetch"><![CDATA[if(count<= sizeTotal ) {
	//a = count%nombreLineBreak;
	//if(a == 0 &amp;&amp; count != 0 &amp;&amp; count != sizeTotal){
	//	row["flagVisible"] = false;
	//}
	//else{
	//	row["flagVisible"] = true;
	//}
	if(count <= listeFinale.size()){
		listDocument = listeFinale.get(count-1);
		if(listDocument.getTaArticle() == null){
      		row["codeArticle"] = "";
   		}else{ 
   		
   		    if(listDocument.getTaArticle().getCodeArticle().length() > 15)
   		      row["codeArticle"] = listDocument.getTaArticle().getCodeArticle().substring(0,13)+"..";
   		    else
   	  		  row["codeArticle"] = listDocument.getTaArticle().getCodeArticle();
   		}
   		/** 29/06/2010**/
   		if(listDocument.getLibLDocument()!=null &amp;&amp; listDocument.getLibLDocument().length() > 55){
   			row["libLFacture"] = listDocument.getLibLDocument().substring(0,52)+"...";
   		}else{
   			row["libLFacture"] = listDocument.getLibLDocument();
   		}
   		//row["libLFacture"] = listDocument.getLibLDocument();
   		/**************/
   		
   		if(listDocument.getQteLDocument()!= null ){
	  		row["qteLFacture"] = listDocument.getQteLDocument();
   		}
   		row["u1Lfacture"] = listDocument.getU1LDocument();
   		
   		if(listDocument.getPrixULDocument()!= null ){
	  		row["prixULFacture"] = listDocument.getPrixULDocument()
	  		//.floatValue();
   		}
   		
   		if(listDocument.getRemTxLDocument() == null){
   	  		row["rem"] = null;
   		}else{
   	  		row["rem"] = listDocument.getRemTxLDocument();	
   		}
   		
   		row["codeTva"] = listDocument.getCodeTvaLDocument();
   		row["TTC"] = listDocument.getTaDocument().getTtc();
   		
   		montantTtc = null;
   		montantHt = null;
   		
   		if(listDocument.getMtTtcLDocument() != null){
   			montantTtc = listDocument.getMtTtcLDocument()
   			//.floatValue();
   		}
   		if(listDocument.getMtHtLDocument() != null){
   			montantHt = listDocument.getMtHtLDocument()
   			//.floatValue();
   		}
   		if(row["TTC"]==1){
   			row["montant"] = montantTtc;
   		}else{
   			row["montant"] = montantHt;
   		}
   		PrixRemise=listDocument.getPrixULDocument();
   		if(listDocument.getRemTxLDocument()!=null &amp;&amp; listDocument.getQteLDocument()!=null &amp;&amp; 
   			listDocument.getQteLDocument()!=0){
   		 if(row["TTC"]==1){
   			PrixRemise = montantTtc/listDocument.getQteLDocument();
   		}else{
   			PrixRemise = montantHt/listDocument.getQteLDocument();
   		}
   		if(PrixRemise != null)row["PrixRemise"] = PrixRemise;
   		}
   		
   		
	}
	count++;
	return true;	
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript4" id="2840">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">codeTvaRecup</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">taux</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">mt</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">mtRemis</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">mtTva</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">remise</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">codeTvaRecup</property>
                </structure>
                <structure>
                    <property name="columnName">taux</property>
                </structure>
                <structure>
                    <property name="columnName">mt</property>
                </structure>
                <structure>
                    <property name="columnName">mtRemis</property>
                </structure>
                <structure>
                    <property name="columnName">mtTva</property>
                </structure>
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">remise</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">codeTvaRecup</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">taux</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">mt</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">mtRemis</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">mtTva</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">remise</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
ttc = null;
remise = null ;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
facture = imprimeObjet.m.get("TaAvoir").get(0);
ttc = facture.getTtc();
if(facture.getTxRemHtDocument() != null){
   	remise = facture.getTxRemHtDocument().floatValue();
}else{
   	remise = 0.0;
}
facture.calculLignesTva();
listLignesTVA = facture.getLignesTVA();
]]></method>
            <method name="fetch"><![CDATA[if(count< listLignesTVA.size()) {
//if(count< 1) {
   lineTva = listLignesTVA.get(count) 
   
   row["codeTvaRecup"] = lineTva.getCodeTva();
   //row["taux"] = lineTva.getTauxTva().toString()+"%";
   row["taux"] = lineTva.getTauxTva().floatValue();
   row["TTC"] = ttc;
   if(row["TTC"] == 1) {
    row["mt"] = lineTva.getMontantTotalTtc().floatValue();
    row["mtRemis"] = lineTva.getMontantTotalTtcAvecRemise().floatValue();
   }else {
	row["mt"] = lineTva.getMontantTotalHt().floatValue();
	row["mtRemis"] = lineTva.getMontantTotalHtAvecRemise().floatValue();
   }
    row["mtTva"] = lineTva.getMtTva().floatValue();
	row["remise"] = remise;
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScript51" id="3567">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">TTC</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">remisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">montant</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">montantNT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">montantNTTva</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">montantTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">remisTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">montantNTTtc</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">regle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">netPay</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">tauxRemisHT</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">tauxRemisTTC</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">commtaire</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">libellePaiement</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">acompte</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">16</property>
                    <property name="name">avoir</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">17</property>
                    <property name="name">resteRegler</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">TTC</property>
                </structure>
                <structure>
                    <property name="columnName">remisHT</property>
                </structure>
                <structure>
                    <property name="columnName">montant</property>
                </structure>
                <structure>
                    <property name="columnName">montantNT</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTva</property>
                </structure>
                <structure>
                    <property name="columnName">montantTtc</property>
                </structure>
                <structure>
                    <property name="columnName">remisTtc</property>
                </structure>
                <structure>
                    <property name="columnName">montantNTTtc</property>
                </structure>
                <structure>
                    <property name="columnName">regle</property>
                </structure>
                <structure>
                    <property name="columnName">netPay</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisHT</property>
                </structure>
                <structure>
                    <property name="columnName">tauxRemisTTC</property>
                </structure>
                <structure>
                    <property name="columnName">commtaire</property>
                </structure>
                <structure>
                    <property name="columnName">libellePaiement</property>
                </structure>
                <structure>
                    <property name="columnName">acompte</property>
                </structure>
                <structure>
                    <property name="columnName">avoir</property>
                </structure>
                <structure>
                    <property name="columnName">resteRegler</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">TTC</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">remisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">montant</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">montantNT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">montantNTTva</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">montantTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">remisTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">montantNTTtc</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">regle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">netPay</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">tauxRemisHT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">tauxRemisTTC</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">commtaire</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">libellePaiement</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">acompte</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">avoir</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">resteRegler</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
idFacture = null;
listLFacture = null;
facture = null;
ttc = null;
taFacture = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();

taFacture = imprimeObjet.m.get("TaAvoir").get(0);
//taFacture.calculeTvaEtTotaux();


facture = new Packages.fr.legrain.documents.dao.TaAvoir();
facture = taFacture;

]]></method>
            <method name="fetch"><![CDATA[//if(count< listLFacture.size()) {
if(count< 1) {
   
   //facture.calculeTvaEtTotaux();
   
   row["TTC"] = document.getTtc();
   
   if(row["TTC"]==1){
   	row["remisHT"] = document.getRemTtcIntermediaireDocument().floatValue();
   }else{
   	row["remisHT"] = document.getRemHtDocument().floatValue();	
   } 
   //row["montant"] = facture.getMtHtCalc().floatValue();
   if(row["TTC"]==1){
   	row["montant"] = document.getMtTtcAvantRemiseGlobaleCalc().floatValue();
   }else{
   	row["montant"] = document.getMtHtCalc().floatValue();
   	
   }
   row["montantNT"] = document.getNetHtCalc().floatValue();
   row["montantNTTva"] = document.getNetTvaCalc().floatValue();
   //row["montantTtc"] = row["montantNTTva"] + facture.getNetHtCalc().floatValue();
   row["montantTtc"] = document.getMtTtcCalc().floatValue();
   row["remisTtc"] = document.getRemTtcDocument().floatValue();
   //row["remisTtc"] = row["montant"]-row["montantNT"];
   row["montantNTTtc"] = document.getNetTtcCalc().floatValue();
 
   row["netPay"] = document.getNetAPayer().floatValue(); 
   //row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   
   if(document.getTxRemHtDocument() != null){
   	//row["tauxRemisHT"] = document.getTxRemHtDocument().floatValue();
   	row["tauxRemisHT"] = document.getTxRemHtDocument();
   	
   }else{
   	row["tauxRemisHT"] = 0.0;
   	//row["tauxRemisHT"] = document.getTxRemHtDocument().floatValue();
   }
    if(document.getTxRemTtcDocument() != null){
   	//row["tauxRemisTTC"] = document.getTxRemTtcDocument().floatValue();
   	row["tauxRemisTTC"] = document.getTxRemTtcDocument();
   }else{
   	row["tauxRemisTTC"] = 0.0;
   	//row["tauxRemisHT"] = facture.getTxRemHtDocument().floatValue();
   }
   row["commtaire"] = document.getCommentaire();


   
   count++;
   return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetforList" id="3046">
            <structure name="cachedMetaData"/>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
]]></method>
            <method name="fetch"><![CDATA[if(count< 1) {
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataAdresseTiers" id="3735">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">pays</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">pays</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">pays</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
//liste = imprimeObjet.list1;
liste = imprimeObjet.m.get("TaAvoir");
//facture = imprimeObjet.m.get("TaFacture");]]></method>
            <method name="fetch"><![CDATA[if(count< liste.size()) {
//if(count< 1) {
   document = liste.get(count);
   if(document.getTaInfosDocument().getAdresse1()==null){
    row["adresse1"] = " ";
   }else{
   	row["adresse1"] = document.getTaInfosDocument().getAdresse1();	
   } 
   
   if(document.getTaInfosDocument().getAdresse2()==null){
    row["adresse2"] = " ";
   }else{
   	row["adresse2"] = document.getTaInfosDocument().getAdresse2();	
   } 
   
   if(document.getTaInfosDocument().getAdresse3()==null){
    row["adresse3"] = " ";
   }else{
   	row["adresse3"] = document.getTaInfosDocument().getAdresse3();	
   } 
   
   if(document.getTaInfosDocument().getVille()==null){
    row["ville"] = " ";
   }else{
   	row["ville"] = document.getTaInfosDocument().getVille();	
   } 
   
   if(document.getTaInfosDocument().getCodepostal()==null){
    row["codePostal"] = " ";
   }else{
   	row["codePostal"] = document.getTaInfosDocument().getCodepostal();	
   } 
   
   if(document.getTaInfosDocument().getPays!=null){
   	row["pays"] = document.getTaInfosDocument().getPays();	
   } 

	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetInfosEntreprise" id="3664">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dateStart</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dateFin</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">nomInfoEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">adresse1</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">adresse2</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">adresse3</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">ville</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">codePostal</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">pays</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">tvaEntreprise</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">capital</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">RCS</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">SIRET</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">typeEntity</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">accise</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dateStart</property>
                </structure>
                <structure>
                    <property name="columnName">dateFin</property>
                </structure>
                <structure>
                    <property name="columnName">nomInfoEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">adresse1</property>
                </structure>
                <structure>
                    <property name="columnName">adresse2</property>
                </structure>
                <structure>
                    <property name="columnName">adresse3</property>
                </structure>
                <structure>
                    <property name="columnName">ville</property>
                </structure>
                <structure>
                    <property name="columnName">codePostal</property>
                </structure>
                <structure>
                    <property name="columnName">pays</property>
                </structure>
                <structure>
                    <property name="columnName">tvaEntreprise</property>
                </structure>
                <structure>
                    <property name="columnName">capital</property>
                </structure>
                <structure>
                    <property name="columnName">RCS</property>
                </structure>
                <structure>
                    <property name="columnName">SIRET</property>
                </structure>
                <structure>
                    <property name="columnName">typeEntity</property>
                </structure>
                <structure>
                    <property name="columnName">accise</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dateStart</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dateFin</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">nomInfoEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">adresse1</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">adresse2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">adresse3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">ville</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">codePostal</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">pays</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">tvaEntreprise</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">capital</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">RCS</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">SIRET</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">typeEntity</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">accise</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[count=0;
taInfoEntreprise = null;

entityManager = null;

imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
entityManager = imprimeObjet.listEntityManager.get(0);

jpql = "select tie from TaInfoEntreprise tie";

query = entityManager.createQuery(jpql);

for (i = 0; i < query.getResultList().size(); i++) {
	taInfoEntreprise = query.getResultList().get(i);
}]]></method>
            <method name="fetch"><![CDATA[libDate = new Packages.fr.legrain.lib.data.LibDate();

if(count<1) {
	row["dateStart"] = libDate.dateToString(taInfoEntreprise.getDatedebInfoEntreprise());
	row["dateFin"] =libDate.dateToString(taInfoEntreprise.getDatefinInfoEntreprise());
	if(taInfoEntreprise.getNomInfoEntreprise()!=null)
		row["nomInfoEntreprise"] = taInfoEntreprise.getNomInfoEntreprise().trim();
	row["adresse1"] = taInfoEntreprise.getAdresse1InfoEntreprise();
	row["adresse2"] = taInfoEntreprise.getAdresse2InfoEntreprise();
	row["adresse3"] = taInfoEntreprise.getAdresse3InfoEntreprise();
	row["ville"] = taInfoEntreprise.getVilleInfoEntreprise();
	row["codePostal"] = taInfoEntreprise.getCodepostalInfoEntreprise();
	row["pays"] = taInfoEntreprise.getPaysInfoEntreprise();
	if(taInfoEntreprise.getTvaIntraInfoEntreprise()!=null)
		row["tvaEntreprise"] = taInfoEntreprise.getTvaIntraInfoEntreprise().trim();
	
	if(taInfoEntreprise.getCapitalInfoEntreprise()!=null)
		row["capital"] = taInfoEntreprise.getCapitalInfoEntreprise().trim();
	if(taInfoEntreprise.getRcsInfoEntreprise()!=null)
		row["RCS"] = taInfoEntreprise.getRcsInfoEntreprise().trim();
	if(taInfoEntreprise.getSiretInfoEntreprise()!=null)
		row["SIRET"] = taInfoEntreprise.getSiretInfoEntreprise().trim();
	if(taInfoEntreprise.getAccise()!=null)
		row["accise"] = taInfoEntreprise.getAccise().trim();
	if(taInfoEntreprise.getTaTiers() != null &amp;&amp; taInfoEntreprise.getTaTiers().getCodeTEntite()!=null){
		row["typeEntity"] = taInfoEntreprise.getTaTiers().getTaTEntite().getCodeTEntite().trim();	
	}else{
		row["typeEntity"] = "";
	}

	
	count++;
	return true;
}
return false;]]></method>
        </script-data-set>
        <script-data-set name="DataSetScriptListeReglements" id="7276">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">code</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">code2</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">code</property>
                </structure>
                <structure>
                    <property name="columnName">code2</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">code</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">code2</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DataSourceScript</property>
            <method name="open"><![CDATA[//Etat = new Packages.fr.legrain.gestCom.Module_Document.IHMEtat();

count=0;
count2=5;
size = 0;
document = null;
tmp=null;
IteratorSet = null;
imprimeObjet = new Packages.fr.legrain.edition.ImprimeObjet();
document = new Packages.fr.legrain.documents.dao.TaAvoir();
document = imprimeObjet.m.get("TaAvoir").get(0);
idDocument = document.getIdDocument();

entityManager = null;
entityManager = imprimeObjet.listEntityManager.get(0);
liste = null;
liste = new Packages.java.util.LinkedList();

jpql = "select rd from TaRDocument rd where rd.taAvoir.idDocument = "+idDocument+" and rd.taFacture is not null order by rd.taFacture.codeDocument";
query = entityManager.createQuery(jpql);
listLDocument = query.getResultList();

liste=listLDocument;

taRDocument = new Packages.fr.legrain.documents.dao.TaRDocument();
taDoc =  new Packages.fr.legrain.documents.dao.TaFacture







]]></method>
            <method name="fetch"><![CDATA[retour=false;
if(count< liste.size() || count2< liste.size()){
if(count< liste.size() &amp;&amp; count<5 ) {
		taDoc = liste.get(count).getTaFacture();
		if(taDoc != null ){
		row["code"]=taDoc.getCodeDocument();		
			//if(count==3 &amp;&amp; count+1<liste.size())row["code"]=row["code"]+"...";			
		}
	count++;
	retour=true;
}
if(count2< liste.size() &amp;&amp; count2<10 ) {
		taDoc = liste.get(count2).getTaFacture();
		if(taDoc != null ){
		   row["code2"]=taDoc.getCodeDocument();		
		}
	
	count2++;
		retour=true;
}
	return retour;
}
return retour;]]></method>
        </script-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">"Verdana"</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="codeArticle" id="7441">
            <structure name="stringFormat">
                <property name="category">Unformatted</property>
            </structure>
            <property name="display">inline</property>
            <property name="canShrink">true</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">a4</property>
            <property name="topMargin">0.5cm</property>
            <property name="leftMargin">0.5cm</property>
            <property name="bottomMargin">0.5cm</property>
            <property name="rightMargin">0.5cm</property>
            <property name="showHeaderOnFirst">true</property>
            <property name="floatingFooter">false</property>
            <property name="headerHeight">0.25cm</property>
            <property name="footerHeight">0.5cm</property>
            <page-footer>
                <grid id="2635">
                    <property name="fontFamily">serif</property>
                    <property name="fontSize">medium</property>
                    <property name="width">100%</property>
                    <column id="2636">
                        <property name="width">10%</property>
                    </column>
                    <column id="2637">
                        <property name="width">80%</property>
                    </column>
                    <column id="2638">
                        <property name="width">10%</property>
                    </column>
                    <row id="2639">
                        <cell id="2640">
                            <property name="colSpan">3</property>
                            <property name="rowSpan">1</property>
                            <data id="3665">
                                <property name="fontSize">8pt</property>
                                <property name="textAlign">center</property>
                                <property name="dataSet">DataSetInfosEntreprise</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">dateStart</property>
                                        <expression name="expression">dataSetRow["dateStart"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">dateFin</property>
                                        <expression name="expression">dataSetRow["dateFin"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">nomInfoEntreprise</property>
                                        <expression name="expression">dataSetRow["nomInfoEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse1</property>
                                        <expression name="expression">dataSetRow["adresse1"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse2</property>
                                        <expression name="expression">dataSetRow["adresse2"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">adresse3</property>
                                        <expression name="expression">dataSetRow["adresse3"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">ville</property>
                                        <expression name="expression">dataSetRow["ville"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">codePostal</property>
                                        <expression name="expression">dataSetRow["codePostal"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">pays</property>
                                        <expression name="expression">dataSetRow["pays"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">tvaEntreprise</property>
                                        <expression name="expression">dataSetRow["tvaEntreprise"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">capital</property>
                                        <expression name="expression">dataSetRow["capital"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">RCS</property>
                                        <expression name="expression">dataSetRow["RCS"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">SIRET</property>
                                        <expression name="expression">dataSetRow["SIRET"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">typeEntity</property>
                                        <expression name="expression">dataSetRow["typeEntity"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">infoEntreprise</property>
                                        <expression name="expression" type="javascript">"Siret : 522 618 024 00015 - APE : 4721Z - TVA : FR16 522 618 024 - SARL au capital de 1 000 €"</expression>
                                        <property name="dataType">string</property>
                                        <property name="allowExport">true</property>
                                    </structure>
                                </list-property>
                                <property name="resultSetColumn">infoEntreprise</property>
                            </data>
                        </cell>
                    </row>
                    <row id="2643">
                        <cell id="2644"/>
                        <cell id="2645">
                            <property name="fontFamily">serif</property>
                            <property name="textAlign">center</property>
                        </cell>
                        <cell id="2646">
                            <grid id="1294">
                                <property name="width">100%</property>
                                <column id="1295">
                                    <property name="textAlign">right</property>
                                </column>
                                <column id="1296">
                                    <property name="textAlign">center</property>
                                </column>
                                <column id="1297">
                                    <property name="textAlign">right</property>
                                </column>
                                <row id="1298">
                                    <cell id="1299">
                                        <auto-text id="1300">
                                            <property name="type">page-number</property>
                                        </auto-text>
                                    </cell>
                                    <cell id="1301">
                                        <text id="1302">
                                            <property name="contentType">plain</property>
                                            <text-property name="content"><![CDATA[/]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="1303">
                                        <auto-text id="1304">
                                            <property name="type">total-page</property>
                                        </auto-text>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
        <simple-master-page name="pageMaitreTraite" id="5870">
            <property name="type">a4</property>
            <property name="topMargin">0.4cm</property>
            <property name="leftMargin">0.5cm</property>
            <property name="bottomMargin">0cm</property>
            <property name="rightMargin">0cm</property>
            <property name="showHeaderOnFirst">false</property>
            <property name="showFooterOnLast">false</property>
            <property name="headerHeight">0cm</property>
            <property name="footerHeight">0cm</property>
        </simple-master-page>
    </page-setup>
    <body>
        <list id="3014">
            <property name="dataSet">DataSetforList</property>
            <property name="pageBreakInterval">400</property>
            <header>
                <grid id="7463">
                    <property name="fontFamily">serif</property>
                    <property name="marginLeft">10mm</property>
                    <property name="marginRight">10mm</property>
                    <property name="width">100%</property>
                    <column id="7464">
                        <property name="width">100%</property>
                    </column>
                    <row id="7465">
                        <cell id="7466">
                            <property name="textAlign">center</property>
                            <grid id="7593">
                                <property name="width">100%</property>
                                <column id="7594">
                                    <property name="width">90%</property>
                                </column>
                                <row id="7595">
                                    <cell id="7596">
                                        <image id="7674">
                                            <property name="height">123px</property>
                                            <property name="width">650px</property>
                                            <property name="source">embed</property>
                                            <property name="imageName">VergerFoncoussiereLogo_reduit.jpg</property>
                                        </image>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="7467">
                        <cell id="7468">
                            <grid id="7656">
                                <property name="width">100%</property>
                                <column id="7657">
                                    <property name="width">2.1979166666666665in</property>
                                </column>
                                <column id="7671">
                                    <property name="width">2.5208333333333335in</property>
                                </column>
                                <column id="7658">
                                    <property name="width">7.1875in</property>
                                </column>
                                <row id="7659">
                                    <cell id="7660">
                                        <image id="7685">
                                            <property name="height">84px</property>
                                            <property name="width">182px</property>
                                            <property name="source">embed</property>
                                            <property name="imageName">raisonSocial_ParLegrain2.png</property>
                                        </image>
                                    </cell>
                                    <cell id="7669"/>
                                    <cell id="7661">
                                        <property name="colSpan">1</property>
                                        <property name="rowSpan">2</property>
                                        <grid id="7487">
                                            <property name="marginTop">10mm</property>
                                            <property name="height">1.0729166666666667in</property>
                                            <property name="width">100%</property>
                                            <column id="7623">
                                                <property name="width">2.0729166666666665in</property>
                                            </column>
                                            <row id="7490">
                                                <property name="verticalAlign">bottom</property>
                                                <cell id="7622">
                                                    <property name="verticalAlign">top</property>
                                                    <grid id="2733">
                                                        <property name="marginTop">0pt</property>
                                                        <property name="marginBottom">0mm</property>
                                                        <property name="verticalAlign">top</property>
                                                        <property name="width">100%</property>
                                                        <column id="2734"/>
                                                        <row id="2735">
                                                            <property name="verticalAlign">top</property>
                                                            <cell id="2736">
                                                                <property name="verticalAlign">top</property>
                                                                <data id="2742">
                                                                    <property name="fontFamily">serif</property>
                                                                    <property name="fontWeight">bold</property>
                                                                    <property name="dataSet">DataSetScript1</property>
                                                                    <list-property name="boundDataColumns">
                                                                        <structure>
                                                                            <property name="name">codeFacture</property>
                                                                            <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">dateFacture</property>
                                                                            <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                                            <property name="dataType">date</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">libEntreprise</property>
                                                                            <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codeTCivilite</property>
                                                                            <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">nomTiers</property>
                                                                            <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">prenomTiers</property>
                                                                            <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codeTEntity</property>
                                                                            <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse1</property>
                                                                            <expression name="expression">dataSetRow["adresse1"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse2</property>
                                                                            <expression name="expression">dataSetRow["adresse2"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse3</property>
                                                                            <expression name="expression">dataSetRow["adresse3"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">ville</property>
                                                                            <expression name="expression">dataSetRow["ville"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codePostal</property>
                                                                            <expression name="expression">dataSetRow["codePostal"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">EnteteChoix123</property>
                                                                            <expression name="expression" type="javascript">var value="";&#13;
if (params["ParamChoix"]=="choix 1"){&#13;
if(row["codeTCivilite"]!=null  ) value=value.concat(row["codeTCivilite"]);&#13;
if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);&#13;
if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);&#13;
if(value.replace(/^\s+/g,'').replace(/\s+$/g,'') ==""){&#13;
  if(row["codeTEntity"]!=null) value=value.concat("  "+row["codeTEntity"]);&#13;
  if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);&#13;
   }&#13;
}else&#13;
if (params["ParamChoix"]=="choix 2"){&#13;
if(row["codeTEntity"]!=null ) value=value.concat(row["codeTEntity"]);&#13;
if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);&#13;
  if(value.replace(/^\s+/g,'').replace(/\s+$/g,'') ==""){&#13;
     if(row["codeTCivilite"]!=null) value=value.concat(row["codeTCivilite"]);&#13;
     if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);&#13;
     if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);&#13;
     }&#13;
}else&#13;
if (params["ParamChoix"]=="choix 3"){&#13;
if(row["codeTEntity"]!=null) value=value.concat("  "+row["codeTEntity"]);&#13;
if(row["libEntreprise"]!=null) value=value.concat("  "+row["libEntreprise"]);&#13;
 }</expression>
                                                                            <property name="dataType">string</property>
                                                                            <property name="allowExport">true</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codeTiers</property>
                                                                            <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">tvaIComCompl</property>
                                                                            <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">dateEch</property>
                                                                            <expression name="expression">dataSetRow["dateEch"]</expression>
                                                                            <property name="dataType">date</property>
                                                                        </structure>
                                                                    </list-property>
                                                                    <property name="resultSetColumn">EnteteChoix123</property>
                                                                </data>
                                                                <data id="2743">
                                                                    <property name="fontFamily">serif</property>
                                                                    <property name="fontWeight">bold</property>
                                                                    <property name="dataSet">DataSetScript1</property>
                                                                    <list-property name="boundDataColumns">
                                                                        <structure>
                                                                            <property name="name">codeFacture</property>
                                                                            <expression name="expression">dataSetRow["codeFacture"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">dateFacture</property>
                                                                            <expression name="expression">dataSetRow["dateFacture"]</expression>
                                                                            <property name="dataType">date</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">libEntreprise</property>
                                                                            <expression name="expression">dataSetRow["libEntreprise"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codeTCivilite</property>
                                                                            <expression name="expression">dataSetRow["codeTCivilite"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">nomTiers</property>
                                                                            <expression name="expression">dataSetRow["nomTiers"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">prenomTiers</property>
                                                                            <expression name="expression">dataSetRow["prenomTiers"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codeTEntity</property>
                                                                            <expression name="expression">dataSetRow["codeTEntity"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse1</property>
                                                                            <expression name="expression">dataSetRow["adresse1"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse2</property>
                                                                            <expression name="expression">dataSetRow["adresse2"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse3</property>
                                                                            <expression name="expression">dataSetRow["adresse3"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">ville</property>
                                                                            <expression name="expression">dataSetRow["ville"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codePostal</property>
                                                                            <expression name="expression">dataSetRow["codePostal"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">EnteteChoix3</property>
                                                                            <expression name="expression" type="javascript">value="";&#13;
if (params["ParamChoix"]=="choix 3"){&#13;
if(row["codeTCivilite"]!=null) value=value.concat(row["codeTCivilite"]);&#13;
if(row["nomTiers"]!=null) value=value.concat("  "+row["nomTiers"]);&#13;
if(row["prenomTiers"]!=null) value=value.concat("  "+row["prenomTiers"]);&#13;
}</expression>
                                                                            <property name="dataType">string</property>
                                                                            <property name="allowExport">true</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codeTiers</property>
                                                                            <expression name="expression">dataSetRow["codeTiers"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">tvaIComCompl</property>
                                                                            <expression name="expression">dataSetRow["tvaIComCompl"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">dateEch</property>
                                                                            <expression name="expression">dataSetRow["dateEch"]</expression>
                                                                            <property name="dataType">date</property>
                                                                        </structure>
                                                                    </list-property>
                                                                    <property name="resultSetColumn">EnteteChoix3</property>
                                                                </data>
                                                                <data id="3736">
                                                                    <property name="fontFamily">serif</property>
                                                                    <property name="dataSet">DataAdresseTiers</property>
                                                                    <list-property name="boundDataColumns">
                                                                        <structure>
                                                                            <property name="name">adresse1</property>
                                                                            <expression name="expression">dataSetRow["adresse1"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse2</property>
                                                                            <expression name="expression">dataSetRow["adresse2"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">adresse3</property>
                                                                            <expression name="expression">dataSetRow["adresse3"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">ville</property>
                                                                            <expression name="expression">dataSetRow["ville"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">codePostal</property>
                                                                            <expression name="expression">dataSetRow["codePostal"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">pays</property>
                                                                            <expression name="expression">dataSetRow["pays"]</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                        <structure>
                                                                            <property name="name">Adresse</property>
                                                                            <expression name="expression" type="javascript">value="";
if(dataSetRow["adresse1"]!=null) value=value.concat(dataSetRow["adresse1"]+"\n");
if(dataSetRow["adresse2"]!=null) value=value.concat(dataSetRow["adresse2"]+"\n");
if(dataSetRow["adresse3"]!=null) value=value.concat(dataSetRow["adresse3"]+"\n");
if(dataSetRow["codePostal"]!=null) value=value.concat(dataSetRow["codePostal"]+" ");
if(dataSetRow["ville"]!=null) value=value.concat(dataSetRow["ville"]);
if(dataSetRow["pays"]!=null &amp;&amp; BirtStr.toLower(dataSetRow["pays"]) != "france") value=value.concat("\n"+dataSetRow["pays"]);</expression>
                                                                            <property name="dataType">string</property>
                                                                        </structure>
                                                                    </list-property>
                                                                    <property name="resultSetColumn">Adresse</property>
                                                                </data>
                                                            </cell>
                                                        </row>
                                                    </grid>
                                                </cell>
                                            </row>
                                        </grid>
                                    </cell>
                                </row>
                                <row id="7666">
                                    <cell id="7667">
                                        <property name="colSpan">2</property>
                                        <property name="rowSpan">1</property>
                                        <grid id="7615">
                                            <property name="marginLeft">35mm</property>
                                            <property name="textAlign">right</property>
                                            <property name="width">3.25in</property>
                                            <column id="7628">
                                                <property name="width">1.0416666666666667in</property>
                                            </column>
                                            <column id="7616">
                                                <property name="width">1.21875in</property>
                                            </column>
                                            <column id="7631">
                                                <property name="width">0.9895833333333334in</property>
                                            </column>
                                            <row id="7618">
                                                <property name="verticalAlign">bottom</property>
                                                <cell id="7627">
                                                    <property name="verticalAlign">bottom</property>
                                                    <text id="7629">
                                                        <property name="fontSize">18pt</property>
                                                        <property name="fontWeight">bold</property>
                                                        <property name="color">#FF0000</property>
                                                        <property name="paddingBottom">0pt</property>
                                                        <property name="textAlign">right</property>
                                                        <property name="contentType">auto</property>
                                                        <text-property name="content"><![CDATA[Avoir]]></text-property>
                                                    </text>
                                                </cell>
                                                <cell id="7619">
                                                    <property name="verticalAlign">bottom</property>
                                                    <text id="7621">
                                                        <property name="fontSize">12pt</property>
                                                        <property name="color">#000000</property>
                                                        <property name="marginLeft">1mm</property>
                                                        <property name="marginRight">0mm</property>
                                                        <property name="paddingBottom">1pt</property>
                                                        <property name="textAlign">left</property>
                                                        <property name="dataSet">DataSetScript1</property>
                                                        <list-property name="boundDataColumns">
                                                            <structure>
                                                                <property name="name">codeFacture</property>
                                                                <text-property name="displayName">codeFacture</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["codeFacture"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">dateFacture</property>
                                                                <text-property name="displayName">dateFacture</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["dateFacture"]</expression>
                                                                <property name="dataType">date</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">libEntreprise</property>
                                                                <text-property name="displayName">libEntreprise</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["libEntreprise"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">codeTCivilite</property>
                                                                <text-property name="displayName">codeTCivilite</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["codeTCivilite"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">nomTiers</property>
                                                                <text-property name="displayName">nomTiers</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["nomTiers"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">prenomTiers</property>
                                                                <text-property name="displayName">prenomTiers</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["prenomTiers"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">codeTEntity</property>
                                                                <text-property name="displayName">codeTEntity</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["codeTEntity"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">adresse1</property>
                                                                <text-property name="displayName">adresse1</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["adresse1"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">adresse2</property>
                                                                <text-property name="displayName">adresse2</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["adresse2"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">adresse3</property>
                                                                <text-property name="displayName">adresse3</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["adresse3"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">ville</property>
                                                                <text-property name="displayName">ville</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["ville"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">codePostal</property>
                                                                <text-property name="displayName">codePostal</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["codePostal"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">codeTiers</property>
                                                                <text-property name="displayName">codeTiers</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["codeTiers"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">tvaIComCompl</property>
                                                                <text-property name="displayName">tvaIComCompl</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["tvaIComCompl"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">dateEch</property>
                                                                <text-property name="displayName">dateEch</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["dateEch"]</expression>
                                                                <property name="dataType">date</property>
                                                            </structure>
                                                            <structure>
                                                                <property name="name">accise</property>
                                                                <text-property name="displayName">accise</text-property>
                                                                <expression name="expression" type="javascript">dataSetRow["accise"]</expression>
                                                                <property name="dataType">string</property>
                                                            </structure>
                                                        </list-property>
                                                        <property name="contentType">html</property>
                                                        <text-property name="content"><![CDATA[n° :   <B><VALUE-OF>row["codeFacture"]</VALUE-OF></B>]]></text-property>
                                                    </text>
                                                </cell>
                                                <cell id="7630">
                                                    <property name="verticalAlign">bottom</property>
                                                    <text id="7632">
                                                        <property name="fontSize">12pt</property>
                                                        <property name="marginLeft">0mm</property>
                                                        <property name="paddingBottom">2pt</property>
                                                        <property name="textAlign">left</property>
                                                        <property name="contentType">auto</property>
                                                        <text-property name="content"><![CDATA[ adressée à :]]></text-property>
                                                    </text>
                                                </cell>
                                            </row>
                                        </grid>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="7510">
                        <cell id="7511">
                            <grid id="7520">
                                <column id="7521">
                                    <property name="width">2.4166666666666665in</property>
                                </column>
                                <column id="7522">
                                    <property name="width">9.489583333333334in</property>
                                </column>
                                <row id="7523">
                                    <cell id="7524">
                                        <table id="7526">
                                            <property name="borderBottomColor">#000000</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#000000</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#000000</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#000000</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="width">100%</property>
                                            <property name="dataSet">DataSetScriptListeReglements</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">code</property>
                                                    <text-property name="displayName">code</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["code"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">code2</property>
                                                    <text-property name="displayName">code2</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["code2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                            </list-property>
                                            <structure name="toc"/>
                                            <property name="repeatHeader">false</property>
                                            <property name="pageBreakInterval">4</property>
                                            <list-property name="sort">
                                                <structure>
                                                    <expression name="key" type="javascript">row["code"]</expression>
                                                    <property name="direction">asc</property>
                                                    <property name="strength">-1</property>
                                                </structure>
                                            </list-property>
                                            <column id="7533">
                                                <property name="width">50%</property>
                                            </column>
                                            <column id="7678">
                                                <property name="width">50%</property>
                                            </column>
                                            <header>
                                                <row id="7527">
                                                    <cell id="7528">
                                                        <property name="colSpan">2</property>
                                                        <property name="rowSpan">1</property>
                                                        <property name="fontSize">9pt</property>
                                                        <label id="7636">
                                                            <property name="textUnderline">underline</property>
                                                            <property name="textAlign">left</property>
                                                            <text-property name="text">références factures</text-property>
                                                        </label>
                                                    </cell>
                                                </row>
                                            </header>
                                            <detail>
                                                <row id="7529">
                                                    <cell id="7530">
                                                        <property name="fontSize">9pt</property>
                                                        <data id="7646">
                                                            <property name="resultSetColumn">code</property>
                                                        </data>
                                                    </cell>
                                                    <cell id="7677">
                                                        <property name="fontSize">9pt</property>
                                                        <data id="7681">
                                                            <property name="resultSetColumn">code2</property>
                                                        </data>
                                                    </cell>
                                                </row>
                                            </detail>
                                        </table>
                                    </cell>
                                    <cell id="7525">
                                        <grid id="7534">
                                            <property name="dataSet">DataSetScript1</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">codeFacture</property>
                                                    <text-property name="displayName">codeFacture</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["codeFacture"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateFacture</property>
                                                    <text-property name="displayName">dateFacture</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["dateFacture"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libEntreprise</property>
                                                    <text-property name="displayName">libEntreprise</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["libEntreprise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTCivilite</property>
                                                    <text-property name="displayName">codeTCivilite</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["codeTCivilite"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">nomTiers</property>
                                                    <text-property name="displayName">nomTiers</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["nomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">prenomTiers</property>
                                                    <text-property name="displayName">prenomTiers</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["prenomTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTEntity</property>
                                                    <text-property name="displayName">codeTEntity</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["codeTEntity"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse1</property>
                                                    <text-property name="displayName">adresse1</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["adresse1"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse2</property>
                                                    <text-property name="displayName">adresse2</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["adresse2"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">adresse3</property>
                                                    <text-property name="displayName">adresse3</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["adresse3"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">ville</property>
                                                    <text-property name="displayName">ville</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["ville"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codePostal</property>
                                                    <text-property name="displayName">codePostal</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["codePostal"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">codeTiers</property>
                                                    <text-property name="displayName">codeTiers</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["codeTiers"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tvaIComCompl</property>
                                                    <text-property name="displayName">tvaIComCompl</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["tvaIComCompl"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">dateEch</property>
                                                    <text-property name="displayName">dateEch</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["dateEch"]</expression>
                                                    <property name="dataType">date</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">accise</property>
                                                    <text-property name="displayName">accise</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["accise"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">datefacture</property>
                                                    <text-property name="displayName">datefacture</text-property>
                                                    <expression name="expression" type="javascript">var value =""; var date = dataSetRow["dateFacture"];&#13;
var day = date.getDay();&#13;
var year = (date.getYear()+1900).toString();&#13;
if((date.getMonth() + 1)>9){&#13;
var month = (date.getMonth() + 1).toString();&#13;
}&#13;
else{&#13;
var month = "0"+(date.getMonth() + 1).toString();&#13;
}&#13;
if(date.getDate()&lt;9){&#13;
//var date = (date.getDate()+10).toString();&#13;
var date = "0"+(date.getDate()).toString();&#13;
}&#13;
else{&#13;
var date = (date.getDate()).toString();&#13;
}&#13;
//value = date+" / "+month+" / "+year+" -- "+weeks[day];&#13;
value = "Date de l'avoir  : "+date+"/"+month+"/"+year;</expression>
                                                    <property name="dataType">string</property>
                                                    <property name="allowExport">true</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">DateEcheance</property>
                                                    <text-property name="displayName">DateEcheance</text-property>
                                                    <expression name="expression" type="javascript">var value =""; var date = dataSetRow["dateEch"];&#13;
var day = date.getDay();&#13;
var year = (date.getYear()+1900).toString();&#13;
if((date.getMonth() + 1)>9){&#13;
var month = (date.getMonth() + 1).toString();&#13;
}&#13;
else{&#13;
var month = "0"+(date.getMonth() + 1).toString();&#13;
}&#13;
if(date.getDate()&lt;9){&#13;
//var date = (date.getDate()+10).toString();&#13;
var date = "0"+(date.getDate()).toString();&#13;
}&#13;
else{&#13;
var date = (date.getDate()).toString();&#13;
}&#13;
//value = date+" / "+month+" / "+year+" -- "+weeks[day];&#13;
value = "échéance  : "+date+"/"+month+"/"+year;</expression>
                                                    <property name="dataType">string</property>
                                                    <property name="allowExport">true</property>
                                                </structure>
                                            </list-property>
                                            <column id="7535"/>
                                            <row id="7536">
                                                <cell id="7537">
                                                    <data id="7642">
                                                        <property name="resultSetColumn">datefacture</property>
                                                    </data>
                                                </cell>
                                            </row>
                                            <row id="7538">
                                                <cell id="7539"/>
                                            </row>
                                        </grid>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                </grid>
            </header>
            <detail>
                <table name="TableLigne" id="2852">
                    <property name="fontFamily">serif</property>
                    <property name="borderBottomColor">#000000</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderLeftColor">#000000</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">1px</property>
                    <property name="borderRightColor">#000000</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">1px</property>
                    <property name="borderTopColor">#000000</property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="marginLeft">10mm</property>
                    <property name="marginRight">10mm</property>
                    <property name="textAlign">center</property>
                    <property name="canShrink">false</property>
                    <property name="width">100%</property>
                    <property name="dataSet">DataSetScript10</property>
                    <list-property name="boundDataColumns">
                        <structure>
                            <property name="name">codeArticle</property>
                            <expression name="expression">dataSetRow["codeArticle"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">libLFacture</property>
                            <expression name="expression">dataSetRow["libLFacture"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">qteLFacture</property>
                            <expression name="expression">dataSetRow["qteLFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">u1Lfacture</property>
                            <expression name="expression">dataSetRow["u1Lfacture"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">prixULFacture</property>
                            <expression name="expression">dataSetRow["prixULFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">rem</property>
                            <expression name="expression">dataSetRow["rem"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">montant</property>
                            <expression name="expression">dataSetRow["montant"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">codeTva</property>
                            <expression name="expression">dataSetRow["codeTva"]</expression>
                            <property name="dataType">string</property>
                        </structure>
                        <structure>
                            <property name="name">TTC</property>
                            <expression name="expression">dataSetRow["TTC"]</expression>
                            <property name="dataType">integer</property>
                        </structure>
                        <structure>
                            <property name="name">mtHTLFacture</property>
                            <expression name="expression">dataSetRow["mtHTLFacture"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                        <structure>
                            <property name="name">flagVisible</property>
                            <expression name="expression">dataSetRow["flagVisible"]</expression>
                            <property name="dataType">boolean</property>
                        </structure>
                        <structure>
                            <property name="name">PrixRemise</property>
                            <expression name="expression">dataSetRow["PrixRemise"]</expression>
                            <property name="dataType">float</property>
                        </structure>
                    </list-property>
                    <property name="pageBreakInterval">25</property>
                    <column id="2881">
                        <property name="width">41%</property>
                    </column>
                    <column id="2882">
                        <property name="width">8%</property>
                    </column>
                    <column id="2883">
                        <property name="width">9%</property>
                    </column>
                    <column id="2886">
                        <property name="width">10%</property>
                    </column>
                    <column id="2887">
                        <property name="width">3%</property>
                    </column>
                    <header>
                        <row id="2853">
                            <property name="height">0.188in</property>
                            <property name="backgroundColor">#FF0000</property>
                            <property name="fontSize">8pt</property>
                            <property name="fontWeight">bold</property>
                            <property name="borderLeftColor">#000000</property>
                            <property name="borderLeftStyle">solid</property>
                            <property name="borderLeftWidth">1px</property>
                            <property name="borderRightColor">#000000</property>
                            <property name="borderRightStyle">solid</property>
                            <property name="borderRightWidth">1px</property>
                            <property name="textAlign">left</property>
                            <cell id="2855">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <label id="2891">
                                    <text-property name="text">Désignation</text-property>
                                </label>
                            </cell>
                            <cell id="2856">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <label id="2892">
                                    <text-property name="text">Quantité (kg)</text-property>
                                </label>
                            </cell>
                            <cell id="2857">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <label id="2894">
                                    <text-property name="text">PU HT</text-property>
                                </label>
                            </cell>
                            <cell id="2860">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <label id="7602">
                                    <property name="borderRightColor">#000000</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <text-property name="text">Montant HT</text-property>
                                </label>
                            </cell>
                            <cell id="2861">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <label id="2896">
                                    <text-property name="text">TVA</text-property>
                                </label>
                            </cell>
                        </row>
                    </header>
                    <detail>
                        <row id="2862">
                            <property name="borderLeftColor">#000000</property>
                            <property name="borderLeftStyle">solid</property>
                            <property name="borderLeftWidth">1px</property>
                            <property name="borderRightColor">#000000</property>
                            <property name="borderRightStyle">solid</property>
                            <property name="borderRightWidth">1px</property>
                            <property name="lineHeight">0in</property>
                            <property name="orphans">inherit</property>
                            <property name="textTransform">none</property>
                            <property name="canShrink">true</property>
                            <list-property name="highlightRules">
                                <structure>
                                    <property name="operator">ne</property>
                                    <property name="fontSize">10pt</property>
                                    <expression name="testExpr" type="javascript">row[0] % 2</expression>
                                    <simple-property-list name="value1">
                                        <value type="javascript">0</value>
                                    </simple-property-list>
                                </structure>
                            </list-property>
                            <cell id="2864">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <data id="3374">
                                    <property name="textAlign">left</property>
                                    <property name="resultSetColumn">libLFacture</property>
                                </data>
                            </cell>
                            <cell id="2865">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <data id="3375">
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">qteLFacture</property>
                                </data>
                            </cell>
                            <cell id="2866">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <data id="3377">
                                    <structure name="numberFormat">
                                        <property name="category">Currency</property>
                                        <property name="pattern">###0.00€</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">prixULFacture</property>
                                </data>
                            </cell>
                            <cell id="2869">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <data id="3379">
                                    <structure name="numberFormat">
                                        <property name="category">Currency</property>
                                        <property name="pattern">###0.00€</property>
                                    </structure>
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">montant</property>
                                </data>
                            </cell>
                            <cell id="2870">
                                <property name="borderLeftColor">#C0C0C0</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#C0C0C0</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <data id="3380">
                                    <property name="textAlign">right</property>
                                    <property name="resultSetColumn">codeTva</property>
                                </data>
                            </cell>
                        </row>
                    </detail>
                </table>
            </detail>
            <footer>
                <grid id="3099">
                    <property name="marginTop">3mm</property>
                    <property name="marginLeft">10mm</property>
                    <property name="marginRight">10mm</property>
                    <property name="textAlign">center</property>
                    <property name="pageBreakInside">avoid</property>
                    <property name="width">100%</property>
                    <column id="3100">
                        <property name="width">40%</property>
                    </column>
                    <column id="3101">
                        <property name="width">30%</property>
                    </column>
                    <column id="7568">
                        <property name="width">30%</property>
                    </column>
                    <row id="3103">
                        <cell id="3104">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">5</property>
                            <property name="verticalAlign">top</property>
                            <table id="3105">
                                <property name="fontFamily">serif</property>
                                <property name="pageBreakAfter">auto</property>
                                <property name="pageBreakBefore">auto</property>
                                <property name="canShrink">true</property>
                                <property name="height">0.885in</property>
                                <property name="width">100%</property>
                                <property name="dataSet">DataSetScript4</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">codeTvaRecup</property>
                                        <expression name="expression">dataSetRow["codeTvaRecup"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">taux</property>
                                        <expression name="expression">dataSetRow["taux"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mt</property>
                                        <expression name="expression">dataSetRow["mt"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mtRemis</property>
                                        <expression name="expression" type="javascript">var value = null;
if(dataSetRow["remise"] != 0){
	value = dataSetRow["mtRemis"];
}</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">mtTva</property>
                                        <expression name="expression">dataSetRow["mtTva"]</expression>
                                        <property name="dataType">float</property>
                                    </structure>
                                    <structure>
                                        <property name="name">TTC</property>
                                        <expression name="expression">dataSetRow["TTC"]</expression>
                                        <property name="dataType">integer</property>
                                    </structure>
                                    <structure>
                                        <property name="name">remise</property>
                                        <expression name="expression" type="javascript">var value = null;
if(dataSetRow["remise"] != 0){
	value = dataSetRow["remise"]+"%";
}</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                </list-property>
                                <property name="pageBreakInterval">400</property>
                                <column id="3140">
                                    <property name="width">20%</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="3141">
                                    <property name="width">40%</property>
                                    <property name="repeat">1</property>
                                    <property name="textAlign">left</property>
                                </column>
                                <column id="3144">
                                    <property name="width">40%</property>
                                    <property name="textAlign">right</property>
                                </column>
                                <header>
                                    <row id="3106">
                                        <property name="height">0.188in</property>
                                        <property name="backgroundColor">#FF0000</property>
                                        <property name="fontSize">8pt</property>
                                        <property name="fontWeight">bold</property>
                                        <property name="verticalAlign">middle</property>
                                        <cell id="3109">
                                            <property name="borderBottomColor">#000000</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#000000</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#000000</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#000000</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <label id="3110">
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Taux %</text-property>
                                            </label>
                                        </cell>
                                        <cell id="3111">
                                            <property name="borderBottomColor">#000000</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#000000</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#000000</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#000000</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <label id="7540">
                                                <text-property name="text">Base</text-property>
                                            </label>
                                        </cell>
                                        <cell id="3117">
                                            <property name="borderBottomColor">#000000</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#000000</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#000000</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#000000</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <label id="7541">
                                                <text-property name="text">Montant</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                </header>
                                <detail>
                                    <row id="3119">
                                        <cell id="3122">
                                            <property name="borderBottomColor">#000000</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#000000</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#000000</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#000000</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3123">
                                                <property name="marginTop">0pt</property>
                                                <structure name="numberFormat">
                                                    <property name="category">Fixed</property>
                                                    <property name="pattern">Fixed</property>
                                                </structure>
                                                <property name="textAlign">right</property>
                                                <property name="resultSetColumn">taux</property>
                                            </data>
                                        </cell>
                                        <cell id="3124">
                                            <property name="borderBottomColor">#000000</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#000000</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#000000</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#000000</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3125">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">right</property>
                                                <property name="resultSetColumn">mt</property>
                                            </data>
                                        </cell>
                                        <cell id="3130">
                                            <property name="borderBottomColor">#000000</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderLeftColor">#000000</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderRightColor">#000000</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="borderTopColor">#000000</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="paddingTop">0mm</property>
                                            <data id="3131">
                                                <structure name="numberFormat">
                                                    <property name="category">Currency</property>
                                                    <property name="pattern">###0.00€</property>
                                                </structure>
                                                <property name="textAlign">right</property>
                                                <property name="resultSetColumn">mtTva</property>
                                            </data>
                                        </cell>
                                    </row>
                                </detail>
                            </table>
                        </cell>
                        <cell id="3145"/>
                        <cell id="7563">
                            <property name="colSpan">1</property>
                            <property name="rowSpan">5</property>
                            <property name="verticalAlign">top</property>
                            <grid id="7576">
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <property name="borderLeftColor">#000000</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">thin</property>
                                <property name="borderRightColor">#000000</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">thin</property>
                                <property name="borderTopColor">#000000</property>
                                <property name="borderTopStyle">solid</property>
                                <property name="borderTopWidth">thin</property>
                                <property name="width">100%</property>
                                <column id="7577">
                                    <property name="width">35%</property>
                                    <property name="backgroundColor">#FF0000</property>
                                </column>
                                <column id="7608">
                                    <property name="width">65%</property>
                                    <property name="backgroundColor">#FFFFFF</property>
                                </column>
                                <row id="7578">
                                    <cell id="7579">
                                        <label id="7543">
                                            <property name="fontFamily">serif</property>
                                            <text-property name="text">Total HT</text-property>
                                        </label>
                                    </cell>
                                    <cell id="7605">
                                        <data id="3638">
                                            <property name="fontFamily">serif</property>
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTotal</property>
                                                    <expression name="expression" type="javascript">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantTotal</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="7580">
                                    <cell id="7581">
                                        <label id="7542">
                                            <property name="fontFamily">serif</property>
                                            <text-property name="text">TVA</text-property>
                                        </label>
                                    </cell>
                                    <cell id="7606">
                                        <data id="3644">
                                            <property name="fontFamily">serif</property>
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNetTva</property>
                                                    <expression name="expression" type="javascript">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantNetTva</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="7582">
                                    <cell id="7583">
                                        <label id="3196">
                                            <property name="fontFamily">serif</property>
                                            <property name="fontWeight">bold</property>
                                            <text-property name="text">Total TTC</text-property>
                                        </label>
                                    </cell>
                                    <cell id="7607">
                                        <data id="3648">
                                            <property name="fontFamily">serif</property>
                                            <structure name="numberFormat">
                                                <property name="category">Currency</property>
                                                <property name="pattern">###0.00€</property>
                                            </structure>
                                            <property name="textAlign">right</property>
                                            <property name="dataSet">DataSetScript51</property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">TTC</property>
                                                    <expression name="expression">dataSetRow["TTC"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisHT</property>
                                                    <expression name="expression">dataSetRow["remisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montant</property>
                                                    <expression name="expression">dataSetRow["montant"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNT</property>
                                                    <expression name="expression">dataSetRow["montantNT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTva</property>
                                                    <expression name="expression">dataSetRow["montantNTTva"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantTtc</property>
                                                    <expression name="expression">dataSetRow["montantTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">remisTtc</property>
                                                    <expression name="expression">dataSetRow["remisTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNTTtc</property>
                                                    <expression name="expression">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">regle</property>
                                                    <expression name="expression">dataSetRow["regle"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">netPay</property>
                                                    <expression name="expression">dataSetRow["netPay"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisHT</property>
                                                    <expression name="expression">dataSetRow["tauxRemisHT"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">tauxRemisTTC</property>
                                                    <expression name="expression">dataSetRow["tauxRemisTTC"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">commtaire</property>
                                                    <expression name="expression">dataSetRow["commtaire"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">libellePaiement</property>
                                                    <expression name="expression">dataSetRow["libellePaiement"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">acompte</property>
                                                    <expression name="expression">dataSetRow["acompte"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">resteRegler</property>
                                                    <expression name="expression">dataSetRow["resteRegler"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">montantNetTTC</property>
                                                    <expression name="expression" type="javascript">dataSetRow["montantNTTtc"]</expression>
                                                    <property name="dataType">float</property>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">montantNetTTC</property>
                                        </data>
                                    </cell>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="3160">
                        <cell id="3161"/>
                    </row>
                    <row id="3181">
                        <cell id="3184"/>
                    </row>
                    <row id="3204">
                        <cell id="3206"/>
                    </row>
                    <row id="3582">
                        <cell id="3584"/>
                    </row>
                </grid>
                <grid id="7544">
                    <property name="marginTop">3mm</property>
                    <property name="marginLeft">10mm</property>
                    <property name="marginRight">10mm</property>
                    <property name="width">100%</property>
                    <column id="7547"/>
                    <row id="7548">
                        <cell id="7551"/>
                    </row>
                    <row id="7552">
                        <cell id="7555"/>
                    </row>
                </grid>
            </footer>
        </list>
    </body>
    <list-property name="images">
        <structure>
            <property name="name">logo 2011_old.JPG</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
                CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
                CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
                MjL/wAARCAC/BEEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
                AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
                JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
                mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
                HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
                BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
                VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
                xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKA
                CiiigAooooAKKKKACiiigAooooAKKQn0ozQAtFJmloAKRm2jNBOK84+MvjCXwx4Jljs7oQahfv5EBRjv
                C/8ALRl9CBxnqCwPXGADn9d/aEsNM1q5sdP0f+0YbdzH9p+1iNZGHBKgK2Vz0Oee2c1u+AvjHpnjTUP7
                Mmsn0/UXyYYvM81JQFDHDAD5h8xxjoM57D5PzvfJ78elfQnwf+Eps/svibX4v9I4msrVh/q+6yP/ALXc
                DtwTzwoB7qrE9qdSY5paACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooprEgcUAKTim7z6c/SsrXPEOl+HNNN9q95Ha228KHbJLEngBRkk9
                eADwCeleH+Ifil4k126lTSJBpOmbnRSEBnmToGJI+Q9xtwVJ6nGaidSMNZM6cLg62KlyUo3Z7pqviDS9
                DSM6pqNnZGTJj+0zrHvAxkjJ5xkdPUetcHq/xx8PW1sp0WC61i4bPyRxtEidPvMw7gnG0N07V4mtjEbm
                W5nLXVxKxaSW4O9mJOScnuT1PuasKqooVQNo4A7VxVMfFaRR9NheE601evLlO6vvjR4pu23ado+mWMO3
                BW6d5mLdyCCmB04Iqovxb8c7QP8AiS5/64SEfnvrkvat7wbof/CQeJ7SzYEwDMs/bCL7ehOB+NZQxdWp
                JJI9Kvw9gMLQlVqXdkejWWq/FBNPttTex8PalBLGsv2S3klhnYMBjDv8gxnJz2GKrwfGaa0tkfxB4L1/
                TXeXygRbFoyT0+ZtvPtjt36V6fHGI0VFGAAAABgCnhRknmvUV7an5+3rpscppfxO8G62p+x6/ZBt4QJc
                P5DEn0Em0n8Aa+cfi/4rk8UeObsIzfYtPZrS2XOQdpIZwckfM2eR1AWvcviynhnRvCd9qt/o1lcajcqb
                a2ke2UyGVlO35wMjABbqPu46mvAvhx4Em8beJFtWLJp9vhryZMAqpztUEg/MxBAyKYju/gh8OItUMXir
                VAWtopGFpbtGCsjDjzCT1AOQAP4l5xjn6LVQvArz/SPhreaCqppfjXX4IUTZHDK0UyIOOArqVzxjIA7+
                9PvdM+IelXbz6Vr+naxAUIFrqlqsRQ8cq0IG459cDn8aAO/ory2XxV8UtOuS154ItLu2ViP9Duhl+DjH
                zMRzj+H1q0vxdjgtVm1Pwb4qslH+skbT8xJ77yRkD6UAekUVz2geN/Dnig7dH1e2uZME+TkpJgd9jANj
                3x3rfVs9cUAOooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiig0AJmsvXtdsvD2iXWq38hW3t0LkDG5j2VckZYngD3rRdgqljjAHJJwK+ffin4ik8R+Km0dD
                H/ZmkSclTu82cj5s+m3JXHYhs9cCKk1TjzM6cJhKmLrRo0+pz+v+Ib7xnqy6tqcflxou20td25IUPOSO
                hZu7YGcD0GKWaPoAB1AAxRXg1qrqSuz9Xy7AU8HRVOC269wooorI9CwV3vwpvo7PxDdCRAVa1J3LGWcY
                YdMDOOcn6Z7VwdVNRSSSwlWHd5nBXb169q3w8uWojys5oOtgpxXY9x0v41+GdV8URaLAl0gmkMMd1Iqi
                Jnzx/FnDcYOOpH1FxPiz4c2X4mm8q6tL42QsywMsrBgoZV6lc559ucHivA/iFZziW211tas7/wDtaOGc
                7SpnjdIwrZCqAqhgy4Hp3INLrzS6lr+gX2qR2tibm1RjNZo8O4AZR/nOS33fnHBOcE7Tj313Pybladjo
                vjt4nOteJrPw/YM0sVlnzBGwYSTvgbdo/iUDHODlmFe0/DvwjD4M8H2tgq4upFE90x/imYDPtxwoH+yD
                1Jz80fDuN9Z+JOnXV/dFVgnN/dXU3zAeX+8LOcjglQCxPBIPPf0Xxf8AHa9lWaHwtbi3tUl8sanMAzSY
                IyUQjAyP72TtOSFOKCT6AUfSl246V5v4E+LWl+K549PuY/sWpycQQmTzBOoXJOcDaeG4P4E9vR1bdQAu
                OaTaKdRQByXiT4deHPErRz3dn5F3HJ5iXdqfLmDZyTuHXnnnNYV7rviL4eytLrm/XvD3mFVv4o1W7tVP
                3fNUYVx0G4Y6EnkqtekkZGKjniSW3eGQK6OpRg4yCCOcigCDS9UstZ0+G/0+5iubSZd0csRyGH+PYjsQ
                RVyvKfD0TfDn4hJ4VFzK/h/V4mm01ZgT9mmDZaIMT0IP1yUz3J9VBzQAtFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFIxwM/nQAtFUNS1rTdHt/tGp39rZQ9nuJVQH6ZPJrkpvjN4AglMb+I
                YyR1KW0zj8whFAHeUV5//wALs+H3H/FQYz/05XH/AMbo/wCF2fD3v4g/8k7j/wCIoA9Aorz/AP4Xb8PP
                +hg/8k7j/wCN0f8AC7Ph7n/kP/8Akncf/G6APQKRs44rF0fxXpeuqH0/7dJGwysj6fcRofozoAa2HOR+
                lAHMePfE0XhTwdfaiZFW4CeXaqSAWmbhMA9cH5seik9q+b7KJ4rVRIS0rZeRm6ljySfU16L8bdSkvNZ0
                PQlkPkIjXtxEP4jnYhPpjDjHua4HnAzXm5hUtaCPt+EsFrKvL0QUUUV5Z9zYKKKKBsKKXFNZ0jXfIyqv
                qxxTSbehlNxSblsUptHs5xhkZe42scfl0qaa0E2hppWf9HikeWIFQSjsAGOcZ52jv2FMbU7JTgzr+AJ/
                lSf2rZd5v/HD/hXTGdddzw6uHymV01Ezn0zWoPD32OGFfs8t8Ffy3QvMxX5FIHOBhvbJGe1Zo0nUEdPO
                tmKxzBGinVlCyNn5SDg9EOcdMYzXRNqtiV+afI64KnH8qZ/a2mvKrecpcZwQh6n8K7liqlvgPm6mRYNV
                PdrqzZozPdeI2tzrWo/ZrmFy0bxWkQii54zsAYjgDvy2e5z6n4O+K8jXc2neKJ4FdXUW97BC6Ryqeu4H
                7uPXgV5YCSoPOMDrSc4IGQD2BrnWOn1R6lThPDNe5Jn1Xa3kN5Ak9vKksTjcjowIYHuCPrU4Jzivn/4e
                +JpdD12K1muCmn3LbZA5+RHxw3PTpgn3yele+xvuP/1q9CjWVWPMfH5nl08BW9nLVdCSgjNFFbHnnD/E
                7wy2u+GPtFpJPHqWlt9tsmhQMxkQE7ce+O2Oce4PReGtYh1/w7YarA2UuYVc/wCy3RlPuCCD7itSQZU8
                ZrzP4Xm48Pa74i8FXDt9nsJRdacJT87QSE7sc4KhsZIH3mbPJwAD06ikpaACiiigAooooAKKKKACiiig
                AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAopCcCuU1r4l+D/D101rqWvWsdwpIaKI
                NMyH0YIDg+xoA6yiuFtPjD4Gv7yGztNaM1zO4jijWznyzE4A+5XcK2WI4/CgB1FFFABRRRQAUUUUAFFF
                BoAKKTdijP0xQAtFIDntS0AFFFFABRRSZxQAtFRPcQxnEkqIf9pgKzL3xX4f05S15rmm24H/AD1ukX8O
                T1oA2KKgs7uK+tY7m3YtDKodGKlcg98EZqegAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
                iiigAooooAKKKKACiiigAooooAKKKKACiiigAoopDntQAtFVNQ1Ky0mxlvdQuobW1iGXmmcKq/ie9c3p
                PxQ8G63qaadp+uwyXbttSN45I97dgCygE+wOaAOvopqtu7cYp1ABRSE4Gf6UZ5oAWiiigAooooAKKKKA
                CiiigAooooAKKKKACiiigAooooAKKKKAEJwK818V/EC/ufEieDfBUcNzrb5+03cozDZKOpPqw7+hwMEn
                A6b4geIm8K+BtV1eNgJ4otsHGf3rHahx3wSD9Aa8/wD2e9EVPDWoeIbgF7zUbkp5rHLGNOvJ9WLZ9cD0
                oA6vSfhboME/27XBJ4h1VwPMu9TPmgn0VDlVXPQc46ZrsbXT7OxULaWsFuoGAsUYUAenAqxjnPNLQBn6
                poml6zbtBqen2t5GwwVniD/z6fWvlL4u+A4vA3iSJLFnOl3qtLbK5JMZBAZM98ZXnrgjOetfXhGa+f8A
                9pgY/wCEXH/X3/7RoA8DXGea+vvh58M9F8J6PZzS2EMutGJXnuZVDskhHITP3QOnHpXyAOtffo7UAG0c
                d8evNBpaQ9KAPnP4lztc/Ey+3Tbxa2kMCjH3QRvI/Nifx9K5mtDxRdSX3xA8SXMiopF6YAEGBiNQg/HC
                jPvms+vDxjvVZ+pcOU+TAQ8wooorlPfCigVQ1i9+xWLMv+sc7Eq4Qc5KKObE4iGHoyqz2Ql3qLCX7NZo
                JbjuSeE+tImlrI3m3rtNIR0J+UU7SLMWtmsh5llw7k+9X/pW1Sah7kPvPPw+GlibVsVrfaPRf8Ejjghi
                /wBXEi/7q4qQelFQXlytnaSztztHAz1J7VjFym7XO+pGhRpuckkl5GL4j1IKv2KI/MwzIfQdh/WofDen
                72a8kX5VOEz6+tYn7y9u+STJK/J9Sa722gW1tY4V/gUD8e9ejiH7Ciqa3Z8XlVP+08wli6itGOy6eRL/
                AJzWBrmtNbk21qw8z+NvT2HvWzeTNBavInLgYUe5rlpvDt+ytKxR3PzFQcmsMJCDfNM9jPsTilT9hhYt
                t7tdEQWWu3ltL80jSoT8yuc5/GvsDwF4rtfF/hi21K2kVpceXcRjgxyDqMZ49R7EV8XOjRMVZSGHb0rr
                vhz45ufA/iaK6BZtPnIjvYRzvjz1HuuSR+I716yjFO6PzurXqzioVG3bv0PssEmlqG1uYby2iubeRZYZ
                o1kjkU5DqRkEfUVNVmAjYxzXnV5G9r8dtLumZY4LzRJLaPLY8x0k3soHc4ZT+Br0Y15t44lWz+Knw9uC
                m/dLeQhc4wWRFz+Gc/hQB6QB/KlpoPNOoAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooo
                oAKKKKACiiigAooooAKDRRQB478dPH914e0230DSpmhv76MyTSqcNFDyAB7sQRnttPrXl3w7+Etx8QdK
                uNU/taGxt4pzb/6gyOzBVJ4yOMMOc1F8crqWb4s6pG7ZW3jgSP2HlK382Nesfs5DPw91D/sKyD/yFFQB
                ueA/hBongm7F/wCdJqOphcJcTKFEQPB2Lzgn1yTXoYUD+VKBiigAooooAKKKKACiig8UAITgcVzfi7xz
                ofgqwFzq91tkfPk28fzSy4/ur6e5wKq/ETxzbeBfDb30irLeykx2kB43yYzk/wCyOp/LvXgfhv4deK/i
                rfyeIdVvWt7Sdzm9uF3NJgniNOPlHTqFGMDpigCfxR8fPE2rSPFoqx6RaHgFcSTMPUuRgfgOPWvOL/xD
                reqsW1DV7+6J6+dcO/8AM19MaZ8AvBVmgF3HfX74GTNcFAT7BNv8zWhN8EPh88ZVdDeIn+JLyYn9XIoA
                +RBz6UuP84r6K8Qfs56fLEz+HtXuLaYAkQ3oEkZPpuUAr+TV5u9zrfw21VNO8ReFdDvYs/It7p0TiRc8
                lJQuT+JOM8igDzz/AD0o5/yK+pfA+s/DDxuqwW/hnRLPU8Zayn0+HcfUoduHHX34yQK7dfA3hAnnwnoY
                /wC4dD/8TQB8R8/5FKoYsAByfQV9u/8ACCeD/wDoVND/APBdD/8AE05PA/hKNw6eFtEVhyCunxAj/wAd
                oA+MtG8Pax4huhb6Rp1zeSk4Pkxkhfdm6KPc4Fe+fDn4FQ6Vcw6t4paO5u4yHjsUw0UZ7Fz/ABEeg49z
                XtcUEUEQihjSOMDAVFAA/CngY9fzoAAAKWiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
                CiiigAooooAKKKKACiiigAooooAKKKKACiiigApD0paMZoA8I/aUuLhdP8PW6MwtnlneQDoXUIEz+DPX
                z2pKNlTtI7jqPxr7S8e+CLLx34f/ALMupnt5EkEsFwihjG4BHI7jBPGRXIeEfgN4f8P3sV9qV1Lq9zEd
                0ayxiOFTnIOzJyfqSPagD0Pw3NeT+GdKk1EML57OFrgMMESFFLA/jmtQ0AAdKUjNAHm/xk8QeJ/DHhq1
                1Tw7MIUjuNt3J5KyFVI+X7wIAJ4JxnJHI7xfC74r2/jaA6fqCxW2uQqWaNThJ1HV09CO6/iO4Ho11bQX
                drLbXMKTQSqUkjdcqynggjuK+ffGHwi1bwdrEXifwQ0ssVrIJxajLTQkH+Ef8tE7Y64OOaAPogHnFLWN
                4W8QW3ijw5ZavajatxHl4ycmJxwyH3DZFbNABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAe
                SftEzvF8OrVE6S6lGj+48uRv5qK2fgiV/wCFSaLtxnM+7Hr58n9MUvxp0OTXPhnqAhQvNZsl4oAzwh+b
                8kLH8K4r9nfxVC2mX3hmeQLcRyG6tgx+8hADAfQgN/wIntQB7tRSAkmgnFAC18//ALTP/Mr/APb3/wC0
                a9wOqJ/b8WlLtMhtXuJOeUAZVXP1y/8A3ya8P/aZ/wCZX/7e/wD2jQB4AOtffw7fSvgEda+/s4AoACcD
                iuC8WfF7wr4TuZLO4uXvL6MkPbWahyh9GYkAH2zkVyfxu+Js+hoPDWiTtFqEqh7u4Q4aFCOFX/aPXPYY
                9eMf4V/B/SdX8Nx694ngln+15a3thK0arH/fYqQST1HOMY9eADzLUPGMd1reqXq2jBLy9luVUuMqHbIB
                +gxVyw1i1vzsQlJf7jd/pWP4w0eLR/E+sW9mhWzt7+WGNCSdihjtXJJJ49eeOaxrSCe4uESAHeTxjtXJ
                Vw1OactmfQ5dneNw0oUo+9Htb8j0E0VHAsiQIsz75AMM3rUleK1Z2P0uE3KKbVhe1cz4lm/0u3h/hxu/
                WulrlfFSsL2CTHy+XgfgT/jXVg1+9PD4klKOAbXdfcdSoAQBemOKWq2nTi50+CQHqgB+o4/z9as1zzTU
                mmevhZxnRjOOzSCuZ8U3R3xWq9ANzfXnH6V0/Y1wWszGfVJznIDlV+g4H9K68DDmqX7HgcVYl0sGqaes
                n+BZ8Ow+dqyEjhAWNdnXMeFkzNO/ooH6/wD1q6c0sdK9WxfC1FQwXN/M2IQGIJGcHI9jTs5+lJRXFc+k
                5Vuc/wCJdPV4heIPnXAkx/OuV6GvR5ohPBJE/KupU153Knlysh6qcV7OBquUOV9D854pwUaOIVaCspfm
                fUPwA8Rvq/gqXTJ5N8+lSiNc9RE/KD8CGH0A9K9YPAr5s/ZvvXTxbq1jk7JbATH6pIoH/ow19HXdxDaW
                ktzcyLFBChkkkY8KqjJJ+gGa7T5YjvtQtdNs5by+uIba1iXdJNM4VV7ck8d6+f8A4jfFjw/qXiPw7qGi
                farqbRbszF2Ty4Zo2xvUE/Nn5QM4xyetcr4u8W6v8V/G1rpNg8kWnyXIisrYnAHYyuB3xkn+6Mgdyeq8
                W/CXQNH1rwXodo9wrajPLFd3ZYl5NoQ8A/Kv3jjA785xQBq2H7SdlJcKt94auIIe7wXaysB9Cq/zr17w
                /wCJtK8UaSmp6RdJcWzcEr95W7qy9Qw9D9RwRXxj4o0Cfwv4mv8ARbmTfJaSlN4HDKRlWx2yCD+NelfA
                jRPEja8+tWdxJaaJFlLvKllu8DhFXuRnr/DnjOcEA+hde8SaZ4Z0iXU9Wukt7aPgE/edsZCqOrE4PA9D
                2Ga8/wDCPxx03xX4sTRBpU1ks5YW08sobeQMgMoHykgHuecVx/xj8KeK9T0u58WavfW0NjZsqwaYhJMM
                bsEBJ6FySN3X6kAV5Z8P5Wh+Inhxk6nUrdeR6yKD+hoA+1yxH0ryrxb8eNB8P3z2Gm2kmr3MTbZWjkEc
                KkdQHwdxHsMe9O+J/iLVdTu4vAfhQF9YvU33kqNgWsH+038O4fpxg7hXz94z8C6x4F1KCz1X7O/npvil
                t3LI47jkA5HuPzoA+oPh58S9N+INrP5Fu9nfWwBmtpHDYB6MrD7w/AYPbpntjXzl+zho90/iHVtb2kWU
                dr9kDEcNIzo5A+gTn/eFfRFzcRWttJcTyJFDEpeSSRtqqo5JJ7UAPLYH9TXnniP41eEtAuGtIrmTVLxS
                VMNim8A+hckL+RJ9q8w8TePNf+KviiPwr4WaS20qVypblTKg+9JKeoQDnb9OpwB7P4L+H2geC7JI9PtE
                kvduJb2VQZZCevP8I/2Rx9TzQB53qX7Qd7pZja58C3kEUufJe5umi8zGM4zFzjI6HvXQ/Dj4wf8ACwPE
                NxpP9hfYPJtGufN+1+bnDou3Gxf7+c57Vx/7TPH/AAi//b3/AO0a5/8AZyP/ABcLUP8AsFSf+jYqAPp9
                iQOBmsbxF4r0XwpY/bNa1CG1jOQgOS8hHUKo5bqOnTIqDxp4ss/Bnhm51e8G/Z8kMIODNIc7V/qT2AJ7
                V83eE9I1T4yeP5bjW72ZoIk825kTgRx5+WOMchcknH/Ajyc0Aehaj+0lpUMhGm6Bd3SD+KedYc/gA9Wt
                C/aK0PULpINW0u40wOcecsgmRfduFOPwNS+LfgT4auPDdw3h+1lstThjLxETvIszAfdYMT17EYwT+FfM
                igHqcCgD72t7qG7t47i3ljmhlUPHJGwZXU8gg9CCO9Yfi7xpo/gvSvt+rT7QxKwwJzJMw7KP5noOPUVw
                HwV0jxRoPhC4u9Ted7GZd9hpjD94M9xnhAxPQ8c7jjqfPvjJ4S8UWgi8VeIdTtLlrmcWy21uWxbAhmVE
                yBlQFbng5Occk0AesfD34wWPjzV7nS/7Nk0+5RDLDumEiyICAcnAw3I457816NLMkELyyuqRoCzsxwFA
                5JJNfI/wQmdPizpCrjEiTq308lz/ADAr1X4jajrnj7XZfAvhFlENqN+q3jSFIlPaNmHYEHIAJJGMDa1A
                DvEP7Q2i6bfta6Ppsuqqh2tOZvIjJ/2SVJI9yB+XNd/4I8b6b460U6hYK8Txt5c9vLjfE2Ae3UHqD39i
                CK+RPFPhfU/B2uyaPqix/aEUOrxHcjoejKSAcdew6Gvcv2b9IurXQ9Z1WVWW2vZY44Mgjd5e/cw9RlwM
                +qkdqAPb6KKKACkJwM0p4rjviJ48tfAvhxrx1SW9mJjs4CfvvjOT/sjgn8B3oA29d8TaP4Zsvtms6hBZ
                w87fMPzOfRVGWY/QGuIt/i5NrrsvhTwfq+rxqSpuJNtvDn0DnI/PBFeYfDrwtqHxX8V3XiPxTNJdafav
                hweBK/URL/dQA5IHqPU19LW9vBaW8dtbwxwwxKFSKNQqqB2AHAFAHxv8UrvUL74i6rc6rpn9mXz+T5tn
                56zeXiFAPnXg5AB9s47V7f8As5f8k+1D/sLSf+ioq8f+Nn/JXdcH/XD/ANER17B+zl/yT7UP+wtJ/wCi
                oqAPXicVHNPHBC80siRxou53c4Cj1J7CpGzjivlv4sfEa98Za8fD2iSy/wBkxyiFY4m/4/JM/eOOq54U
                ewPcAAHp/iH4++FdHme30+O41WVTgvAAsWf948n6gEe9c7bftLW73AW48LyRQ55aO9Dt/wB8lB/Ot/w/
                8B/CtroEUWs20t7qLoDNMLh0CMRyECkDA7ZznHvXg3xC8Ht4I8XT6QsrS2xUT20j9WjbOM+4IYE+3agD
                6w8J+NtF8aad9s0e43lOJoJPllhPYMvv2PQ+tdCCc18j/B/QvEup+MIbzQrmSyhtTm6uyMpsOMoR0Ytg
                fL9D2FfW6jB6dqAHUhOBmlpD0oA8U1fw7J8TvjLcxXwY+HfDypC4BwJpCAxT6k8HH8KjoSDXs8EEVvEk
                MMSRwxqEREUBVUDAAA6AegqnpOkWukRXKW683N1LdSt3Z5GLHP0GAPZRWjigBAADnvS0UUAJtFY/ifwx
                pfizRJtL1W3EkMgyrjh4mwcOh7EZ/HocgkVs0h6c0AfEXirw5qHgrxVPpdzIyz27h4bhCRvXqsint0/A
                gjtXuXwi+LsmtTReHfEMoOoH5bW7Ygefgfcf/b44P8X16yftDeGVvfDFp4hiTM2nyiOYgYzE5xz64fbj
                /eNfNsU0kE8c0btHJGwZGU4KkHII9DmgD75Byen40tcv8PvE3/CW+CdO1eTH2l49lzgY/eqdrce5GfoR
                XTFse31oAViFBJI49aTcfb2ri9d8Y28vjDS/BumzCTULiYSXpQ5FvAg3srH+8wXbj0Y9MiutvLqCxsp7
                u6lWK3gjMssjHCoqgkn8hQAl9qFrpljLe31zFbW0I3SSysFVR7k15Nrv7RPh7T5nh0nTrrUypx5hPkxt
                9CQW/NRXm3iDxJq/xi8f2mi2MjwaW8+22gI4RRndK4HVsZOO3T6+86L8LfBui6elqmg2V4wUb5r2FZ5H
                PqSwOM+gwKAOA0/9pPT5ZgNR8OXVtDnl4LhZiPwKp/OvWvDvifSPFWnLf6Pex3MB4YA4eNv7rKeVP16/
                SvFfjB8JdN03RpPEfhy1+ziBgbu1QkoUJxuQH7pBPIHGOeMV5h8P/Gd14J8VW9/HI5spGEd5AD8skZ68
                f3h1HuPc0AfZ24+n515n44+NejeENRbTLW1bVb6M4nSKUJHEe6l8H5h6AcdDg11XiWPWta0hLPw5eQ2f
                2tcvqTZYwxEdY1HVyDwcgD1zivkfxt4bbwh4vv8AQzeG8NqU/f7NhffGr9MnGN2OvagD7B8K+J7Txb4b
                s9asldIrhTmN+qOCQyn8QfrUPi3xro/grTBfaxMV3krDDGN0kzAZIUe3HJwBkeoz5r8FfEFpofwe1PU9
                RkMdpp99LuI5JGyMgKPUlsAeprjdZ8DeP/iaLnxhcw28ELx77OznlKuYRkqEGCBwc5YrknPegDr7H9pD
                TLjVkgu9BntbFnCm5FwJGQH+IoFHTvgn8ele2RyCQAgggjII5BHavgVhj3FfcHguZ7jwN4fuZW3SS6bb
                u7HuTEpJ/OgDcY7VzXPeKPG+geDrZJtZv1haQExQqC0kmPRR29zx71m/Erx3D4E8NG62LLqFwTHZwt0Z
                8ZLN/sr1/Id68H+Hfgy9+K3im/1fX7u4ktImD3Uo4eZz92NT0UADt0AAGMjAB3N/+0pp0cpGneHbm4jz
                964uVhP5BW/nWn4d/aF8O6pcJb6vZXGku5wJCwliH1YAEf8AfOPUir2r/AXwXfWTR2NvcabcY+WaKd5O
                fdXJBH0xXzr4x8H6n4J159L1FVJI3wyp9yZP7wz9CCDQB9r29xFdQRzwSpLDIodJI2yrA9CCOoxUhOBm
                vIf2ejq48EXQvFf+zvtJ+w789P49v+zu/UtVP41fFG40Qf8ACNaFcPFqDqGu7mJsNAp5CKf7xGCT2GPX
                gA63xb8X/C3hG4ks5p5L6/jO17a0AYofRmJAHuM5HpXBH9peES4HhZjF/eN+Af8Avnyz/Or3wm+EWkf8
                I9aa54isY728u0E0NvON0cUZ5UlejMRzznHArsfE3wj8I+INMkgi0i10252/urixhWIo3YkKAGHsfzHW
                gBPB3xc8NeMrhbO2kks9Qb7trdgKX4/hYEhv0PtXd7iOuK+FNS0+98O69cWNxuhvbKcoWRsYZTwyn9QR
                7V9YfCvxi/jfwWstzKRqVr/o10y4DFgPlkx2JHPpnPpQBX8cfGHQvBd01hsfUNTUfNbwHasfpvc8An0A
                J9cZFM+HXxes/H2o3GnNpr6feRRGZUMwlV0BAPzYXB5HGK4z48eENB0PwbYX+m6bDb3baisUk4yZJQ0c
                jHexyXOVByST19a8++CEzx/FvR0VsLIs6OPUeS5/mBQB9d5rL8QeItN8MaNLqurXAgtY8AnBLMT0VQOS
                f89Oa1K8E/aXnlS28NW6yMIZGuXZOxZRGAfwDN+dAHa+Bfi3aePPFV1pFlpU1vBDbPcLcTTKWba6LjYA
                QPv5zuPSvRicV8w/s4n/AIuFf/8AYKk/9GxV9PNjGT25oA5Xxj8Q9B8DwRnVZ2NxKN0VpAu+VxnGQMgA
                e5IHXrivMJ/2jpm3SWfhGR7dT/rZLs8j3wmB+Zrj77VNL1X9oe4l8UOh0uHUZLZ/O/1YWMMkYYdNu5Vz
                njk5719Rw+V5aGHb5RX5NhG0jtj2x/SgDwZP2l5APn8KIx7bdQx/7Tr0/wCHnjW88daLNq82jrp1r5vl
                QD7QZTKR94/dXABwB7g+lVvGvwu8PeMbSVmtI7PUcfu72BMNn/bH8Q+vPoRW94U0GPwx4V03R0Kt9kgC
                uyjh36uw+rEn8aAKHjH4h6D4HgjOqzsbiUborSBd8rjOMgZAA9yQOvXFeYT/ALR0zbpLPwjI9up/1sl2
                eR74TA/M1x99qml6r+0PcS+KHQ6XDqMls/nf6sLGGSMMOm3cq5zxyc96+o4fK8tDDt8or8mwjaR2x7Y/
                pQB4Mn7S8gHz+FEY9tuoY/8AadenfDzxreeOtFm1ebRxp1r5nlQD7QZWlIHzH7q4GcAe4PpVfxr8LvD3
                jG0lZrSOz1HH7u9gTDZ/2x/EPrz6EVueGPD/APwjXhCw0W2aPzbW3CeYVJVpTy7Y64LknHvQBkeOfido
                XgWNI712ub+Qbo7O3wXx/eYnhV+vXnGcHGB4D+Nmn+MteXR59Mk027mBMBMwlSTAyQThSDjOBgjjrVP4
                seDND0z4X63qS2i3Gq74ZW1G4Ae4dzLGpJfHAwSNowo7AV4H4Blki+IvhtkYqTqdumR6GRQR+RxQB9tg
                5ANDHAyKBWfrms2Xh/RLvVtQk2WlrGXdh19AB7kkAe5oATWNd0zQNPe+1a9htLZOC8hxk88AdSTg8Dng
                15Pq/wC0XoNtIyaXo95f7eA8rrAje4+8fzFeYfatb+NHxFt7W5neK2d2ZIgdyWcA5YgdC2MDP8Rx+Hsm
                ofAXwdPob2tlBPaX3lny7wzu7bscFlJ2kZ64A9sUAYOi/tEaKbt1v/Dc2nxzSbpZraVZsk4G9htUntk8
                nAHXpXs2m6tY6xp0OoaddRXVpMu5JYmyD6/Q54x1HQ18MXtpPpuo3NlcLsntpWikX+6ynB/UV7r8B9H8
                UadaXmss840WVD5VjgE3cvQMmSAoB43dD9BkAHrvi7xpo/grSjfatPt3ErDAnMkzDqFH4jJ6D8RXL/D3
                4wWPjzV7nS/7Nk0+5RDLDumEiyICAcnAw3I457815N8YvCPie0SHxX4h1O0uHupxbi2ty+22BDMqpkD5
                cK2ehzk85JrG+CEzp8WdIVcYkSdW+nkuf5gUAfXEsyQQvLK6pGgLOzHAUDkkk1494h/aG0XTb9rXR9Nl
                1VUO1pzN5EZP+ySpJHuQPy5pvxG1HXPH2uy+BfCLKIbUb9VvGkKRKe0bMOwIOQASSMYG1q8F8U+F9T8H
                a7Jo+qLH9oRQ6vEdyOh6MpIBx17DoaAPrvwR4303x1op1CwV4njby57eXG+JsA9uoPUHv7EEV0rEgcDN
                eI/s4aRdWmhazq0qMtteyxxwZBG7y9+5h6jLgZ9VI7V6d408WWfgzwzc6veDfs+SGEHBmkOdq/1J7AE9
                qAJ/EXivRfClj9s1rUIbWM5CA5LyEdQqjluo6dMivKdR/aS0qGQjTdAu7pB/FPOsOfwAevPfCekap8ZP
                H8txrd7M0ESebcyJwI48/LHGOQuSTj/gR5Oa9R8W/Anw1ceG7hvD9rLZanDGXiIneRZmA+6wYnr2Ixgn
                8KAItC/aK0PULpINW0u40wOcecsgmRfduFOPwNev293Dd28dxbzRywyKHjkjbcrqRkEEdQR6V8FKAepw
                K+ofgVoPiXSvDUkusXMiabcYeysZR80Y6l+fug9dvfrxnkA6Pxn8VPDvgmb7JfSS3GoFd32S2AZlB6Fi
                SAv484OcGvO5/wBo66CedD4QIg/vyXh5/KPArj/hjq2kaz8XptV8TyQlrppZrY3GNn2hnG0HPAwpbGeh
                AxzivqgKrAgqCMYIP8qAPA4/2l324fwmGb1XUMfp5deveCfEV54q8NQazeaYNOFyS0MPnGUmPoGJ2r1O
                SPbB71y/jv4O6F4rga4sYo9L1XO4TQxgJIf9tRwfrwa9BsbKDTrK3s7ZAkFvEsMajsqgAD8gKALNFFFA
                DXUMhVgGU8EEZBFfO/jP4P674b8QL4i8DB5EjlM8dvGR5tu2c4UH769scnHGDX0URmk2igDyPQfjbaW8
                Mdr410290PUEG13ktX8tz6gY3g+2D9a2Ln4tWGoRiHwlpWpeILuThPJt3ihB/wBuRwMD8K9ECgHIo2ig
                DlPBWgalpy3+ra9Ok+uao6yXBiz5cKLkRxJnsoJ98k5z1Plf7TP/ADK//b3/AO0a9/wBXgH7TP8AzK//
                AG9/+0aAPAB1r75uJUgtnmkOI41Lsc9AOa+Bh1r7h8au8fgLxC8ZIddLuSpHr5TYoA+MNd1e413Xb7Vr
                pi013M0xz2yeAPYDAx6CvuDTLCLTNJs7CEbY7WCOFQD0CqAP5V8HjkjgkCvsLxN49NtBYaZ4dgXUfEOq
                RCS1gU/LEjDPmyHPCgHPvQB4R8XvOuvijrVjCu/zJLd/xFug/qaoaZpkWnQYHzSt99/6CtfxF4bufDHj
                KSC+vGvbq7s0upbpufNZmIYj0G4ED2AqvzjmvKxtaSfItj7/AIZwFJ01iZ6y2XlYCc0lFFecfY2QVl69
                Ym9scoP3kR3D3HcVqUDqKunNwkpI5sZhYYqjKjPZnLeHtRFvKbSY4Vz8pPY11NYWqaB57me0ISQnJQ8Z
                PsadYajc2x+y6jC67eFkI/nXZVjGt+8p79UfO5bXr5c/qmKT5V8MrafM2685uDunc/7Rr0YEMuVIII4I
                PWvObgYncf7RrXLvtHDxe7qk1tqdJ4U5juT7r/WuiNc14Ucf6QnqAf5/410tc2M/jM9vhp3y+HzCiiiu
                Q98BXn+pDGqXQHQSt/M16BXn1+3m387j+Jyf1r0su3kfFcYNezprzf5HsH7N1kz+LdXvgDshsRCT2y8i
                kf8Aos16D8fNdk0r4eGygcrJqVwtu2Dg+WAWb89oB9iar/s/eHzpfgeXVJE2y6pOXXj/AJZplV/XefoR
                XOftLu4i8Mx5+Qm5JHbIEWP5mvUPgzlPgBZR3nxKM7gE2dlLMmexJWP+UhFeweOjbv8AEjwK1w+yG1a+
                uZZCcCNUiVtzE8BcgZP1rx/9n68itfiHcLK6p52nSopY45DI/wDJTXUy6evxd+KmpSWF4Y9A0+2itLue
                JgDcpvLbV44BYNz3Ce/ABlaZ4Qm+MXxH1XxJIklv4dM4TzcbWmVFCKq57lVBPpnHWvovT9Ps9M0+Cxsb
                dLe1gQLFFGMBRRp2n2ml2EFlY26W9tCgSOJBgKKtUAef/GtQPhFrh5yPI7/9N46+VfDVxeWvinSZ9OgW
                4vYr2F7eFukkgdSq/iQB+NfVfxs/5JDrv/bD/wBHx18weBP+Sh+Gv+wra/8Ao1aAPrDwL4QPhnTZp76b
                7ZrmoN5+o3Z6u/XaD/dXOAPr0zgcf8U/CV38QPGfh/RLYvFBZwS3F5dbcrEkjKq/Vj5TYH49Aa9c2g5z
                QsaqSVGCTkn1PTP5UAZugaHp/hvR7fStMgENrAuFHcnuSe5J5Jryb9oXxZLYaRZeG7V9rX2ZrnB58pT8
                q/Rm/wDQa9sIr5N+O18918VL6FjlbSCGFfYFA/8ANzQB3f7N2iR/2frGvOqmV5Vs4m7qFAdx+O5P++a9
                3xXin7N+pwP4Y1bSwwE8N59oKk87XRVz+cf617VnnFAHgP7TP/Mr/wDb3/7Rrn/2cv8AkoWof9gqT/0b
                FU37QPivSNf1TSbDS7tLqTTvP+0SRHMYZ9mFDdCRs5x6jvkCH9nL/koV/wD9gqT/ANGxUAXv2jNdln8R
                6boaP+4tYPtDqO8jkjn6Kv8A48a6f9nCyjj8J6vfhQJZr4QMfURorD/0Ya8u+Nzu/wAW9ZVySqrAF9h5
                MZ/mTXovwM8SaXoHw11y51K5jggtL4zSMeTho0CgDuSUIAoA9V8Z+KLXwf4Xu9WuGUtGu2CMtjzZT91f
                8fQAntXkHwg+D/mm38S+Jrf5eJLOykX73pI49PRfxPaux0PQb74ha1b+LPFNq0GlwfNpGkydgf8AltKO
                7Hggf5Pp4GKADaPevIP2jQF+HengdP7Vj/8ARUtewV4/+0d/yTzT/wDsKx/+ipaAPBvh82sjxvp6+HlQ
                6rIJYrdn6Rl4nUv/AMBUlu/3eh6V9ceEPCtl4Q0GPTbQmSTJkuLl/vzyn7zt/T0FfMHwTGfi7oY/67/+
                iJK+vtgoA8Z8YeApPiN8XCZRJDo+lWcVvdzjjzJMtJ5an12yAnrj8RXr9hZW2nWMFnZwpBbQxiOKNBgK
                o6Cp0jVBhFCjk4A9eTTqACiiigBD0r5F+M/iOTXviPfRB822nH7HCvYFT85+u/dz6AelfXR6V8Gahdtq
                GqXd7ISWuJnlJPUliT/WgD7A+FOkxaT8M9DiRAGntlunOBlmk+fJ/AgfQCuzxjFcj8MNUh1X4baDLCyn
                ybRLVwDyrRjYQff5c/Qg966S/wBRs9LsZb2+uYre2iGXllcKq/UmgD5L+Nn/ACV3XP8Ath/6Ijr2D9nL
                /kn2of8AYWk/9FRV4Z8S9esvE/xB1bWNOLtaTuixs6lSwSNU3YPIB2kjPODXuf7OX/JPtQ/7C0n/AKKi
                oA6z4ra7L4e+G+rXlu5S4dBbxMOoLkKSPcAk180/CSyj1H4p6BbyqGRZ2mAPrGjSD9VFe2ftFu6fDqzC
                kgPqkatjuPLlP8wK8X+D9zHa/FfQZHICtLJGM+rxOgH5kUAfYRxjJJ+tfOniPSJ/jH8WZxpRC6NpsSWk
                uoAbkwpZjt/vEszAeoGeleg+I9bv/HOqXPg/wtOYrOM7NX1dDlYV7wxn+Jz0PpyPWu48PeHtN8M6PBpW
                lW4htoRx3ZmPVmPdj3NAB4f8P6b4Z0eDStKthBbQjgdSzHqzHux7mtXFGKKACjGaKKADFIxwMilrxb4i
                fEXWtS8QnwR4GSR9R3GO5u4vvI3dUbou3+Ju3bBoA9E8SePvDXhI7NZ1WCGcjIt0y8p9DtXJAPqcD3rz
                nUP2kNDiYjTtEv7oDvM6wg+4xuNO8Ofs+aXFGLjxPqFxqF5J88kcDlIw3fLEbm+uV78V1P8AwpP4ef8A
                Qv8A/k7cf/HKAOA/4aZ/6lH/AMqX/wBqo/4aZ/6lH/ypf/aq7/8A4Un8PP8AoX//ACduP/jlH/Ckvh5/
                0L3/AJO3H/xygDyrxL8fIfE3hnUdFn8KiNLyBoxIdQ3bG/hbHlDODg4yOleL9T6mvqXxZ8IvAmleDdc1
                Cz0Pyrm20+eWGT7XOdrrGxU4L4PIHWvlrOKAPTPh58XZ/AHh650tdHF/51wZ0drkxhCVVcbdpz93PXvS
                +Ivjn4v1yJ7e1lh0qBhg/YlIkI/66E5B91wa3v2f/C2jeIBr0+s6Va3wgNusPnoHCk+Zu4PHPy/lXvkH
                hrQrO2kt7XRrC3hlQxukFske5SOR8oFAHg37OulteeJtZ1qYljb26xBm5+eVs557/Ifz967P9oHXpNM8
                DwabA5V9SuAj46mNBuYf99bPwzXQfCzwXJ4J0HULKX5nm1CZ0kOMtECFjJ+oXd+Nef8A7S8Ttb+Gph9x
                XuVP1IjI/wDQTQBzP7O0aS/ES6ZgCYtMkdTjofMjH8ia+oMZr5T+AV8tp8TooSSDd2k0IHqQBJ/7JX1a
                KAKup6fDqulXen3C7oLqF4ZB6qykH+dfCVzBJZ3k1tKMSQyFHHuDg/yr73PSviDxuip4+8Rogwq6pchQ
                OmPNbFAH1X8J71tT+F2gXEpLMtuYcnriN2Qfogr52+Nf/JXdcHb9x/6Ijr6M+FWnPpXwx0C1kBDm284g
                9R5jGT/2cV85fGzj4va5/wBsP/REdAHT/Bnw5d+LrMWV+n/FOabfm+kj/wCfq4KIqI3+yoUk/wC9g9eP
                pYYAx0ryH9nMA/D7UM/9BWT/ANFQ16/jAoA+AjX274G/5J54Z/7BVr/6KWviI9/rX274F/5J54a/7BVr
                /wCiloA+b/jpr0mrfEe4st+6302NbeMA8biAzn65OP8AgIr2X4EWEVr8LbK4RQGvJ5p5PchzGP0jFfOH
                j52l+IniQuSWGp3Iz7CRgP0Ar6R+BF7HdfCuxhQgtaTzQvjsS5k5/BxQB6QVyOprl/GngLSfHC6YmqeZ
                ssrgy4j4MilcNHnsCQuSOfl4x1rqqCM9aAM+Z7PQ9FlkWNILOyty/lxjaERFyQPTgV8Parqd1rGr3epX
                jb7i6maaQ/7ROTj0HoO1fanjOBp/AviCCMZeTTblFHuYmAr4e96APvmCJLeFIYxhI1CgegHAqQjIxVHQ
                70aloOnXynK3NrFMD7MoP9avmgD5b/aD0hbDx/DqEa4XULRXc+rp8h/8dCVpfs3ag6eKdY0/J2T2QnI9
                Sjhc/wDkQ1o/tLool8Mvj5iLoH6AxY/mao/s26a8niPWdTx8kFmtufrI4Yf+i6AOv/aO/wCSeaf/ANhW
                P/0VLXj/AME/+SvaF/23/wDRElewftHf8k80/wD7Csf/AKKlrx/4J/8AJXtC/wC2/wD6IkoA+wK+f/2m
                f+ZX/wC3v/2jXv8A6V88/tLXcMl74csw4M8UdxK6+iuUCn80b8qAMf8AZx/5KHqH/YKk/wDRsVfTx6dK
                +Yf2cf8Akoeof9gqT/0bFX08wyOaAPj/AOL+gz6F8StVZo3WK+k+2Qvjhw/LY+j7h+FUvCfxN8UeD9sW
                n35lsgRm0uR5kWPQA8r1/hIr6t8U+D9G8Z6ULHV7cSKpJimTiSI45Kt2/HIr5w8Y/BPxH4aaS601Dq2n
                DJEkC/vUH+0nU/Vc/hQB614N+OWgeIzHaaqBpGoMcfvXzDIfZ+MfRsfU16mPu4x04Ir4HYMrMrAhhkEE
                YwfSvoz9n7xjd6rYXvhu/maU2May2jPyyxE7SmfQEjHoGx0AAAPLfi/oM+hfErVWaN1ivpPtkL44cPy2
                Po+4fhVLwn8TfFHg/bFp9+ZbIEZtLkeZFj0APK9f4SK+rfFPg/RvGelCx1e3EiqSYpk4kiOOSrdvxyK+
                cPGPwT8R+GmkutNQ6tpwyRJAv71B/tJ1P1XP4UAeteDfjloHiMx2mqgaRqDHH718wyH2fjH0bH1Neprg
                jHpxivgdgysysCGGQQRjB9K+jf2fPGN3qljeeG7+ZpTYxrLaM/LLFnBTPop249M46AAAHXfGz/kkOu/9
                sP8A0fHXzB4E/wCSh+Gv+wra/wDo1a+oPjZ/ySHXf+2H/o+Ovl/wJ/yUPw1/2FbX/wBGrQB9vdBmvDf2
                j9dkt9J0nQ4nwt1I9xMAeoTAUH2yxP1UV7lXzJ+0dI58eadGSfLGmIQPcyyg/wAhQBpfs2WMcuq6/qBU
                eZBDDCp9A7Mx/wDRYr3rWNVstB0e61PUJvKtLWPfI3f2A9STgAdyQK8C/Z11Wz0x/FBvLiOCIQQ3DySN
                gKiGQMT7DeK7aK0uvi7qkV9fRS23gu0k3Wtu4KvqTj/low7R+nrn8gDhPh/8N5vH/iO88YeILYwaVc3c
                lzHbcj7QzOWIH/TME4z3/Ovo2GGOGJIoo0jjRQqogwqgcAAdgKIYo4YkjiRUjRQqqgwFA4wB2A9KlxQB
                4/8AtHAD4e6ef+orH/6Klrwb4fNrI8b6evh5UOqyCWK3Z+kZeJ1L/wDAVJbv93oele8/tHf8k80//sKx
                /wDoqWvH/gmM/F3Qx/13/wDRElAH0/4Q8K2XhDQY9NtCZJMmS4uX+/PKfvO39PQV5x4w8BSfEb4uEyiS
                HR9Ks4re7nHHmSZaTy1PrtkBPXH4ivZtgoSNUGEUKOTgD15NAEFlZW2m2MFnZQpBbQRhIokGAqgcAV87
                ftGa7LP4j03Q0f8AcWsH2h1HeRyRz9FX/wAeNfSJ6V8ifG53f4t6yrklVWAL7DyYz/MmgD1H9nCyjj8J
                6vfhQJZr4QMfURorD/0Ya9J8Z+KLXwf4Xu9WuGUtGu2CMtjzZT91f8fQAntXlXwM8SaXoHw11y51K5jg
                gtL4zSMeTho0CgDuSUIArp9D0G++IWtW/izxTatBpcHzaRpMnYH/AJbSjux4IH+SAcd8IPg/5pt/Evia
                3+XiSzspF+96SOPT0X8T2r38/KM/zNKBikf7voO59KAPiHxhoM3hnxZqekzRsnkzt5ZPG6InKN+IINdB
                4T+LvivwqEgjuxf2KAAW15lwo/2WzuHHbOPavpHxr8PdD8cWapqMRju41xBdw4EkfXjP8S5PQ/pnNfN3
                jH4R+JvCTyT/AGZtQ05ST9rtUJCj1dOq/Xke9AHvngv4weHvGLxWZY6dqj4C2tw3EhPZH6N9Dg+xr0FD
                kmvgXp+YPBr6v+CHjC78VeEJYNSnae+06QQtK5y0kZGULHueCM99vPOTQB6dRRRQAUUUGgAoppbBxxn0
                qKW7gt033E0cK4zl2AH60ATmvn/9pnn/AIRf/t7/APaNev3vjnwpYIxufEmkoVGSn2xC35A5/SvmT4ve
                O7fxx4mibT/M/s2xjMUDSLtMjE5Z9vUZwBg84AzjpQB56K+9ry1jvrC4s5hmKeNon+hGDXwSvWvtrwP4
                li8W+D9P1aNgZJYgs6g/dlXh1/ME/Qg96APjXV9KuNE1q90u7QrPaTNFIPcHqPbuPavbvgb4q8KWFhcW
                eozx2WuyEK91dTACeMABERzgLtAA2/Qg9h0vxW+EZ8Yz/wBt6PJFDqyptkSQ4S4UdOezAYGTxwPrXg99
                8OPGunTGGXwzqbsOMwQGcfmm4frQB698aJIzr3hy7inSRLiGdPkO4EAoQc++R+XevN5tQt4iEDiSQ9EQ
                5P4+lYs/gLxVZ6TNqt5ol3aWUG3zZbhfLKgsFHynDHkjoK09L0iLT18zd5kxHLdh7CvPxkIJ88mfY8N4
                rESpvD0UrJ3cn0+RoLu2jdw3celLRRXks+9jdLUKKKKCw/Clyf8A61JRTu73JcU1YXqMVwGpxeTqNwmO
                khI+meK76uU8T2pju1nA+WRcH6iu7ATtNrufKcV4Zzwqqx+y/wAGM8Ly7dQeP++hA+vX+lddXn+m3H2b
                UYZckAMM49O9egZz/OjMIWnzBwlXU8NKl1i/zCiiiuA+sZFczC3tZZj/AAIT+lct4X8PXPi3xTZaRbZD
                XMg8yQD/AFaDlmP0Ga0vEt55cC2q/fcgsPb/AD/KvcvgX4GGg+Hzr16n/Ew1JAUB6xQZyB/wLAY+20dj
                XsYGHLDmfU/OOKsUquJVKO0fzZ6nYWNvpmn21jaxiO2t4liiQfwqowB+QFeY/tAeH5NV8Bx6jCm6TTLg
                Sv6+Uw2t+RKH6A16xiobq3hurWW3uI1khlUxujdGUjBB/DNdx8sfCNjOtpexyssrRgkSxxyeWzoeGXcA
                cZXIPB69K+m/ghP4dt/CA+zXliup3kzzXUCyASRncQi4ODtC4x1GS3NeReNvhdeaR44Oh+HFl1MTQfa4
                4kGXhj3EYc9ODjnjqO5rml8BeMGkEY8LazuzjmxkA/PGKAPtK7vrTT7dri8uYbaFR80k0gRQPcnFc5pP
                juw8Sa4+n+H1a+t7fm7vwMQx+iqf42PtwBk5OMHwjwp8BPEWqXEc2uFdJscjcCQ87j/ZVcgfUnj0NfR2
                geH9N8N6PDpWl24gtYRwAclmPVmP8RPqaAOT+NZJ+EWu5GP9R/6Pjr5i8CY/4WF4bJ7apbH/AMirX1P8
                XNNvNV+GGsWOn2s11dzGARwwoWZsTxk4A9ACfoK85+F3wTu7DVLbX/E/7mW1kWW2skcMd6nIZyOBggEA
                e2emCAe+ClpAOv8AjS0AIen418m/Hexks/ilezuDtvIIZkPqAgj/AA5Q19ZEZrzz4rfDVfHmkQyWcscO
                rWefIeQ4WRT1Rj29QeefrmgD5W0XXdU8P6il/pN7LaXSDAeM9R3BHQjvggiusHiz4g/EW8i0Iard3jT/
                ACmCJFiQr3L7AAV9d2RWJpngnWtU8XHw1aQRyahHIUm2yq0cQBwzM6kgAd8ZOeOvFfV3gLwBpfgTSTbW
                f768lwbm7ZcNKR6D+FR2X+fWgD56+Kfw+s/AGi+G7eOUz39z9oa7nycMR5WFUdlGWx3OST6DT/Zx/wCS
                hX//AGCpP/RsVb/7TAx/wi+P+nv/ANo1gfs4/wDJQ9Q/7BUn/o2KgCz+0R4fks/FVlriL+4voBEzekkf
                r9VK4/3TXCfDvVtD0rxdaTeJLd59KDh2UElEkGdjsn8YXLcf7XfofrPxh4UsPGXhyfR7/cqOQ0cqgFon
                HRhn8R9Ca+YfEPwa8ZaFcOsWmNqVuCds9l8+4f7n3gfw+hNAH1XpWt6XrMIn03UbW7jYA5glV+vrjp/n
                pTdY8RaRoFu0+q6la2cajP72QAn6DOSfYDNfHlr8OvGl5MsUfhfVlYnGZrR4l/FmAA/OvVfAnwAmW5jv
                /F0sYRCGXT4W3E9/3jDgD2XOfXsQD2Pwx4lHiqCXULO0li0rO22nnBV7n1cKfup2BPLc8DHPn/7R3/JP
                LD/sKx/+ipa9bhijhiSKJFjjQbVRQAFA6AAdBXmnx10PU/EPgzT7HSbGe8uP7TjcpChYhfKlGT6DJAye
                ORQB4d8E/wDkruh/9vH/AKIkr6/BJPtXjnwn+Dsnha9i1/XZP+JqisILaJgVg3DaSxH3mwSMDgZ79vY8
                AUALRRRQAUUUUABr4N1Wyk0vV72wkBEltO8LA8kFWKn+VfeLdK+fvjL8J9Svtal8SeHbN7oTgG7tYgN6
                uP41HVgRjIGTkH14API/DXjbxH4TMq6Hqktos2N8YVZFJ9drgjP4V02hWPjP4xa6tve6rczWcBD3M8h/
                cwKc9EXC7iMgAAZ56DJqTwd8FvE/iG9Q6jaTaRYA/vJbqPbIw9FQ85+uBX0/oHh/TfDOkQ6ZpdusNtEM
                8fedu7Me7HuaAPkT4l6HY+G/H2oaPp0bJaWqwKm47icwxkknuSST6c8V7h+zocfD6/8AU6rJ1/65RVmf
                Gr4X6hrl9/wkuhQG5uPLCXVqnLvt4DqO5xwR7DFZPwy8A+PJrCTT768vNB8Oyy+dPAAI57hsAEDjegIU
                A5I6dD2APTvizoreJvhpqcNqBLPbj7TEF5y0Z+YDHfG4fWvkCKSSGZJYneORCGR1bBUjkEEdMda+8ra1
                gsrWG1tokhghRY441GAigYAA+gr58+IfwL1BdSm1LwnFFPbzOXax3BHiJOSEzgFfQdRkDkdAD0T4Y+K/
                Bk/heysNGmttOkjQebYzyBZQ+OW5xvyedw7EdOg9BmuIreAzSypHGvV3YBQPqa+K5fh/4ximMTeFtY3D
                jK2UjDP+8AQa6vw18DPF2tTo2oQLpNmeWluSPMx7Rg5z/vYoA+gI/iBpeqa8mh+HXXVbz7080Bzb20fd
                mfox9FXOTwSvUdaGyeOlc/4P8G6T4M0ZdO0uIjJ3TTP9+Z/7zEfoBwK6EADpQAtFFFAGL4v1k+HvB+ra
                suPMtbV3jz034wv/AI8RXm/7P/h5IfC914luQXvtUmdRMxy3lq2Dz6lwxPrgeldJ8ad//Co9d2ZziDOP
                Tz48/pmqvwKvIrr4VadDG2WtZp4ZB6MZGf8Ak6/nQB6OAB0paKKACiig0Acj8UbpbP4Y+IZGIAa0aLJ/
                2yE/9mr4vx9a+qP2gNXFj8OvsIYeZqF1HHtzyVX5yfoCq/nXy0iPJIqRqWdiAoAySew+tAH0z+zpp5g8
                E398ylTdXzBeOCqKoz+ZYfhXsVc74F8P/wDCL+CtK0dgPMghzLj/AJ6MSz/+PMa6KgBMV518a/DMniP4
                e3DW0Ze609xdxqoyWUAhx/3ySfqor0akPTmgD4d8Jay3hzxbpWsDcUtLhXcL1KZw4H/ASa+2rK+ttQs4
                LyzmSa2nQSRSIchlPQivBviJ8C7ue/n1TwkI3SZi8mnM4TaT18snAxnscY7Vxehx/FnwiTZ6RYa/bx7j
                +6WyaaIE9SAyso+ooA+ofEWvWfhvQLvV76QLDbxlsZwXb+FF9ycAfWvlTwH4QvPiP44knnRxY+ebrUJl
                HADNu2A/3mOQPbJ7V21v8OviR8Q7qCXxpqclnYIQQsmzcf8AdiTAB7ZbGK9y8OeHNM8LaLBpOlW4htoh
                knq0j93Y92OOv4DAAFAGrGixqqoAEAwAOgHavkP42f8AJXtc/wC2H/oiOvr48Yr5q+Ivw78T+Lfi5q8m
                maZL9ll8nbdzfu4TiGMEhj97ByPlyeDQB2/7OX/JPb/31WQ/+Qoq9fNcr8PfBkPgXwtHpMc/nytIZ7iX
                GA0hABwPTCgfhXUtwKAPgP3NfbXgdwnw88OFiNq6Va5Oeg8lf89q+YvFXwn8U6Hr1xa2WjXl/ZtIfs9x
                aQtKrJnjdtztPYg4wRxkc17P8OfB3i82FiPGWqTDTrFVFnpCMgHy42+ay/eC4GFJPIGemCAeJfF3S30v
                4na0rKQk8wuUOMBhIAxI/Ekfga2Pg38R4fBeqz2GqMw0m+KlpBk+RIOA+PQjg/QenPr/AMWvhe3jq3t7
                /Tpo4NXtUMa+aSFmTrsJ7EHJB9zn1Hz3ffDXxrps3ly+GdSdhxmCEzA/imRQB9l2t7b31tHc2k8U8Eih
                o5YnDK49QR1qlrfiLTfD1oLjUrhYg7bIoxzJM56KijlmORwP0r5V8O+DPidE/l6NYa7pu8/MfNezB9zu
                Za9u+H/wqm0TUV8QeKdQfVde2/u2kkaRYPUhm5Zu2e3b1oA9JVjdWgE8GzzE+aJyDjI6HBI784yPc9a+
                JvF/h2bwr4q1DR5gxEEreUzLjfGeUb8Rg+1fcG0A5yemK4L4l/DKy8fWEciyi11a3BEFyVyGU87H77c8
                +3bqQQDP+B/imDW/AdtppmU32lgwSRlvmKZJRgPTB2/Va9M3e3HrXyG/gH4i+DdTE9hpepLcIxVLjTQZ
                Qy/8AzwcdCPwFdTan44eKrc2Er6ha2sg2ySXEEdngdDltqufwyaAKHxt18eLPH1rpGlo90tiPsyiEbzL
                OxBZVx1x8q8dwete5fDPwaPBHhCDTpSrXsp8+7ZenmEDgH0AAA+meM4rJ+G3wn07wQPt1xKL7WHTabjb
                hIgeojHX23HkjjgEivRwAOlAHkf7RkbP8O7IqMhdUjJ9h5Uo/mRXhXwz1u08OfETR9Vvm2W0UjLI5GQi
                ujJuPsN2fwr6r+IPhg+MPBOoaPGypcSKHgZugkU7lz6A4wT2BNfKS/Dbxmb5rQeGdT81TtLfZzsz/v8A
                3fxzQB9K+KPi94U8PaU1xBqdrqd0V/c29lMshZv9orkKOmc/ka+cvHtj4juDY+K/EgEc+uNK8MJBBSOM
                Jjg9Fw4AHXjPfNev/Df4HR6RLFq3ikRXF4nzRWAw8UZ7Fz0Zh6dB79tD47+DNU8UaLpt5pFq91Pp8km+
                CPlyjhckD+IgoOBzzQB51+zpKkfxEvFZ1VpNLkVAxxuPmRHA9TgE/ga+jItetL3Vn02wkS6lgG66eI7k
                gHZWI/jP93qByeMZ+WvCXwb8V+Ir9Fu9PuNJsQw824u4zGwH+yhwWP6e9fUXhvw7pvhXRINJ0uARW8Qy
                WP3pXI5dj3Y4/pwAKAOE+EHjuLVtPPhbUptus6XmBN/BuIk4DD/aA4I9s9zj1FSGJwOozmvm3x58KvFe
                l+MrrX/DFvLPbzXDXUbWjgTW7k5Ixweucbc8cVv6D8TviZYQLb6v4B1LU3Xjzls5YHb3YhCv5ACgDp/i
                58O9F1vwzqWuJAlrq1jbSXAuI1wZlRSzI4/iyAcE8g45xkHzf9nK0kfxlqt4FJhi08xMwHG55EI5/wCA
                N+Vdlr03xM+Imlto8Phy38OabdALcTXd3vkdc8qMAEA9xt56ZFdt8P8AwNZeA9DNhbyG4uJ2ElxcMMGR
                scADsoHQc96AOa+EHjuPVtOPhjUpSusaZmBPM4NxEnAI9WUDBH0POTj1FSGJwOozmvm3x78KvFemeM7r
                X/DFvLPBNcNdRtaOBNbuTuIxwfvZxtzxwa39B+J3xMsIFt9X8A6lqbrx5y2csDt7sQhX8gBQB0/xc+He
                i634Z1LXEgS11axtpLgXEa4MyopZkcfxZAOCeQcc4yD5x+zhaSP4z1W8VSYYtPMTMBxueRCOf+AH8q7H
                XpviZ8RNLbR4fDlv4c026AW4mu7vfI655UYAIB7jbz0yK7f4feBbLwHobWNvIbi4mYSXNywwZGxgADso
                HQc9TQBnfGz/AJJFrn/bv/6Pjr5g8C/8lC8NEf8AQVteP+2q19geM/Dw8VeENS0QuI2uotqORkK4IZSf
                bcBXyjF8NfHVtrS2sHh/Ukuo5BsmjQiMMCMMJeE/HPGKAPsgyAEAkDJwAepPXj8jXhf7R+gSzWek+IIk
                ykDNa3BHYN8yH6ZDD6kV6R4I8Oazptt9u8Uaq+pa3NHtZsjy7dM52IAAMngscAkgdgK39c0az1/RbvSr
                +MyWt0hjkA6j0I9wcEe4oA+KfDV9p9hr9pLq8E1zpfmKLu3ik2mVAQcH1AIBx3xjI6j7L0DxJ4e1u0iO
                h6lZzwhRsjhkAKL2Bj4K/QgV82eKfgd4q0O7kbTbX+1rHcSkkDDzAvYMhIOf93I+lcrF8P8AxlcSeWvh
                fWQexeykUdfUgCgD7L1HVtP0i2NzqN9bWkIHMlxKEH61j+HPGNv4tu7h9Ggkk0q3OxtQkUos0n92NSMk
                DuxxjjAOcjxHwb+z9qt5dR3XiiVbK0U5NrC4eWT23DKqPfJP0r6J07T7TS7GGxsbdLe1hQJFFGMKo9qA
                PKv2jv8Aknth/wBhWP8A9FS14/8ABP8A5K7of/bx/wCiJK9x+Omhan4g8GafY6TYz3lx/acblIULEL5U
                o3H0GSBk8cisr4T/AAdk8LXsWv67J/xNUVhBbRMCsG4bSWI+82CRgcDPfsAexgkn2paTAFLQAGvmj9oj
                w/JZ+KrLXEX9xfQCJm9JI/X6qVx/umvpesDxh4UsPGXhyfR7/cqOQ0cqgFonHRhn8R9CaAPkz4d6toel
                eLrSbxJbvPpQcOygkokgzsdk/jC5bj/a79D9gaVrel6zCJ9N1G1u42AOYJVfr646f56V8qeIfg14y0K4
                dYtMbUrcE7Z7L59w/wBz7wP4fQmsW1+HXjS8mWKPwvqysTjM1o8S/izAAfnQB9h6x4i0jQLdp9V1K1s4
                1Gf3sgBP0Gck+wGa5ybxA/jDwN4hutOtprfTpLCeOzuZAVkuCY2HmKvVVz0J5Y54GOfNPAnwAmW5jv8A
                xdLGEQhl0+FtxPf94w4A9lzn17H3xYI44FgSJFiA2CNQAqr0wAO2O1AHEfDD4gW/jfw5EZZFXWLZAl3E
                SAWI48xR/dPH0OR6E9zwSRx618t6r8MfHfgbxM+oeGobqeGNybW6siHfYeiunXOOCMbT713WjfFP4iRQ
                rBqXw41C8mxjzYoJrcE+pyjD+QoAb8cfh7o6+HLvxZYwrZ39vIjTiMYS4DuEyV7Nlgc9+c54xB+zTaSp
                YeIrwqRFLLBEp9WQOT+jrVzxFo/xE+KEMWnX2mWvhrRPMEsiy3AllkI6Z29cdhhR78CvTvCPhew8H6BB
                pGn5aOPLPI33pHP3mOO54/ACgDdooooAQ1T1XVbPRdLuNS1GZYLS3TfLI38I/qfbuau1SvNKtdQntZLu
                PzltZPOijblBJ/C5Hcrzj0Jz1AIAPPpdK8ZfEFvPvNSuPC+gucw2VsMXkydmlb+DI/h5xnBHGajX4B+D
                GQiZtTnkbrNJdfN6dlA/SvUAgFOxQB5SP2e/Bg6S6r/4EL/8RVWT9nLwidxXUdbBPT9/EQP/ACHXsFBG
                aAPlXxv8D9b8MQS6hpch1bT4/mfYm2WIerJzkDuR9cYzUfwa+IC+ENfOn6jLt0jUGCyEniGXor+w7H2w
                e1fVhAA4rxX4p/BmPV2l1vwxAsN+ctcWSgKk/H3kHQP6joevB6gHtKkNghgcjIIPanFRXzz8KPi2+jun
                hfxZLJHFEfKtrqcEGAjjy5M8heMAn7vQ8dPoOORZY1dGVlYbgVOQQehoAzfEGkx63oV7pkpUJdQvDvKh
                thZSAwB7jr26V8u2+9YvKlULNCfKkXduwy8Ef59a+tT09Dmvm/4h6VHoPxGvoov9RqcYv41BJ2uSRIOe
                5YM3oMgCuTGU+enddD6DhvGLD4pQltLQ5/8AIfWsyfX7GCYxku+OpUVpOodCjdGGDXG6xpTWEwkRt0Mh
                4PofQ15+FpU6kuWe59jnmNxeEpKphkrLd9jsIJo7iBZY23IwyDT6yPDTltJwf4JCB+QrXrGtBQm4o9LL
                8S8ThoVnvJXCiiisjuCqeqWQv7F4QBvHKE+tXKKqE3CSkjDEUIV6Uqc1o0ecvGYpCrAqynBHpXaaHfC9
                sVUn97GNrD29aZqmiRX+ZYyI5/Xs31rFhsNU0m5EsULse+3kEfhXqznDE07Xsz4XC4fFZLi+blcqb6rt
                /mjr6iubmO0t2mkb5VHHqT6CqltqU88fOnXKyf7vy/n2pBYSXNys984bbwkK/dH1rz1R5Ze/sfVyx8q9
                P/ZVdvq9EvX/ACINB0SfxBrUM0y8zyqkMbdOSACfYDn8K+vNIsV03TLWzRiywQrGGPJOBjmvGvhRoq32
                vS37p+6s1Gz/AH2BH6DP5ivcV69OK9XDPmXP9x+f53GFGr7CLu1rJ92xxNV768hsbKe6uJBFBBG0kjno
                qgZJ/AVYJxXmXxBc+K/Euk+BLdpdkri+1Vom4S2TojAf3mx34IU4Oa6jxB3w0srnV9W1nx3f2UlrJq8g
                SzibjFqgARsckE465wcZAwRn0vAqG1hjt4EhhUJHGoRUUYCgcYqegBMDr3oAAOaWigAIzSY96WigAooo
                oAQnArzT4zeO5fCPhdbXT5dmq6iWihdT80SD77j0IyAPc57V6WRkV8pfHvUmvPidPasSUsbaKEDtyvmf
                +z0AeufA3whHoXg1NWniA1DVgJix6rD/AMs1/Ilv+BDPQV6jtAOe9Q2drHZWcFrCAIoY1jQDsAAB+gqc
                0AfP/wC0z18L/wDb3/7RrD/Zwic+PNSmA+RdMdSfcyx4/wDQTWr+0rdRSX/hyzDAyxRXErD0VigB/ND+
                VbX7OWgPaaFqmuSqR9tlWCDI/gjzuI9izY+qUAe29aTApaKAE2ijAFLRQAYooooAQDFLRRQAUUUUAFFF
                FAB1pNo685paKAGlQaXApaKAExz1NG0UtFABik289TS0UAJgUbR/+qlooATFLRRQAUUUUAY3i3Rv+Eg8
                JarpIxvurZ40LdA+PlP4HBr56+BvjVfC/iK48Pao/kWmoOApl+XybgcAH03dD7henNfTrdK+efjN8K7w
                6pP4o0C0kninzJfW8S7mR+8ijqQ3cDocnoeAD6GBzx7UtfOvw3+OZ0u2i0fxYZZbeIBIr9QXdB6SDqwA
                /iHPHQ9a910nxHo2uxCTStUs7xSM/uZlYj6jOR+NAGrSE4FVL7VbDTIfOv722tIgMl7iVYwPxYivGviH
                8cbYWz6P4Nle5vZj5bX0aHameMR55Zs98Y9M9gDhvjt4sj8QeM0022kD2mlIYSQchpjy+PphV+qmtD4G
                /D6TWdZTxPqEWNPsX/0YOP8AXTDuPUJ1z/ex1wRS/D/4Halrc8WpeKEksdPzvFqcief/AHv7gPPX5vYc
                GvpCys7awtIrS0gjgt4UCRxxjCqB0AHpQBYHWloxiigAoIzRRQAm0Y7/AJ0BQOlLRQAmM0AAUtFABSbR
                7/nS0UAJgZpSM0UUAN2DGO3pS4paKAExQFAORS0UAJgduKAAOlLRQAUUUUAJtGc80YyO9LRQAgGKWiig
                BCARg0gQDpTqKAE2jOaMUtFACFQQQe9G0HrS0UAIFApcUUUAJj60EA0tFACBQKXFFFACY+tLjnNFFACE
                ZGKNozmlooAQKF6UEA9aWigBMUYpaKAEIB60YxS0UAFIBilooAKKKKACjrRRQAmBRtFLRQAmAKMZpaKA
                EAxRtGO/50tFACAY7n86AMUtFABRRRQAUUUUAFFFFABRRRQAEZpNo/xpaKAPPfiF8J9G8bxm7Uix1cLh
                bpFGJPQSL/EPccj36V5Xpfirxz8G7tdL1+xkvtF3bYyWJT6wy446Z2t+Q5NfSxGaintobqB4LiJJYnGG
                R1DKw9CDxQByPhv4n+EvFKoLPVYoblsf6LdkQyZ9ACcN/wABJql8VvCj+IfC5urKAyanpzfaLYKpLOv8
                cYwCTuA4Hcham1P4O+BdUdnfQ47d272jtCB/wFTt/Ss+D4M6Rp6qNN8ReJ9PQdFtdRCD/wBBpNXVmVCT
                hJSXQ8TgmS5iSWM5RxkVg+IbpLlI7OEiSTfubHOOox+tdX428CJ4O8TLpou72TTbqMS2kksgyzDAdTgA
                E55zgdRWZb6da2pDxQgN2Y8mvKnGGHqcz36H6DQr4jN8Iqask9JO+v3DNJtPsWnpEwwxJZvxx/hVyiiu
                KcnKTl3PpsNQjQpRpQ2QUUUVB0BRRRQAUZoooFZCnnk8/WjvSVoaHpj6zrdpp6bszSBWKnkL/E34Lk/h
                Vwi5SSMMRVjRpSnLoe2/DHSxp3g6CRgRLdMZ2B7A/d/8dArtBmooIkgiWNBhVGFHoBUpOBmvoYR5YpH4
                5iKzrVpVX1dyrql/baZplzfXkgjtreNpZXxnaqjJOByenauH+Fmjytp114s1CJl1PXpDcsCeI4sny1Ud
                htKnv29Kz/HGojxd400/4f2oaS3V0u9ZIyAsC4cJnOecqTjoSmD1x6jEoRFUDAAAx7dqoxHAYpaKKACi
                iigAooooAKKKKAENfKHx502Sz+KF1dMDtvreGdD24Xy/5x9K+sK4b4l/Dq08faREnnC11C1Ja3uCuRyO
                VbH8JwOeox9QQBnw4+Iuk+LdCs4mvIY9XiiWO4tXcBywABZQfvKevGcZwTXSeIPE+j+GdPe81e/gtowp
                IVn+Z/ZV6sfpXzDd/A3x7bzNHDpkF0g6SQXcQU+/zsp/St/w9+zzr13cJJr17b6fbjlo4W82U+3Hyjvz
                k/SgDBmh1j41/Euae2ieK0yqlyuVtLdeme248nGeWJxxX1NoulWmh6PaaXYx+XbWsSxouc8DuT3J5JPc
                k1T8M+FdH8JaSmm6RaiGIcuxOXkb+8zdz/LtgYFbQGKAFooooAKKKKACiiigAooooAKKKKACiiigAooo
                oAKKKKACiiigAooooAKKKKACiiigAooooACM0m3nPWlooA5TXfhp4P8AEczT6jods1wxJM0IMLsT3YoR
                uP1zXI3H7PHgyZ8x3OrwD+7HcIR/48hr1migDym0/Z88FWz7pX1S6GclZrlQD7fIq122heB/DPhnnSNF
                tbaTkebs3yYPUb2y2PbOK6CigBuwemaUClooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
                ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
                ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKRhkc0tIaAO
                a8Z+ELDxfojWN4zRSIfMt7hAN0MgHBGeo7Ed89jgj5zu7S90bW7rRNURUvrUgHaciVTyHB9wQce/OCCK
                +sCK4X4j+AYvGFlDcW0wttWsw32aY/dbPOx++3jr25PPIONeiqsfM9PKsyqYGupL4eqPCKKLiK706/fT
                tVt3tNQi+/DJ3HYqRkMD7H86K8OpTlB2Z+pYXGUsVTU6buFFFFZnXcKKKKBhRRQOooE3ZBXrfwm8OlIJ
                talUfvT5duSP4VOCw+pH6ehri/BnhC48T6om9XTTo+ZpRxn/AGQfX/A9K+grO1is7WO3hRUjjUKqquAB
                9K9LBUHfmkfD8TZsuX6rSd31JgACRmuT+I3iz/hE/Cc1zbjzNSuGFvYwgZaSZuBgAHOOSQeDjGckVo+J
                /GGjeEdOe91a7jjXHyRq2ZJT6KvUn9PUiuC8J6PrPjvxfD438SWrWen2gP8AZOnSoNy5xiRgR07g9SQC
                MAfN6h8OdR8OfBreE9Gle9m+06xqEhub65KjLSMASuepUHJGepLHAziu0pFGPc+tLQAUUUUAFFFFABRR
                RQAUUUUAFIRkYpaKAEwBRilooATGKWiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAxTSue5p1FAHNeK/BWieLrMQ6rbZkT/AFVzGQk0X+63p7HIryLWfhN4k0YNJpc0es2qkkRuRFOo/ElW
                /A5PYV9BYppUfnUTpRmrSR1YXG18LLmpSsz5Hluha3bWd9FNZXSffhuozGwPuDUwZSu4HIr6e1nw7pPi
                CDyNWsLe8jwwXzUyU3YztPVTwORg8VxE/wAD/CzXRmtJtTsVIAEUFyCo/GRWP61xVMBF/Cz6bCcWVYq1
                eN/NHjNLivXrz4J2LWhWy17UYZx92S4SKVR9VCqT+YrNHwPvl6+K43yerabyPylrB4CfQ9WPFuEe8WeZ
                d+tdf4U8GHVY11LVZlstJBGZJW2eaPYnoPf8vWttPgbqQct/wmK9eB/ZakfrJ/8Aqrrh8JvCk9vax6na
                XOoTwxBPNuL2dtxxgnbvwM9cDitqOB5XeZ5eY8UOpT5MMmr9X+hmyfE/wH4Ttv7M064N1JCNqW9hEZN5
                9A/3SfU7qp/8JB8TPFqMNF0O28O2UgwLvUXLTAf3guOP++T9a9C0bwxovh+MJpWl2lphQhaGIKzAdNzd
                T9Sa1toz0r0ErKx8fKTlLmZ574U+FOl6Pff2trVzJrmusd73V38wU+qqc4+pyR2xXoQAFAABpaYgoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/2Q==
            </property>
        </structure>
        <structure>
            <property name="name">logo 2011 reduit.JPG</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEASABIAAD/4QCARXhpZgAASUkqAAgAAAAEABoBBQABAAAAPgAAABsBBQABAAAA
                RgAAACgBAwABAAAAAgAAAGmHBAABAAAATgAAAAAAAABIAAAAAQAAAEgAAAABAAAAAwAAkAcABAAAADAy
                MTAAoAcABAAAADAxMDABoAMAAQAAAP//AAAAAAAA/+ECcGh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEu
                MC8APD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6
                eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc+CjxyZGY6UkRGIHhtbG5zOnJkZj0naHR0cDov
                L3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyc+CgogPHJkZjpEZXNjcmlwdGlvbiB4
                bWxuczpleGlmPSdodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyc+CiAgPGV4aWY6WFJlc29sdXRp
                b24+NzI8L2V4aWY6WFJlc29sdXRpb24+CiAgPGV4aWY6WVJlc29sdXRpb24+NzI8L2V4aWY6WVJlc29s
                dXRpb24+CiAgPGV4aWY6UmVzb2x1dGlvblVuaXQ+SW5jaDwvZXhpZjpSZXNvbHV0aW9uVW5pdD4KICA8
                ZXhpZjpFeGlmVmVyc2lvbj5FeGlmIFZlcnNpb24gMi4xPC9leGlmOkV4aWZWZXJzaW9uPgogIDxleGlm
                OkZsYXNoUGl4VmVyc2lvbj5GbGFzaFBpeCBWZXJzaW9uIDEuMDwvZXhpZjpGbGFzaFBpeFZlcnNpb24+
                CiAgPGV4aWY6Q29sb3JTcGFjZT5VbmNhbGlicmF0ZWQ8L2V4aWY6Q29sb3JTcGFjZT4KIDwvcmRmOkRl
                c2NyaXB0aW9uPgoKPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KPD94cGFja2V0IGVuZD0ncic/Pgr/2wBD
                AAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYU
                GBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
                FBQUFBQUFBQUFBQUFBT/wgARCABfAhsDAREAAhEBAxEB/8QAHAABAAIDAQEBAAAAAAAAAAAAAAYHAQUI
                BAMC/8QAHAEBAAIDAQEBAAAAAAAAAAAAAAUGAwQHAgEI/9oADAMBAAIQAxAAAAHqkAAAGDJESizqEyAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAADBAcMhTkZeNRjkegJzk3Pn1eZtSWn3AAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAK9wyPKlS/QX5wSm6kKlJrVwf7PPS5sCGG+NuAAAAAAAAAAAAAAAAAAAAAAAAAAYNKa8EhOT4Hr
                MKg+nvrHvV8G9VPDJU6xtWb6km+YSLLowomwAAAAAANIbM9AAMGQfk8p7AAAAAAAAfE8p7zIAAABWxMi
                nyAnWRw3Uv0F59Kz/HYjPjnjvth3I5KUH7edyxJvlPZuTWh5MDIAAAAANKcznVx9Afg58K0IAWgeov0n
                IAAAAAAAIEQss4jBZQAAAKNLxKeIATU5KjbvMq12vSSNN3cfb4xMc72elY9rpWeubVwXv/eqlEGzPoa0
                v4iBBCWlSFgmyPiXoQohhGSaFMnWB4D3mwK7KOOpSNFdHqI6ac6AKmNYT4rkso8hoCbkbPSeU3R4j3lJ
                Fjg0ROSly3Dyl0kWPgQwrM+hXVd7L6YfoXl2YrW7tZ0m9V5TD9F9upYIXYuOdFy/Of2XUcwHTxSZfpyU
                bgvMrgnRNjeHKBehVZES8SzAV4Q48hy0dHkdOtDkA8xPzXlmk4OZS3isDckIL2OWi/ChDpkhJEy4z8Ea
                LUOZy9CJlMnaR7D5lEEHIka6F6f+oDqxkz68RSa5fsNWe3cbc93a+A9Kb1W5YOqCpDpg52IaeY0xexrC
                2CRg42JSesghbhdp9yqC1z4nBh3yUea0lBXZKDVFdHURz2TIsU5uPKXufAipKD6EMI0Tskx7Szji4ts2
                BpS6T1kUPgVGXeVNGXjnqNvO20bT9MG98NiLi83zWRxV56nsPFpTtwu7PeZBShchyydWmDIAMAAGQc4l
                +FQm2LaBgyYABkGDJgAyYAABkAGADIAMFYnk85eW4DsPui71nFsjLzsdqH7St/5xiP35OQAUcawtQmAA
                AAAAB5yGkmNmZAAAAAAAAAAAAAAAAAMFKadj57q/d84d4+vvi+7DxqXTHPp8egAGAZAAAAAAAAAAAAAA
                AAAAAAAAAAAABgr7DJVBGXnUak5It2rWvLUGX/WwAAAAAAAAAAAAAAAAAAAAAAAAAAAP/8QALhAAAgIC
                AgEBBwMEAwAAAAAABAUDBgIHAAEREBITFRYgMFAUMTUXITNAIjQ2/9oACAEBAAEFAvtWl/hXEuvbVZLE
                4/O99+OP7iEi7O2G1K4tZuWrLtMwhyvMrWzvE3itKsLct8Qz4ER/m7jYfgS7LLKTPihpmnPw2Q3FxqFi
                XJhgDx2Q3ePnoxLkJiqYYNAfyxjtevy+bEnPmxJyIiMmK5Mu2Vi9O/276G9jsaDshJYSkU6NvG6A7/vw
                LwusP3jHi9dJAREVF9Hn1778c/WQ+9/0JJcYcA2AzCP7T1nMU8CUiLsdtKBZqzpVaMTn3/x6Jk98XyaX
                qGLCH2uSZ4wRLMOy52ss/eOr7l8MP6438ROPuuze1ifWteBtcUceMWHpll1hiysT62TMdU2WfoWpeT+t
                Jm98H0iR7ysU9fVYf9C8KSHlZ1lTzqwPYAJ2aqntzyI/sST9Ltsc2jLjLR9Hf9Ztaz2zbFiVCZxtn7EH
                78ey+zCsw9gHjYf9MYkdYS1RzZH1kh1/sBo5KXXxsTfrrsNwLOI36jr4DNvbMNf2pu3sza1nsHWF8tCK
                ybEubRCO0uhkVb1fZ2dkg5abQNVwXQ7gqqaT/hbFbSI27O6WyqPACMiw3gUjFYEDCvF5d6vFZkuqrjPg
                aadCvFsNnHragvG8FBUK/d2OEO8tpdg3XYTkWVS4xJr2NhstvwqN2efMjq0lTOXz220mZvYiS6hrKxmW
                RG6uh0OwLtYpUAbBNboxnj4+uomKa3wjuSnKupa0shdkS2y3ZJiLJZ7fU2D67Mhamkuxc9O15cnT2wWO
                2kRNmt0ttUeN7MbOyYJ7iNnjj4xsVYEso8KpxhBscPADXuoyOxUmpGcIQXYveLDhMHRMIc2cHLB/mB78
                h8f/AOW84SodYqZpJ0FcrglZXMxMTtwMa6K1z3MzyiGAzgEUa7J93ZtUNIBMUlc8M91/wlOUYYU1MnGR
                gcs5+Je2rsVCNVNK/wBkmv2kXzoAh+KuvR1ZpRziF9+Jy+D7C4JiZDaWFGfGG7cMyws3X7VkXsTbzcTE
                7cG548YqzZTMxdS629j5LyBghJ1KV3PaNmC4E0yqe8/pNpP/AM+576y3Nfatla0wdjslBKeA4bOqANns
                dDKZOorBrzSn8GuPxI2/8IwtbXZ3XimahXx41tGgHSR6/axZXEBD8WdbKpRFj4k2I6qxYxOBQ/Ms+set
                rPQvlfS8sMsUK9vrmxHHlsmvq/i8xqJPeA8pSD5ktN3r3dkr1NeMqlOgNcNe4q8cXtnm3q6S0DoNOOfj
                6xhwyuPatvryzJbO+suW2FhTRVXApFqH02pWTvmRRr5gem1NGcuhsFeZ1C2p7i/sPIcMsI+a+7xJD5LL
                jDFRgsnd75s+nS2MJNsEzoClVWVVN8COL27t9cSwrvaoyy64ptmdVDiQw9niclY0K3tGZ2wAjK/gPUdf
                zWRdizQMUF+sZrlXgzsa2ypBgW1GRNrAtsyNdWiVuudRfrAhtgVVgvsie+PnXL2GVLSddJykdX5YK6yp
                9sT3J9Ye3LdhVn1wlGuydUH8NVk+9918oLiO86HX8+nNFnqR9esQllX7LX+xMyJnFxjz95HyeHoiIPGV
                XPnnlJjrxNipQvzJIoQAo14XrsIvMguOPCCLVImUto+vx9XZ8uu7QGyFYQXm1dTi6/pfVUB9PH0+Pp8e
                nj08evj7Pj6mlLxzPYhvGSswUjPLrr2cfVcH2xPij6hiTd4Nz/o2QiYF542O1WIWr1yCsq/uzQRkx50Z
                BJmCrEWR/hO+Xmp9mdfRQK/lDxuZ8ZIHhwGh/OuqSucZl67awSSUp3hkjprLDP4AcfiCBAtH/L//xAA0
                EQABAwMBBgQDBwUAAAAAAAABAgMEAAURBhITITFBUBAUMnEiUWAjJDSBkaGxQmHB0eH/2gAIAQMBAT8B
                +iocCROVsMJyaiaOcWMyF7NXHT9ut0Rby8k1n9PoCBAcuMhLCKt8JuCyGmxy/esVqaOX7erHSsHl9AaO
                hbCFSVdeArHg7u9g73lT0SyupKfhFI07C3yUCQMGntGxlD7NRqdDXAfLDnfdPN7u3Nj5+E2WmGwXVVHh
                b/D0z4lHp0HtUtceEwp5YGB/atORzPlLuT/5VqaVMWny8VJ2R6iKefcexvDnHz77ar9OjuIj+pPyx/FJ
                VtDJGK1Q4puO0rptCmlBSAscjWspRQ03HB58602yGba2PnxrZFakgiFOOwMBXEd90vbmgyJauKz+2KwK
                ucBFxjKYXVqmPwvuM4EY9KscDWs/xLZ6YqxnNvZ9vDWZHmG/b/PfdMSpTrPl2QNlJ4qP+qTkDj4FINay
                indtyB7VpSQHrelPVPCjWpJYlTzs8k8B33Sk0R5W4VyVWoLjNt6UuRgNnqahvb9hDnUjPhcIjc6Otlzk
                atolaekqbfQS2eo/mn5TkxvYh9f6jyH/AGrvukSCwz6UcPc99acUy4HE9KQuRqGKhPAIPqOeP6UwyGG0
                to5DxxVzlphxFumlEqVtHv1kuy7a+M+jrUaU1LQHGjms+CjgVqq8CSvyrJyBz+gIdwkwTlhWKiayWkbM
                lH5ihrGGeaTV21SZaNzFyB1zWcnJ7z//xAAsEQABAwMCBQMDBQAAAAAAAAABAAIDBBESECEFEzFBUCIy
                YCAjM0JRYXGB/9oACAECAQE/AfhT5WR7uKk4gBswKKqmmeAAt7b/AACWQQtyKlkMrrnSjdjL8B4jJuGD
                VoJPpTJKhp7o1cmPsQ4g/uFFIJW5edqzeY6Rs5rsVJIG+hijDpnY3VY/ksELVRRx+5yAA6edmpY3tLuh
                Vt7KhF3OTgQSCuHMu4vVY7KY6UkvMj387XTOvyx00hkMLw4KaNsn3Yv9C4b7Cqn8rtOHfjPnaxkYObjr
                c3uuGv6tVezGW+lGzlx/352ujzZkOypIYpdn9VK3BxaNIpDC/IKbCrZ6TumRiM3kUFy3M9fOkZCxRwpH
                37pxJJP7/RAwvkAQ2AHnqmATN/lSMcw2P0UMGPqd8AfCyUWcFJw4fpKNA/soKHDdy7W8z//EAEsQAAED
                AgIFBgkIBgoDAQAAAAECAwQAEQUSEyExQVEQFCIyYXEVIzNCUoGRocEGMENQYnKx0SAkNXPC4TRARFOS
                lKKy8PF0gtLT/9oACAEBAAY/AvmpE1WtSRZCeKjsrxy0v4ejyqlISkJ4WIG36/0a7vyT9A1tHfwoiOlm
                Ck7CBpFj1nV7qZYTiUnM6qxsq3fV4uMOpT6ElpLo+B99RsAToXnmemvm9wm/bfZ/Oo8VOESm20jpFrK5
                r46jf3V45xyGd4lsqat7RQW2tK0HYpJuD9eXa1ynug12dtKWtRW4o3UtW0nkRJQMxHR17r76IkIaW4y6
                UOgptcbfw1VIxnE3CZ+JPFVkpuoIzWv2C96RIjOJeZXsWnkcfwjLFk3z6L6J4/aG77w103IQCjNqUhW1
                KhqIPcfrfLKnRoyuDzqU/jX7Ygf5lH51+2IH+ZR+dZ2nEuoPnINxUj+6j+JR8eXXspaMyAlfWsdtJcTJ
                VnuLHSC44WoqYOZCzd1tZJCzx76bkt9G+op4HklRAmzUpHOkHdn2L/gPt+fCJU6NGWfNedSk++kusuJd
                aVrStBuD8yGtKjSHzM2v+ola1BCE6ypRsBWkiyGpLd7ZmlhQ93zcPAojhYU8gvyHkdZDQ9HtJ1Xq0eO2
                12gaz3nfT04spEphSMrgGvWoC1YjKdaS48yUJbUoXy3vs9lE1Ic9J1Z9/IVmszvSVw3ClLOoJFLlOdya
                yMpVlHWUK8GzFfq8lXQcPmL/AJ8mCucX1te1pZ/hHz02WBcsMqct3C9TsQxVkzZWm67izw4UlCAEpSLA
                Ddykk2A3mnY/yaa0EFByKnr1Zj9n+VF12WxNc4F9RV/qFcxxGYMImbkymzlPcqv2kx/gNeOxRsI+w0Sa
                KYjZLquu+5rWr+ozIcXy6wCkXtexvapS5yghcjL4hKr5bcafjxZS4UhQ6DzZsQadgYu3osTjbTudT6Q+
                ZSXtSZkDRtE7L3vb/T7+TEcpvlW2k/401i/3m/4qkYR8n0MqcYSecS3+ojsFFpzxhzEEAcjZ3ZxfkQ36
                RprtF+S6NQV0haoeJSnAhPNg46s92uos7C2ERoiZREXNreWsIVr16tl6cjTmVS0pQV84aQAU94FIw6S0
                IcW5QYygMw1XBJpCsMbMbDyopRKU3m05G2191M4hPtG8SHHb7BqrnEJacIw0nxbrjeked7bbAKmwp0zn
                LLIVYaNCdhtuFOYN8n0MrktC70p/ybfZXg/Ecs9QWElhDaQVX9EgUyIMdUcL60pxINj6IFQ3YEYysTfi
                pkLCU3Sym3WNTjiB0oZUnI7lCb3vcavV7eQPPAuurOVphHWcVWJycQmCKTFcVzOM2mwGXqqUq5PqtU/9
                8PwpvBMHabkYo4LqU71GR20mNiDrUu9lBtDYyrHYQAaZeWyuOpaQotObU9lPRW16LTdBS+Cd9NR46A2y
                2nKlI5HW8g502Cphe8Hh66TgkxZW2q+gKtqCPN7qckSHA0y2MylGueyUm51IZHWUrhXPmZUWIrLnEBDY
                JtwuRtp9iYgInsJznRjyiewcaRhkppMSLfJzY5VKHRuCVDfspLmGNmNhubKiWtoHTHsvuqNiMghoKYDj
                h3DVrp9/5PiPBgtqyodkdd09moihgmNM6V43GcIAUj2arUMEwRDbk+2Z557ybI/OmJE2SxicFxVtTQTb
                s1DVRxbB1NJ8XpCp7WU9luNPPTlh19p4t58oF9QO7vqHgjBS1GzoDpy3K7i/qqKI+jEiW+lhC3uo3fzj
                SnYfyjTIetfRKiNoB7jrrCWnHm14rMWhlT74AQgnrKNuFKdhfKJMl7+6VEbQD3HXRebdbVOZj6V994b7
                XNgKdcmqDj7TuXOABceqo+HwWRLxWVqbaJ1J7VUwZ0iM4hzpJDTYKDxF7XpnEI+GuMSHU3Wp0dFnt7aj
                S1NGdizylttMtp8oRv1bqlRcQstpKCojRhOiN9n/AHTeC4O0iRijgupTp8WyO2kxsQdZlXsoNpbGVY7C
                BesJwqIpOFyprOmW5JTmU39kDedVMmJ8oBLbUsJWFRW0FIvt2G9AE37aQiRnbdaOZp9o2W2eygyvGULR
                s0vNPG+3Nb/TUthu+VJb1k3JOkFya+UTw2oSlXuVWMSZBzvKcQABrW4TfUPXUt51GR9Tq7pPma9nIps7
                60D4sR1V7jTX3aZ+6ORrurDoPVUotMuewqPvFfJeBhoQqXkXIudjQspGc+tfupMSKntW4ess8TTsdalJ
                Qt1IVkNjbRioIfQkx4is6GLdG9rD1CsPw/MUtvKLjnaBUdQUluOhlJzHYBasbkNnNZl1xJHfesZmSDdx
                RTqGtSyb2Ap/Gp6EnEn+qnaGEbkjt7ahfv8A4VFDaiHZcVOZ1Ws602HspuJERkaR7SeJ5MNjvnxMVbSA
                Dsuel8RWK6VxLeeOtCcx2qKdQrEP33wrHZ8xwJGjcVmXu6Y+FeHMQZyuJTlix1/RJ9I/aPu5fBuFxDiG
                JWzKTmyoaHFZ+FZkYlhkUeghN7e1Br9uwP8AAP8A8qabaeSifzrIHQOiF5rX2VhzuI4scSQJSNIylNkp
                TtJ91tm+sHaX/R2kJd9q9f8AtHJKaZ1NBx8qA3JIJ/EinI6lKShxxAVlNjbRpqAhCQhCZIASNgGRVQEo
                NtMhtBtwrDctuqc1uOY07NSyjnRbyly2sgbqxpTpu84m+v71T830YDg771iWbq2cy1O/8r+FNM2N/Gtf
                7BXN2lpbkNr0jZVsPZQiyQ5oR/Z5OtBH2T+VRpEMhh8K0iEublC4KT/zhQiyg5oh/ZpOtJH2T+VYhPZB
                Sh2G50TtSbG4qb+/+FSHpKgltrOAVnUkBFMYlLb/AFCN/RWVjyh/vFdnAVN/9fxpMzWt5S1oBUeqL7BT
                uiGZ55Zcdd3qNY3iExwI6C1FSvvf9UMdxBmziU5IkdY8kniftfhTEyBYy2E5dGTbONuo8aETFEuyGUmy
                mpHlU9x/OmnmzmbcSFpPEHkuTYU9DTIbckPrRlQhVzqVf4VjENZ6boScvFOsH8aW83hyprGsIXoypKk9
                42GpLzkJUHTK0mVy9wP0G3OGqkcU6uQPrF4UGylfaVuFPxEW04s41f0h/wAtTtsFcnF0ZBZJB1E7CAb6
                /wAK5zOipwuP5kW+ZxXao7u6pM9LChDZWkqeULJPixs48kadGQXea3DiU7cp30y/ish/wQjW1EW4crnq
                4VizOXxZQ4nKOGalyWcPMyPc6NejzJKe8bDSUt4P4KY8+VIUVavspsLmsPjxGXJLpf2IF91YfFetpWWE
                Nqsd4HL4QjR3X2pITraSVZVgWtq7hUqVjLzsnEFx1oisSHCrREjUT2/hUuG7hz7XjrrddGVKdWztNKxS
                FCMyKXNMjxedIvuPCktx8B5kPOlyVnIn1WF6SlSy4oDWo7+TEZatcl6a5pD3Gw93IpxZslIzE0wu10pd
                VIWeAH87cjMmGnPMjX8X6aabiSMCxF3E205LIa6KjxJOypeKYhlVis0lTgTsbBN8op+aiOvmjK0qU8RZ
                Pkxv31H5uyt7RPhawgXIGUj40iEITsZ5ltJb0/RLihwHDvpWHvYRKksFVw1o1BaT2aqMiVE8HtfRsLN3
                D2q4d1KxaFDcm4c6TmDQuQDtFDDYGHyoEV0jnEqYjKAngnjUjCoY1COUIHE2qThkHDsgdXmVIkoISydl
                +3uqO7GiScUIUh3OfplW6Rzbtd6w3E24xlLbUpMmLHuroKts42y7afjiBLlvuIOWMqIu4Vu6VrDvvWCv
                MxlzC0pznkdrpdFdj7sop+MiBLlvrQckdURYKVbulaw771IwsjNNcjuXSD5yr6qlRHcPfaBczl5xOVI7
                O+vDMCKZbKyHFJCM+VXaOFJZY+ThQ6dshxZS0n3fGpLPSlylZb6NG033CmI0tGiezKWUX2X5DikKCZcT
                SaRHi86RfceFJaj4DzP0pclZ0afVYX7r028qNIxDC32Uh1bSLlDg86w7LUI2HQX5U4qTo3lx1NhnXrup
                QG6ocS+bQMoavxsLUrQ5dL5ubYKzzmfCL52uyun7BsHqr9lR/Um1N418ncywybuQzr6O+3EdlJkxVffb
                PWQeBqHNTsVdpfwpKm0go3mkq4jkU2rYaUlaCWVecmsrW/zzups2st/xh+FNxYxtLlq0TZ9D0l+ofCmY
                zIs00kIT3D9DB8DSvIjEHvGkb0DdSUIAQhAsBwFY1L+iSVJzdpV89K5w2o4HiC9IHUjU0ug9GfbfaPnN
                quKcwbB/17EpIyFLHS0ad9zSlPWXPf8AKEbEj0R9RnEcKkqwrET1lNi7bv3k09CnQYcjONT8Z8psdxyq
                HxpcZ5AZKFZXBfXegBsH6DEZO11YTSUJ1BIsBT+KjpNf0eMfsA9JXrPuSP0cOxTC0F2XBXfINtuzjRhs
                4CrDHFjK5LkEpSkbyAR+dIiM9I9Zxw7Vq4/PKbdbS42ralYuDWY4TFv2ItWSJGZjI4NICfqbwhBbvKHl
                W0/SD8/0TiMhOUqFmknhxrwNDUVXP6463sab3pv6StntpDTaQlCBlSkbh9fKeKDHkna8zqJ7xsNeJWxK
                a3KvkV7P51YQSsekHUf/AFRdkQGc6eq3Ke6Pf0c1/dVsRxJWj2c3gp0KPbrUfaKSxGZQw0nYhAsPrj//
                xAAqEAEAAQMDBAEEAgMBAAAAAAABEQAhMUFRYRBxgZGhILHB8DBQQOHx0f/aAAgBAQABPyH+Ceheni1h
                +ew0+gRJlcCFlFr2ox/ewKDsdJC7S3Dv4Gjq0AAqkBSGGVAAWoMMhmPvr0SMBS4zJ0DlvCnGPV161O5f
                1an2LY7pVIjmaCc8lA4T+8S2KgcLV8BTx9XxWV6Er7Iwd0ZiTGSiGkR3kRgYMOzR+wmysG4aTFhigdhL
                bO/Z0igYQRtDTRSyw1hhTwdxaroEQEpZtQTx/bLFAlLDX0jrOeDMaAp5Ku5MY6bvyx66wFYappts2Blm
                PVFwFLwHBpptUmXme4vltZk8zQdN1bKWShCKLh4pCH6fJ/PLOkiUbwijcbAT7iZ/gCJbFSke8AT8f4Jy
                gsgbrSPUAz2lUsfxNQqa+RGzsit4Zb/3yLlatkosYgnUvRlaQZFdjZemKYCWstN9dpx8dL6kYN3alJf7
                j+EqNCUgozrzBtTCAJ+3rMEI3hB4sOGKUlNXnxP3Cgx/LCO73L/hQdmcCzJkIPmgAsDgBgDqQYUqQBvU
                3w1yNmTg7F7Um7Xk7yJ80VyKBmzAx5xRsjlKBvf7wShsPDOwnQ4P8GO9deK3G14i+9JMqGql0Wm+lSyI
                OhXLl43pQ8G3sxsOz/CqendDmb3elTatHIjf/ZX6fajxqEu1ETLprfSjN54E3R6bQvEoQCYb05zqPYqG
                a/IrFaFTQQ/9rTSBcS/7Gn5+cEqxwxMbsX0tLUHHSIM4IJnfRC5YvBLN8NmPvRISHjVITVjMZq8/4ZLJ
                /wCVJNAjwaW+dNOXmde3Vqp2xXeyDL4e1RNGABgldyaYtcBcMypJ3YjakwvfRkmeYOHajVgjmBYgLR0P
                WgvgNjd/5U/ZLE7YEaPgegsnoHNrMxyxeP8AlHTrhdd5e9RQjgndUU2dACws4cxJ5ouug4AOiTQKFqfD
                D1Q9XD5yUuAxtFJ8ivYP3SrR3Frox/Lp8VO3cMtI3eMhUOkY8YF0AxJyU/RtDIXcalAxeOaRf2QTzIJi
                xGYWaQvRbap2zSOyFybMEHZPNXQSimCZc3MKFpryeUGeFTV4QlcgVs3qfk3kEyAQ91u9QoQGDgWAUAUI
                Cw/LhcxfmkaeDjWcZ+4o02g4gwfL3V+NF5YESJQcXZ1Mjie2WAe/dIoSFwgGBZkJtbWntmdqwklk5pBF
                EMJt2uOKHkLy2kT7o2eQCTYhu0PdR02oK8ywBmKgSHkFgWE3vqxUl/FLGZjdf9ZxROUC17FpzkvrpUND
                WS3iTEqs0vCdBwJsQL6eaZgYQrLzXnVD2V4LcUUaFgEfNPmm9i5AiNVVV3aBmRR2rRLsdhTKtGRqlzc2
                7znph5wdmixdrBZ71P8AVrQQuleJdn96usGo6xVJ5SpspDsO8sN0s28B+s00q6wtAuydJxUR98vG5NjT
                tRKgUbEB8s0ViYgFN5ox8XpDCCUg+z2UQWqulWlxMIEI1hmlnfVYgRb6PgMAbFB9J+Umq9OwxhkXy+kr
                QYPkwBurSmbBqwwJJcRQfCoKIBl9h8kfdR03wVJ8aH5NST68ocP/AH9J0fDj8jAsiXbxUw/hDZg2KBG8
                UcSh8aBNCw0dAIdqDsm6YvidJLUSwDYAABSFGi5JTzFHXX5QfFOHc6qJbUidCdznNMZl4qCfloZGfhzf
                5mvlKnAIGw61AAGz5CL2Ec7hWNTQn4zO+KnPgS0hx9+KJt24X4zO6KkxovYEnZK+GrYchhYX5awVzmNo
                /RfaoH+rKyUKAH4Mt2oHEyLt+A0KdNa1BGQ+EHFBEUXAapzlWN1T6TOQlhsBXO/sKrhEHdr+JHbNcTZz
                Ej66LhBlWCoswBSAahgoUdk/QGfGinFVQMIWP85KgjI74AWkJmG8fQhhlNqMbj6PI4Y4Fn33eDmkfCJc
                GkeSZc0ZnBS5KI0e7CgUWancAh2DvaykdaVgwtU7VpTnYXkImzWEqSZy2K5vg++ngDEwxR6oR6GQljJH
                W4hzO675cNdqh3kJrk7HLaoJhzMQRjrO3Q/AptFkPO1ScMHMkhdkH3YkfFl8QRN+AI1mkQLSSFKZoVh7
                Q0zLVkJapOXA1E6AIFbwdI2t6+B9Okyh9kBLVqag3CPt7dLFwIWXyHIknd4o5pbMYiyPOzSyowzfg1vE
                9gMSgRE3WTg1J0KmKFCuKg5FGvOIqZyWRrDOKnrYTWvJI7fNT0c/Xk8t6QwipcqxMQ3HFO7qGIZglrDX
                1PbzlfvWOgA8CutYEULURJuGaCcrFDTFYALbJS0cuAYoLsRZ5dob2KOBSNUtiJvmbzo0al5Ipc4NoOqT
                liKE/RTBkcG0N93geYq2feuOQ8uPvSVnDk8R+JKky/DFB0qY03gSpB5pp7STi1Ay6NHzUfG5iGqTnwpd
                lWb+OATcLG2KCRNYbLERcQL8UQEXaLl8UdXCFmbu8ZilwmZJT6HgFQh/caUd0whboPMGq+zRRXRXLD86
                1FIuLnP5la5IV6tHET0xWPqtCPhJ3q+kTcIB+WhzO3Mw/wDi/mg08AUL4JeWGtNsLDmCCoqOisCTUAns
                Vo1JTWCwUJBhowpY9FRUVH0RWFRUVHRq41VqjM/k2vQAUkL8VOUrOwTSWHS+JZilLIG/Fjsb69InoCKg
                pBqKhQRSTUVmobVBUKioVFRUNqioqKx1ioqFR9EV8YdNmN7/AHrSDrK8BaZdxsgyUYKAg+ieaQJoavgl
                oZAYmkVGdA7iwfXynX6W5EOckZHIxUh514YOZ80bFngrjK/mOlkGk5GolHDPotSRoyce8F6CP6TCk2Jc
                rfOPzQjO4wjkdn6BtBDU1edo/wB0ZwenbrYaDIK2oSDQLBYPpSaj+3SSsjjTI/QknmlZPskjlSeqIwrZ
                32GpjpIkXYfAtC59JWhqM/A7FaF4gP3f+4//2gAMAwEAAgADAAAAEJJJJIAJJJJJJJJJJJJJJJJJJJJJ
                JJJJJJJJJIFEQIJJJJJJJJJJJJJJJJJJJJJJJJJJJJJB9sBAJJJJJJJJJJJJJJJJJJJJJJJJJJJJBA9a
                shIJJJJJJABJAJJBJJJJJJJJIJJJJAJJ8BX8JJJJJJJBBJAIIJJJJJJJJJBJJJJJIAQkcNIAJAIJIBAB
                IJIJJJIBAJBJJAAABIBBmEDBBABIJBIIBAJAAJAJBIIAAJABIBABBI/A6KABJIBBIBAABIAJJIAAJJBJ
                IABAAJJBLOT/AAQACCASQSQACCCCSQCASCSSQCCQCSSRD5+wSSSSSSSSSSSSSSSSSSSSSSSSSSSSSBTb
                eSSSQSSSSSSSSSSSSSSSSSSSSSSSSSSQXboSSSSSSSSSSSSSSSSSSSSSSSSSSST/xAAmEQEAAQMDBAEF
                AQAAAAAAAAABABEhMUFRYRBQcZGBYKGx0fDB/9oACAEDAQE/EPotRPg+EoyAoPOn3iq/QC0SOXjWUZBZ
                X8o2QV2H1KS9/Zmu30DoYhqNr4pKQkbVNOfjMSlJgy3wcvQCv2Jh475mcFOh810DdbB7jNeQL08t4bEL
                Q1UMfMByjWgcDx4MRdQxfwo2nYpXI476djGah+kcYiM3XisxQAnqXDCXw0myL+UaapmfwIh77pb0dmjp
                IFSuHZ0lMWW4Fsu8ai/lnwL0YfPvoyVWZBXQ5dAN4RR0jdFV+MkDmV/1HS7CH9Ku994wpKSV5KcRVcL2
                jiCVYzs7/E0uzVTgH2YOCgb2gbNDXZszyYHyL777nVlg2ShUk02TBE060zM2DTzRpFWdV99+XlfhtzKZ
                Q9VbvSB6p+30Bf8AUNVz7IOxrxXlkjkOGKXW7z//xAAjEQEAAgAGAQUBAAAAAAAAAAABABEQITFBUFFg
                IGFxgaGx/9oACAECAQE/EPCicVwSB4AHMHOHXHcCi/APZrGyaoAW0GmSIyEnfnbrg4jSbKhv3Bm5N5+8
                JWu6R++dHGDSFI3pmoVPajKVDqWxz3GXO9KMcINzx+hn75+6Gs/bzrvMOkYZNwCFT25y074Uo65udc5k
                WQdkYGJI7SNptvNCd0v5zpzit57fj1KAg/Ec9aD0FYK0Ry63gME1uW6QnfbArmT/xAApEAEBAAICAgED
                BAIDAQAAAAABEQAhMUFRYXEQgaEwUJGxIEDB0fDx/9oACAEBAAE/EP0JcEeMp+VUOs6UtUbpcYvPysAv
                YYhG1lHLNqvv99BF3leOQNTbAbp2ecCsCHSl0RHTmr1MEbwvoQgB4A4MRoEzi1ZVOwudJqPyx+Uqy1Ii
                RsVxK1tlmwKWWmnGgp1KSjpQFungO5nskKqRCJ7P3tYOD1anWOlk2mPLDHcDR2Rdr/0dfQ0tJAIMsKAv
                YDo0oJDLCAlHzXN5FyCk9kqiQ6LQiUZs6gRBgewRSBERBMKOygoj1jwSLKJpODkAYqS913aTmkSjxnIp
                v92hV4MBoVTZ5Es25WyA69Gcvh09fSI5LWAHkgF32D7/AK3bga4z3knsBuqpBlpmtV8uJLGyEgoE00Dp
                Em6VwmFqzrBqpwURJawpNHTnexhRGFwVXeQTKlo710sA5U84N/W9Uak0Ek94QYPFg1kGnY/4LMj6olA5
                VhgIDK2Byl1nxg0H/Qb5kAAVRoA7cLMUzg8pgJTVzsYN/RjZphCW2GOilU2iWpFj7OX1vKpXlcn4Acma
                2pcbEHFIGDCaQ6SNyneaenMHQY6LCFVVvX4fQMYIDyjAfLk15N16/J7d4Z6RhLOj5ZlLRaDXw+CB98Y7
                mh12UeoszaiFAoDLyRV4OipuucWOLtsBOg2pDorjET9UarP8EB98MuPA0pbM9BAAACYPGDJqAaAAAOJ9
                XqaMBFUvAG7gkAb1kA1B77G8F0jLYfjanygyxmFO7Esx6UTwuB1wokU9bwTuy2Z2AY+azw4H7YIJsQAN
                6w4td/6M0QQFtWAl7A7ayZbCSBsC+ItAu96ECVwsAqVSAdi5I4KQax2m7CbSgr+iZMVmgUOFJTz5Czt1
                kgS02Asl7kD7p1jmHuLOljsKqu0BRwULeQdFqBBS3rBoKS9PWNsB3XUN3jvaQTxjgi0/sflf4wokovlV
                /wCcH7OcJiTKKtueJwxGJ00O867oFWgXB/0/MPj0ve1K4ZcsiMoFVkagQOL+2NO6ssWIRkZTyqrQyCbA
                ItEjENJW1IQNpbTlsMXn8C8kUlshswxJzIzmrqHFTEFkdIagqLqoWgouaNwNJLRVEhROQ5DRrmwk0gOV
                cjhcO6hBWodobltshQjjXQIplLLDV19K3XMEGtDCmllAFRP6LXARbBt1q9Dm/T/1Mjv4Nc7SDRwRjRGA
                zSjQCFCdhmkSreOREVqSn/0GhFmZJi/ZJggBGA0OOV5XtcQSO8Jc9FpJedFHFV1igMqgFq2pAeUGkCfY
                4Q/7VgDaoFUMqgNKVgmwm3YAXaiUeaAzg+dIo7OnfihCeQqAF2sBsBRq4G7mwRHEqmKWaMG606CFAI4V
                Zf1xRV1QgvCGd2XymQR2aEpaoOXosoAYHHQlGvGOL8kDBebNPSmnqbVDq7WjC0SzYyYNkQmADwFpXE4r
                S4BimsJFNNBxi9DfHygYhaFC6MFxYcAuImmdhtWkKYfaO9rAU0SCyi3AYKMPgl+AAjgJhgozrhagM0AC
                yi3NFC7F+26iAgUTGyZCrNiAKKBSY7xLyyEESrKLWwHC+9N4QoMUHS8i4kkHQeya3tjQ0yUw+md8DCIW
                A2BLcVKeLGCkihEurimKiHwiCM4LyOFharraZKA5A2u2obbTDLtLRIcUcApij0VAZQKho4YJh8OocoBX
                0BjzcrEg6LpaImjpBKoUGfja1XZ72i5WbsEs67XZyjjNTq5VZgCOUTaDcO4+XD1WYepxpTo09axbtzSO
                PBwcOJOq/wBIdBwehX98QVSH3n0U88KFW6f04htUchZeteEu7CsNW4Acz+cBqAAK0dt/M4DR2qenNbYZ
                2BUkYsTBgqFCHqFDONK0RtYGEFegH3RiDSSrFqATa4qitQK04RgmObG3M3LvofJYCgirAQIlOGHc0Nck
                jJu/LNPWrwwcVujAS1XPlUuRvvFVX+g+gpRsdTgcUZ8hdYzHxjvU+UADbmv7+OvET6bIh3KQQ2kMIjuG
                hVHeb0IcWCBkw1BIhyjdVyDg5MFa+jQ9ln5Y1KpcN4W0iU3QozWfZjD6HXBS1TcB02yYxstDVsmQS611
                jyQySRnwAHoxtwYkJY3sUbLTeAIlWUgaAAAOAxIUbRul6EPzjpbec5nyn9MvcIbIe226MT8oeqIK70If
                BhBVqnBT/H82EfdN8aNMnMCP1IiYDTXYiJ6xnbiIVtBeAhnQuFILALdtHsjscjxiejaCAa0LYTdICg6k
                4AF23eyLXyPGJyEAUijmiMKRhZn/AJHhiXYOkoQugp8jm/PSMlFTs0LSm2kInBDQDjJlG7BCoTWnJX+M
                hsJcdO/CZwH3y1Fx1YANqsAVUAqGSKfElF8d6uCqUKN2cSxaCKCB7CGKafPrDkyGxECDWIW4kYLxu0OL
                DAAZRg+V0Zb3i1q4oCKzaGEOvlUBPMR++PZJ0m2iejw8ImwIyrRsl5TEDb4yT6XWnNGJhdXZ/wA4d3b9
                g0/CYFQ94bs8fGD51S2aXjhQPKVVVeBvE36yDoSwhgUbraDqYfd7l0csDug15AxhA6sFmOdJU7mc4KG7
                ewB5ANnAr1ji7TKUAob2A7hquOZ4lFKIcHDK7urpsAia3E3pHHNXHyIDxOl2qlORIm2sqas7QHaGD7IF
                ZCuyjv6hKzagFAqWDKwbWE3sjLTMWoNcnhlt8W8LRs0JEGgQS2gqPG6pTVNqDF+rO3kY103cusJgLsQk
                AFejjjEuNEypGbnwAQ+hLHo4WT7A5TIblEfdi4ChcLnJoR6pQ1hqg8xiYdaYNYpguRVswo9MKQJpbEKG
                8FhELbMVkRdNidwGIjrVVoRUKENG3RhXxWucOmmFq6RvEWujC0nKQ4R5B2ncIC7zEA9BHsjjHTXnyihP
                YSuNYcGgvJFZqHCSFg46VzklSU9Pa94E1LWFtogjYqcJcHGW/wAIq1W0GXRjPkmrlCBPYNIMuBpZH2yj
                4VF4TLPeYaeoJoLZZWceBkCl6DGs0vZ2dSBCODBZGUYpHEyXKISAl4aEKqjbp0Uo0BKANk7TWDGAfX2f
                Yc2rrNKYB65UVQcA1htXBBxNaXXRHJuZoOWpJ7QtSgtZsAsTNG5nBwf8IVuVCuIpVcoiB5KAdmIJEFZN
                aoNYUYw4IUB4R/Nt8YUZ7ViEiI6CWSlpVGa2i5u+scfNWM4BCnL2jGysXs5hooUSVTRizhA3reW8zgNn
                YAYiFd9pPsE7dneCnjB0PROj3ngQXxT6DTxLNrpPhxZGbaT0J+TnC+hSq3YMfAdd52GxlEDXyj7kdYkh
                qvLQjQ2OtrTkP5foDRILCr2rgRoGQY43bfkapnQU7KTComHFgHgAP4x67apvE87PviHoyB0GISdYEPql
                bC4AgCYE6ybZvJthcCGCmGPUvSGLu3sYA5qB0pJdq0+mJgVLMaMmKiwiEUFfSiXIHdiVex8BMRyLgDgh
                gcADPUZyhcCHGQ6MAQJgci5NF5MSJgZABiwkM2WF84hzZYXziHEpOsAaC5NWGJSQwAJ1gRD6JfGT0Bk3
                PRgAn+CVs3jO0UUHKpKvI72iDEbcKQLwsQWLuYxgqkS6CQHkV4TJaAA8H12ZDEAFXfv/AIDCIhjAAAP4
                xHCgyjaz1wmqbbAh/gKhQxvEuwIjcWbxGxwAk0LFkQ/OK7SljvgHQbh+t6SiKEEiekx6ttT8R/wzlhom
                +QVe2uDw/ZCLpTI1aBkZx3fTOOuZmlUUdBaQdiOkdn1OTrH2xwqu4eNB6V8MlTKoC2SkRJa6EWRFMiIA
                HgAP8Q5ZPjAn7scEwKS6ArhYV9+gMVCEB0JP6dnwYb9hDfUFj5DBaQn4lXFmg3Fd6wEmVa8cPSaYk6cY
                fA4X5DDlXaqrtV/eP//Z
            </property>
        </structure>
        <structure>
            <property name="name">logo 2011.JPG</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
                CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
                CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
                MjL/wAARCAC/BEEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
                AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
                JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
                mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
                HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
                BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
                VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
                xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKA
                CiiigAooooAKKKKACiiigAooooAKKQn0ozQAtFJmloAKRm2jNBOK84+MvjCXwx4Jljs7oQahfv5EBRjv
                C/8ALRl9CBxnqCwPXGADn9d/aEsNM1q5sdP0f+0YbdzH9p+1iNZGHBKgK2Vz0Oee2c1u+AvjHpnjTUP7
                Mmsn0/UXyYYvM81JQFDHDAD5h8xxjoM57D5PzvfJ78elfQnwf+Eps/svibX4v9I4msrVh/q+6yP/ALXc
                DtwTzwoB7qrE9qdSY5paACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
                KKKKACiiigAooooAKKKKACiiigAooprEgcUAKTim7z6c/SsrXPEOl+HNNN9q95Ha228KHbJLEngBRkk9
                eADwCeleH+Ifil4k126lTSJBpOmbnRSEBnmToGJI+Q9xtwVJ6nGaidSMNZM6cLg62KlyUo3Z7pqviDS9
                DSM6pqNnZGTJj+0zrHvAxkjJ5xkdPUetcHq/xx8PW1sp0WC61i4bPyRxtEidPvMw7gnG0N07V4mtjEbm
                W5nLXVxKxaSW4O9mJOScnuT1PuasKqooVQNo4A7VxVMfFaRR9NheE601evLlO6vvjR4pu23ado+mWMO3
                BW6d5mLdyCCmB04Iqovxb8c7QP8AiS5/64SEfnvrkvat7wbof/CQeJ7SzYEwDMs/bCL7ehOB+NZQxdWp
                JJI9Kvw9gMLQlVqXdkejWWq/FBNPttTex8PalBLGsv2S3klhnYMBjDv8gxnJz2GKrwfGaa0tkfxB4L1/
                TXeXygRbFoyT0+ZtvPtjt36V6fHGI0VFGAAAABgCnhRknmvUV7an5+3rpscppfxO8G62p+x6/ZBt4QJc
                P5DEn0Em0n8Aa+cfi/4rk8UeObsIzfYtPZrS2XOQdpIZwckfM2eR1AWvcviynhnRvCd9qt/o1lcajcqb
                a2ke2UyGVlO35wMjABbqPu46mvAvhx4Em8beJFtWLJp9vhryZMAqpztUEg/MxBAyKYju/gh8OItUMXir
                VAWtopGFpbtGCsjDjzCT1AOQAP4l5xjn6LVQvArz/SPhreaCqppfjXX4IUTZHDK0UyIOOArqVzxjIA7+
                9PvdM+IelXbz6Vr+naxAUIFrqlqsRQ8cq0IG459cDn8aAO/ory2XxV8UtOuS154ItLu2ViP9Duhl+DjH
                zMRzj+H1q0vxdjgtVm1Pwb4qslH+skbT8xJ77yRkD6UAekUVz2geN/Dnig7dH1e2uZME+TkpJgd9jANj
                3x3rfVs9cUAOooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiig0AJmsvXtdsvD2iXWq38hW3t0LkDG5j2VckZYngD3rRdgqljjAHJJwK+ffin4ik8R+Km0dD
                H/ZmkSclTu82cj5s+m3JXHYhs9cCKk1TjzM6cJhKmLrRo0+pz+v+Ib7xnqy6tqcflxou20td25IUPOSO
                hZu7YGcD0GKWaPoAB1AAxRXg1qrqSuz9Xy7AU8HRVOC269wooorI9CwV3vwpvo7PxDdCRAVa1J3LGWcY
                YdMDOOcn6Z7VwdVNRSSSwlWHd5nBXb169q3w8uWojys5oOtgpxXY9x0v41+GdV8URaLAl0gmkMMd1Iqi
                Jnzx/FnDcYOOpH1FxPiz4c2X4mm8q6tL42QsywMsrBgoZV6lc559ucHivA/iFZziW211tas7/wDtaOGc
                7SpnjdIwrZCqAqhgy4Hp3INLrzS6lr+gX2qR2tibm1RjNZo8O4AZR/nOS33fnHBOcE7Tj313Pybladjo
                vjt4nOteJrPw/YM0sVlnzBGwYSTvgbdo/iUDHODlmFe0/DvwjD4M8H2tgq4upFE90x/imYDPtxwoH+yD
                1Jz80fDuN9Z+JOnXV/dFVgnN/dXU3zAeX+8LOcjglQCxPBIPPf0Xxf8AHa9lWaHwtbi3tUl8sanMAzSY
                IyUQjAyP72TtOSFOKCT6AUfSl246V5v4E+LWl+K549PuY/sWpycQQmTzBOoXJOcDaeG4P4E9vR1bdQAu
                OaTaKdRQByXiT4deHPErRz3dn5F3HJ5iXdqfLmDZyTuHXnnnNYV7rviL4eytLrm/XvD3mFVv4o1W7tVP
                3fNUYVx0G4Y6EnkqtekkZGKjniSW3eGQK6OpRg4yCCOcigCDS9UstZ0+G/0+5iubSZd0csRyGH+PYjsQ
                RVyvKfD0TfDn4hJ4VFzK/h/V4mm01ZgT9mmDZaIMT0IP1yUz3J9VBzQAtFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
                RQAUUUUAFFFFABRRRQAUUUUAFFFIxwM/nQAtFUNS1rTdHt/tGp39rZQ9nuJVQH6ZPJrkpvjN4AglMb+I
                YyR1KW0zj8whFAHeUV5//wALs+H3H/FQYz/05XH/AMbo/wCF2fD3v4g/8k7j/wCIoA9Aorz/AP4Xb8PP
                +hg/8k7j/wCN0f8AC7Ph7n/kP/8Akncf/G6APQKRs44rF0fxXpeuqH0/7dJGwysj6fcRofozoAa2HOR+
                lAHMePfE0XhTwdfaiZFW4CeXaqSAWmbhMA9cH5seik9q+b7KJ4rVRIS0rZeRm6ljySfU16L8bdSkvNZ0
                PQlkPkIjXtxEP4jnYhPpjDjHua4HnAzXm5hUtaCPt+EsFrKvL0QUUUV5Z9zYKKKKBsKKXFNZ0jXfIyqv
                qxxTSbehlNxSblsUptHs5xhkZe42scfl0qaa0E2hppWf9HikeWIFQSjsAGOcZ52jv2FMbU7JTgzr+AJ/
                lSf2rZd5v/HD/hXTGdddzw6uHymV01Ezn0zWoPD32OGFfs8t8Ffy3QvMxX5FIHOBhvbJGe1Zo0nUEdPO
                tmKxzBGinVlCyNn5SDg9EOcdMYzXRNqtiV+afI64KnH8qZ/a2mvKrecpcZwQh6n8K7liqlvgPm6mRYNV
                PdrqzZozPdeI2tzrWo/ZrmFy0bxWkQii54zsAYjgDvy2e5z6n4O+K8jXc2neKJ4FdXUW97BC6Ryqeu4H
                7uPXgV5YCSoPOMDrSc4IGQD2BrnWOn1R6lThPDNe5Jn1Xa3kN5Ak9vKksTjcjowIYHuCPrU4Jzivn/4e
                +JpdD12K1muCmn3LbZA5+RHxw3PTpgn3yele+xvuP/1q9CjWVWPMfH5nl08BW9nLVdCSgjNFFbHnnD/E
                7wy2u+GPtFpJPHqWlt9tsmhQMxkQE7ce+O2Oce4PReGtYh1/w7YarA2UuYVc/wCy3RlPuCCD7itSQZU8
                ZrzP4Xm48Pa74i8FXDt9nsJRdacJT87QSE7sc4KhsZIH3mbPJwAD06ikpaACiiigAooooAKKKKACiiig
                AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAopCcCuU1r4l+D/D101rqWvWsdwpIaKI
                NMyH0YIDg+xoA6yiuFtPjD4Gv7yGztNaM1zO4jijWznyzE4A+5XcK2WI4/CgB1FFFABRRRQAUUUUAFFF
                BoAKKTdijP0xQAtFIDntS0AFFFFABRRSZxQAtFRPcQxnEkqIf9pgKzL3xX4f05S15rmm24H/AD1ukX8O
                T1oA2KKgs7uK+tY7m3YtDKodGKlcg98EZqegAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
                iiigAooooAKKKKACiiigAooooAKKKKACiiigAoopDntQAtFVNQ1Ky0mxlvdQuobW1iGXmmcKq/ie9c3p
                PxQ8G63qaadp+uwyXbttSN45I97dgCygE+wOaAOvopqtu7cYp1ABRSE4Gf6UZ5oAWiiigAooooAKKKKA
                CiiigAooooAKKKKACiiigAooooAKKKKAEJwK818V/EC/ufEieDfBUcNzrb5+03cozDZKOpPqw7+hwMEn
                A6b4geIm8K+BtV1eNgJ4otsHGf3rHahx3wSD9Aa8/wD2e9EVPDWoeIbgF7zUbkp5rHLGNOvJ9WLZ9cD0
                oA6vSfhboME/27XBJ4h1VwPMu9TPmgn0VDlVXPQc46ZrsbXT7OxULaWsFuoGAsUYUAenAqxjnPNLQBn6
                poml6zbtBqen2t5GwwVniD/z6fWvlL4u+A4vA3iSJLFnOl3qtLbK5JMZBAZM98ZXnrgjOetfXhGa+f8A
                9pgY/wCEXH/X3/7RoA8DXGea+vvh58M9F8J6PZzS2EMutGJXnuZVDskhHITP3QOnHpXyAOtffo7UAG0c
                d8evNBpaQ9KAPnP4lztc/Ey+3Tbxa2kMCjH3QRvI/Nifx9K5mtDxRdSX3xA8SXMiopF6YAEGBiNQg/HC
                jPvms+vDxjvVZ+pcOU+TAQ8wooorlPfCigVQ1i9+xWLMv+sc7Eq4Qc5KKObE4iGHoyqz2Ql3qLCX7NZo
                JbjuSeE+tImlrI3m3rtNIR0J+UU7SLMWtmsh5llw7k+9X/pW1Sah7kPvPPw+GlibVsVrfaPRf8Ejjghi
                /wBXEi/7q4qQelFQXlytnaSztztHAz1J7VjFym7XO+pGhRpuckkl5GL4j1IKv2KI/MwzIfQdh/WofDen
                72a8kX5VOEz6+tYn7y9u+STJK/J9Sa722gW1tY4V/gUD8e9ejiH7Ciqa3Z8XlVP+08wli6itGOy6eRL/
                AJzWBrmtNbk21qw8z+NvT2HvWzeTNBavInLgYUe5rlpvDt+ytKxR3PzFQcmsMJCDfNM9jPsTilT9hhYt
                t7tdEQWWu3ltL80jSoT8yuc5/GvsDwF4rtfF/hi21K2kVpceXcRjgxyDqMZ49R7EV8XOjRMVZSGHb0rr
                vhz45ufA/iaK6BZtPnIjvYRzvjz1HuuSR+I716yjFO6PzurXqzioVG3bv0PssEmlqG1uYby2iubeRZYZ
                o1kjkU5DqRkEfUVNVmAjYxzXnV5G9r8dtLumZY4LzRJLaPLY8x0k3soHc4ZT+Br0Y15t44lWz+Knw9uC
                m/dLeQhc4wWRFz+Gc/hQB6QB/KlpoPNOoAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooo
                oAKKKKACiiigAooooAKDRRQB478dPH914e0230DSpmhv76MyTSqcNFDyAB7sQRnttPrXl3w7+Etx8QdK
                uNU/taGxt4pzb/6gyOzBVJ4yOMMOc1F8crqWb4s6pG7ZW3jgSP2HlK382Nesfs5DPw91D/sKyD/yFFQB
                ueA/hBongm7F/wCdJqOphcJcTKFEQPB2Lzgn1yTXoYUD+VKBiigAooooAKKKKACiig8UAITgcVzfi7xz
                ofgqwFzq91tkfPk28fzSy4/ur6e5wKq/ETxzbeBfDb30irLeykx2kB43yYzk/wCyOp/LvXgfhv4deK/i
                rfyeIdVvWt7Sdzm9uF3NJgniNOPlHTqFGMDpigCfxR8fPE2rSPFoqx6RaHgFcSTMPUuRgfgOPWvOL/xD
                reqsW1DV7+6J6+dcO/8AM19MaZ8AvBVmgF3HfX74GTNcFAT7BNv8zWhN8EPh88ZVdDeIn+JLyYn9XIoA
                +RBz6UuP84r6K8Qfs56fLEz+HtXuLaYAkQ3oEkZPpuUAr+TV5u9zrfw21VNO8ReFdDvYs/It7p0TiRc8
                lJQuT+JOM8igDzz/AD0o5/yK+pfA+s/DDxuqwW/hnRLPU8Zayn0+HcfUoduHHX34yQK7dfA3hAnnwnoY
                /wC4dD/8TQB8R8/5FKoYsAByfQV9u/8ACCeD/wDoVND/APBdD/8AE05PA/hKNw6eFtEVhyCunxAj/wAd
                oA+MtG8Pax4huhb6Rp1zeSk4Pkxkhfdm6KPc4Fe+fDn4FQ6Vcw6t4paO5u4yHjsUw0UZ7Fz/ABEeg49z
                XtcUEUEQihjSOMDAVFAA/CngY9fzoAAAKWiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
                CiiigAooooAKKKKACiiigAooooAKKKKACiiigApD0paMZoA8I/aUuLhdP8PW6MwtnlneQDoXUIEz+DPX
                z2pKNlTtI7jqPxr7S8e+CLLx34f/ALMupnt5EkEsFwihjG4BHI7jBPGRXIeEfgN4f8P3sV9qV1Lq9zEd
                0ayxiOFTnIOzJyfqSPagD0Pw3NeT+GdKk1EML57OFrgMMESFFLA/jmtQ0AAdKUjNAHm/xk8QeJ/DHhq1
                1Tw7MIUjuNt3J5KyFVI+X7wIAJ4JxnJHI7xfC74r2/jaA6fqCxW2uQqWaNThJ1HV09CO6/iO4Ho11bQX
                drLbXMKTQSqUkjdcqynggjuK+ffGHwi1bwdrEXifwQ0ssVrIJxajLTQkH+Ef8tE7Y64OOaAPogHnFLWN
                4W8QW3ijw5ZavajatxHl4ycmJxwyH3DZFbNABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAe
                SftEzvF8OrVE6S6lGj+48uRv5qK2fgiV/wCFSaLtxnM+7Hr58n9MUvxp0OTXPhnqAhQvNZsl4oAzwh+b
                8kLH8K4r9nfxVC2mX3hmeQLcRyG6tgx+8hADAfQgN/wIntQB7tRSAkmgnFAC18//ALTP/Mr/APb3/wC0
                a9wOqJ/b8WlLtMhtXuJOeUAZVXP1y/8A3ya8P/aZ/wCZX/7e/wD2jQB4AOtffw7fSvgEda+/s4AoACcD
                iuC8WfF7wr4TuZLO4uXvL6MkPbWahyh9GYkAH2zkVyfxu+Js+hoPDWiTtFqEqh7u4Q4aFCOFX/aPXPYY
                9eMf4V/B/SdX8Nx694ngln+15a3thK0arH/fYqQST1HOMY9eADzLUPGMd1reqXq2jBLy9luVUuMqHbIB
                +gxVyw1i1vzsQlJf7jd/pWP4w0eLR/E+sW9mhWzt7+WGNCSdihjtXJJJ49eeOaxrSCe4uESAHeTxjtXJ
                Vw1OactmfQ5dneNw0oUo+9Htb8j0E0VHAsiQIsz75AMM3rUleK1Z2P0uE3KKbVhe1cz4lm/0u3h/hxu/
                WulrlfFSsL2CTHy+XgfgT/jXVg1+9PD4klKOAbXdfcdSoAQBemOKWq2nTi50+CQHqgB+o4/z9as1zzTU
                mmevhZxnRjOOzSCuZ8U3R3xWq9ANzfXnH6V0/Y1wWszGfVJznIDlV+g4H9K68DDmqX7HgcVYl0sGqaes
                n+BZ8Ow+dqyEjhAWNdnXMeFkzNO/ooH6/wD1q6c0sdK9WxfC1FQwXN/M2IQGIJGcHI9jTs5+lJRXFc+k
                5Vuc/wCJdPV4heIPnXAkx/OuV6GvR5ohPBJE/KupU153Knlysh6qcV7OBquUOV9D854pwUaOIVaCspfm
                fUPwA8Rvq/gqXTJ5N8+lSiNc9RE/KD8CGH0A9K9YPAr5s/ZvvXTxbq1jk7JbATH6pIoH/ow19HXdxDaW
                ktzcyLFBChkkkY8KqjJJ+gGa7T5YjvtQtdNs5by+uIba1iXdJNM4VV7ck8d6+f8A4jfFjw/qXiPw7qGi
                farqbRbszF2Ty4Zo2xvUE/Nn5QM4xyetcr4u8W6v8V/G1rpNg8kWnyXIisrYnAHYyuB3xkn+6Mgdyeq8
                W/CXQNH1rwXodo9wrajPLFd3ZYl5NoQ8A/Kv3jjA785xQBq2H7SdlJcKt94auIIe7wXaysB9Cq/zr17w
                /wCJtK8UaSmp6RdJcWzcEr95W7qy9Qw9D9RwRXxj4o0Cfwv4mv8ARbmTfJaSlN4HDKRlWx2yCD+NelfA
                jRPEja8+tWdxJaaJFlLvKllu8DhFXuRnr/DnjOcEA+hde8SaZ4Z0iXU9Wukt7aPgE/edsZCqOrE4PA9D
                2Ga8/wDCPxx03xX4sTRBpU1ks5YW08sobeQMgMoHykgHuecVx/xj8KeK9T0u58WavfW0NjZsqwaYhJMM
                bsEBJ6FySN3X6kAV5Z8P5Wh+Inhxk6nUrdeR6yKD+hoA+1yxH0ryrxb8eNB8P3z2Gm2kmr3MTbZWjkEc
                KkdQHwdxHsMe9O+J/iLVdTu4vAfhQF9YvU33kqNgWsH+038O4fpxg7hXz94z8C6x4F1KCz1X7O/npvil
                t3LI47jkA5HuPzoA+oPh58S9N+INrP5Fu9nfWwBmtpHDYB6MrD7w/AYPbpntjXzl+zho90/iHVtb2kWU
                dr9kDEcNIzo5A+gTn/eFfRFzcRWttJcTyJFDEpeSSRtqqo5JJ7UAPLYH9TXnniP41eEtAuGtIrmTVLxS
                VMNim8A+hckL+RJ9q8w8TePNf+KviiPwr4WaS20qVypblTKg+9JKeoQDnb9OpwB7P4L+H2geC7JI9PtE
                kvduJb2VQZZCevP8I/2Rx9TzQB53qX7Qd7pZja58C3kEUufJe5umi8zGM4zFzjI6HvXQ/Dj4wf8ACwPE
                NxpP9hfYPJtGufN+1+bnDou3Gxf7+c57Vx/7TPH/AAi//b3/AO0a5/8AZyP/ABcLUP8AsFSf+jYqAPp9
                iQOBmsbxF4r0XwpY/bNa1CG1jOQgOS8hHUKo5bqOnTIqDxp4ss/Bnhm51e8G/Z8kMIODNIc7V/qT2AJ7
                V83eE9I1T4yeP5bjW72ZoIk825kTgRx5+WOMchcknH/Ajyc0Aehaj+0lpUMhGm6Bd3SD+KedYc/gA9Wt
                C/aK0PULpINW0u40wOcecsgmRfduFOPwNS+LfgT4auPDdw3h+1lstThjLxETvIszAfdYMT17EYwT+FfM
                igHqcCgD72t7qG7t47i3ljmhlUPHJGwZXU8gg9CCO9Yfi7xpo/gvSvt+rT7QxKwwJzJMw7KP5noOPUVw
                HwV0jxRoPhC4u9Ted7GZd9hpjD94M9xnhAxPQ8c7jjqfPvjJ4S8UWgi8VeIdTtLlrmcWy21uWxbAhmVE
                yBlQFbng5Occk0AesfD34wWPjzV7nS/7Nk0+5RDLDumEiyICAcnAw3I457816NLMkELyyuqRoCzsxwFA
                5JJNfI/wQmdPizpCrjEiTq308lz/ADAr1X4jajrnj7XZfAvhFlENqN+q3jSFIlPaNmHYEHIAJJGMDa1A
                DvEP7Q2i6bfta6Ppsuqqh2tOZvIjJ/2SVJI9yB+XNd/4I8b6b460U6hYK8Txt5c9vLjfE2Ae3UHqD39i
                CK+RPFPhfU/B2uyaPqix/aEUOrxHcjoejKSAcdew6Gvcv2b9IurXQ9Z1WVWW2vZY44Mgjd5e/cw9RlwM
                +qkdqAPb6KKKACkJwM0p4rjviJ48tfAvhxrx1SW9mJjs4CfvvjOT/sjgn8B3oA29d8TaP4Zsvtms6hBZ
                w87fMPzOfRVGWY/QGuIt/i5NrrsvhTwfq+rxqSpuJNtvDn0DnI/PBFeYfDrwtqHxX8V3XiPxTNJdafav
                hweBK/URL/dQA5IHqPU19LW9vBaW8dtbwxwwxKFSKNQqqB2AHAFAHxv8UrvUL74i6rc6rpn9mXz+T5tn
                56zeXiFAPnXg5AB9s47V7f8As5f8k+1D/sLSf+ioq8f+Nn/JXdcH/XD/ANER17B+zl/yT7UP+wtJ/wCi
                oqAPXicVHNPHBC80siRxou53c4Cj1J7CpGzjivlv4sfEa98Za8fD2iSy/wBkxyiFY4m/4/JM/eOOq54U
                ewPcAAHp/iH4++FdHme30+O41WVTgvAAsWf948n6gEe9c7bftLW73AW48LyRQ55aO9Dt/wB8lB/Ot/w/
                8B/CtroEUWs20t7qLoDNMLh0CMRyECkDA7ZznHvXg3xC8Ht4I8XT6QsrS2xUT20j9WjbOM+4IYE+3agD
                6w8J+NtF8aad9s0e43lOJoJPllhPYMvv2PQ+tdCCc18j/B/QvEup+MIbzQrmSyhtTm6uyMpsOMoR0Ytg
                fL9D2FfW6jB6dqAHUhOBmlpD0oA8U1fw7J8TvjLcxXwY+HfDypC4BwJpCAxT6k8HH8KjoSDXs8EEVvEk
                MMSRwxqEREUBVUDAAA6AegqnpOkWukRXKW683N1LdSt3Z5GLHP0GAPZRWjigBAADnvS0UUAJtFY/ifwx
                pfizRJtL1W3EkMgyrjh4mwcOh7EZ/HocgkVs0h6c0AfEXirw5qHgrxVPpdzIyz27h4bhCRvXqsint0/A
                gjtXuXwi+LsmtTReHfEMoOoH5bW7Ygefgfcf/b44P8X16yftDeGVvfDFp4hiTM2nyiOYgYzE5xz64fbj
                /eNfNsU0kE8c0btHJGwZGU4KkHII9DmgD75Byen40tcv8PvE3/CW+CdO1eTH2l49lzgY/eqdrce5GfoR
                XTFse31oAViFBJI49aTcfb2ri9d8Y28vjDS/BumzCTULiYSXpQ5FvAg3srH+8wXbj0Y9MiutvLqCxsp7
                u6lWK3gjMssjHCoqgkn8hQAl9qFrpljLe31zFbW0I3SSysFVR7k15Nrv7RPh7T5nh0nTrrUypx5hPkxt
                9CQW/NRXm3iDxJq/xi8f2mi2MjwaW8+22gI4RRndK4HVsZOO3T6+86L8LfBui6elqmg2V4wUb5r2FZ5H
                PqSwOM+gwKAOA0/9pPT5ZgNR8OXVtDnl4LhZiPwKp/OvWvDvifSPFWnLf6Pex3MB4YA4eNv7rKeVP16/
                SvFfjB8JdN03RpPEfhy1+ziBgbu1QkoUJxuQH7pBPIHGOeMV5h8P/Gd14J8VW9/HI5spGEd5AD8skZ68
                f3h1HuPc0AfZ24+n515n44+NejeENRbTLW1bVb6M4nSKUJHEe6l8H5h6AcdDg11XiWPWta0hLPw5eQ2f
                2tcvqTZYwxEdY1HVyDwcgD1zivkfxt4bbwh4vv8AQzeG8NqU/f7NhffGr9MnGN2OvagD7B8K+J7Txb4b
                s9asldIrhTmN+qOCQyn8QfrUPi3xro/grTBfaxMV3krDDGN0kzAZIUe3HJwBkeoz5r8FfEFpofwe1PU9
                RkMdpp99LuI5JGyMgKPUlsAeprjdZ8DeP/iaLnxhcw28ELx77OznlKuYRkqEGCBwc5YrknPegDr7H9pD
                TLjVkgu9BntbFnCm5FwJGQH+IoFHTvgn8ele2RyCQAgggjII5BHavgVhj3FfcHguZ7jwN4fuZW3SS6bb
                u7HuTEpJ/OgDcY7VzXPeKPG+geDrZJtZv1haQExQqC0kmPRR29zx71m/Erx3D4E8NG62LLqFwTHZwt0Z
                8ZLN/sr1/Id68H+Hfgy9+K3im/1fX7u4ktImD3Uo4eZz92NT0UADt0AAGMjAB3N/+0pp0cpGneHbm4jz
                964uVhP5BW/nWn4d/aF8O6pcJb6vZXGku5wJCwliH1YAEf8AfOPUir2r/AXwXfWTR2NvcabcY+WaKd5O
                fdXJBH0xXzr4x8H6n4J159L1FVJI3wyp9yZP7wz9CCDQB9r29xFdQRzwSpLDIodJI2yrA9CCOoxUhOBm
                vIf2ejq48EXQvFf+zvtJ+w789P49v+zu/UtVP41fFG40Qf8ACNaFcPFqDqGu7mJsNAp5CKf7xGCT2GPX
                gA63xb8X/C3hG4ks5p5L6/jO17a0AYofRmJAHuM5HpXBH9peES4HhZjF/eN+Af8Avnyz/Or3wm+EWkf8
                I9aa54isY728u0E0NvON0cUZ5UlejMRzznHArsfE3wj8I+INMkgi0i10252/urixhWIo3YkKAGHsfzHW
                gBPB3xc8NeMrhbO2kks9Qb7trdgKX4/hYEhv0PtXd7iOuK+FNS0+98O69cWNxuhvbKcoWRsYZTwyn9QR
                7V9YfCvxi/jfwWstzKRqVr/o10y4DFgPlkx2JHPpnPpQBX8cfGHQvBd01hsfUNTUfNbwHasfpvc8An0A
                J9cZFM+HXxes/H2o3GnNpr6feRRGZUMwlV0BAPzYXB5HGK4z48eENB0PwbYX+m6bDb3baisUk4yZJQ0c
                jHexyXOVByST19a8++CEzx/FvR0VsLIs6OPUeS5/mBQB9d5rL8QeItN8MaNLqurXAgtY8AnBLMT0VQOS
                f89Oa1K8E/aXnlS28NW6yMIZGuXZOxZRGAfwDN+dAHa+Bfi3aePPFV1pFlpU1vBDbPcLcTTKWba6LjYA
                QPv5zuPSvRicV8w/s4n/AIuFf/8AYKk/9GxV9PNjGT25oA5Xxj8Q9B8DwRnVZ2NxKN0VpAu+VxnGQMgA
                e5IHXrivMJ/2jpm3SWfhGR7dT/rZLs8j3wmB+Zrj77VNL1X9oe4l8UOh0uHUZLZ/O/1YWMMkYYdNu5Vz
                njk5719Rw+V5aGHb5RX5NhG0jtj2x/SgDwZP2l5APn8KIx7bdQx/7Tr0/wCHnjW88daLNq82jrp1r5vl
                QD7QZTKR94/dXABwB7g+lVvGvwu8PeMbSVmtI7PUcfu72BMNn/bH8Q+vPoRW94U0GPwx4V03R0Kt9kgC
                uyjh36uw+rEn8aAKHjH4h6D4HgjOqzsbiUborSBd8rjOMgZAA9yQOvXFeYT/ALR0zbpLPwjI9up/1sl2
                eR74TA/M1x99qml6r+0PcS+KHQ6XDqMls/nf6sLGGSMMOm3cq5zxyc96+o4fK8tDDt8or8mwjaR2x7Y/
                pQB4Mn7S8gHz+FEY9tuoY/8AadenfDzxreeOtFm1ebRxp1r5nlQD7QZWlIHzH7q4GcAe4PpVfxr8LvD3
                jG0lZrSOz1HH7u9gTDZ/2x/EPrz6EVueGPD/APwjXhCw0W2aPzbW3CeYVJVpTy7Y64LknHvQBkeOfido
                XgWNI712ub+Qbo7O3wXx/eYnhV+vXnGcHGB4D+Nmn+MteXR59Mk027mBMBMwlSTAyQThSDjOBgjjrVP4
                seDND0z4X63qS2i3Gq74ZW1G4Ae4dzLGpJfHAwSNowo7AV4H4Blki+IvhtkYqTqdumR6GRQR+RxQB9tg
                5ANDHAyKBWfrms2Xh/RLvVtQk2WlrGXdh19AB7kkAe5oATWNd0zQNPe+1a9htLZOC8hxk88AdSTg8Dng
                15Pq/wC0XoNtIyaXo95f7eA8rrAje4+8fzFeYfatb+NHxFt7W5neK2d2ZIgdyWcA5YgdC2MDP8Rx+Hsm
                ofAXwdPob2tlBPaX3lny7wzu7bscFlJ2kZ64A9sUAYOi/tEaKbt1v/Dc2nxzSbpZraVZsk4G9htUntk8
                nAHXpXs2m6tY6xp0OoaddRXVpMu5JYmyD6/Q54x1HQ18MXtpPpuo3NlcLsntpWikX+6ynB/UV7r8B9H8
                UadaXmss840WVD5VjgE3cvQMmSAoB43dD9BkAHrvi7xpo/grSjfatPt3ErDAnMkzDqFH4jJ6D8RXL/D3
                4wWPjzV7nS/7Nk0+5RDLDumEiyICAcnAw3I457815N8YvCPie0SHxX4h1O0uHupxbi2ty+22BDMqpkD5
                cK2ehzk85JrG+CEzp8WdIVcYkSdW+nkuf5gUAfXEsyQQvLK6pGgLOzHAUDkkk1494h/aG0XTb9rXR9Nl
                1VUO1pzN5EZP+ySpJHuQPy5pvxG1HXPH2uy+BfCLKIbUb9VvGkKRKe0bMOwIOQASSMYG1q8F8U+F9T8H
                a7Jo+qLH9oRQ6vEdyOh6MpIBx17DoaAPrvwR4303x1op1CwV4njby57eXG+JsA9uoPUHv7EEV0rEgcDN
                eI/s4aRdWmhazq0qMtteyxxwZBG7y9+5h6jLgZ9VI7V6d408WWfgzwzc6veDfs+SGEHBmkOdq/1J7AE9
                qAJ/EXivRfClj9s1rUIbWM5CA5LyEdQqjluo6dMivKdR/aS0qGQjTdAu7pB/FPOsOfwAevPfCekap8ZP
                H8txrd7M0ESebcyJwI48/LHGOQuSTj/gR5Oa9R8W/Anw1ceG7hvD9rLZanDGXiIneRZmA+6wYnr2Ixgn
                8KAItC/aK0PULpINW0u40wOcecsgmRfduFOPwNev293Dd28dxbzRywyKHjkjbcrqRkEEdQR6V8FKAepw
                K+ofgVoPiXSvDUkusXMiabcYeysZR80Y6l+fug9dvfrxnkA6Pxn8VPDvgmb7JfSS3GoFd32S2AZlB6Fi
                SAv484OcGvO5/wBo66CedD4QIg/vyXh5/KPArj/hjq2kaz8XptV8TyQlrppZrY3GNn2hnG0HPAwpbGeh
                AxzivqgKrAgqCMYIP8qAPA4/2l324fwmGb1XUMfp5deveCfEV54q8NQazeaYNOFyS0MPnGUmPoGJ2r1O
                SPbB71y/jv4O6F4rga4sYo9L1XO4TQxgJIf9tRwfrwa9BsbKDTrK3s7ZAkFvEsMajsqgAD8gKALNFFFA
                DXUMhVgGU8EEZBFfO/jP4P674b8QL4i8DB5EjlM8dvGR5tu2c4UH769scnHGDX0URmk2igDyPQfjbaW8
                Mdr410290PUEG13ktX8tz6gY3g+2D9a2Ln4tWGoRiHwlpWpeILuThPJt3ihB/wBuRwMD8K9ECgHIo2ig
                DlPBWgalpy3+ra9Ok+uao6yXBiz5cKLkRxJnsoJ98k5z1Plf7TP/ADK//b3/AO0a9/wBXgH7TP8AzK//
                AG9/+0aAPAB1r75uJUgtnmkOI41Lsc9AOa+Bh1r7h8au8fgLxC8ZIddLuSpHr5TYoA+MNd1e413Xb7Vr
                pi013M0xz2yeAPYDAx6CvuDTLCLTNJs7CEbY7WCOFQD0CqAP5V8HjkjgkCvsLxN49NtBYaZ4dgXUfEOq
                RCS1gU/LEjDPmyHPCgHPvQB4R8XvOuvijrVjCu/zJLd/xFug/qaoaZpkWnQYHzSt99/6CtfxF4bufDHj
                KSC+vGvbq7s0upbpufNZmIYj0G4ED2AqvzjmvKxtaSfItj7/AIZwFJ01iZ6y2XlYCc0lFFecfY2QVl69
                Ym9scoP3kR3D3HcVqUDqKunNwkpI5sZhYYqjKjPZnLeHtRFvKbSY4Vz8pPY11NYWqaB57me0ISQnJQ8Z
                PsadYajc2x+y6jC67eFkI/nXZVjGt+8p79UfO5bXr5c/qmKT5V8MrafM2685uDunc/7Rr0YEMuVIII4I
                PWvObgYncf7RrXLvtHDxe7qk1tqdJ4U5juT7r/WuiNc14Ucf6QnqAf5/410tc2M/jM9vhp3y+HzCiiiu
                Q98BXn+pDGqXQHQSt/M16BXn1+3m387j+Jyf1r0su3kfFcYNezprzf5HsH7N1kz+LdXvgDshsRCT2y8i
                kf8Aos16D8fNdk0r4eGygcrJqVwtu2Dg+WAWb89oB9iar/s/eHzpfgeXVJE2y6pOXXj/AJZplV/XefoR
                XOftLu4i8Mx5+Qm5JHbIEWP5mvUPgzlPgBZR3nxKM7gE2dlLMmexJWP+UhFeweOjbv8AEjwK1w+yG1a+
                uZZCcCNUiVtzE8BcgZP1rx/9n68itfiHcLK6p52nSopY45DI/wDJTXUy6evxd+KmpSWF4Y9A0+2itLue
                JgDcpvLbV44BYNz3Ce/ABlaZ4Qm+MXxH1XxJIklv4dM4TzcbWmVFCKq57lVBPpnHWvovT9Ps9M0+Cxsb
                dLe1gQLFFGMBRRp2n2ml2EFlY26W9tCgSOJBgKKtUAef/GtQPhFrh5yPI7/9N46+VfDVxeWvinSZ9OgW
                4vYr2F7eFukkgdSq/iQB+NfVfxs/5JDrv/bD/wBHx18weBP+Sh+Gv+wra/8Ao1aAPrDwL4QPhnTZp76b
                7ZrmoN5+o3Z6u/XaD/dXOAPr0zgcf8U/CV38QPGfh/RLYvFBZwS3F5dbcrEkjKq/Vj5TYH49Aa9c2g5z
                QsaqSVGCTkn1PTP5UAZugaHp/hvR7fStMgENrAuFHcnuSe5J5Jryb9oXxZLYaRZeG7V9rX2ZrnB58pT8
                q/Rm/wDQa9sIr5N+O18918VL6FjlbSCGFfYFA/8ANzQB3f7N2iR/2frGvOqmV5Vs4m7qFAdx+O5P++a9
                3xXin7N+pwP4Y1bSwwE8N59oKk87XRVz+cf617VnnFAHgP7TP/Mr/wDb3/7Rrn/2cv8AkoWof9gqT/0b
                FU37QPivSNf1TSbDS7tLqTTvP+0SRHMYZ9mFDdCRs5x6jvkCH9nL/koV/wD9gqT/ANGxUAXv2jNdln8R
                6boaP+4tYPtDqO8jkjn6Kv8A48a6f9nCyjj8J6vfhQJZr4QMfURorD/0Ya8u+Nzu/wAW9ZVySqrAF9h5
                MZ/mTXovwM8SaXoHw11y51K5jggtL4zSMeTho0CgDuSUIAoA9V8Z+KLXwf4Xu9WuGUtGu2CMtjzZT91f
                8fQAntXkHwg+D/mm38S+Jrf5eJLOykX73pI49PRfxPaux0PQb74ha1b+LPFNq0GlwfNpGkydgf8AltKO
                7Hggf5Pp4GKADaPevIP2jQF+HengdP7Vj/8ARUtewV4/+0d/yTzT/wDsKx/+ipaAPBvh82sjxvp6+HlQ
                6rIJYrdn6Rl4nUv/AMBUlu/3eh6V9ceEPCtl4Q0GPTbQmSTJkuLl/vzyn7zt/T0FfMHwTGfi7oY/67/+
                iJK+vtgoA8Z8YeApPiN8XCZRJDo+lWcVvdzjjzJMtJ5an12yAnrj8RXr9hZW2nWMFnZwpBbQxiOKNBgK
                o6Cp0jVBhFCjk4A9eTTqACiiigBD0r5F+M/iOTXviPfRB822nH7HCvYFT85+u/dz6AelfXR6V8Gahdtq
                GqXd7ISWuJnlJPUliT/WgD7A+FOkxaT8M9DiRAGntlunOBlmk+fJ/AgfQCuzxjFcj8MNUh1X4baDLCyn
                ybRLVwDyrRjYQff5c/Qg966S/wBRs9LsZb2+uYre2iGXllcKq/UmgD5L+Nn/ACV3XP8Ath/6Ijr2D9nL
                /kn2of8AYWk/9FRV4Z8S9esvE/xB1bWNOLtaTuixs6lSwSNU3YPIB2kjPODXuf7OX/JPtQ/7C0n/AKKi
                oA6z4ra7L4e+G+rXlu5S4dBbxMOoLkKSPcAk180/CSyj1H4p6BbyqGRZ2mAPrGjSD9VFe2ftFu6fDqzC
                kgPqkatjuPLlP8wK8X+D9zHa/FfQZHICtLJGM+rxOgH5kUAfYRxjJJ+tfOniPSJ/jH8WZxpRC6NpsSWk
                uoAbkwpZjt/vEszAeoGeleg+I9bv/HOqXPg/wtOYrOM7NX1dDlYV7wxn+Jz0PpyPWu48PeHtN8M6PBpW
                lW4htoRx3ZmPVmPdj3NAB4f8P6b4Z0eDStKthBbQjgdSzHqzHux7mtXFGKKACjGaKKADFIxwMilrxb4i
                fEXWtS8QnwR4GSR9R3GO5u4vvI3dUbou3+Ju3bBoA9E8SePvDXhI7NZ1WCGcjIt0y8p9DtXJAPqcD3rz
                nUP2kNDiYjTtEv7oDvM6wg+4xuNO8Ofs+aXFGLjxPqFxqF5J88kcDlIw3fLEbm+uV78V1P8AwpP4ef8A
                Qv8A/k7cf/HKAOA/4aZ/6lH/AMqX/wBqo/4aZ/6lH/ypf/aq7/8A4Un8PP8AoX//ACduP/jlH/Ckvh5/
                0L3/AJO3H/xygDyrxL8fIfE3hnUdFn8KiNLyBoxIdQ3bG/hbHlDODg4yOleL9T6mvqXxZ8IvAmleDdc1
                Cz0Pyrm20+eWGT7XOdrrGxU4L4PIHWvlrOKAPTPh58XZ/AHh650tdHF/51wZ0drkxhCVVcbdpz93PXvS
                +Ivjn4v1yJ7e1lh0qBhg/YlIkI/66E5B91wa3v2f/C2jeIBr0+s6Va3wgNusPnoHCk+Zu4PHPy/lXvkH
                hrQrO2kt7XRrC3hlQxukFske5SOR8oFAHg37OulteeJtZ1qYljb26xBm5+eVs557/Ifz967P9oHXpNM8
                DwabA5V9SuAj46mNBuYf99bPwzXQfCzwXJ4J0HULKX5nm1CZ0kOMtECFjJ+oXd+Nef8A7S8Ttb+Gph9x
                XuVP1IjI/wDQTQBzP7O0aS/ES6ZgCYtMkdTjofMjH8ia+oMZr5T+AV8tp8TooSSDd2k0IHqQBJ/7JX1a
                KAKup6fDqulXen3C7oLqF4ZB6qykH+dfCVzBJZ3k1tKMSQyFHHuDg/yr73PSviDxuip4+8Rogwq6pchQ
                OmPNbFAH1X8J71tT+F2gXEpLMtuYcnriN2Qfogr52+Nf/JXdcHb9x/6Ijr6M+FWnPpXwx0C1kBDm284g
                9R5jGT/2cV85fGzj4va5/wBsP/REdAHT/Bnw5d+LrMWV+n/FOabfm+kj/wCfq4KIqI3+yoUk/wC9g9eP
                pYYAx0ryH9nMA/D7UM/9BWT/ANFQ16/jAoA+AjX274G/5J54Z/7BVr/6KWviI9/rX274F/5J54a/7BVr
                /wCiloA+b/jpr0mrfEe4st+6302NbeMA8biAzn65OP8AgIr2X4EWEVr8LbK4RQGvJ5p5PchzGP0jFfOH
                j52l+IniQuSWGp3Iz7CRgP0Ar6R+BF7HdfCuxhQgtaTzQvjsS5k5/BxQB6QVyOprl/GngLSfHC6YmqeZ
                ssrgy4j4MilcNHnsCQuSOfl4x1rqqCM9aAM+Z7PQ9FlkWNILOyty/lxjaERFyQPTgV8Parqd1rGr3epX
                jb7i6maaQ/7ROTj0HoO1fanjOBp/AviCCMZeTTblFHuYmAr4e96APvmCJLeFIYxhI1CgegHAqQjIxVHQ
                70aloOnXynK3NrFMD7MoP9avmgD5b/aD0hbDx/DqEa4XULRXc+rp8h/8dCVpfs3ag6eKdY0/J2T2QnI9
                Sjhc/wDkQ1o/tLool8Mvj5iLoH6AxY/mao/s26a8niPWdTx8kFmtufrI4Yf+i6AOv/aO/wCSeaf/ANhW
                P/0VLXj/AME/+SvaF/23/wDRElewftHf8k80/wD7Csf/AKKlrx/4J/8AJXtC/wC2/wD6IkoA+wK+f/2m
                f+ZX/wC3v/2jXv8A6V88/tLXcMl74csw4M8UdxK6+iuUCn80b8qAMf8AZx/5KHqH/YKk/wDRsVfTx6dK
                +Yf2cf8Akoeof9gqT/0bFX08wyOaAPj/AOL+gz6F8StVZo3WK+k+2Qvjhw/LY+j7h+FUvCfxN8UeD9sW
                n35lsgRm0uR5kWPQA8r1/hIr6t8U+D9G8Z6ULHV7cSKpJimTiSI45Kt2/HIr5w8Y/BPxH4aaS601Dq2n
                DJEkC/vUH+0nU/Vc/hQB614N+OWgeIzHaaqBpGoMcfvXzDIfZ+MfRsfU16mPu4x04Ir4HYMrMrAhhkEE
                YwfSvoz9n7xjd6rYXvhu/maU2May2jPyyxE7SmfQEjHoGx0AAAPLfi/oM+hfErVWaN1ivpPtkL44cPy2
                Po+4fhVLwn8TfFHg/bFp9+ZbIEZtLkeZFj0APK9f4SK+rfFPg/RvGelCx1e3EiqSYpk4kiOOSrdvxyK+
                cPGPwT8R+GmkutNQ6tpwyRJAv71B/tJ1P1XP4UAeteDfjloHiMx2mqgaRqDHH718wyH2fjH0bH1Neprg
                jHpxivgdgysysCGGQQRjB9K+jf2fPGN3qljeeG7+ZpTYxrLaM/LLFnBTPop249M46AAAHXfGz/kkOu/9
                sP8A0fHXzB4E/wCSh+Gv+wra/wDo1a+oPjZ/ySHXf+2H/o+Ovl/wJ/yUPw1/2FbX/wBGrQB9vdBmvDf2
                j9dkt9J0nQ4nwt1I9xMAeoTAUH2yxP1UV7lXzJ+0dI58eadGSfLGmIQPcyyg/wAhQBpfs2WMcuq6/qBU
                eZBDDCp9A7Mx/wDRYr3rWNVstB0e61PUJvKtLWPfI3f2A9STgAdyQK8C/Z11Wz0x/FBvLiOCIQQ3DySN
                gKiGQMT7DeK7aK0uvi7qkV9fRS23gu0k3Wtu4KvqTj/low7R+nrn8gDhPh/8N5vH/iO88YeILYwaVc3c
                lzHbcj7QzOWIH/TME4z3/Ovo2GGOGJIoo0jjRQqogwqgcAAdgKIYo4YkjiRUjRQqqgwFA4wB2A9KlxQB
                4/8AtHAD4e6ef+orH/6Klrwb4fNrI8b6evh5UOqyCWK3Z+kZeJ1L/wDAVJbv93oele8/tHf8k80//sKx
                /wDoqWvH/gmM/F3Qx/13/wDRElAH0/4Q8K2XhDQY9NtCZJMmS4uX+/PKfvO39PQV5x4w8BSfEb4uEyiS
                HR9Ks4re7nHHmSZaTy1PrtkBPXH4ivZtgoSNUGEUKOTgD15NAEFlZW2m2MFnZQpBbQRhIokGAqgcAV87
                ftGa7LP4j03Q0f8AcWsH2h1HeRyRz9FX/wAeNfSJ6V8ifG53f4t6yrklVWAL7DyYz/MmgD1H9nCyjj8J
                6vfhQJZr4QMfURorD/0Ya9J8Z+KLXwf4Xu9WuGUtGu2CMtjzZT91f8fQAntXlXwM8SaXoHw11y51K5jg
                gtL4zSMeTho0CgDuSUIArp9D0G++IWtW/izxTatBpcHzaRpMnYH/AJbSjux4IH+SAcd8IPg/5pt/Evia
                3+XiSzspF+96SOPT0X8T2r38/KM/zNKBikf7voO59KAPiHxhoM3hnxZqekzRsnkzt5ZPG6InKN+IINdB
                4T+LvivwqEgjuxf2KAAW15lwo/2WzuHHbOPavpHxr8PdD8cWapqMRju41xBdw4EkfXjP8S5PQ/pnNfN3
                jH4R+JvCTyT/AGZtQ05ST9rtUJCj1dOq/Xke9AHvngv4weHvGLxWZY6dqj4C2tw3EhPZH6N9Dg+xr0FD
                kmvgXp+YPBr6v+CHjC78VeEJYNSnae+06QQtK5y0kZGULHueCM99vPOTQB6dRRRQAUUUGgAoppbBxxn0
                qKW7gt033E0cK4zl2AH60ATmvn/9pnn/AIRf/t7/APaNev3vjnwpYIxufEmkoVGSn2xC35A5/SvmT4ve
                O7fxx4mibT/M/s2xjMUDSLtMjE5Z9vUZwBg84AzjpQB56K+9ry1jvrC4s5hmKeNon+hGDXwSvWvtrwP4
                li8W+D9P1aNgZJYgs6g/dlXh1/ME/Qg96APjXV9KuNE1q90u7QrPaTNFIPcHqPbuPavbvgb4q8KWFhcW
                eozx2WuyEK91dTACeMABERzgLtAA2/Qg9h0vxW+EZ8Yz/wBt6PJFDqyptkSQ4S4UdOezAYGTxwPrXg99
                8OPGunTGGXwzqbsOMwQGcfmm4frQB698aJIzr3hy7inSRLiGdPkO4EAoQc++R+XevN5tQt4iEDiSQ9EQ
                5P4+lYs/gLxVZ6TNqt5ol3aWUG3zZbhfLKgsFHynDHkjoK09L0iLT18zd5kxHLdh7CvPxkIJ88mfY8N4
                rESpvD0UrJ3cn0+RoLu2jdw3celLRRXks+9jdLUKKKKCw/Clyf8A61JRTu73JcU1YXqMVwGpxeTqNwmO
                khI+meK76uU8T2pju1nA+WRcH6iu7ATtNrufKcV4Zzwqqx+y/wAGM8Ly7dQeP++hA+vX+lddXn+m3H2b
                UYZckAMM49O9egZz/OjMIWnzBwlXU8NKl1i/zCiiiuA+sZFczC3tZZj/AAIT+lct4X8PXPi3xTZaRbZD
                XMg8yQD/AFaDlmP0Ga0vEt55cC2q/fcgsPb/AD/KvcvgX4GGg+Hzr16n/Ew1JAUB6xQZyB/wLAY+20dj
                XsYGHLDmfU/OOKsUquJVKO0fzZ6nYWNvpmn21jaxiO2t4liiQfwqowB+QFeY/tAeH5NV8Bx6jCm6TTLg
                Sv6+Uw2t+RKH6A16xiobq3hurWW3uI1khlUxujdGUjBB/DNdx8sfCNjOtpexyssrRgkSxxyeWzoeGXcA
                cZXIPB69K+m/ghP4dt/CA+zXliup3kzzXUCyASRncQi4ODtC4x1GS3NeReNvhdeaR44Oh+HFl1MTQfa4
                4kGXhj3EYc9ODjnjqO5rml8BeMGkEY8LazuzjmxkA/PGKAPtK7vrTT7dri8uYbaFR80k0gRQPcnFc5pP
                juw8Sa4+n+H1a+t7fm7vwMQx+iqf42PtwBk5OMHwjwp8BPEWqXEc2uFdJscjcCQ87j/ZVcgfUnj0NfR2
                geH9N8N6PDpWl24gtYRwAclmPVmP8RPqaAOT+NZJ+EWu5GP9R/6Pjr5i8CY/4WF4bJ7apbH/AMirX1P8
                XNNvNV+GGsWOn2s11dzGARwwoWZsTxk4A9ACfoK85+F3wTu7DVLbX/E/7mW1kWW2skcMd6nIZyOBggEA
                e2emCAe+ClpAOv8AjS0AIen418m/Hexks/ilezuDtvIIZkPqAgj/AA5Q19ZEZrzz4rfDVfHmkQyWcscO
                rWefIeQ4WRT1Rj29QeefrmgD5W0XXdU8P6il/pN7LaXSDAeM9R3BHQjvggiusHiz4g/EW8i0Iard3jT/
                ACmCJFiQr3L7AAV9d2RWJpngnWtU8XHw1aQRyahHIUm2yq0cQBwzM6kgAd8ZOeOvFfV3gLwBpfgTSTbW
                f768lwbm7ZcNKR6D+FR2X+fWgD56+Kfw+s/AGi+G7eOUz39z9oa7nycMR5WFUdlGWx3OST6DT/Zx/wCS
                hX//AGCpP/RsVb/7TAx/wi+P+nv/ANo1gfs4/wDJQ9Q/7BUn/o2KgCz+0R4fks/FVlriL+4voBEzekkf
                r9VK4/3TXCfDvVtD0rxdaTeJLd59KDh2UElEkGdjsn8YXLcf7XfofrPxh4UsPGXhyfR7/cqOQ0cqgFon
                HRhn8R9Ca+YfEPwa8ZaFcOsWmNqVuCds9l8+4f7n3gfw+hNAH1XpWt6XrMIn03UbW7jYA5glV+vrjp/n
                pTdY8RaRoFu0+q6la2cajP72QAn6DOSfYDNfHlr8OvGl5MsUfhfVlYnGZrR4l/FmAA/OvVfAnwAmW5jv
                /F0sYRCGXT4W3E9/3jDgD2XOfXsQD2Pwx4lHiqCXULO0li0rO22nnBV7n1cKfup2BPLc8DHPn/7R3/JP
                LD/sKx/+ipa9bhijhiSKJFjjQbVRQAFA6AAdBXmnx10PU/EPgzT7HSbGe8uP7TjcpChYhfKlGT6DJAye
                ORQB4d8E/wDkruh/9vH/AKIkr6/BJPtXjnwn+Dsnha9i1/XZP+JqisILaJgVg3DaSxH3mwSMDgZ79vY8
                AUALRRRQAUUUUABr4N1Wyk0vV72wkBEltO8LA8kFWKn+VfeLdK+fvjL8J9Svtal8SeHbN7oTgG7tYgN6
                uP41HVgRjIGTkH14API/DXjbxH4TMq6Hqktos2N8YVZFJ9drgjP4V02hWPjP4xa6tve6rczWcBD3M8h/
                cwKc9EXC7iMgAAZ56DJqTwd8FvE/iG9Q6jaTaRYA/vJbqPbIw9FQ85+uBX0/oHh/TfDOkQ6ZpdusNtEM
                8fedu7Me7HuaAPkT4l6HY+G/H2oaPp0bJaWqwKm47icwxkknuSST6c8V7h+zocfD6/8AU6rJ1/65RVmf
                Gr4X6hrl9/wkuhQG5uPLCXVqnLvt4DqO5xwR7DFZPwy8A+PJrCTT768vNB8Oyy+dPAAI57hsAEDjegIU
                A5I6dD2APTvizoreJvhpqcNqBLPbj7TEF5y0Z+YDHfG4fWvkCKSSGZJYneORCGR1bBUjkEEdMda+8ra1
                gsrWG1tokhghRY441GAigYAA+gr58+IfwL1BdSm1LwnFFPbzOXax3BHiJOSEzgFfQdRkDkdAD0T4Y+K/
                Bk/heysNGmttOkjQebYzyBZQ+OW5xvyedw7EdOg9BmuIreAzSypHGvV3YBQPqa+K5fh/4ximMTeFtY3D
                jK2UjDP+8AQa6vw18DPF2tTo2oQLpNmeWluSPMx7Rg5z/vYoA+gI/iBpeqa8mh+HXXVbz7080Bzb20fd
                mfox9FXOTwSvUdaGyeOlc/4P8G6T4M0ZdO0uIjJ3TTP9+Z/7zEfoBwK6EADpQAtFFFAGL4v1k+HvB+ra
                suPMtbV3jz034wv/AI8RXm/7P/h5IfC914luQXvtUmdRMxy3lq2Dz6lwxPrgeldJ8ad//Co9d2ZziDOP
                Tz48/pmqvwKvIrr4VadDG2WtZp4ZB6MZGf8Ak6/nQB6OAB0paKKACiig0Acj8UbpbP4Y+IZGIAa0aLJ/
                2yE/9mr4vx9a+qP2gNXFj8OvsIYeZqF1HHtzyVX5yfoCq/nXy0iPJIqRqWdiAoAySew+tAH0z+zpp5g8
                E398ylTdXzBeOCqKoz+ZYfhXsVc74F8P/wDCL+CtK0dgPMghzLj/AJ6MSz/+PMa6KgBMV518a/DMniP4
                e3DW0Ze609xdxqoyWUAhx/3ySfqor0akPTmgD4d8Jay3hzxbpWsDcUtLhXcL1KZw4H/ASa+2rK+ttQs4
                LyzmSa2nQSRSIchlPQivBviJ8C7ue/n1TwkI3SZi8mnM4TaT18snAxnscY7Vxehx/FnwiTZ6RYa/bx7j
                +6WyaaIE9SAyso+ooA+ofEWvWfhvQLvV76QLDbxlsZwXb+FF9ycAfWvlTwH4QvPiP44knnRxY+ebrUJl
                HADNu2A/3mOQPbJ7V21v8OviR8Q7qCXxpqclnYIQQsmzcf8AdiTAB7ZbGK9y8OeHNM8LaLBpOlW4htoh
                knq0j93Y92OOv4DAAFAGrGixqqoAEAwAOgHavkP42f8AJXtc/wC2H/oiOvr48Yr5q+Ivw78T+Lfi5q8m
                maZL9ll8nbdzfu4TiGMEhj97ByPlyeDQB2/7OX/JPb/31WQ/+Qoq9fNcr8PfBkPgXwtHpMc/nytIZ7iX
                GA0hABwPTCgfhXUtwKAPgP3NfbXgdwnw88OFiNq6Va5Oeg8lf89q+YvFXwn8U6Hr1xa2WjXl/ZtIfs9x
                aQtKrJnjdtztPYg4wRxkc17P8OfB3i82FiPGWqTDTrFVFnpCMgHy42+ay/eC4GFJPIGemCAeJfF3S30v
                4na0rKQk8wuUOMBhIAxI/Ekfga2Pg38R4fBeqz2GqMw0m+KlpBk+RIOA+PQjg/QenPr/AMWvhe3jq3t7
                /Tpo4NXtUMa+aSFmTrsJ7EHJB9zn1Hz3ffDXxrps3ly+GdSdhxmCEzA/imRQB9l2t7b31tHc2k8U8Eih
                o5YnDK49QR1qlrfiLTfD1oLjUrhYg7bIoxzJM56KijlmORwP0r5V8O+DPidE/l6NYa7pu8/MfNezB9zu
                Za9u+H/wqm0TUV8QeKdQfVde2/u2kkaRYPUhm5Zu2e3b1oA9JVjdWgE8GzzE+aJyDjI6HBI784yPc9a+
                JvF/h2bwr4q1DR5gxEEreUzLjfGeUb8Rg+1fcG0A5yemK4L4l/DKy8fWEciyi11a3BEFyVyGU87H77c8
                +3bqQQDP+B/imDW/AdtppmU32lgwSRlvmKZJRgPTB2/Va9M3e3HrXyG/gH4i+DdTE9hpepLcIxVLjTQZ
                Qy/8AzwcdCPwFdTan44eKrc2Er6ha2sg2ySXEEdngdDltqufwyaAKHxt18eLPH1rpGlo90tiPsyiEbzL
                OxBZVx1x8q8dwete5fDPwaPBHhCDTpSrXsp8+7ZenmEDgH0AAA+meM4rJ+G3wn07wQPt1xKL7WHTabjb
                hIgeojHX23HkjjgEivRwAOlAHkf7RkbP8O7IqMhdUjJ9h5Uo/mRXhXwz1u08OfETR9Vvm2W0UjLI5GQi
                ujJuPsN2fwr6r+IPhg+MPBOoaPGypcSKHgZugkU7lz6A4wT2BNfKS/Dbxmb5rQeGdT81TtLfZzsz/v8A
                3fxzQB9K+KPi94U8PaU1xBqdrqd0V/c29lMshZv9orkKOmc/ka+cvHtj4juDY+K/EgEc+uNK8MJBBSOM
                Jjg9Fw4AHXjPfNev/Df4HR6RLFq3ikRXF4nzRWAw8UZ7Fz0Zh6dB79tD47+DNU8UaLpt5pFq91Pp8km+
                CPlyjhckD+IgoOBzzQB51+zpKkfxEvFZ1VpNLkVAxxuPmRHA9TgE/ga+jItetL3Vn02wkS6lgG66eI7k
                gHZWI/jP93qByeMZ+WvCXwb8V+Ir9Fu9PuNJsQw824u4zGwH+yhwWP6e9fUXhvw7pvhXRINJ0uARW8Qy
                WP3pXI5dj3Y4/pwAKAOE+EHjuLVtPPhbUptus6XmBN/BuIk4DD/aA4I9s9zj1FSGJwOozmvm3x58KvFe
                l+MrrX/DFvLPbzXDXUbWjgTW7k5Ixweucbc8cVv6D8TviZYQLb6v4B1LU3Xjzls5YHb3YhCv5ACgDp/i
                58O9F1vwzqWuJAlrq1jbSXAuI1wZlRSzI4/iyAcE8g45xkHzf9nK0kfxlqt4FJhi08xMwHG55EI5/wCA
                N+Vdlr03xM+Imlto8Phy38OabdALcTXd3vkdc8qMAEA9xt56ZFdt8P8AwNZeA9DNhbyG4uJ2ElxcMMGR
                scADsoHQc96AOa+EHjuPVtOPhjUpSusaZmBPM4NxEnAI9WUDBH0POTj1FSGJwOozmvm3x78KvFemeM7r
                X/DFvLPBNcNdRtaOBNbuTuIxwfvZxtzxwa39B+J3xMsIFt9X8A6lqbrx5y2csDt7sQhX8gBQB0/xc+He
                i634Z1LXEgS11axtpLgXEa4MyopZkcfxZAOCeQcc4yD5x+zhaSP4z1W8VSYYtPMTMBxueRCOf+AH8q7H
                XpviZ8RNLbR4fDlv4c026AW4mu7vfI655UYAIB7jbz0yK7f4feBbLwHobWNvIbi4mYSXNywwZGxgADso
                HQc9TQBnfGz/AJJFrn/bv/6Pjr5g8C/8lC8NEf8AQVteP+2q19geM/Dw8VeENS0QuI2uotqORkK4IZSf
                bcBXyjF8NfHVtrS2sHh/Ukuo5BsmjQiMMCMMJeE/HPGKAPsgyAEAkDJwAepPXj8jXhf7R+gSzWek+IIk
                ykDNa3BHYN8yH6ZDD6kV6R4I8Oazptt9u8Uaq+pa3NHtZsjy7dM52IAAMngscAkgdgK39c0az1/RbvSr
                +MyWt0hjkA6j0I9wcEe4oA+KfDV9p9hr9pLq8E1zpfmKLu3ik2mVAQcH1AIBx3xjI6j7L0DxJ4e1u0iO
                h6lZzwhRsjhkAKL2Bj4K/QgV82eKfgd4q0O7kbTbX+1rHcSkkDDzAvYMhIOf93I+lcrF8P8AxlcSeWvh
                fWQexeykUdfUgCgD7L1HVtP0i2NzqN9bWkIHMlxKEH61j+HPGNv4tu7h9Ggkk0q3OxtQkUos0n92NSMk
                DuxxjjAOcjxHwb+z9qt5dR3XiiVbK0U5NrC4eWT23DKqPfJP0r6J07T7TS7GGxsbdLe1hQJFFGMKo9qA
                PKv2jv8Aknth/wBhWP8A9FS14/8ABP8A5K7of/bx/wCiJK9x+Omhan4g8GafY6TYz3lx/acblIULEL5U
                o3H0GSBk8cisr4T/AAdk8LXsWv67J/xNUVhBbRMCsG4bSWI+82CRgcDPfsAexgkn2paTAFLQAGvmj9oj
                w/JZ+KrLXEX9xfQCJm9JI/X6qVx/umvpesDxh4UsPGXhyfR7/cqOQ0cqgFonHRhn8R9CaAPkz4d6toel
                eLrSbxJbvPpQcOygkokgzsdk/jC5bj/a79D9gaVrel6zCJ9N1G1u42AOYJVfr646f56V8qeIfg14y0K4
                dYtMbUrcE7Z7L59w/wBz7wP4fQmsW1+HXjS8mWKPwvqysTjM1o8S/izAAfnQB9h6x4i0jQLdp9V1K1s4
                1Gf3sgBP0Gck+wGa5ybxA/jDwN4hutOtprfTpLCeOzuZAVkuCY2HmKvVVz0J5Y54GOfNPAnwAmW5jv8A
                xdLGEQhl0+FtxPf94w4A9lzn17H3xYI44FgSJFiA2CNQAqr0wAO2O1AHEfDD4gW/jfw5EZZFXWLZAl3E
                SAWI48xR/dPH0OR6E9zwSRx618t6r8MfHfgbxM+oeGobqeGNybW6siHfYeiunXOOCMbT713WjfFP4iRQ
                rBqXw41C8mxjzYoJrcE+pyjD+QoAb8cfh7o6+HLvxZYwrZ39vIjTiMYS4DuEyV7Nlgc9+c54xB+zTaSp
                YeIrwqRFLLBEp9WQOT+jrVzxFo/xE+KEMWnX2mWvhrRPMEsiy3AllkI6Z29cdhhR78CvTvCPhew8H6BB
                pGn5aOPLPI33pHP3mOO54/ACgDdooooAQ1T1XVbPRdLuNS1GZYLS3TfLI38I/qfbuau1SvNKtdQntZLu
                PzltZPOijblBJ/C5Hcrzj0Jz1AIAPPpdK8ZfEFvPvNSuPC+gucw2VsMXkydmlb+DI/h5xnBHGajX4B+D
                GQiZtTnkbrNJdfN6dlA/SvUAgFOxQB5SP2e/Bg6S6r/4EL/8RVWT9nLwidxXUdbBPT9/EQP/ACHXsFBG
                aAPlXxv8D9b8MQS6hpch1bT4/mfYm2WIerJzkDuR9cYzUfwa+IC+ENfOn6jLt0jUGCyEniGXor+w7H2w
                e1fVhAA4rxX4p/BmPV2l1vwxAsN+ctcWSgKk/H3kHQP6joevB6gHtKkNghgcjIIPanFRXzz8KPi2+jun
                hfxZLJHFEfKtrqcEGAjjy5M8heMAn7vQ8dPoOORZY1dGVlYbgVOQQehoAzfEGkx63oV7pkpUJdQvDvKh
                thZSAwB7jr26V8u2+9YvKlULNCfKkXduwy8Ef59a+tT09Dmvm/4h6VHoPxGvoov9RqcYv41BJ2uSRIOe
                5YM3oMgCuTGU+enddD6DhvGLD4pQltLQ5/8AIfWsyfX7GCYxku+OpUVpOodCjdGGDXG6xpTWEwkRt0Mh
                4PofQ15+FpU6kuWe59jnmNxeEpKphkrLd9jsIJo7iBZY23IwyDT6yPDTltJwf4JCB+QrXrGtBQm4o9LL
                8S8ThoVnvJXCiiisjuCqeqWQv7F4QBvHKE+tXKKqE3CSkjDEUIV6Uqc1o0ecvGYpCrAqynBHpXaaHfC9
                sVUn97GNrD29aZqmiRX+ZYyI5/Xs31rFhsNU0m5EsULse+3kEfhXqznDE07Xsz4XC4fFZLi+blcqb6rt
                /mjr6iubmO0t2mkb5VHHqT6CqltqU88fOnXKyf7vy/n2pBYSXNys984bbwkK/dH1rz1R5Ze/sfVyx8q9
                P/ZVdvq9EvX/ACINB0SfxBrUM0y8zyqkMbdOSACfYDn8K+vNIsV03TLWzRiywQrGGPJOBjmvGvhRoq32
                vS37p+6s1Gz/AH2BH6DP5ivcV69OK9XDPmXP9x+f53GFGr7CLu1rJ92xxNV768hsbKe6uJBFBBG0kjno
                qgZJ/AVYJxXmXxBc+K/Euk+BLdpdkri+1Vom4S2TojAf3mx34IU4Oa6jxB3w0srnV9W1nx3f2UlrJq8g
                SzibjFqgARsckE465wcZAwRn0vAqG1hjt4EhhUJHGoRUUYCgcYqegBMDr3oAAOaWigAIzSY96WigAooo
                oAQnArzT4zeO5fCPhdbXT5dmq6iWihdT80SD77j0IyAPc57V6WRkV8pfHvUmvPidPasSUsbaKEDtyvmf
                +z0AeufA3whHoXg1NWniA1DVgJix6rD/AMs1/Ilv+BDPQV6jtAOe9Q2drHZWcFrCAIoY1jQDsAAB+gqc
                0AfP/wC0z18L/wDb3/7RrD/Zwic+PNSmA+RdMdSfcyx4/wDQTWr+0rdRSX/hyzDAyxRXErD0VigB/ND+
                VbX7OWgPaaFqmuSqR9tlWCDI/gjzuI9izY+qUAe29aTApaKAE2ijAFLRQAYooooAQDFLRRQAUUUUAFFF
                FAB1pNo685paKAGlQaXApaKAExz1NG0UtFABik289TS0UAJgUbR/+qlooATFLRRQAUUUUAY3i3Rv+Eg8
                JarpIxvurZ40LdA+PlP4HBr56+BvjVfC/iK48Pao/kWmoOApl+XybgcAH03dD7henNfTrdK+efjN8K7w
                6pP4o0C0kninzJfW8S7mR+8ijqQ3cDocnoeAD6GBzx7UtfOvw3+OZ0u2i0fxYZZbeIBIr9QXdB6SDqwA
                /iHPHQ9a910nxHo2uxCTStUs7xSM/uZlYj6jOR+NAGrSE4FVL7VbDTIfOv722tIgMl7iVYwPxYivGviH
                8cbYWz6P4Nle5vZj5bX0aHameMR55Zs98Y9M9gDhvjt4sj8QeM0022kD2mlIYSQchpjy+PphV+qmtD4G
                /D6TWdZTxPqEWNPsX/0YOP8AXTDuPUJ1z/ex1wRS/D/4Halrc8WpeKEksdPzvFqcief/AHv7gPPX5vYc
                GvpCys7awtIrS0gjgt4UCRxxjCqB0AHpQBYHWloxiigAoIzRRQAm0Y7/AJ0BQOlLRQAmM0AAUtFABSbR
                7/nS0UAJgZpSM0UUAN2DGO3pS4paKAExQFAORS0UAJgduKAAOlLRQAUUUUAJtGc80YyO9LRQAgGKWiig
                BCARg0gQDpTqKAE2jOaMUtFACFQQQe9G0HrS0UAIFApcUUUAJj60EA0tFACBQKXFFFACY+tLjnNFFACE
                ZGKNozmlooAQKF6UEA9aWigBMUYpaKAEIB60YxS0UAFIBilooAKKKKACjrRRQAmBRtFLRQAmAKMZpaKA
                EAxRtGO/50tFACAY7n86AMUtFABRRRQAUUUUAFFFFABRRRQAEZpNo/xpaKAPPfiF8J9G8bxm7Uix1cLh
                bpFGJPQSL/EPccj36V5Xpfirxz8G7tdL1+xkvtF3bYyWJT6wy446Z2t+Q5NfSxGaintobqB4LiJJYnGG
                R1DKw9CDxQByPhv4n+EvFKoLPVYoblsf6LdkQyZ9ACcN/wABJql8VvCj+IfC5urKAyanpzfaLYKpLOv8
                cYwCTuA4Hcham1P4O+BdUdnfQ47d272jtCB/wFTt/Ss+D4M6Rp6qNN8ReJ9PQdFtdRCD/wBBpNXVmVCT
                hJSXQ8TgmS5iSWM5RxkVg+IbpLlI7OEiSTfubHOOox+tdX428CJ4O8TLpou72TTbqMS2kksgyzDAdTgA
                E55zgdRWZb6da2pDxQgN2Y8mvKnGGHqcz36H6DQr4jN8Iqask9JO+v3DNJtPsWnpEwwxJZvxx/hVyiiu
                KcnKTl3PpsNQjQpRpQ2QUUUVB0BRRRQAUZoooFZCnnk8/WjvSVoaHpj6zrdpp6bszSBWKnkL/E34Lk/h
                Vwi5SSMMRVjRpSnLoe2/DHSxp3g6CRgRLdMZ2B7A/d/8dArtBmooIkgiWNBhVGFHoBUpOBmvoYR5YpH4
                5iKzrVpVX1dyrql/baZplzfXkgjtreNpZXxnaqjJOByenauH+Fmjytp114s1CJl1PXpDcsCeI4sny1Ud
                htKnv29Kz/HGojxd400/4f2oaS3V0u9ZIyAsC4cJnOecqTjoSmD1x6jEoRFUDAAAx7dqoxHAYpaKKACi
                iigAooooAKKKKAENfKHx502Sz+KF1dMDtvreGdD24Xy/5x9K+sK4b4l/Dq08faREnnC11C1Ja3uCuRyO
                VbH8JwOeox9QQBnw4+Iuk+LdCs4mvIY9XiiWO4tXcBywABZQfvKevGcZwTXSeIPE+j+GdPe81e/gtowp
                IVn+Z/ZV6sfpXzDd/A3x7bzNHDpkF0g6SQXcQU+/zsp/St/w9+zzr13cJJr17b6fbjlo4W82U+3Hyjvz
                k/SgDBmh1j41/Euae2ieK0yqlyuVtLdeme248nGeWJxxX1NoulWmh6PaaXYx+XbWsSxouc8DuT3J5JPc
                k1T8M+FdH8JaSmm6RaiGIcuxOXkb+8zdz/LtgYFbQGKAFooooAKKKKACiiigAooooAKKKKACiiigAooo
                oAKKKKACiiigAooooAKKKKACiiigAooooACM0m3nPWlooA5TXfhp4P8AEczT6jods1wxJM0IMLsT3YoR
                uP1zXI3H7PHgyZ8x3OrwD+7HcIR/48hr1migDym0/Z88FWz7pX1S6GclZrlQD7fIq122heB/DPhnnSNF
                tbaTkebs3yYPUb2y2PbOK6CigBuwemaUClooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
                ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigA
                ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKRhkc0tIaAO
                a8Z+ELDxfojWN4zRSIfMt7hAN0MgHBGeo7Ed89jgj5zu7S90bW7rRNURUvrUgHaciVTyHB9wQce/OCCK
                +sCK4X4j+AYvGFlDcW0wttWsw32aY/dbPOx++3jr25PPIONeiqsfM9PKsyqYGupL4eqPCKKLiK706/fT
                tVt3tNQi+/DJ3HYqRkMD7H86K8OpTlB2Z+pYXGUsVTU6buFFFFZnXcKKKKBhRRQOooE3ZBXrfwm8OlIJ
                talUfvT5duSP4VOCw+pH6ehri/BnhC48T6om9XTTo+ZpRxn/AGQfX/A9K+grO1is7WO3hRUjjUKqquAB
                9K9LBUHfmkfD8TZsuX6rSd31JgACRmuT+I3iz/hE/Cc1zbjzNSuGFvYwgZaSZuBgAHOOSQeDjGckVo+J
                /GGjeEdOe91a7jjXHyRq2ZJT6KvUn9PUiuC8J6PrPjvxfD438SWrWen2gP8AZOnSoNy5xiRgR07g9SQC
                MAfN6h8OdR8OfBreE9Gle9m+06xqEhub65KjLSMASuepUHJGepLHAziu0pFGPc+tLQAUUUUAFFFFABRR
                RQAUUUUAFIRkYpaKAEwBRilooATGKWiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
                gAxTSue5p1FAHNeK/BWieLrMQ6rbZkT/AFVzGQk0X+63p7HIryLWfhN4k0YNJpc0es2qkkRuRFOo/ElW
                /A5PYV9BYppUfnUTpRmrSR1YXG18LLmpSsz5Hluha3bWd9FNZXSffhuozGwPuDUwZSu4HIr6e1nw7pPi
                CDyNWsLe8jwwXzUyU3YztPVTwORg8VxE/wAD/CzXRmtJtTsVIAEUFyCo/GRWP61xVMBF/Cz6bCcWVYq1
                eN/NHjNLivXrz4J2LWhWy17UYZx92S4SKVR9VCqT+YrNHwPvl6+K43yerabyPylrB4CfQ9WPFuEe8WeZ
                d+tdf4U8GHVY11LVZlstJBGZJW2eaPYnoPf8vWttPgbqQct/wmK9eB/ZakfrJ/8Aqrrh8JvCk9vax6na
                XOoTwxBPNuL2dtxxgnbvwM9cDitqOB5XeZ5eY8UOpT5MMmr9X+hmyfE/wH4Ttv7M064N1JCNqW9hEZN5
                9A/3SfU7qp/8JB8TPFqMNF0O28O2UgwLvUXLTAf3guOP++T9a9C0bwxovh+MJpWl2lphQhaGIKzAdNzd
                T9Sa1toz0r0ErKx8fKTlLmZ574U+FOl6Pff2trVzJrmusd73V38wU+qqc4+pyR2xXoQAFAABpaYgoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
                AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/2Q==
            </property>
        </structure>
        <structure>
            <property name="name">VergerFoncoussiereLogo_reduit.png</property>
            <property name="type">image/png</property>
            <property name="data">
                iVBORw0KGgoAAAANSUhEUgAAAooAAAB7CAYAAADzJaEZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAAB3RJ
                TUUH3AYODSwuK4gBVQAAIABJREFUeNrsnXd8FcX6h5/Z09ITSiCh9w4C0iyIAl4V8Hel2BHsioggKkUQ
                6RZEunQRlKZSlI50pPdeEkhoCSQE0k/f+f2Rc9acFAgQ7pXrPn7ywZOcnZ2dnXnnO+/MvCOklBIdHR0d
                HR0dHR2dHCh6Eejo6Ojo6Ojo6OhCUUdHR0dHR0dHRxeKOjo6Ojo6Ojo6ulDU0dHR0dHR0dHRhaKOjo6O
                jo6Ojo4uFHV0dHR0dHR0dHShqKOjo6Ojo6OjowtFnbuMHhZTR0dHR0dHp7Aw6kVw7wlBIQTx8fFs3riJ
                tPQ0/P39qVy5Ms2aNUMoiiYWhRB6geno6Ojo6OjcNkI/meXe41pSEu3//QxXLl9GVVUURcHi50fx4sX5
                oFdP/v3MM5qg1NHR0dHR0dHRheI/iF49PuDXX37Bz8/P5/dSSlwuF2++/TaffT5ILygdHR0dHR2dO0Jf
                o3iP4NXzW7ZsYcH8+blEImRNNQshsFgseoHp6Ojo6Ojo3DG6R/EeEYlCCJwuF089/jhnz5xFUXJr/LTU
                VHr17k2/AZ8ihNCnn3V0dHR0dHTuCH0zyz3EnFk/cOH8hTxFYmZmJh/37cOHH32ki0QdHR0dHR2dQkGf
                er4HEEKQkJDAb0uW4HQ6c/1dSsnLnV/mg169MBgM2jU6Ojo6Ojo6OrpQ/B9GSomUkvV//MHhw4dzCUC7
                3c4TTz3JkGHDsFgsukDU0dHR0dHRKTT0NYqFIORuVZzdyjVSShwOBy0faUFcXJzmMQTIzMig3dNPM27S
                RPz9/fXpZh0dHR0dHZ1CRV+jeBvCEP6a2vX+GxcfT+zZs1y5coXk5OtYM21IKTEYDRQJK0LJyAgqV6pE
                mTJlEYookGj0/m3+3LnExMTg7++v/c3pdNKoSRPGT5qIny4SdXR0dHR0dO4CukfxFkQhZAW7Tk5J4cCB
                A+zavZt9e/cRdfwE2G34KQbMBgWTUFCkRAiQElxSYpcqVosFpKRWndq0bt2a5o88QkRkJMFBQQQFB2My
                mXLlwW6306BuPew2uyYwpZSElyjBnLk/Ua1aNV0k6ujo6Ojo6NwVdI/iDUSiV3xZMzPZsWMHO3buYsee
                PRw9coQiKWlUMRi432iivdFCcaMfRRAEKwoBisDociMAFbBLSCsWhn38aOKjozl58iQb1q9n4vgJmM1m
                qteoTtWq1ahUuRLlK1SgXLnylC9fntCwUEaPGkVmRiZG01+vSlEUPunbh2rVquUSsjo6Ojo6Ojo6ulC8
                ywJRCIHb7WbalCksWbqUs3HxBKSk8G8MfISBkv7BBAEBgEl6PH2AdKvgBsgm3pxO/Nq2xb9FC2jRApfL
                RWpKCqmpqcTGxrJn12727dvHypUryczIICQkhNDQUMJLhBMdFY3B+Ne6RJfLxVvvvE3HTp3yFLU6Ojo6
                Ojo6OoWFPvWch9hyuVwsmL+AkcOGYbfZqCUU3pMKD6kKbkAKiUQgCpguVithR/ZiKBXp+3tyewPj4uLY
                vWsXu3fuYuOGDSQkJGjf8e6Afva556hZqxaVKlematUqlChZ0kfgetO9kXjUxaWOjo6Ojo6OLhQLIuQ8
                wsrpcLB165+M+PILLh0+QmP/QF7HQDOXxAk4RUHlYbb0bXbM/9eW4JmTb7pxJbtwTE9L55WXX+bQwYMo
                ioLb7SYyMpKKFSty9epVkpNTSEtLJS0tDYkkMjKS8uUrUK5cOcqVK0fZ8uWIiIgkODiIgIAAAgICCQgM
                ICgoGGM2D6UuGHV0dHR0dHTy4x8/9ewVSadPnWLC+AksW7mSx+wu+lqCaeoCgYpVCCTcukiUEowG/Ht0
                87nXjfLhve7PP7eyb+9eTCYTUkr8LH706dePZzq0JyUlhaSrSSQnX+f69WSuX7tGQsIV4uLiiI+LZ+2a
                tcTHx3E1MREJFC1alGLFilG0WFFKlChJhYoVub9xIx5++GGfM6N10aijo6Ojo6OjC8UcwmjFsuUMHjqU
                9CsJjJIGWhgsmFRwC7Qp5tuST243plaPYahS+dbEJbB00WIfAdn6icf5d/tnAAgNDSU0NDTXdS6XC5fT
                idPlyvp/l4u0tDRiYmKIPXuWs2djiIo6zfp165g+dSphYWE88OCDdHm1K42bNNGO/ruZqNXR0dHR0dH5
                Z/CPnHr2CkS3283MmTMZMuhzHjD7MVY1Egy4bmOKOT/BFzRqJJYXn8PhcLBzxw6OHjlC11dfRQLz5s7l
                //79b65fu0bVatVIT08nLCwMh8NBjarVEFKCEBQpUoS1G9ZTtGjRWw7Wnd93N2/ezIK5c/lz65+kpqZS
                pWpVuvd4n7bt2mE2m/XzonV0dHR0dHT+eULRK36sVivDhw5l5tRpvBcUynuqggGBKkAU0n0MpSIJmzeb
                jFIRpKelMWLoMPbs3k2jxo0Z+PlnjP12LH5+fuzZvZvnX3iBU6dO8unAgWzetJlXX3mFoKAgHA4HU2dM
                p03btoUi3HKmYbNa+f2331i9ajXbt22jePHifD50CI//6183FZs6Ojo6Ojo6/9sYBg8ePPgfpYyFwOFw
                MHjQ58yeN5dRlkBelgYUBGoheBK1+wAZAQGs8DdRrFw5RgwbRp26dYiJiWH3rl2EhRVh965dbN2yhY7P
                dmLO7DkE+AdQu3ZtpkyaxMWLF3G73bRs1Zo+/foWmmDLuRbSZDJRu04d2rRrw6OPPcbFixcZ9+0YbDYr
                DzdvrnsWdXR0dHR0/sEo/6SHlVKiqio/zp7DD/PnM1aYaasqIClUkQhZMRVDLBaKGo0826EjrR9/nEW/
                LsJiNhMUGMi6P/5AKIL09HScThfWzEzsdjtHDh9h27ZtGI1GbHY73Xu8n+dzFJZo9obcMZnM3Fe/Pt+O
                Hcs73d5l+tRpdH7xJZ/v6ejo6Ojo6OhC8X9WJAohOHbkKIOHDOEDjLRWFVQhQVCoItGLOyWFJ5o/wgud
                X2b0qG+47756mMxm/Pz9OXXyJMFBwbjdbhITEzEajVgzM1n222+aeKtapQoVK1UEIDMzk5MnThB1Oson
                rmJhiMXs3kI/v6zd1QM+G8D+fft48fnnuX79ui4WdXR0dHR0dKH4vy0SMzMzea9bN+6Xgpc9j343BKIX
                NTkF++Ej9P7wQ4oUKcKlS3EAJCcnYzKZiI+Lw2QyER0VRViRImRkZnL4yJEskel20/D++wkPD2fH9h18
                3PsjPu3Xny9GjODAgQO4XK67Mh3sFamvvfEmY8aP4+TxE3zw/vukpKTqYlFHR0dHR0cXiv+7DBowgLhz
                5/jIYCZMCqS4e6JHCAEuF64Tp8DtZuSXX3L61CmuX79GseLFsNlspKWlERQUzJXL8dhsNq5fv0ZqSgqQ
                5dlr2bo148aMZdDAgUi3m5TkZEJDQ7l48SJGo1ETdoWeb0+6Tzz5JBO+m8Thg4fo3u1d7e+6WNTR0dHR
                0dGF4v8EXm/i7l27WP3HOl40WLhfFVnHMXOXN2gYDLh270FNSaV69erUrVePlOQUriVdw+VykZycjNFo
                ICMjk8vx8aR6vHYARYoUYdHPP7P8998JDw/n0KFDPP7EE8TExtLv409o/3//5uyZs3fFq5h9Ovrh5s0Z
                /sVI9u7eQ/duNw8crqOjo6Ojo6MLxXsGb7zEn+bOxZiayoeqgk1bl3i3S1fBte8g7qPHMPlZeLD5w1jt
                dpwuF5B1prTb7cZmtyGlxK2q2qWJiYkcPHiQjIwMkq9fp3LVKkydPJmzUVE8/8ILfDd1CpUqV9LE8N0U
                2k//3//x7nvvsWrFSub++JPeanR0dHR0dP4h/CPiKB4/doxnXniRAckZPCMVXP8JkegVWi4XhkoVCej3
                MXuvJdHjs89IUQTpSBTFgEEIDG43Rimzjgn0euuEwGwy4e/vj9Fo5OrVq5QpW5bSpUrhUlWqVK5MyYgI
                WrZqSd169e6qUPTm6YP332fr5i0sWrqESpUr661HR0dHR0dHF4r3NqqqMnr0aJaOHsMcUwBFsh77P5oH
                6XYjAgNwmS0kpaXikBIHkKIoXECyEBdHkfjlEbPQ398ft6pSqlQpHB5vpMloJCU1hUqVKtPv0/40bdbs
                7ubfk6fExETaP/00zVu0YPjIkSiKok9D6+jo6Ojo6ELx3sXhcNCocRNeSErmbYwofwNhI71SVUoEYAAG
                BJpZZsvEz2TC6XQCEBQUhM1mIyQ0lOvXruHn74+qqhQvUoRmTZsSFhJK6TKl6Pr220iXCxQFYTBo4g4K
                dz2hlJKFCxbQq8cH7Dmwn7Jly+otSEdHR0dHRxeK9x5eL9iqlav44OXOTA0qQgMpkH8zB5i38I2KwpxA
                C3NcdhLsdoIDApCqis1ux6Wq1KlXj1b33cczDRpSKS0D97YduKLP4E5JxaaqGMuVxXB/A8yPPYKhTm2U
                YkXvSn7jLl3ixeeep1Xr1gwaMlg/tUVHR0dHR0cXiveuUOzYvgO23Xv4Xvhhgv/0rPOtZBiDorAXlcUm
                hW3+Fs6nphBp8eONhvfTsWQpIi5fwbbvAK6UFDAaQVFACJASVAluF5hMmJo0wtK1M5b2/5flvZQy63uF
                RPd3u7Fzxw72HTqotyCdG7ZBKJhXWx9w3H1bqJe3jo7O7WAsDKPzd+t0vN9LuHKFg/v28ZrBRJAKdiH/
                I0oxS5xlbSlXPHe8+V0FqJJmCBo4JOkOG+mYCbZJ/PcdweDcT7rLBUIg/P1zX24ATEaklDj37Me1/wCu
                P7cTOPpLpEdM3ul78777+xs1YuWKFVy8eJEyZcrorUjnhnbi6JEjrF+3njPR0WRkZGhtWUqJwaAw/fvv
                ddFyN70BnrKNOXuWUydP0vpf/9LisOro/B0HMjr3mFDM/hLdbjdWq5Xk5GT279vHieMniI+PJzMjE6m6
                vVbplgRdjpshpcRoNGHxs+DnZ6FK1Wo89PBD1KxV65Yr3h9r1iKAR6WCyyvG7oIoBInwzGk7hcQGpAs4
                IiRngAQhsQL2m0vFXGkHAgNsdvwFCEXJPxdSaMWfJQzB9uM83FFnCP5lLsJivuMG6b22foP6mEwmdu3c
                SZlOnfRWpJNn+zt18iR9+/Rl7+7dGAwGlGz113vu+tjx47Qg7vdKZ5E9r6qqYrfZsDscpKWlEXP2LOfP
                nyctNY2MjHTcbvd/ZhJDCFyuLPucmZlJZmYmNquV5OvXuXz5ChcunCcsLIxflyzBaDTqnbPO36YtASQk
                JLBi+XKOHD6C0aDQ5umneeihhzCZTAWuq9m/p9fv/6BQzOkVWLtmLatXreLkiRMUK1aM4uHhhISE4O/v
                j8lkAsBms5GUlMSZ6GjS0tKwWCwFemEup5PQsDDuq1+fps2a0rhJE+5v1Ah/j/fsVjyK3u+sX7eOYCG4
                TxU474I3UXoEoh+COCE5gGSnkGwXkhNCEoAgXEII4Ocp7BtIPS4AySJrg4sKhCAY4zYQCLjzEZICiUkK
                0oQkHSghBQaPYBUWC849e8no+TGB40cjzKZCee7adepgMBg4eOAAHTt10hulTi6bsXXLFnp270Hi1UQs
                FktWnFC3W/s3IiKC93q8zzMdOtwz9cebTyEEDoeDw4cOcWD/fnZs38GRQ4c4f+GCx0tqyHWG+n+K7PfN
                3mk+9PBDjPr2W8qVK6e3V52/DUIIYmNi6fzii0RHR2vC8Mc5P/JJ3770/vijWx68edPV6/l/QCh6C/n6
                9et8NfILfv/tN8LDw+n03LMMGTaU4sXDCQ4Oxj/AH4vFgsGz29bhcJCaksKlS5f4ecFCFs6fj9FkuuEL
                czgc/OupJ/noo4+pXLUKAQEB+Yq/gpKelkZUbAwPSAUT4CjkU50lYJACVcD3QmWlUDmKxAA8JgWvSwOV
                pCAI8AfMZM0O5ycUzwM9DS7Mns8GKeguFRojcAuZK/dekWiWghmKykahYgeKInhGVXhKCpwABgOOdRuw
                7NqNqflDhfLsFouFiMgIjhw6fFvvRud/WySeOXOGHu91Jzk5GYvFgtVqJTw8nJq1alKyZAS1atem+SPN
                qVGz5j3pRVwwbx5LFi8hOjqaxIQEhBAYDAaCgoL+Ns8jpcRutxMUGMRHfT/h+eefJyQ0VO88df52LPrl
                F6KjowkKCtJ+p6oqY0aP5qWXXyYiMqJAgnPHtm1MnjyZShUr0aPnBxQrXlyv73dTKGpegc1b6N6tG4rB
                wJjx42jZqlWuKaScmEwmAgMDiSxVigYNG1K5SmW+/WY0brc7z++7XC5q1arFD3PmFOqDnTlzhuT0DB6U
                Ck4oZJEoUaTgipB8pLg5JiRG4H3VwLOqIEiAgqBAR0kLmSUKjS5SPQJRCEk94DlVyVOIeUWilIIuBjeH
                ULM9oGSvQbJdFfTziGSZloZj1VqMTZvcsVfRWzdq1a7Dwf37cbldGA36eiedv+rpR716kZqaitFoxGa1
                0r1HDz4dOACn04kQAkVRNBtyLxhybx5PHD9O7569iI6ORvWcomS6ySD4v5FXt9uNEIJXX3+dvv37aQJW
                7zR1/o4cO34Ms9ns8ztFUXC73ezfv482bdsWKJ3NmzezYd16tln+ZPGiRcxbuIA6devq9b4QUPIz+DOn
                z+D5Z58lslQpFv+2lCeefBKj0XhDkZgTg8HAO9260fD++/M8Zk5KidVq5fOhQ7TPhUVMTAypGek0As/6
                xMIRiEhACjYoKk8Z3JxC8rRU2Owy0V1VCBVC28Ci7WLJ48cbpscsBSMNbo4gMSIAiQFBT6lggTzD+QgJ
                DuATg5uDQs2absr2nyphoaLSW1HJAAwGI841a5GZmYUmBmrUrI7VauVy3GW9FelobXfLli1ER0VrdsLl
                dlO3Th1NVOW0IfeCAbfZbEwcP4HHHmnByZMnfaagvc+e8ycvzGYzfn5+mM1mTCZTofyYzWb8/f0JCwsj
                IjKChvc35PMhQzgZHcXwkSMIDg6+p8paR8eLqqoEBgQW+Pudu3QhICAAVVXJyMjg/9q2Y8f27Xq9LwSM
                eRn7hfPn88WIEZQqVYrJU6dQqVKl21Ll3ms6v9KZnTt2aNPT2fGzWKh3332FrvrPnTtPYKaVUtKStV6v
                EHyKwjPVPE+ojFHchCDoIw20UxVUwCa8OrAg95KYEWxSVH4VKv4y62KHgDZS0FRVSMtnyhkhmS8km4RK
                nksvBQRKwWah8qECX6FQPOos7pOnUJo1KZTyrVK5CjabjcTEBMqU1Xc+/9Pxtt1NGzZis9l8/pb9DPN7
                SfgKITh//hwD+w9g/bp1BAUFZUUVcDq1c9qNJhPBHo+dqqpYrVZsNhsGgwGj0YjRaNS8qMXDw6lVqxb1
                G9SnXLlyWK3WfGdaCmzAjUYCAgMpWbIkZcuVo3jx4vm+Gx2dvyNVqlRl9cpVPl5Fh8NB2bJlafpA0wK3
                1zJlyvDtuLH0+6QP6enpGAwGPvygJzN/mEVtz2BVpxCEYtbC0hhGDh9BSnIyU6ZPo1Llyrct4rzXVKtR
                I1+PYkhYWKEbMpfLxaXL8VRVQdVce3fYcXgE2h9CMlG4URBMdBuoR9ZGE3mLYlRIwWUhmSrUrPx5wiEa
                BHyoKmSQd74FklhgquK+cScgwF8KDgiV4QoMs5gx/bIIU7MmWTe6wzIvX6EidrudxMREvRXpAJCZmUnM
                2bOoqnpLMw9/V5GYmJDAm6+9QdTp0/j7++NwOFBVlSZNm/Loo49Su04dSkaUxGQ2e+YCwO1yk5qawokT
                J9i5fQcb1q0nIzMDPz8/4i5dIiM9ndjYWJo0bUKPnj0JDw+/a/nX0bkXaNO2DRPHjdM0gs1mo0zZMkya
                PBk/P/8C1Wfv0op2Tz9NYGAgvXv2Ijk5mStXrjD4s0HMmTcXPz8/vV3cJrms+aivviYxMZFHHm1Bq9at
                C8XomE3mfKdjFOUOwunkg9VqJf7KFSohKIy9zt64iNeB4YpKmoAxqkJdKXB5RN6tiERvSawTkqMiazpb
                SnAISUdVIczjuRR5XGiWgq8VN1bPc0kk+c7YiyxBulGo/OhnxLpspbdV3XEZly1bFofDwfXr1/VWpANA
                eno6ycnJ9/QzeO2d2+2m4zPPEHXqdNZMiJS079iRvQf2s/i3pXzwYS9aPd6aOnXrUq1aNapVr0716tWp
                WasmzR54gNdef52pM6ZzPOoU4yZMoFTp0qiqSkpKClGnTzP3x594sElThg0ZisPhKNRn0DtDnXupvdWs
                VYt3unUDwM/Pj27d32PtunU0atz4lvSHVyw+1rIlW7dvo1bt2gD8uXUrSxYv1ttFYQnFxMREFv/6K0LA
                iy+9dM8aHZvVSnxCApVE4Xg1BBIz8I2ichVJO6nwgPTuRr699K4KyVyh/qXbRNY9OkgF8khXkuX+3a+o
                bBCSCCkoKwVFpEAVEtW7fjJX4wGjhKkG2JuUhDx2olDKJDgkGClVUlNS9FakA4DT6cRut3OvmuPsndLb
                b75JTEwsQhFUqVqVnxcvZtyE8URERuYa9OYMy5E9PZPJxLPPP8efO7bTf8AASpcujcvl0qaqp3z3Hc0a
                N2bZ779rU/b/o4dl6ejkKe4sFgufDx3C0ZMnOHbqJAMHDSI0LOy2nFResRgUHMyK1av4dOBAKlSsyIB+
                /UlISNDbV2EIxQXz5mMwGgkJCaV23br3rALP8nQlEyEEhVElDFJwWkhWCJVQKWiriqzdybfRJUpP3MNF
                QhLt2fEMWXETG0hBKSBv+SnxB8Z7vI5jVQMTVQNfqwa6qwrFpMCVzzbrrM0ukkF+Bq6tWuPtxe6oQwUI
                DQ0jxSMU9cang5SFsqzhv838efPZvHETJpOJVq1b89P8eTS8v+FtnQ6VvW289c7bzJozm/YdO5Ceng6A
                v78/169dp+f7Pej1QU9iY2K0zk5vUzr/DLMhtbaQ/fPt6g9v+/G2uTnz5tK5yyt8/tkgVFXVPYu3KxS9
                hbpu7VqMRiOlSpUiKDDonn0oh9NJSmoKJaR35dAdVGLAQtYGFiNQBqh4Bz4TBUEykhmKmwDwmV++z+Mh
                zCt1RQouCklzKRgsFWpKQWkpaCAFr3tEYxkp8tV/RilIMBr4cs1q7bnuZBQIEBIaSkZG5h01ap3/NRfB
                ve3duJZ0jUU//4zL5aJR48ZMnPydtkHkTjsuKSWVKlfmi6++4uM+n2C3230CdK9dvZqOz7Rn5fIVuUSm
                js7/rMnI0a4Koy/JLharVq3KoMGDGTxksN6ebhNj9hdz5swZFEUhNCwMPz/L33Lkkb0SqaqK6najZhuB
                KIqC0+HEnpJKoDBxp/udhQQnsEtIFKAoUOwOZKdFCr5UJG7whMPJIkgKasv88yqFJFgKunqmvFWRPVVJ
                TSkYrxp4WXHjyOupRdb91sZdpNux41SqXatArv1cZe5241ZVjEYjgQEB2KzWG34/r9+7nE5UKbVQKTmv
                yXkUk8vl0jZIeCP334pByStP3lNC8sLbcd9OuWTPW/aYowUpa+9OWpPJlGe5ZE8nZ7l4d9f+N9qh93eq
                lBSGC78g7fxWy7agHDlymIMHD1KqVCnm/7wQg8FQKOlnv97f35+eH/biypUrLP51kfZ3IQQpKSn07NGD
                y1cu8/obb/zH7anb7dZiRHrLOXu0ihuVRfa67xXGN9rUlLOdZw87dDtepTzrjadN5ozfeSfl5Ha7feyH
                oig3jS+cV/t1u1xaRACj0XjLdU3bee+59mYeO83+eq5Ts9kr7zPkbFcul8vHtkjp6VtENtvsaZvetAyK
                gpIjLe+7yGlb87Jn3ogBd1qnvWuNvc9ZpGhRn3pWENvhjXIAf8VMvdE1qqricrk8RxEX/J3mfEfeeKhq
                togR2dtifu0j570K+q69bT+/fkR7G2lpaVpCZrP5hhXvvyEQsxdKfHw8Z6KjOX78OLExMSRdTcLhcBAS
                EkLValUJDQvD7HRiMpnhDrezCCDWc1YzgD8Cv9v0TCoy66i/FULFKH13qwQB1RCo+V4vUETWFHVOESjI
                OqKwhhQMkQofCxVTPpUz02pl6apV9K5d65aOQ4yNjeVs9BmOHz/G+XPnSUlJITEhgb179/L9jJnUb1Cf
                +g3qoyh5Nwzv5+PHjvHTjz8SdymOtk+345n27bXjH3N+NykpiT+3bGHTxk1cvnyZ0mVK0+nZZ2n2wAO3
                NDL0ppeYmMj5c+e5eOECZ8+eJS0tNcsIZEsrJDSUzq+8QmSpUgUyRhcuXODsmTMcPXKEC+cvcO3aNVwu
                F6GhodSsVZMGDRtyf6NG+Qpib/5OnzrFgnkLiI6O4rFWLen66qu5Oh7v9WlpaWzetImNGzZyJT6e4iXC
                6dCxIw83b35Xj47L3pG7nE7OnT9PYmIi15KukXDlMleuXCHpWlKhiRetnR/ztPOkJJxOB8HBIVSvUYP6
                Depzf6NG2hGBd+qNcLvd7Nm1G4DZc38qNJGY1zOaTGYGDhrEieMnOH7smM+7VlWVL0aMIMA/gBdeevGW
                83CrA8CrV69y8sRJjh45zMmTp7h2NQm36iYgIICq1arSoGFDataqRZkyZfLtKLP/Li4ujt27dnEtKYnm
                LVpQtWrVXJ2z9105nU4OHzpEVFQUydeTCQ8Pp179+7RrbrVe2m12os9Ec/HCBWJjYomPj8NqtWIymSlf
                oTx16tSlVu1ahIaGFlgoZLeBp06c5PDhQ5w9czarz1QlRYsXo2bNGjRo2JA6desSHBycZ330ppWZmcnW
                LVvYtGEjUVFRGI0GWrZqTecur+R5KlnO6x0OB9v+3MaGdes4f/483bq/R7MHHrhp35lw5QoH9u9n+/Yd
                HD92jEsXL5JpzcRoMBJRKpIa1WtQvWYNKlSogMlk4vy5c0gJz7/4An5+fj5lcf78eQ7sP8CObds4eeok
                8XHx2KxWLBYLZcqWpUaN6lSvWZOyZcsiEJw+fZqSESVp9/TTmgj0ppeUlMTGDRvYsmkzycnJ1Kxdi1e6
                dKFMmTK3ZTucTifRUVGcOXOGY0ePEh8fT2pqGgZFEBERyX3163Nf/fuoWq1anvU5+4a2TRuwaMc/AAAg
                AElEQVQ38svPPyOEQteuXWj24IP52vDY2FjW//EHO3fsxGa1UqtOHV5+pfNNj83M/rdr164RHRXFqZMn
                iY6KJjExEavNir+fPxUrVeL+xo2oX78+RYsWvWE6cZcucfDgQbZv28bxY8eJj8tqB0aTiTKlS1OtRg1q
                1KhO+fLlMRpNxMTGYM3M5N333svfowhZG0BkNkP1d3LRasLh6lWmT53Gn1u3EhUVRXp6etYoUQjwvHBV
                VbOErp+FDLfEJJU7iqOoAAnIrOPwNC+juA0BmhU3cbmQOPC9VHqEYnkpcOaT7s3uJBBYheRxVeFfQrJG
                SPLyCbtdLvbs3k1qaiohISE3bXQXzp/nu0nfsWf3bs5ER+NwOLJGhYDRZCI1KoqBn35KiRIleeLJJ+jT
                vx/FihXLc9T2y8Kf+eqLL7RFxXv37OG+++pTrXq1XPc9dPAQwwYPZs+ePT4Nd9WKlcyaM5smTZsWuPGd
                i43lh1k/sHfPHk4cP05KSgrlK1RASsmVy5d90oiMjKRN27Z5CsXsRiE+Pp7vJk5i146dnImOwu5woAiB
                yDYad7vdFC1alBaPPcbngz8nvESJPDdCLP71V0aP+oZz585hMBjY9uefVKpUiRaPPprreY4fO87gQYPY
                t3cvDocDRVFQVZU1q1YzZ+5cGjdpfFdFotPpZPGiRaxZtZqYmLOcO3eexIQEihUrRpEiRcnMzLjje6Sn
                pTFh/AS2btlC1OnTZGZm5mrnLpeLsLAwHnzoIfr270/ValXv+BmdTif79+/nk359c4mbwrZnUkpCQ0P5
                atTXPPXEk5hynNHscroYPGgQZcuV5aGHHy7UvGRPa/rUaSxftoxjR4+Smpqqeae9joJVK1diNpmoXrMm
                7Tt24M233srTc+ZNb+2atYwfO5ZDBw/idDqpVbsW6zZu9A2ynnUBZ86cYfTXo9i+bRsJnqMQkZLadesy
                fuJEatSscUtCbt7cuaxasZKo06eJi4tDdasIJWstuUQiVZWg4GDq1K3Lv595hle6drmhh8j7+8uXrzBp
                wni2/bmN6Kgo7DYbisfr5R0ALlmUlXa9evV4t/t7tGzZ0sd75f333LlzDOjXn507dmC32TAYjUgp2b5t
                O9VqVKdFixY3fl5VZeCnn7J08RKsViuBgYG8/MrLN61vvy1dyoxp0zh08BApKSmUjIggLDQEpOTixYuc
                O3eOA3v3gRDac/n5+TFl+jT8/Px83vHM6TNYMH8+x44cxWqzEhkZSVBwEKqqEhsbS2xMDLt27tS8cADF
                ixfnp/nzMHqe15vent27GTZkKIcPHdLWD25Yv55LFy7w1TffEBAQUOBBj/eM+Z/mzOHwocNcuHBB86B5
                0/Bqm0qVKvHsC8/T44MPfN5P9rowZNDn/LxwIZmegyriLl3i+9k/UKxYsVz9wcJ585k4cSKxMTFaXV+/
                bh2bNmxg+aqVmHKcPJNL/NsdzPr+e/5Ys4aTp05y/dp1Ld8ih7Zp1LgRffr3p1GjRrk8qABLFy9h+tSp
                HDxwgEyrlRIlShAWFooELpw/z7nYWPbs2YMADB4PosPuYOOWzfm2B00oGox/TYSmpKRgs9v/VtPNO3fu
                5JMPexMfH6+9oJwV2GcaDHjX4GasW9BECux3IBYzPJ48ADsSm5BZAbJvaQpbkCoke4XMfXazlFQm67g9
                5x11BgIpJF1UhS0GiTsfz97ZM2e4eOEitWrXuqEYWjB/PsOHDMVms2nTSDljURkMBgICAkhLS+XXX37h
                0MGDzJz9A6VLl/ZJa+aMGQwfMlSbPvZ6DGNjY6larapPBT2wfz8vv/AiNpvNxxVuMpmwWq2M+vorflm0
                uEAi8esvv2L2rFmkpKRQs1Ytvv7mG5q3eISQkBA2b9pE186vEBgY+Jenx2xG5LNb3pvmrz//zMjhI0hN
                Tc16Rs/OvTw9uJmZrFqxggP79/HdlCncV7++do0AJk+axLgxY3E6HD71eeeOnZpQ9D7Pju3bee+dd0lJ
                SdF2C3pJT09n6nff0bjJrLvmzd+zezf9+vTl4oULOBwOjEYjnV/pzMuvvEKpyEguX75Mj+7diTodddv3
                2LBhA5982JvU1FRt2iWv+Gdmsxm73c7GDRs4fuwY34wZw4MPPXhHgsrlchEcHEzHTp3u2DtZ0MFv7Tp1
                6PZeNyaOn6At5ve2K4fDwXvvvMv23bu0OlpQe3kuNpay5crl65VOunqVzi++RHR0NDarlZDQUNq0aYPF
                z4/Tp08RHRWtnf4ipeT0qVN8/cWXnIuJ5fOhQ3yOLvSmuWTxEgYNGEBmZiZmsxmz2cyxo8c4euQI9e67
                z+e7UVFRvPna61z0dOZeT5qUkuioKJb99hs1atYokEg8f/48H3R/n5MnTmihhoxGI8Ikcnl/nE4n+/ft
                4/ChQ6xauYI58+ZhzMNz7P28acNGPu3Xj4SEBOx2O2XLlqV23TqobpUjhw8THx+P2WzOGkQ5HOzds4fu
                77xLrw8/5J33uvmIxYsXL/Lic88RGxOL2WzG4vfX3JTNZmP7n3/yyCOP5PvMQggmjJ/A/Lnzsq63WDz2
                Ublh+fy5dSvDBg/h2rVrVK9Rna+/+YbKVapkDbw89968eTOTJ33HyRMnNI9f9RrVc9mgnxcs5NtvvsFm
                tfLwI80ZPnIEEZGRWfVMQmpaKuvWrGHSpO+Ij4vTppqbNGtKjZo1fZ5l+bJlfPxhb2w2G0IILeC20Whk
                9arVfNynD+UrVCjwoOejXr1Yvmw5LlfWWWxe+5iXPrh06RLjx4zl1ImTfD06S5BmT+vlF15gx/YdWr6k
                lFyOj+fSxYuaUPSm/eXIkUyfOg0ppVYXvM9x7NgxFixYyCtdXrmBM+YC3d55h1MnT/rYvPzyvm/vPl56
                /gW++PILOj77rI/IPXjgAP379sVmtVG7Tm3GTphAufLltWszMjLYtGEjY779lvi4OEwmE06nk1atW1O9
                Zo187Z5Ww4oWLaop2EsXL5KaknJbXsXC8kRm7zzWrl5Dp/YduHTpEqqqEhwcTIUKFahUuZLmgs1+X++R
                dhlS8IbBxRohs6Z6bzNrTv66NNnzcztcAmLzyIQUUEnmP+18K9PkSEEFoKnEZx1jduLj40m4ciVfYySE
                YMSwYfTu2QurZw1iWFgYlStXpkLFij5TKzmvO3niBG2ffIpz585pv/tp9hw+7dtPMxrZfy5duujTaGJi
                Yni2fQfsdrvPSFCrsIpC3KV41DxOtMheZ6Kioni8ZSsmjBuH0Whk2IgR/LFhPR06dSQ8PByLxaI1xoLW
                RbfbzfSp0+j7SR9tt3dwSAiVq1SmYsWKmoc2V10Ugvi4eN587XUOHjigvatfFixk7LdjcLpcmifSO+qN
                j4vzKZfoqCj6fPSx5vXJNeIzGjl06NBdGaS53W5GffUV7dq0IebsWdxuNw88+CDbd+1i6PDhVK9eneCQ
                EAICAm5rDZi3jOb++CNvvfY6ycnJqKpKUFAQFStWpHKVKoSFhWnronKVbXw8r3ftyq6du+5I3BmNRp5s
                04bixYv/R2dU3u/xASEhIT7rkbx1PS0tjc8/++yW3ldiQoJ21GBeZX3s6FH+1ao1p06dIiAggCHDhnHs
                1El++OlHps6YzsYtW9iybRtNmzXLNYU6c/p0pk2dmisk0MrlK3i/WzcyMjJ82rfBYODo0aO5phrfefNN
                bYd3zrSklJw5e0azPTdq50eOHOH/2rTjwP79OJ1OihcvTt169ajfoAERkREEBgbmWv/o9cLv3LGLgf0/
                zbU2zMvKFSt487XXiIuLo0SJEsxbuJDtu3cxfeZMZv4wi9379zFrzhwiIyM1b5iiKDidTsaOGcOy337/
                a0rcbmf9unWMnTCecxcv8Nobr2ubmbwDg+PHjuWqAzmZPGlSgc8XF0LgcrlY9MuvXL16FT8/P8ZNmECD
                hg0JCQkhKDiYwKAgioeH07FTJ9Zt3MBHn3yi2cWHH3nE572lpqayZPEirFYrYUWLMHnaVKpVr56VVlAQ
                gUGBlCpVii6vvca2HTt4qXNnzTvZsmUrn7QO7N/P8t+Xsfi3pZw5F0vjJo1xewSeEIK01FRizp4t0EAh
                OTmZ5zt1YtGvi7Q1lcXDw6leowalS5fWps1z2o0sT/AierzXHZvVppXXG6++xrat23LZ2bS0dNLS0n3S
                mf3DbKZ+N0V79znrstFg4MC+ffnW32NHjvB4y5YcPXIEt9uNv78/ZcqWpUrVqoSHh2se65x5V91uenR/
                n8mTvvO557QpU0lLS8NgNLBs1Spq1a5NYGAggYGBBAUFERERwQsvvciuvXt4p1s3FEXBbrfzwksv3HRm
                VctI+YoVUFWVa9eucejQIZ9FxbdiqJKuXr1jQ+t9+MWLFvHGa69hMZtxuVxUq16NGbO+Z/3mTfyxYQO/
                r1hBh06dtAWkOYWTCuwVKq47cA74ZVPUVzw/t0Mckrg8NmJLoBxZJ7zcuatCEiYFDaSCUeZvPGJizuYy
                St7p0jGjRzNz+gzt3MyHH3mEX5csZu2G9azftJF5Py+kQcOG2sjNJ31FIT0tjS2bNwOwZNFiZs2aRdOm
                zfIUUcnXk7X/T0pK4r133sVqs5GRkeFjSLPn0d/PD+UGa2hXLl/Bi889z+lTpyhWrBhjxo/jtTdev+Oi
                /enHHxk+dKjW8dSpW4cFPy9k7fr1rNu0kV8WL+Lh5g/na9ySk5M5cviwNsqfOXMmVapWRebROWRkZPh4
                G0YMH07U6dNkZGRoHt6c5VK0WLFCFTDezqHXBz0ZP3YcQYFZR9V1ebUr8xYuILxE+B23c+/1vy9dyrAh
                Q7XP1apV4/vZs1m3aSNr16/j95Ur+NcTT+Qrfmw2G1s9de52sVgstGnb5q57E3M+f0BgAC91fjnPwNuK
                omStZbuJlzZ7ucyYPgOTyZRrEwrAqZOneO+dd7l27RoGg4HBw4by+ltv+nxHSknFShX5af482rZr5/O3
                wKAgRg4dxpZNf5X177/9xvRp03jhpZcoHu5bJxRF4eKFi38JgLRU3nztNY4fPYbT6cSaac1z0Jl8PTlf
                oehl65atPNehI8nJ15FS0qFTJ5atXMlvy7MEyLadO5k6YwbtO3bAaDTmsndCwP69e7lw/kKutJcuXsJ7
                b7+Dw+mkdJnS/Lp0Mc0faZ7rPO/Wj7fmlyWLqFChgrbpwdtmv/3mG+IuXdJmQ7q++ipNmjTFZDbzSI4p
                ZiEECQkJN21PKSkptzQYS0xM5PTp09oGBm8Q6vzW9H74UW9GfvkFgYGBPPnkkz7fibsUR2zsOc1x4F1i
                lNdGDKPJyJdff8UnfftiMZt5rFVLn/5HCMG4iROoVbs2drudEiVK+ETsUBQDV5Nuvt45MzOTjz/szY7t
                O7RNMC937syGzZtYuWY1W7ZvY/TYMVpec2IwGjl65AiXLl3E5XIx6quvuXz5MhUrVczVv9ntNuz2v44n
                3b9vH2NHj8busJOenu7z/rVBv5QUy+NYTYDdu3bxbMdOWbFnhaB48XBGfTuazX9uZc26P/hj4wbefa9b
                vg44RVHYt3cPGZ5QW1JKNm3ahKIo1KpVO9fa7ZyDoQGfDWTEFyMJDw+n5eOP31woemnfvj0OhwM/i4XJ
                k767vbU3qmT7tm2FYkT37tnDyGHDNddvcHAwY8aPp1HjxtoDR5aKZMBnA2ncpImvl0lCmpD0Ug30lgYU
                meW5u2VDDhSTImuOXgquC8kJIVHFrXWQqpBEC7J2JIvc5zdHyMKJ+Sg9G2LqAoH5TLUrisKlS3E+lS/7
                NIV3lCKlpELFCgwZOoSKnvO+AWrWrMnU6dNzxXpzu91Zo9aJE3ilSxcuXbyIKiUzZn3PpCnf8cCDD2qj
                xr86eKu2Pmz0qFHs37ePN956i1+XLOHFl17KtanK4XDQvmOHXI3Hm/95P/3Ex717czUxMSvNcWNp2arV
                bXu7velu3bKFYYOHaF5Rg8HApClTfKZTKlepwrCRIwkrUiTPtD4b/Dmdu3QhOTmZ6OhoJk2ZzNwF82nQ
                oEEuo+Q9A1gIwaivvmbtqtW80rUrvyxaRO+PP8q1jjgzM5NXunQpVAGjut0MHzqUFcuWaW2wbbt29O3f
                P9e0z514LGPPnePTfv01L7LZbGbwsGHc3+h+7bulSpVi7PjxFC9e3KfD9y6J+KRvH3p91PuOhKt3Ov8/
                6U301qVHH2upnSWd1wBj3R9/3LQchRBMGDeO5b8vo1SONbZCCJwuFz179CAmJgZVVXmyzVO079Ah17v0
                tn2DwcAn/fr6rNcVQuDn78+n/fqBlFw4f56IiAhmzPqe0WO+pXr16rkHGx7vu6pKPv7wI3bt3MWDDz/M
                +EkTGTJimM+6tb86ZXueA1FvPk+dPEnfjz/Gbrfjdrtp+3Q7ho0YTsmIkj52qdkDzfhq1CgmfvddrvtI
                KQkKCiIkNMQn7S2bNvPZgAEonrXYw0aMoFSp0j7lnL3TjYwsxeixY328P4qicPr0aebPm699zinQcu7s
                lQU4E/1W25vNZtNOS3I4HPzy888+7zivwca/27dnxqxZmqj8y8ZkkJaWmuW1TrzKn1u35rl5Lnvab779
                FtNnfe8zXWswGKjfoIFPW1NV6bsQX4DqVm9a58eO/pY1q1dry5nub9SIzz7/XPMkAzzx5JN80rdPLiHn
                drupWq0a38+ZTeUqVTxLJOoxY9b3zJj1Pf7+fj62xuVy4XK5tYH8gP79sVmtDB85koW//sJDDz/kc3a7
                d6lDl1e75iqfixcuMGjAQM3mSSkZNnIET7Vpo10bHBxMr969eab9M7kGkSkpKXR57VXGTZxIYFCQ1ode
                TUzAZDJx8uQJNqxfnyuKQM461Om55/hpwXz8c3hd8xSK3gu7vPoqfn7+KIrCmehoxo0Ze8texT17dmO/
                w/WNUkrS09OZPm0aSUlJ2ijk/575N5WzCRZv3kJCQmjx6KO4PC9JSrALyUjVQBepYJBZQu12ujSVrLiJ
                Zs8IVAH+8GxIuZXuxA1ECUl+frAiFEpkEe3M2SpSEHADY5N9l3v2suz/yV8NKmvKoKW2TiS7cSxWvBil
                SpfyaUiBQUGMHjuGtu3aIaUkvEQJ2ndoT8WKFSkZEUGZMmW0ECfZGx/AmtWrmTVjJpOmTGbIsKE83Pxh
                hn8xkqKekAbe71apUpnuPXrkaTTWr1/PZ57G53Q6eefdd2jVqtUdiRrvDt9PPvpIEyV2u50ur75K6dKl
                tbS9eSxbtiw1qlf3KRe73c7osWPo0rVrVkfr50eXrl2pXLkyYWFhlKtQPpe3w/v5t6VLmTl9Or169+ar
                b0bRvMUjvPn227R49FHNKHmngtu0a1uoU85Llizhp9lztCmVEiVK8Em/vvmu/bndWYNub72tbUxzu900
                vL8hTZs1zeXlMpvNtG3XzsfgCyH4oGdPuvfocdshNe60My4MKlasQMVKFfO2HW43Rw4f1hbV55Vfh8NB
                93e78e03oylTtgwlS5bMJQA+HzCQ40ePYjabsdls9O2Xv+D3fi5btiytWrf2+buiKCQmJrLo10WULVeO
                xk2aaEJAKLnLztvJTfluEqtXreKlzi+z+LeldOzUiTffeosXX34pV5+R34ZK77OOHzeey56NaEWLFeON
                N9/02Zmb3VYZDAYef+JfzFu4QJulkFISGBjI8C9GajugvdOYo77+Cqs1y9PZqHFj7vOsr8yrXnjtZvUa
                1XniySc0e+YddEybMsWnbd+4bt2FeifRojq4XC4G9OvPoIEDcTqdWXlH5upPARo3aZxr2lPKvzqpjPR0
                3nr9DSZNmOBTz/JKq2mzZnl6MW9qk2/wNyEERw4fZtLEidq6QCkl3bp3Ryi+m1MAnn3+eZ/PUkpKRkQw
                84dZ1PYI4po1a2ZtZIyMpHyFCoQVKer7/KqqiflP+/Xn0sVLzPvlZ15743VaPPooPT7o6bMb2Wq18kmf
                PpQtWzZXnzdv7jyOHz+u1fUHHnyQJk2b5KpXiqLwZJs2PiGn7HY7PT/8kKHDhvkI4qy//xUW6L133mXo
                4ME4HI48g/h7y6hevXo3rZtK9otMJhMDBw3E6XJhsVj49ptv2LxxU4FjALlcLhYvWkxEZOQdG+oTJ06w
                ZtVqrbL6+fnRosWjmHNsGvAahWLFi2nflUhKScGD3t3Jt3gWs8+zCSgioRYClayTVHYKleOAQWbFMCyo
                4Dx3A1MQ7NmZVyi2wXPEnz95508ALpcz1/ubMX06MTExf3nNjEae6dAx3/tkpGdolTIoKIgRX4ykTdu2
                WgU0m82+xiav+ExGI9FRUfT6oCf9Pv2UTs8+6yMMylesoE2Jl4woyfxffsnTAxIXF8enfftpDSI8PJz3
                e/YslLApM6ZP51rSNZ94X296puuy10HvvcqUK6vl2WyxMG3GDNp36KA11JybM/LKm8Fg4OSJE/T9+BM6
                Pfccn/Trq5VlUFAQVatV09IrWbIkAwcNyjNkwu2KxLS0NPr16YO/Z9eh2+2m03PPUrZs2ULxuHnTWPZ7
                1o5b76Ylp8PBG2+/nW/ZVKhY0ScmW+9PPuaDD3vlio/23+J2y6ZM2bJUrFgpX3sYFRVFWmqqz+/T09M5
                F3uOn+b8yEPNmrF82TIURaFChQoUybZ2WwjBqVOn+OnHHzFbLLjdbipVrEiZsmUKVGbPPf9cLjvicrv5
                w+PlFDfp0N1uN6dPn2bypO947oXn+ebbb33KqU7dunl6D/Pj4IGDmrcEoH79+6hdp06eeckuSho1bsxb
                b79NZmYmJUqUZN7CBdSqXdt3XeLy5Rw/dly7plbt2lnrY2/SXwUEBPDoYy1zeRVTUlJYu2btf60+mi1m
                zePkfRczp8+gYb37GDtmDOdjz+Xp2Mm5kxbAz89CQIC/j2AfPnQYzRo3YdbM74m7FJf3cqQ80iqMAVm/
                Pn21TYSqqlK0aFGaP9I81z297yO8RLgW57B8+fIs+X0pFTzRL6SUPpuL8pLtUgiMJhOzf/iB5b/9xtff
                fEODBg20e1WuUtlztG3WDuUnn3qK7h/0yGUTEhMS+GnOHM3mCSF44MEHKZJjJsqbbnBwsLbZSwjBa2+8
                Tr9P+2sDY+8zWiwWQjz7B7wRKqZNnspDzR5gyneTuXTx4g3fdYGmnr03e6lzZ9q1e1pbFPphz54+FT2n
                Is1uaOb8MJvTJ09So2bN264E3vR/XbgQl2fUA1CiZMk8d0B5X0p8XJw2cnv+hRdIdThwwh2G286qLDag
                q6rg8Hz2A75Q3FlnMhdwylgFriBR8hn0WWRWRSycQaTAAITn8+wSCAwM0srGW8bTpkzFP9vuQz+Lhbr1
                6uZ7n6tXr+JyuihRsiRjJ4zn3888k68XIL8p8LhLl+j6yis8/XQ73uvxfq7vK0JBqiqlS5dm6vTpRERE
                5BkA9/vpM0j0hN1xuVy0e/ppgoOD77gsM9LT2bRxk+a9U1WVqtWqUdKTj7yeMzYmFoCwIkUYM24sT7Vt
                k8vTcbP2ER8fT68PevLkU0/xzbej8xDHWc8dGBTIl6NGFXpYnBHDhuOw/zUSRcDb775baB43bxo/zp6t
                TRt5d4M/2qJFvtd513gGBgYyZPgw3uvevVAGA7drq2507rO3bhbkB6Bqtap5xq8VQnA5Pp5NmzaxZvVq
                Fi5YwLffjKZ3z150fKa9Z6nFVW2Xslc0Za8v302cpJWz2+2mumfJREHKrHadOkRERPp6vaUk7tJFrl+/
                ftP3nJaeRv8+fajfoD7DR47M9b5uFDswlx11u1m9ahWpnp3/3vVY/v7+NxTp3nu179iBNm3bMnfBfOrW
                q+fjeUpPT9d2zXq/XzKiJIYCeqpr16lNRGSEr1Azm2+4bOBuExISQunSpXzK3N/fn4yMDEZ9+RX/17Yd
                fT76mJXLV2i7j/OjaLFilChR0ietwMBArly+zMBPP6XDM8/w2YABbNq48a63xwP793MmOlqb0nc6nbR+
                vHWeGkUIgdVq5fr1ZFwuF02bNmPuwgVERpa6JbtsMhpZu2Y1QwZ9zvAvvuDJNk/53s+zidbtdtO0WTO+
                HPV1ntEw1qxew5UrV7S8BwUFUcOz4zgv+5KYmIjVasVms/HW22/z+ZAhuZZReO9Rp149n01Bfv5+XE1M
                ZMjnn/Pvdk/zab9+rF2zJs+4pjciVwuwWCx8OeprXG4XK5YvR0pJ7549eaVrV/r275enJyQp6SpDBg1m
                44YNTJoyWTvy6k46kKVLf8OcLfxHaEgoJUqE53lNUlIS8+fOQxGCWXNmU6JkSebO/gFXIVVKl5A0lIKW
                UmGjULFIwRkhGSdU+ksDaQWIqSiBZCER+XzVWIiNyLuJJ4S8j95VVZUSJcJ9pol27dzJtaQkn0jtlSpX
                ztXhZF/Ho6oq5SuXZ/ykiTRoeOtn4ZpMJlauWEndevUY9e23WuXP3nAvXbxIYFAQU6ZPo07durnS94Yt
                WPb779pno9FI/QYNtHALd8KZM2c5e/asT8df0xPfLfui8uxrGY8fO4bJZOK7KZN54MEHb9loenemNn/k
                EQYPG5rrHdjtduIuxREUFMjcBQuo6ymXwjpB5FpSEuvX/aGNWN0uFw3uv5+QkJBC9dqdiY7mvGd3vLfO
                VaxQASVHuBLv/5+JjmbVypUEBwfz5ddf0/bpdv81kZj9nunp6ezcsYPDhw4RHR3F5bjLWG1WVLXg5zUL
                IUjx7PbOC6vVyoihw5CeqVy7zYYga/NY9tA5fn5+1G9Q39c+X73KsaNHfMozqICDKG/Zt27dmu9nzvQJ
                yZSamkbS1aRcnpCcMwbb/9xGaFgYC35eqK1L831fokBnz3tP//lt6VKfUCpVbiGGZo2aNZkwaSIBnim7
                7AIhOTmZ7du2afXeoChYLAU/XqFCxYqEh5cg4UqCz8zA8WNH/2tCMTg4mPsbNebPrX/m2mTk5+dHeno6
                vy1dyob1G6hYqQLdunenTdu2edqTyMhIatety4kTJ3LNfvj5+SQ4ndAAACAASURBVJGYkMD8ufNYvXIV
                VatX56OPP9ICgReW3fCms2b1ap/1gG63m/oNGuRrC0YMG47T4eDBhx9i4qRJWkzbW8mToijM+WE2Q4cP
                58WXX8r1XIkJCSQnJ9OgYUOmzZyhRQfJacfmz5vnEwrL398/3+DiUkqmTp5MZmYmY8aN48WXX7rhQQAd
                OnZk985dBGU7xMJgMBAYGMj169dZ/Osi/li7lgoVKtLrww9p9Xjrm542k0ufaGv+QkOYNnMGCxcs4KuR
                X5CalsbUyZP5ac4cunTtSvMWjxAUFMSFCxdYvmw56/74g6JFijB3wQLq3VfvjivFsWPHSL5+3ccjZLGY
                fUae2QVFrx4fkJaexryFC3ioeXOiTp8Gf3/crjs7lSW7IXMKyWeqwn6DJNMTbucXIblfUWmuKlk7lsWN
                hWI6EJRPubhvJ4b3zSq2hJwuTO8opXLlKj4VxBszSvueKilZskSuhieE4Pr16/Ts0YPixYvTf8AATSTe
                6jv3ThdkD8SaPY1zsbG4VTdLly+jSpUq+a6l2rF9B+fOndM2AwSHhFAyomShlGFcXByX4+N9vF5FihbL
                03glJiQyZvS32G12lq9aSbXq1W+rXKSUlC5dmv4DB2jTXtnTSE9P51pSEvMWLqRu3bq5xPWdGuGtW7Zq
                ywq804yNGjUqdEF28uRJ0jPSfepDuGdtXU7jarVm8slHH+N0Opk0ZQqP/+vx/9pUs/e4q+XLljF18hRO
                nzp1yx7j2xGk2XfCe5eHeI+l8+bJz89Pi1mYfbCTnJzik56jgOvIvfd+6OGHmTZ1qo9QtNtsBQqwbrPZ
                GD9iOGVvckJFQfJy4fx5zp87p60rVBQlzzaS71SsJ75jXt8/fOgwNqtVE9GqZ5nJrYiykiVLcPyY73rO
                K5ev8N/kpc4v88vPP2sxK3PWUZPJhM1m5fix47z71tu0bNWKMWPHUqSYb+g5IQRvvv0mf6xdS0pycq60
                vPUxPT2d/Xv38lynZ3n++ecYNnKkFnLnTtts1rrKLNvhDUmk2Y4SJfL8/prVa1iyaBENGjbkx5/mYraY
                bysfDoeDjs92outrr+Zpc0+fPk3tOrWZ/VPepzoJIXA4nRw6eNBncGc0mQjOdvhF9rSHDh7MoYOHGDNu
                LC+/0vmGs3RCCP6/vfMOj6Jq+/A9M7ub3iGB0HsH6QiCdJQq2AClSBMREPFVURFEEBAL0pUmSPWVbkN6
                L1KU3lvoJSGkb5vz/bHF3WzKhgSE95v7urwM2ezMmTNnzvnNc57SolVLlixezJnTpz3a55grUlNSOX7s
                GH379KFFy5Z8Nm6sWxLxLPMopheLQghe7tyZg4cPMf3bGXTr0Z2q1aqxZctmPhz2AW8NHMzUyVOQJYmv
                Jk5k974/80QkAvx98CA6xd3GJiuKcwvAcQ5VVRk5fLgtTH3SZBo0tPknKDodip8/xjwMXhRIRACfqjJ+
                wpbYOkUSTJBUjtnrQGflY6hiC2iRMrEAmp1yMu+siiYp40NGhIdToEABt/t0/NixdNfr7rPhmCwSEhIY
                8LotbYSfnx8lS5e674XRbDbzwksvOQVe+mPExMSw+McfMxWJztQqq1e5WQ99DAb8/Pxz3YeqqnLxwgWs
                Vus/5xa2l5b0QiYtLY0J48dz6eJFVqxZfd8i0dXyUSld1KHzpcJi5fUBb1CjZs08FUuO4/z9999uUXaq
                qpIvE2t+brhy+TKpKalu25m+Pr4eE6bFYmHsmM+4eOECM2fPfugi0dUSc+3aNWZ+9x11atTk9T59OX7s
                mHP72GKxYDabMZvNmEymHP9nNpsztUA6fh8cHEyJEiWoVbs2PV57jZlz57Br7x7q1quH1Wp1S2zt4M6d
                26SmC4RxFZ3ejcfyWC3uCbxUu9tPVlitVmrWqkXTZs3y5J4dOHDAI2gp/Vpx/xbuM25pt1RVxWQy5miM
                ZOQeZbZY+LcQQhAeHs6sOXMoX6G8s256Zi5CBoOBTRs2UKdWLdasWuVRf7tMmbJMnjqFokWLOmszZ3os
                vZ4lixZTv05ddmzfnmcvULF37nA37q7Hdbpa6RxtOnH8BJ99OpoaNWuyYvWq+xaJjmN27NTJLam262ch
                ISFMnTEjS4vfob//9qh3LbtEwLt+b/7385g7Zy7DR4zg1e7dszUGOAwMY8Z+RsWKFZ33J7O5XgJ+WbOG
                5k2asnlT1u4CuqwWDEejW7ZqRctWreyLuwmj0YQsK/j5+WaYzT63xFyKQVbkdBOOBYvZ7LxJFouF0aM+
                ZfWq1cyeO8cpEh1BOcGBgcQlpGW893qfwgsh0VhIfCTDp5KVNOCSJPhAtjJcyDRSZZLse8uZCcLMjIbJ
                CELIqxQ5tnMkITwuXQDFCxemgH3hd633mn4MpCSneIihIYMHI4Sgbr16HDt6hAIFCuSqrRaLOdNx82SD
                +ugUXbbjas/u3W6Lh+1FR811P6qqyi0XXxLHTUyzR0T+4zRs4oP33mfXrp3MX7iASpUr5fpZUFU107ES
                kS+Cpws2znPLlUO8X71yBVVV3esPW615vojFxcU5C9HbL4aU1GSPueSzT0ezYd16pn/3HfWerPevicSf
                fvwv386YwamTJ7FarAQEBFC1WjVKlixJRL4IFEWHLN3fMyzLMnfu3GbNqtUZWrHMJhPPPf88nbt0pkiR
                IhQpWtTt8xo1a7B92zaa2fOhufZPWlqa2zadLMvcvJkzK1ehwoXdokkBDHq9RwCAxzi2qhQuWjjP7sfF
                Cxc9XD5crdK5ISEh0WNcJdxL8Gq8OT4vWDDaI7o2q635B42jLWXLlWXRkiUsWriQObPncOvmzUyrSTkC
                noa99z7+AQE0dxlTQgieatiQhUsX88O8+SyY/wOJiYlulmZXfP38iI+P5+3BbzFn3jyqVqua62tKSkry
                eNGRJInkdOvVmTNnGPTmm1R7oioTvvoqT2q3m82WTOeJxk2aOIOZMjvH5ZgYj89sLyQmt3H0/Zy5jB83
                lq++/poXXnrRa30lhKB2nTrMmjuHpYuX8MP8+dy6dSvD6lYOf9V78fEMeP11Zn8/l6caNsy6hF9Wg9+1
                kXq9Ab3e4GZ5QpAnW18O7iXc8zhWWpqRpORk/O0m248//Ij169azbNVKSpcu7dZGg8FAeFgY167dIi+9
                /4Q9eOUZVaIMOt6VrJyRBDGSYCgqb8jQU5VJA49aznI2LUkACuWhNREcFWTSK0VBmQIFKJhu+9SRsNwt
                kvj6NefPqqryoj0CevGPS+n84kuEBIdkGxHojajNbMA7LAVZlbS6eeMG8fH33NwUUlNTSUxIzPJhci3N
                lNXfJSUne2wf3L595x8xnZJMn569OHPmDD///isFChR8IALOtU2u2+B5fZ6kxERn3jVXYXH1ytVsv6vo
                dLbgIy8ntLQ0o8d5bly/4dZ/fV/rxf79+/lh8SKnL+bDFImOc7079B3WrF5tq6/rH8AbAwfw4ksvExQc
                hMFgQKcouXoh1el09rJyv2coFC1WKzVr1qB+gwYZtrFFy1ZMnTzF6dDvdl9kxWMLKiYmJkeLj6NUpytB
                QUHZiyCXfHh5cd/uxcd7BLI5tnZz+zzo01kqJUki7m4cRqPR6ypOgYEBbkLRarV65JbMxYDM1VgODQvj
                jTffpGOn55k2ZQrfz51rG7sZBOvY5rYUFi1YQN169dzmV5vlqjDvDRvGiy+9xNdffsWK5cvx8/PLNBjr
                1q1bLF28mPIVyufad9xkNGI2mzzmDkc1K0mSOHzoEN1f7UajRo34cuLXzrn+Qc0drnkyszqHIwgr/cu5
                I9cowOyZs/ji88+ZO+97NwOYN1VqHAaMgtHRDH57CB2f78Tkbyax7KefUBQlw/ujKApms5lJE7+hfoMG
                GSZ09zrFe6aLNVKed741A+vFvfh4btsz1w8ZNJj169axcMki57akaxt9DAbCw0K5IUSeZqaSbHl2EJJE
                KRVWWHUMVhUihIQF+FJW+UCxEicJ+zMtnFYhCfDPxGlbAm5nEhF9v+orQYLU9DJR2CK2n47IDwH+6awm
                wmPgXzx/wWb5iY2jZbMWpKakMH/BAgIDAjh/7hzVa9TwsLrk5ZuwV9bnmBiP0kkJCQlcvHjBo22u4+Ta
                tWuMHjXKbbsi4wdQ9XioHOXR4mJjGdCvP1euXmHT1i0UKFDwgSdrzi6tTm5JtfuduR5br9eze9cuj350
                vda0tDTWrF7NmTNnvG5X+r6SZZlLly5hMplISU6hX+8+7D+wnxWrVzl9MR+2NQZgxPCPWb5sGVarlcZN
                mrDnwD6GDB1KocKFCAoKwtfXF51ej06nu+//AFShZioGbGmV/DJtY+Uqlan/VIMMK1AEBgWid1mcZVnm
                3t273Ll9O0djKH0y8qiCBXK9o5BjS3u6BdNisXD2zJk8eR4io6I8ch5evXI10/yVGWFIF/ziGo2bW6v2
                oUOHclSVxZHKK70BILpQNJ+NH8efB/bTomVL5xyYPopWURT27N5DfHy8M3m0az/LskzpMmWY/t23rN+8
                ibp16zrHSPpjybLMtm1bSUlJyX01JzyDxHQ6HX8dOAjA7l27eLVLVxo1asTkaVMfuEjMybqV0VZwSmqq
                s3rR1ClT+HzcOKZMm0YDu3XPm+M6ykSmfyEsXqIEX0/6hj/Wr6dho0buGSbSceXKZY6lc0HLsVB8mOTP
                n9+jQ2NjY9mzezc9Xu3Gn3v3Mnf+PMpXqJDhAPDx9SV/vnxcQn0wg8F2ZwAYrMqsUBU+FjLPqxIxCL6W
                VU5LtlIwkst3wrKoDnNdyrs4Fgm4hS0peHqLaD5ZoXFklIdwyig/pcViYfHChbzatSsREeEsX72K8Ihw
                Dh48iNVqpY49KfK/mbsuKcnT4qfIMitXrCT2TqzHZ8lJSaxasYJO7Ttw+NDhDN+wXP8+JCTUI1rw4oUL
                7N61i0FvDuTmrZssW7GCoDyOCP63sFqtWNJtryiKwunTp9m8cZPb/Xb8/8iRI/xn6FA+/uBDZyJfbyZU
                V4dux+90Oh2LFy7k3Xfe4eyZM6xas8ZZFejf6Nu1v/3Osv/+F1VV6fJKV+Yt+IGwsLAHEm1tTDNm6aMY
                GhaapZD4fMKEDNsUGRnpYQ3U6fXs2bPH68VPCEFiQoKbSGjStOkDe1HMjIzqzJ86dSrbND3eUK58OTcj
                hSRJXLx4kZTkZK+vMTEhwaXaiIq/vz9t2rXLE6v2pK8n5jip/NnTZ5xC2nVsCCEoXKQIs+bO4aeVK3ip
                c2cKFS7kVjZVkiTu3LlDXGwsQggO7N/v5qLkeqwqVaqwdNlPzFu4gHbt25MvXz63Y8myzIXzF5zJn3OD
                r6+fmy+zQyhu2bqFrVu2MOjNgXR64XkmT5uaJ5bmvCRfPs+ypynJyfz5515GDv+Y6VOmMmX6NFo+0yrH
                88tvv/xKUmKiRxSzEIIKlSryw6KF/LRyBc+/+AKRUVEepWCTEpO4YbfKPhZCsWq1JzxKvTnqMMbHx7Po
                x6VUrVYt04fXz8+P6KgozmGzKCr27PR5PZ0JCVIkQZCQaKvKjFQVvlUVhqgyQRl0dH7IULpK2HwdlTwU
                ileB9G7YRuBVnQ8hpUq6LQAAJUt6Jvu1WCx8NnoMJUuW5NtZM52Rhvv+3EdaWhqNMsh3l5EF70GiKLLH
                /rWsKBw+dIiBAwawedMmLsdc5u+//mLGtOn07Nad9999j/Pnz1O+QoUMrdeuAqlkqZIeVgY/Pz/eGjiI
                tLQ05v3wA5FRUV5tDTwOSEgZVtcwGAx8OGwYSxcv5sb161y/fp11a9fyzttD6dW9B6tXriI8IoLQ0FCv
                r7VQoWgP3yaDwcDEr7/mypUrzJn3PcXsCXG97du86mchBMlJScz6biZxcXG069CB0Z99lq0PUm5ITEzK
                sP1CCCRZJioT653jOY4uVCjD75cuXYZgl6hKx8L6x9q1XvfZhfPnMdvzCzoc9zt36fLQXxSjo6M9jAhH
                jxzh0N+Hcn3/S5Qo6VYi0mZRvMKVK1e9Ljpx7uxZ58+pqan0fO01t+oZWYlxcxbJqufOns3OnTu9sii6
                Cr2bt26xfNnyDK18jn+XL1+esePHMXvuXLq++oqHlT8+3rZdevrUadavW5eh9dFZ0aV2bb6ZMpmZc2bT
                6pln3NqSlpaWYT3knBIREUFIOpcnWZa5Fx/Pu0Pfoesrr/DxyJFeicSHvV5VfaKaRx9IksTSxUvYsH49
                PyxayDPPPutVe9J/npSUyKRvvsnSylm5cmU+/+IL5s6fR5euXTG5iHmLxUJaWtrjIxQbN2nszKXm3hFJ
                jP9iAiVKlMj2jb5gZBSXdQp64JgsMEsSUh6PA8m+sAoJLJItylgvJPIJiWh7ZLRw6ejCmSTnlgScxSYU
                c9tEhz/keUmQ6tI1ViEohERnnQ+WMqU9BlFDFzO3mxUjNIwBA99080Xau3ePPWdY/kzffvfu2fNQFhCb
                MFEztEz9uXcvA17vz7MtW9L15c5M/OorDh48SFJSEr379uG9Ye9n+mA4jlOyZCm3MoKOSSkuLo6x48c5
                E2974z+SlpbGmdOnH2nRqDfoMRh8MkwkfevWLUZ+PILmTZrSoklT3ho0mNUrVxIbG0toaCjfzprpUWM4
                KypUrOSRFN1WncXMG28OoETJktkKEde+3/fnn3kaAX7k6FF27NhOeEQE4z4f/8CtE4kJCZlGKYaGhODv
                75/p2MkqLY+fv58zQt5VKG7fus2r/gVYs3q107csOTmZT0Z/mq2P74OgcpXKHj6cJqOJsWNGY7JvveVk
                gXV1owgKDqLek0+6CUWAzZs2ZrtwOyqVHDt2zFkEolixYrzavZtXYlqSJK5fu+YRCAPw+2+/MWH8516V
                xnWtrOSoAvXdjBlcuHAh05q/jt+VLVeOz7/4gi6vdHVrg5+9GotOr+OL8TZjTVYVcACqPfEEs+bO4enG
                jZ0iVa/Todfpcz0GAgMDKVGyRIZtyB8ZyVtD3vI6cEWSJGIuXXKWg3zQFC9ePMOXnfj4eN77YBi1atfO
                tsqUq/Y5c/o0CfaKTYFBQfy49EcO24sSZPXdChUqMGbsWPr17+9si6Iobi4qj7RQdAzudh3au6XocCz+
                r/fuw43rN7INnokqEIXe15dBipVkIfDLYtv3AahHZ9lAyaWjSyJlbFGUJG4A9+yiMVenF7ZUO6cRmOyy
                UyAwSzDcKiP0OuTSntbDtu3aebz5SpLE5csxTJk8hVv2qicxl2I4ffKUs9SeK2lpaezcvoPXuvdwJj99
                0FSwVwHKSNg4yhilpaVhMpmc1sMuXbvy2bhxmUbquVK2bBnKZuCMrigKQ4cM4aYXE0xaWhqHDh1ixEfD
                nWWbHlVCgkOcObUyGqdWq5W0tDS3Po0uXIiNWzZTvkKFLNOlpL9HNWvVpGB0tMfv09LSmPzNN5w9ezbb
                9ppMJo4dPcqgAW/munRo+nb+uHgJqqrSrXt3p0h7EPfOcb5bt25l2H+2bcLCBAYG3vf5X+v1GopLNQdH
                tYo1q1ZnKzpMJhNz58zFx8cHs9nMSy+/TNt27f6VLb1KlSsTHBLsJuYUncKJ4yd4odPz3Lp1yyMIM/3Y
                M5lMHNi/n99/+81NYAcEBPBs69ZuVS98fHz4cclSZ9WSzCy+YMu+cM4+ZnU6Hf0HDKB4iYzrd+sUnS0A
                ys1yF8/GDRvtqZasJCcnM3fOHHr3fA2TyUSffn2zLJHn4NjRoxw+dMh+TbZx269XbxLsrgMZWRddr2PQ
                W2+5rcVRkZFIkkRUVBQxMZcYPOBN59qc1bEkSWLg4EFY7el4CkZHo9Pr7vv5cP25Tdt2Tn8713OfPnWK
                byZOJDUlJduxeffuXZYsXsKSxYuJiop6aC893Xv2dDNQOHapPnzvfeeLRlZtV1WVq1ev8vGHH3Fg/37n
                bkGhQoW5cvkyE8aNJ9buIpBV5SgfXx9at23jLJDi5+dHRES+f08omi3mLIJhMh70r/Xq5eE8rdPpiImJ
                oX2bNsyYNp1dO3dy6eJF7t27R2pKKgkJCZw7d461v6/l919/w2wxU0RINBYyZknwby7PipAoI+wpcjIY
                kKnAxTxqY6wkOOk4ll04NhESdYSEyJ8f2b6F7LYgyDJDhr5NUpJ7qgmDwcDqlSvp17sPC39YwM9rVnPt
                2jVatGxhL4t0l5MnTrByxQoGvjGAD95/nw+Gf+Rx7x7US4XeYKDqE9Wy3EJ2/K3JaKRL166M/Xy811s4
                4RERtHr2mQzfXo8dPUa3rq8wd/Yc/ty7l8uXL5OYkEhKSir34uM5feoUP69Zw3/efptuXV+hQ8fnnP52
                jyq+fr4UL1HCq/6xWq3UqFmD/y5bRmRUlK30mSxlOjk5xMnlmMvOzwa8+aaHpUSWZY4eOUrf13rx7fQZ
                tuf80iUSEhJISUmxPednz7L2998Z/sGHdOv6Cu2f65BndagdbNm8Gb1eT/0G9fM0q0Nm3LxxI8NxLISg
                aNFi912SUghBufLlebVbN7e0IhaLhe++ncEtl1Q5rsLKISo+GvYBSYmJWK1W6jdowGfjx+WtSMwghZkk
                uc+VKSkpzrKyzZu38Ni+8/Hx4dBff9P22dbMnT3b+ZKRfuxt2byFIYMHs2TxYp5t3dqjKS2faeWWsFyW
                Ze7cvs2Ij4Z7LLSulp/4+HimTZlKXFwcxjQjXV99le49e2T5nPml8xsNDAzk7cGDGf7hR3w+bhyvvNyZ
                j4Z9gL+/PwMHD2L4iBEeQtFisXD82HFu3rzJoUOHmDJpEuv+WOe0IPv6+pI/f35OnjxJj1de5eqVK9mO
                5cTERKcgqVylijMBeWBgIBEREWzcsIFBA950RqB7cyyLxUKNmjW9jh53jgv+CdRw9X9+uvHTVKhYwaM/
                VFVlyqTJvPP2UFavXMXRI0e4dfMmycnJpCQnc/vWbQ4ePMi8uXPp/sqrrF65gjfefPOhPN8OOnfpQmRk
                pNtLoSzLpKSm8vxzHflywgS2bN7MubPnuHv3LqmpqSQlJhETE8OWzZsZO2YMzzZvQeHChenc9R/rb/ES
                xVEUhU0bNvDBsGHExcZl+GLgijHNiMU+54SGhVG2XNmMX2weRsfcuHY9cxFptmTofFm9Rg3aP9eBFcuW
                uznw6vV67ty5w4Tx4wkNCyMkJMQZlq9abW9hN+05onSKDqPZnCc1n/OCgkhECYm4DMyGScAZBGWRyE3G
                OgFcAY47koBLgnxCoqeQ0VutGBrW99hCc/z/1e7d+XnNz+zft8/N2ubv78+hv//m8KFDtr6WZd55eyiy
                JGGxWklKTOT69evkj8zP3PnzKVu2rFcLiaqqmE2m+7ee2o/frXsP3hkyxC27ffqFMjkpmRGjRtKvf/8c
                O4T37tOHlcuXc/L4Cbe6r4qicObMGUZ/+ikREeEEBwXj6+eHLMtYrRaSEpO4euUqQcGBLFpiqy3r7cJu
                NBrzLAdoTgSFJEk0b9GcpUsWYzKasrTkPd24MRMnT3K+kQYEBBAY6LmVbDTa3p7/3LuXKZMmM+GrL52f
                P9umNW3atuWXNWvcFk6DwcDFixcZP3Ys4eHhzudcdnnOb9y4gdls5oeFC3mqUUOvtvi8HVepKSlcv36d
                sLAwwsLCHugi4jj2jRs3PPJXOi3b5crlunb5u++/x/FjR9m+bbsz0vXkiZP07dWbYR99yJP167vNCUlJ
                SYwaMZLVq1bZauTWq8fkqVMyDCjJ8jm3Zh1UqOg83YxMRhM6vR5Jkti5YwdGo9GZtLvj8534/bffPOYY
                vUHPndu3GTvmM76f+z0FChakZIkSBAYFcevmTS5cuMC5c+do1KghI0eN8pgHHb6Xo0aP5rn2/1hMff38
                WL5sGUnJyXz40YcULlLE7b4dP3ac4R9+yMEDB0hNTeWjj4czYODALP1ZwyMiiMiXz+3F3CGIlixaBPaX
                d52iMHLUJ7zSrVsm66eZ2TNnsmb1KuJi46hTty4TJ09y3t+g4GCiC0UTFxfHoUOH6NWzJyNHfUr9BvU9
                Xg4c7fxxyRKXnaa2hIfbKrSEhYUTGRnJdauV9evW0adXLGPGjqVc+fKZHmvp4iXIsoxer6f9cx0yrOud
                UaoynaJj374/eblLZ1JTU1m1ciXt2rdHr9c7+3Ti5Ek8Xf8pj7VMURR+/eUXNq5fT0S+fAQEBtryL9vn
                rXv37nHp0iVatmrFlGnTvC5Nakusb8n1HBtVIIrX+/fn8/Hj3QSqoiiYTSamT53Gwh8WEBoWhr+/v83C
                raqkpKYSe+cOiYmJfDZuLF1ffdWtz/Lly0d0dDSJiYn88ftarl65yiejRlG7bh3nziLCfc7ZtWsn9+Jt
                NbA7durojEN4qELR0fmbN2/KcPJz+D3dvnWLosWKeQyc94YN468DB4lJl6TS8QAm3Lvnln/IITgLRkcz
                f+EC3h4yhP2Hj6Ejz6vj3adQhMJIxGXgiZgqCU5JgmdzYRARAJJglaxiAXyE7bW8BRJ1VBmTxYy+ccYL
                qhACg8HA519M4JXOXYh1qfvsGMS23HdpIEmcOnnS7QGqXKUKCxYtIiw8zKsF2+F8/1zHjrnu11bPPMNP
                Tz7J4cOeUcxCCISqMnrsZ/Tq0ztHSVddH+AfFi+mScNGpCQnO/vFMSkJIbgbd9ejWoCjUsaced87/Tm9
                8Wf08fGhR88eD31bz3G++g0aUKNGTXZl4jxvMplo07YtM2Z+5/b70NBQatSqwcEDB5wTmL+/PyM/HsE3
                X08kNjaWGTO/c6ZUcZ3wz5w5w/lz59xEvKNv7927xz2X59zRt4WLFGHR0iUUs88deWnlcvgs6fS6HKUk
                uV/i4+OJjb2TYfuDgoKoXqN6ru6ro3LFV998Q68ePTlz+rRzHj127Bivdn2FqMhInqhRg9DQUK5ciWHv
                7r1YLBZMJhMdO3VyRpF6K8iFEJhMJo8AifQULVrUI2Ds1KlTvP/uu9y8cZMCBaKYOWeO87P6DRrQuEkT
                tm/b5tEOxzVdu3qVa9eu8deBA27tDL0WVwAAIABJREFUadykCZOmTMXXzzfT8VKlahUWL13Kyy+86FZF
                Y93ataz/4w/KlS9H2XLlMOh9OHzob86ePYvVasXHx4cvvv6K5194IdugpyJFilC8eHEu2n0HXa9dr9ej
                qip6nY75P/3XWS8ZwM/X1yNFUEpKCqdPnabVM8/w7ayZbueJjIykStVqHDl8BFmWOXvmLK907kyTpk3p
                +3o/6tat66xGk5qayvSp01i0YCEAjRs3pnffvs5zFS1WlLLlynHN7kt58MBBWrd6hvYdOvBa715UrVbN
                +bfxd+8yftx4Nm3ciCzLvPDSi7Tv0CFT62qp0qVtAaeOHLc+Bpb/tIyLFy6QlJjM8JEjPCp4FStWnGkz
                v6N/n75u1VIcfWixWm2J5dMllzeaTAx4cwAj7C8L3lK7dm1q1KyZ6zlWkiR69u7Fzp073dKOua4pycnJ
                btZ/5zPs78+3s2bS6plnPD6TJInWbduycP58fHx9OXniBK906UKTpk3p1/91ataq5RRByckpTJ86hW+n
                z8BsNtP+uQ4MGDgw03k0z2fA9P4KMTEx/PrzL5kKRR8fH2bPnu3xXSEEBQoU4KeVK2jUuDEBAYFYLBYs
                FgtWq9VWishe39SxJREVFUX3nj1Yv2kTpUqVosYT1bkkrMRir3v8byIJIoVERZG5YD0qwV3p/qKzBbbo
                7qvAKklgEGCVBCUEvKPKWBAgS+hc3iQzWkzKlivH3B/mUb1GDXx9fTGZTG6lgFRVxWovVebj40PxEiX4
                4KOP+OX33wgLD8s6gbWqYjGbkWWZ6jVqsHjpEmrWqpXrxT1/ZH4+/mQkpUqXdo4P59a0Xs+Qd4bS9/V+
                ThF5P7WX8+fLx7qNG3iyfn18/Xwxm80ZjkVHvxQrVoy33xnK8lUryZ8/f5bBV6qq2rZtJYkKFSqwYvVq
                nmndOsstgwf5cgcwa+4cSpYsidlsditRFxAQwND/vMOMmd+5tc/x/8FvDeHJ+vWd/aGqKqmpqRh8fJg8
                dSpNmzVzm9CFEPj7+/Pjsp9o0bIlgYGBWfatTqejUOHC9O3Xj83btlKsWLEHkqomKSkZCYm0lDRMJvMD
                7/fbt245k42nvx/h4eHUql071wuUo8TX/IULaNK0KUFBQc45VbVauXbtGj+vWsX8uXPZuH4jiqJQpkwZ
                pk6fxuRpU70aj0IVzrESHh7OxMmTqFuvXpZpf4oVL06dunUwmUyo9ntusVjYvnUbpcuUcYpEx/mDgoKY
                8NWXNGzUiICAALfx4jZm7POUoigUKFiQAYMGMmfe95mKRFfLYt169Vjz669UqlwZnU7ndvwjh4/w36U/
                8sP8eRw5coTAwEBq1a7Nj8t+4sWXXnJ7kczsmvV6PW3atsVg8HG22XWM16xVi7UbN1DvySfd+v3ZNm1I
                TU1FtbfFarXi4+tL39f7MWvuHI9nUpIkevXuRfUaNZw+pkII1q1dS/vWbShcIJqqFStRuXwFShcrzvzv
                v6d4iRJ8NOJjvl/wg1teRF9fX15/oz9lypZFp9c554b/Ll1K06cbU6RgNNUqVaZimXJUKleBdWvXUqly
                Zb74+mvGff55pj6eEhJNmzejaPHiznvn6I+LFy7Sq29vnmr4lMc9E0LQpk0bpn87gxIlSyLJcsZzh32M
                BwcH80T16ixaspgRo0a59VVG98qqqpjtpWrbdWjP0p/+S8GCuc+V63hpm/vDfDo9/zyhoaH2tGTmDLWN
                JElERETQtn07Nmza6IwmT29JlSSJ/m/0p1r16uh0tvtjNBr55eefadW8BQXzR1KtcmUqlClL6eLFWbRg
                IVWqVuHrSd8wbcaMLINoJHEfV+3Nm3tKSgq7du5k2pSpTsfazI4lyzKbtm7xKBrv+vOObdvZv38fZ8+c
                5datW1gsFgwGA0HBQRQrXpzy5cpRu05dihX/xzL5+6+/Mah/f6ZKBuqrEpZ/0aQoAJ2AvySVN2QVs0dp
                PYFOwHxVR1n745PTM/gLie6Khb32bWc/IbFAVSgjJMwWM7raNQn5eXm2EVWSJJGWmsaWzZv5+6+/uHTp
                EqdOnuTSpUuUKl2asuXKUrRoMSpVqkSdenW9spaZzWamT53GsaNHadqsGe06tHcLnsnNIu8477mzZ9mw
                YQN//L6WA/v2Y/Ax8PEnI+neo0eG7du2dSsvv/CiM5+fEIICBQsya84cKlaqmOE5TCYT27dt4+CBA5w/
                d47YO7FY7NaE0NBQihUvRsWKlahZuxaFChXy6nn5fNw4Tp86ReOmTenYqVOmta8f9hb09evXmTZlKvv2
                7gVJolatWjzXqSO169TJ8Lpco7tnz5zJ2t/X4uPjw1MNG9Lx+U4Ut9fBzezaVFVlx/btHNi/n7Nnz3L7
                1m3ncx4SEkKRokWpUKECNWvXyvZYueXkiRM0fdoWsTln3vc827r1A70f27ZupVePnh7XY7Va6dajO5+O
                GZMn1+p6jG1bt7Jrx05OnjzJzRs3SEtLQ28wkD9/fsqVL0/NmjVp+HQjj9Q6WfGfoUO5HHOZ2nXq0Lpt
                GypWrOhVm06ePMmMadM4cfwEiqJQqVIl2rRrS9NmzTLcInb8vGnTJg7//Tdnz57jzq3bmMwmZFnCYPAh
                LDyMgtHRVChfgXr1n/T6eXT9m6TEJDZu3MCfe/Zyzvm8W/Dz86VQoUJUrFSJ2nXr8tRTT2W49Zod877/
                ntUrVxEfH09ISAily5SmYcOGtGjVKsMAquvXr/PZp6M5eeIEsqxQqXIlnuvUkacbN87ymYyPj2f71m2c
                OnWSO7fvkJySjMVkRtHp8PXzpUBUAQoXKUK58uWoWq2a86U6o36/fu0au3bu5MyZM8TFxpGakoLFakHR
                6QjwD6BgdEGKFC1K+fLlqVS5stf9snXLFubOmsPlyzEEBgVSvXoNOnR8zi1iP7PvX7t2jW1bt3Hs6FEu
                X4ohMSkBkPD39ycyMj8lSpaiWrVq1KpTO9siC47nrnfP1yhQIIrmLVs6yxjm1Xzjepy/Dv7Fnt27OX36
                FDeuX8doNKLT6QkMDKRwkSKULVuGGrVqOZ+l7NoQe+cOO7Zv59TJU9yJvUNqSipmsxm9Xm+71wUKUrRo
                UcqVL0elypUzvNd5IhTBlk388qUYbly/xuXLl7l69RrXr13l+rXrxMfHk2Y0En/3Lon2BJDZRfE0aNiQ
                BYsWZitKU1JSnLl/JFlGp9NlWjro7t27VK9UmTd0vgxUZdKkf3n72V4ZpYti4QgCWXKv85cmCQYImf5W
                BZGDtgoEvkJitazysWwFARZJYpJVobGQsEpAcgr+40bh93qfHA1ix/Bo36Ytl2Ni+H3dOkLDQj1qR3qz
                pZps37Z1+Knk5UPnmERu37pFy+YtuHH9OnO+n0vrtm0zPVdOhGJG/ZKSkoLZZEIVAkVW0Ol1+Pv7e/Rd
                dteYkJCAIssEBAY+UPFzPxOZ2Wx2lvQLCQlxpkjJrI2uQRBxcXHIskxoaKibNSGr72X2nOt1Ovz8/T3q
                /D6ofoqLi6NimXLoDXp6vNaTT8eMeWAO71arlUkTJ/L1l1+51d8VQqAKwcFDhwgLC30gi5SqqiQnJWM0
                pmG1+0caDAYCAwPdFhCv3EnsW46SJBEcEuKc37xtt81p37ZeBAUHO/2kM/p+huPFZEKoKtgrgej1enx8
                fLxaCLPrJ7PJTHJKMmaTyWbcUBR8fX0JtD+zOT2+69/GxcVhMZvR6fUEBARket2Of6empjrX1cDAQLfK
                Kt48Wyaj0Wa5sv9eURSPDBCZ9Xl6y6sj84EQtvVM0ek8SvR5mz7MMRempaai6HSEhIS4RaBndm2un1ks
                Frtwte0qKbKCwcfgFkTjzXgWQhAfH09AQEC2c15ePIeAM5uEzU9ZQlF0+Pn6uUWKe5s2J+P7I6PoZAwG
                nxzdH/DCR9H1ICaTiT27djN50jcctJfLcUyerv+5kj6E3dFo1wuSZZmD+/ezauVKD5+19Mfz9/fP0CE2
                o3aHhYVRrGRJDlyMQcVgSz3zb66/ElgEDFQVeikWDK43SAKDgMWSoK8kUITklVgUgCQkrkuCmZKKJCRU
                SdBPlWgANpFo99MztGrh9TaV68/r/1jHqZMnef+DDygYXTDLbZusjuk6qeb1VqEjdctz7Ttw5/ZtunXv
                TrMWLZxtzasgB9efAwICIF11kfu5vvQWm0chfY6jDXq93iNfZlZtdN0KSZ9mJ6vrup/n/EH2U3h4OAGB
                Aaiqyoplyxk+YgS+vr4PRJyaTCbWr1vvljpJCIExzci7w97LU5GYvt9kWSYoOIgggnLdzxJkWPvZ2+/7
                +fllaO3JcCvsIYyX9IEyoYbQPDu+6986gkWyO57j3znpp4x+b/AiLZg3fe5wHbufY2X2eXBwcI7mw/Sf
                6XS6TIMac3KfJEnyGMt5/dynP56vr2+2UeE56Yu8uj9eCcV/zKMH+ezT0Zw4cYIqVavQp29fSpYqRXBI
                MIqi80p/JSUl8ddff3HwwAFOHD+OqqrOt72UlBRmTJtGnTp1nBUGcnNjHN9t274dK7+aSIxBT0FnwmuB
                LCRnJRQBWLFFCD/o6GizJHjKnrJni6Ti4yJeZckW6DJPErwpJFK9CsERqMAcSeWyBFYELVSZnkJGZxeb
                QlXRVa2MbK8Dm5N+TUtNY8H8HyhQsCC9+/Z5ZIRMRvd6yODBXL1yhYLR0XTv2dOrh8TzWA810FjjEcTx
                jNSt9yQ7t28j/u5dpk2ZwjvvvvtAznPk8BEO7NtHsEvEocVioVKVyrw5aND/RGlIDQ2NxxedNxPZooUL
                mTZ5Ci++/BKjx46lfIXy9z1xdXrBlhR108aNTJ08hYsXLuDj44Msy5w4dpyxn33G1OnT8+wC27Vrx5Sx
                47hoCCDadlEYkLglCQ5JgnigoJCoBcjiYexNS6RiCzA5LgviJIHiclI/AfNklZZCooSQ7PkfMzE127ec
                /yur/CSpJIGtlKBQCBRgcXzXbEHfuBH4+uT4vh08eJAtWzazaOkStzHxqLF61SrW/7EOnU7H0083onKV
                yvd1HNsWsl6bGf4f4xjfnV7oxIb16wgKCmLWdzNp1rw5T1SvnmfPgOMYo0aOxN/FMq2qKmFhYXw6ZrTb
                1puGhobGv4GcnUjcvGkTy/77EwuXLOatt4dQoWKF+54kHVE1kZGRdO7ShZ+WL6dZ8+aoqmoLaTcY+Hn1
                GsaM+tSrUkzeUKp0acKKF+eEsKICQpJYKws6y1aGSyoTJJXBspWFkkBID35ClrBZLosIiQFCRodnWaU0
                IRgrW0mTBFIG5WSEXST6C4nfJJXPZJUUCV4WMqOFTICLSBRCIPn6oK9bCykHAkgIW/TivO+/p07dus60
                AI+aSHT4wi1euAij0Ygsy7za/Z/glZxi8PFx+ixq/P+mYaNGFClSGCEEZrOZ9999jzt3buepX+2SRYs5
                dvSom4+1oigMHDyIuvXqPZLPnIaGhiYU3SKlvp0+g+nffkvJUqWQpNxl03H1FbPlOyzI/IULeKXbq05h
                qNfrmfXdd8yZPTtPJkhFUWjd+ll2mI2kSIJbCIbJVu4gMEpglsCCYJasYnbKsActFiUkSfC8KvOcKqNI
                klsyTJDYJwlmyCpGSdh8K4VNHAoc/5b4QVZ5V7GiAF1UmY9UGR/bR25WSLlIYeSyZXK0iEmSxPlz51iz
                ahU9evZ8ZMWTJEmcP3uWnTt2IEkSkZGRVHui2n0vsAEBAZn6DGn8/yIiIoKXu3R1pls6dfIkH74/zBnc
                k5sXWUmSuHDhAl9OmOD0TXQ8d9179KBPv37/SnokDQ0NDa+EomOBXbliBZOnTc00gCG3C7xjEhwzdiwj
                R40iJDQUi8WC3mBgwrjxLPzhB4838Ps5T4tmzflbJ3MPSAaq2Os+OzIWypLEbQTHsJXaexgIbEEnI1SZ
                11SZICFhlOxCULLVbJ4rCb6UVU5KKpIk8BMS/kLisiQYJ1v5RLYSLSTeUmVGCAWDkDLcplZKl0IpXSpH
                fQYwcsQIqteoQYOGDR7pQfz7b787rT4t7YlIvRkv6evqSpJEdHR0zspMafzPotPp6NylM6Xsz45Op+PX
                X37l/Xff5drVqx7R7d6+hIGtrvMH773H3bt3nWPX39+fYR9+yMefjHwguSE1NDQ08kwogs2Z+oUXX3QW
                y34QE5ZrHcJXu3dj6vRpREVFOROPfjZ6DJO+nughLHN6jlKlS1GgVCk2o1JWSExSFV5XZVupPPsh9cAh
                SaA8pI6X7GLRLAneUGUmqgrNhIwRSEOgSqATgp8klbdllYGylVGKlQ8UK/1lK8tkld6qwmRVoZsqYxW2
                73icR6ega9zQ6/5z/M3uXbvZvXMXz7/wAuHhEY/0IN65Ywd6vd5We7hGDa8X2MSERI9I5gYNn8q1tUjj
                f4eixYoxavRoVFV1Jsr97Zdf6dXzNTZt2Oj13OQq/M6fP0+/Xr3Zu2cvsj1JcNGiRZn27Qx69+2jiUQN
                DY1HXygKIWxh5vaang+6zqnj+A2eeoqVP68h2m7BNJlMTPrmG/r365crsVi0aFGerFGDeZJtmzZQSAxQ
                Fd5VFYx2v0QZiJPEQ82e4xCLqiSoCnxplVlh1fGakIkWtgThEnBdEuyQBEsklQOSoJ0qs86qY4iQKWkP
                eBFSJiEvig6fdm2c5/PmfgBM+PxzwiPC6dOv7yMrnBxtOnnypK3Wt6oSVSDK6+9fvHjRLS+fJEm0a99e
                W6Q13MZXw0aNWLR0CWazGVVV8fHx4czp0wzo358Br/fn9u3bHvnu0j8zkiRhMpuYPGkybVo9w5EjtpJq
                qamptO/QgZ/X/kajp5/2eA41NDQ0HkmhmN7K8jAn5ujoaLbv3k3zFi2QZRlJklj72++0b9OWU6dO5Xi7
                xyF0mzVryl0/PzbKKnpsaWr6qDJRSFjtm9B+zvQ5D1cs2r0WkSQoIyTetypssurYZ9Xxs1XHEquOZVYd
                f1p1rLfoGCxk8tlCVewHyFgkCosFXc3qyPnz2frLy3u5dcsWjh89yttDh7r14aOGI/lsUlLSfbVv547t
                ztrCRqORTs8/7ywQr6HhOtfUb9CATVu3UL16dXx9fbFarZhMJn75+WeqVqxEr+49+O/SpRw/fpzLMTFc
                uXKFK1eucO7cOTasW8cH771PjSrVGDdmDEajkeDgYGrVrsXyVSuZOmM6oSGhmiVRQ0Pj0ZwLxSO2KrqK
                ktkzZzJl0mTi4+MRQhBVoAB9X+9H9x49nH5k3ooYi8VMy+Yt8D1/iR+FDrMQ6JHoq1jZLamkAd+qOpr9
                y6X+ALdcjxL/WAJtUdveZw1XE5MI+W0V+vp1ve57k9nEf95+hwP797Fr795HfgAnJSVRokhRQkJCSElJ
                4duZM2n/XIdsx1dsbCwN6tZzWokCAgLYumM7EfnyabOCRqbjRlWtbFi/gS2bNnP06FHOnz9P7O07mM22
                muhIEqEhIfZ64Bbi4+MxGo34+vpSunRpypQtS40aNXiqUcNMSyFqaGhoaEIxB2Lx1MmTDHv3XXbt2o2/
                vz+KolCxUiWGvvMOjZs28WqidXz+45IlDHv7Hb4w+NNKldABDRQzcRIYkNhkVfAX/E9kXBZWK0qRwoTu
                3Zaj7x07doxWzVswc/YsWrdp81gsYpER+QgKDMRsNtP1lVcY/8WEbMtZjf5kFPPnzUMIQWpqKt9MmcxL
                L7+sLdoaXs1LVquV2NhYEu7d425cHBcvxnDz5g0S7t3DaDIB4OvjQ0hoKMWKFaVI0aKEhIYSGhpKiEti
                bW28aWhoaEIxDyZmIQTTp01jyjeTMJttSWxUVeXJ+k/ywUcfUaVq1Uy3bdL/vkG9+hS8cpVvJT0LJMFE
                2ZZf8U1Voa+QkPkfEIlCQGoq/qNH4jegX46+9/bgtzh96hQLly4hLCzssVjEnqxTlxvXryPLMr6+vuzd
                v4/AoCCPMeS4lgP7D/DG668Te+cOqqrSum0bvvjqK/z8/LRFW+O+xWNe/q2GhobGo4LyySeffPLIqliX
                urF16tShcZMmXL1yhcSERJKTk7l44SJzZs1mw7r1pKQkoygKJrPZGYyjKIpHnd8ihQvz3bKf+NugZ7ms
                ogBPC5lBQsbvoVRmeRirF0hBgQR+PgYCA7NdnJx5E8+f592h7/D2f96hXr16j82iduLYcQ4fPuyMfD52
                9Ci169QhODjYbQypQuXwoUN8OGwYFy9cQAhBlapVGTfhc/Lly6ct4hr3PUfl9d9qaGhoPDLznHgMPPfT
                WwX/3Psne/fs4c8/93LsyFEuXryI1WrF3z+AEiWKU7hwYSKjoggOCcHX1wedTo/FYiYuLo6rV66yc8cO
                8PGhrKzQVsg8JyTyC+mfknePu040mfF5sSMBX45D8vHxeiv9hU7PE3vnDstXrXyskk7v2L6dLi+/jEFv
                AGzbgqVKleLpJk0oXaY0gYGBJCYmcuTwEdb/sY7bt29hMhp5ukkTPv/iC4qXKK5ZezQ0NDQ0NB5Xoegq
                GF0jEZOSkkhJSeHO7TscOXyYc2fPcOXyFeLuxnEvPoG0tFQsViuSJOHn50f+fPmILlyIwoUL899ly/G7
                fJWfVR2p/BMk8rhLBSEEksFAwFfj8OnYwes+XbVyJUPfGsKoMaPp1r37Y3W9SUlJDOz/Blu2bEGv1ztz
                cwpsfmKyomC1WDAajUiShNFopOdrvXhv2HuEhIZqIlFDQ0NDQ+N/QShmJx5zwtLFixk+ciRvGFVeV2VM
                OErfPf4oZUoTtGwRspdWwZSUFDq2b4/JaGLz9m2P5TWfPXOG1/v05fLly86Sa24DXZLQ6XSEh4czYtQn
                PPPss9rTr6GhoaGhkQ26x17p3qclqHPXruzZvZvpPy3nCYM/tVRbPsXHXSoKIdA3b4IcHu51NPjK5Ss4
                feo0P61YkSvx/W9ec+kyZVj96y/MnT2H/fv2ce9ePGazBVmW8ff3o3DhIjzdpDEdnnsu1y8ZGhoaGhoa
                /1947C2K9yssHMmaOz3XEfXwEWbo/Ah9zE2KQggkvY7Qv/Ygh4ZCNkm2hRAkJiTQrnUbqj3xBJOnTX1s
                xZNru1VVJS42FrPZjCzLBAQGEhgYqAlEDQ0NDQ2NHCL/v1TH9nQpfn5+TJk2lYshwXxrq/xsr9HymGI0
                4dvtFZtItF1otsJq3rx53LlzhzcHDXzs76lzUMsy+fLnp2B0NFEFCjhFolb5QkNDQ0NDQxOKORKLpUuX
                5pOPh7NAL/GHrKIT0mMpF4UqkAx6/N57O/u/tYvEmJgYvhg3nm49e1CufPn/eRGlCUQNDQ0NDQ1NKOZY
                OLzUuTNdOzzHh8LMXllgsIvFx0YkAqSl4jvoDaTAwCxrFTtEotVq5Y2+/ShVujS9e/d2fqahoaGhoaGh
                oQlFF+GkKAqjx4yhfIWKjLCkcVwSdsviY4KqIhctgs8LHd0EcFbieOJXX3Pw4EFGfvop+SMjNb89DQ0N
                DQ0NDU0oZiSchBD4B/jz04plWApEMQYzsZJ4rDagDR3aIpcq6ZVVcM/u3cyeOZM3Bw2kib1etoaGhoaG
                hoaGh04S2n4j8M+W7PFjx+nYuTPPxCfyAQo+QkJ9hCu2CCGQoyIJXjIfpWyZbK/v9u3b9OzWHVVV+XXt
                7x4lDjU0NDQ0NDQ0HMhaF9gVs92yWLFSRb76bAyrfPVMkFWskkAR0qNrXTSZ8O3yEkrZMplaEx0i0Wg0
                Muy997l69QoTJ32DLGu3X0NDQ0NDQyNzdFoXuItFgLbt25OcnMKQt97C7BfACFVGeQRzLAqTGaVaFfz+
                MyTzv7GLRFVV6de7D9u3beO7WbMoX6GC2zVraGhoaGhoaGhC0RsBJgQvd+kMwNChQ9HpffkPMn5CAknw
                b29ECyFACOTwUIIXzvUQuukDU+7evcvbg99iy+bNfPXNRFq0aqkFr2hoaGhoaGhoQvF+cGxDv9ylM4pO
                4b2RI7mXkMIQSUdxIWEFhPQvlvsTAjl/foLmfoscFeUh+hw/37hxnd27dvP1l1+ScC+BGTO/o3WbNppI
                1NDQ0NDQ0PBOE2nBLNmzdfMWhg57H+XSZXoa/HhelQhGwgRY7ILxYckuYbUih4UROGs6+vp17brRXfhd
                vHCBFcuX8+svv3LqxEle6fYqPXv3okKFCppI1NDQ0NDQ0NCEYp6IMhdRFRt7h+EfDmfNsmUU9veniaSn
                o5CoJuyCEXjQbozCbEbOF0Hwb6tQihbxaONff/3FdzNmsH3rNlJTU3nxpRcZNGQIkZGRGAwG7YZqaGho
                aGhoaELxQQrGPbv38PWXX3Li1CmS09KINpvpqMo8i0wIYABb4Ms/PZxrn0aHT6KuYnmCf1yIFB6GEAKT
                yYTRaGTjhg1MnzqNs2fPEhQURPsO7Xn7nXeIiIjwaL+GhoaGhoaGhiYUHzDXr19n44YNbN+xk+NnznDu
                /HnKp6bxlM7AE7KOIkhEA6FCQgVUcPNt9Ea2CUBSVWRFwf/lFzGMGUmS1cLF8+c5fuwYG9dvYN0ffxAY
                GEjNWrVo0aol7Tt0ICgoSBOIGhoaGhoaGppQfNg4ustVgMVcusTFixfZu28fGzZu4tjBg+S3qhTVGyij
                11MBmQpCojwQJGyC0YqEKlRU552QAAkZnP/pVCup0QW5/HwHThQrwoGjRzhx5Cjnzp0lOSmZps2a8Wyb
                1lSsWJFSpUs7t5c1gaihoaGhoaGhCcVHQDS6CjKr1YrFYiEhIYEtmzez9rff2bl9O8aUFPSygkGRiQ4I
                oDwyJVONFAkLI7/BB31qKiI5GYvJxF0krkmCCwhOKDKXhIpJkTGaTPj6+tK0eTM6PNeRJ+s/ia+vLzqd
                LtO0OBoaGhoaGhoamlB8hMUjwNmzZ9n3558c2L+fY8eOc/fePYxmMyazGYvFglUIkECWZBRFwaBT8NHp
                CQ4MpGyZMtSsWZMnG9SnYqVK2Z5LQ0NDQ0NDQ0MTio+paAQwmUzcvHmTuNg4EhMTMBqNCCEwGAz4+/sT
                GhpK/sjOWHgJAAAAhUlEQVRIQkJCvD6mhoaGhoaGhoYmFP8HhWNef0dDQ0NDQ0NDQxOKGhoaGhoaGhoa
                DwxZ6wINDQ0NDQ0NDQ1NKGpoaGhoaGhoaGhCUUNDQ0NDQ0NDQxOKGhoaGhoaGhoamlDU0NDQ0NDQ0NDQ
                hKKGhoaGhoaGhoYmFDU0NDQ0NDQ0NB49/g9zRolLe7NHHgAAAABJRU5ErkJggg==
            </property>
        </structure>
        <structure>
            <property name="name">VergerFoncoussiereLogo_reduit.jpg</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEAZABkAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
                AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
                AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wgARCAE4Bm8DAREAAhEBAxEB/8QA
                HgABAAIDAQEBAQEAAAAAAAAAAAkKBgcIBQQDAgH/xAAdAQEAAwACAwEAAAAAAAAAAAAAAQIDBgcEBQgJ
                /9oADAMBAAIQAxAAAAGfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAEfS1cBr0eiywx26AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeaVE2+gUyPKWUWX2gAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAH+GvzEk5CjZJ+gBEgvXya97KWcGXrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGPkaUbcHej7e5r9D3F43rud
                fbh7bdvu+pe1OcfI35nonQKK+jX2C2WwzcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8kXFPKiK4b9Vejwf6693wOZACZrs38+
                u9uX/Mg+QhCaQwNJo2eSI/0GYm/0dmq5EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxyvX6zsHm/q39Ess9R2aABlvkeisA94/kPw
                zfxv6Ok0QENe/FJrlABhpz8nidbGCVFTcIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9Prudc49PfqH6ni8jAAGZ+bxPevd/5Hx7re
                1DYUxyWtbvYeUndyAAB55DEv32r1kgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR8xeD3qH9O849F3EAAAJhe7PyVrq+w4h8EPhluJG3
                0b4iJ9pzyMAAAhpXkRV6FQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWB41395vVH6RAAAAdC+56p4V5B0z4Hn8N1BzH5f8A6v4uWxG1
                ZibxnJmqAAB+RBa0nTZ/oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAcvprj9UfpHsjjXfgAAAAAxf3fU2j+efG2+fB5f0jxT6N1j6fs/Y
                vncTkh5t8kSC8y+Wf9AAOE1suR18gAAAAAAAAAAAAAAAAAAAAf4aAThpt1G1QAAAAAAAAAAAAD+TGjJw
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGCLVfDT9jyyPVfR6R6hKyzkQV6hR9oBC9l7Pg
                joz9gPoz80AAef5Ho9Q8y+XPO8j0X7U8r+42GvOR9FfzNOrepP0r+7D3Py6+uwLkHS2d+g7llX5x8hSi
                8++MQAMZIrV5eFAAAAAAAAAAAAAAAAAAAAPLKybXjdbrtFjBlt1AAAAAAGikxTr8VLaoPjSAAAPzPDOk
                1bHDLbQAAAAAAAAAAAAAAAAAAAAAAAABygmtk2klUnXZgc9p20jKgAAAAAAAAAAAADTSYTl54GebAGEl
                PdvgKZiGc+jMAAVx/Rdyan6g/TwAAYN77pzVvK/nDePA/sX2vC5aBhnuupuSe4PzG6j6p/RnY3G++fwv
                4fJvb35lYZ7vqjIPXc37X6r/AETs7dxflt99/GAAhlXmaUAAAAAAAAAAAAAAAAAAAAihXrwtblbx9ogA
                AAAAH4kJS8KLX8j7keGn9jqpXcaAAP2NxIkDV76V/QAAAAAAAAAAAAAAAAAAAAAAAAAEVK9dlr2Ora1Y
                gRELxGL2qGOwgAAAAAAAAAAAAVnms9TPe6AAKl7blNaeNlMyoAAKsHDfqn7+tfvcADyfL4xzr2T8I9Pd
                Wfol/UXA/ic+Qu4/y3THX/TX6mf6nSvN/kfS3N/krxvO4oMm9V2Fahx9j1r7vqQACGVeZpQAAAAAAAAA
                AAAAAAAAAACvI0ieaXNHj7IAAAAAAIGGmg0zaM+pUfUatI3V4T2nZCs9bPeKAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAANdkRzSVBTcqABGAtx0tYEZgAAAAAAAAAAAfKVB29wJgAAKl7blNaeNlMyoB/BqU90qucA+1
                dp8C+ywANI85+Qfc8HmG0uKfRwA1dyr5z5k7S/PPoDrv7d3Zwf67Hiedw/2vB5fpHnXx/oLsL4oE0GPn
                TubepAGGEMrScdn+wPGPGMyBgZ9hmAAP8MDPKhmcvfAMeNZp22j0gfiYAbFBjJjxscAAAA+UrnNYvl7m
                jx9kAA1eDaAAAOeEw0r2Gmf9gAGqirC21ImxyykVVAAAHgGpU7aR74B8R9B+oPIPTP0AB/Brkys94AH5
                Gmk5GjY4BjJhJtwA8M8czQA0gnBDfqP0MpP8NGpwo38j/TKT/DUJtw/sAHnnNSd7oy4A1qbKB8Jq9O3k
                ADGzWyduo9AH8mhU4sdBI/EykGMFQlvcdYAACpe25TWnjZTMqCNBaCNpo9b9DYfGe/OnurP0S/anlADm
                rs78/dm8W+hdkca79AHJnb35k4N77p3rfp79PM19J24AP8RyT3B+YeFe86k3Mi4swGjk172nB6/yHR6t
                lhllxV5a7fLRzGJheAJpssuJMP3PjIf19Vp1omK5exUylSUwsgGaxlreInZ6LHDLs1Ws415dWuWsOE1q
                1jXHy38x3CgAAcfphkab7RxAtyEtc0ePsgHDS0ALTmlb+CQ5SxyyzUAHAi3bivvgAAHJyanDf0C1kw62
                QBi5lB5pBg058TqVPNCZ3GcvKnJqazTaV5SbhnBy0hcaSPqWS2Q/MhzXh4jTTUz7iJflJ4Gf9EdC0Tq/
                0nBy0gStjxlolNatroJa5e8fOzV5UybzgM5XVPnK0jXqJH+kXK0hKs97Os8160R8hFsvJapOGzg7aQzN
                LCTKWpQfMQmrw8tMET7yJ3WcvykBzSHtpcGYfgVg2vPK1nljIErghAA1jVW8dO10WP2XZCtZ5r2erj6Y
                r15cFJsGYFPRvZnY9SIA1InbaKl7blNaeNlMypG0tXga202Ooiqi3yb1fYPWHUX6Zet4nJQBzl2T8Gel
                43vt99f/AGqB8e3q+Iu9PyA/i2Xa/R365+r4nJQANQ8x+XOcey/goXOnj/QVKG8wbOWdSqI252WsiMfa
                K7bXYiLArONFaNlfJi4ew84rKNZHFZZ1I3lq0jaxUylKUqxtt/IsIsq5LWM5ecln2+pAO15PWt5sIWGn
                HydGpuEsNtAAEfy1cRraoY9KIrqNYrl7mjx9kHHaas7a1Ex2CVGm2clplj0YgAfgfuAAAAVbGvCy8hil
                nBkOck8ypknVrmNegETZs/8ACty1jOXtRscJKxzaT5TshXmNMWq+3C4AwEFTTnBNlBlz2mtu10Um40w4
                sWhGaWtmPokci1Z5tMgznpZwpNIM2lt1h0+jhJarg2sPspXVOeE1em1r5hs4wg1cnxStO1tasdimvjAU
                7aRh8KbE+RMQzn0ZiBFpxOtafYxGrwONZF1JyWcJDSNZe0YxjIW0otwqtZ/Y94q1VW3Uqs/bOts1jjXn
                eZdkIr/NLUDHNjVR5Sd1IAjeWhFaWbmW7Ua8I/FpRlal7blNaeNlMwpT/b9jK2O2Wtyrs2xnrr7i3Pwj
                64AA1ryb5/5y7L+Cuyelf1d+7D3AxD3HV/IXcn5bjuTof9i/oz80ADCvedR8kdwfmGLlrx4n14QGt014
                +QlW1tMGzkPVFRNtr2JnLnOWNStK1mcZ9fIg3aRurW6GP9Eby1aRtYqZbDRWSbWymHWSIM2mbImWUFbN
                rGevOWymsUgjadUqycKgAecU9G8m6k8rMV1GsVy9zR4+yCrg18BNq5j5JVJbWTWW/wBAAAAHynOqdTJ8
                8AjJXi2XytE5bPkFaOFe2Cw8sqcN7cjDphA4uTVUbzCs53mdJx5HSKs4TOSlWpG2xJNwlhqQp2PItTMO
                yEDldOMnZiKf7eT1ScVmPzKc7f5y5IwhVaQWtLbbDqFHCK1XFtYfZSuqa5KajyPeRKSpMmpvdGpCnI8j
                KESoqTIqbsQNVQpsT5EwzOfZnqFNOxvYCZS3qR3LRnL2M2X3kOK8CLWTpnYRZ8ArciLT1M42Vq1La3Cw
                6bRA803AiYFTnZNQxvnSJWlJjVNtoAA5rTwCttE9REjivolS9tymtPGyk8UpwPImRZzqs4Wl5glKsHAv
                s7ZHAPtIAD/Ecz9ofnv8W/qen+q/0T/enmYJ7/pnk7t38zR3F0R+w/1ZexAAw33XVPIvcX5e5/FrnU+L
                V8bcjpufMI4FuJVp+WYFRNtjkTcLnD9DQKd/I/wpsN+2FbKDIRvLVpG1iplzUmGppcbjDUMuclpTFAK2
                bWM9e6M8fNjQKd/IAAHFa1VdtY1ZSjqCuo1iuXuaPH2GUo28gatlllDOvJorulAAAAx8hSaRyre0f2AD
                A06JSJLVO61Yy17STGIVeANrbiYdNIHgFKN5EnqliVlSceR3upaFZCpO2w5NwlhGktWwbXBGG+EADVZT
                XeRNqznHZgVk2vAK92p48KrSC1pbbYdQo4RWq4trD7KV1QRDrwNtMfT7CJ92ctqkOK8FjXxD3UWCGcq6
                mqoU2J8iYZnPszjWWrWNrLrHsZWK9eaFT6AQ4rwItbRDHvRXQSd9o/ogCaRANLmTx+fU6MTJ+qBCO0hN
                aeaZQixKykvVAAAAFS9tymtPGykYVqCN5AlO01ZelMtKtHD/AKk/frP78AAH8zTU3L/mTG/ZcA3Vwj64
                8Hz+Gcjdxfl+O0ukP1q9rwuXAAa55J0Nyz2x+cEgXrOdWevZ9e1VG3Gy1hFluZGkEy2KAVE23zQt6ziA
                MIKXTyOoFbabHFyvQ1jLXsVMuR0xGtJ1WXRSJHVQBWzaxnr3Ynj+0AAACLteuO1moZzqM+ek1kmvOq1z
                R4+blJd5HUysnikoCm1wAAAfGVlmsqykjav6AAEYS9cBqLqjx8oOcU9HIiZXr0tbNrGQ9UfyUk3kTkMp
                jVKTjyJL1LJrIVJ22HJuEsIp167bW0Kx73VAGClL55En6ljxkBW7a84JtpsYVWkFrS22w6hRE6vXla2H
                2UrqmBmeGmyGZpFAv+xcRYbFNJJhjXinae6i6Gw1XCmxPkTDM59mcWS9dBrL6z3+iXxT9ACHFeBFralY
                droAFd5rFIvPAy6LRIiqBgZnhz+mF5pFuvthFxFgAAAAKl7blNaeNlMSpTWb6+Ta4YdhIFaj1HaGu+n/
                ANPfry9mAAAB5Xl8a4o7x/IwdYdRfphnnoO6AANGc8+ONFc++NJ2OGfUs0HNfkyAlpDy0ltZ96q9Do2u
                jVaekEVE23zQt6ziAPBKVLyPnN2I8ckdUiOaWKmX5ldlr28raLY+meMczJ6yRWzaxnr3Ynj+0AAACN1a
                tK2+g6OV9c2icArXNHj7IKlLbllayUxkyVHPqc5RskAAjeW1EmX5QAACIdev212Ai54wAGgk1CW8tLOw
                UzHIyaxra3MwywpOPIkvUsmshUnbYcm4Sw4XWq1tuw1bPbHPj8jTKd1oqeNtPpuHMPVPiKiTadhnJErC
                6vBK1ssMcuID2nNK1h5lIopzKtq8k0VHKian7ezkxx4kaVHHKatLa62w1XCmxPkTDM59mfMqajzfZyLd
                TDYZ+ZyEnrtEO68CLW1Kw7XQAIkl6+DXvFWz2x9A8I5uTpROWHdqo4GWrnNblTAAAAD5SnM31MmbFnOW
                zijXrytf7OiFcyMu8f3P49F/r/8A6sAAAAONO6vygx72XBt9dffae8uCfYoA/wARx93L+WOwuO95WIPL
                4p3hy75n1Amp621In2UdJo7bVnmZ/eVE22/4izbOQAFZ5rHIvnCLPLHVKa0jaxUyk4UqqNuSFs8Ru9HQ
                iLCjLOStm15LWt5sPtAAABr8p/N8ET2+rZjYxCtIN2k27OXNnywtWSbeWb/RmyJa1JWlAABBI0kgU67Q
                AABAa0h1aSHKWbmQAEKa8HzWXtnuhEea0+bPqNHjFJx5ExzOe5mKpjbmtNiNlIQrUrbc5rZojslXOyfx
                lsg5KTVwbdbqyKq8Ordyqy6qCORas82EmykqqlXRtt9FiJl1wrT5bzGqd5KcYLalTM6zqEt5nWfc6vDS
                2JJnaZ4oUwnkdSK2CWXXaK7zWKRfIEdCI2MiwKz6NRDivCG0tkMegkADHiqW25YW2AjdaOj0WEGWsk1N
                G02bPtFWPRfJ0TVKAAfOcZraBTqZPEaeClxuFFvNhlBzankdbM0dyK8QrQs9L/q3k/q+wwAAABonnvxn
                onn/AMZ5Z6fsvsDpv9TCQNYcp+dtIc6+QOt+n/07sl91fk5szz+HjCiHNp+ZJ2p0UgDhdbtlX7wADHSq
                82sLMurURvLVpG1iplKkp5BwetrpPSKvXSP9Bxqnp1GWgAAAA5oTzQmR9X7z4iNpbt1XaoNIJ4sW9pHb
                auzQAACCVp1MrJoqAABU3bclrWZWMi6oAA5UTyGttNHfSvtA+UjxWkNV+sHNyeTlpI1PfMUOEFsJTudH
                bav3AGszgJf8jvFXbqAPmIxV9wo7hV+Ii/X6/V6PQNFp5TT9h1IjeCBoNPLKfROp0bqQBw8tixIQr/R/
                JxYnQi240dtq+kDmpOZm4kAADxTg1bAE9Lq9Zo/0HOieZk+wdXK7eAANbEaC/VKNuo/oHxkfi0GrSSdW
                xEyAAwcqn9b/AHlmvHe8sI9709tXiX0p+tfJAAA8/wAj0nHXc/5U+R5vGOpeqP0c2PxrvweH53DuZO0v
                zy6e6s/RLonyPSWIO5/ymAEHbScBn+gAAAABEivrAm9UEby1aRtY6ZShKAAAAAAAAAAAAAAAAAAACOFa
                FVpa1Y+mAAcnpqaN5A1LOrL+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADntPQiAAAO
                ek1imsm6s4TP/QAVp+Pd4cmel7a0dzv496l6o/R3Y/Gu+wAABiXt+suYu0vzv83yvQdC9c/cv2Y+117y
                Poze/APtD1vE5LKDzz4zlP7A+KwOT06aTIqqAAAAAKgrazky6IQI11q1ba1yw7DQAAAAAAAAAAAAAAAA
                AAAPhKoLbdqLGrLKgDWpVqbbdRZWZZYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAa/K4jXMiwYyz0Ai1jaJnpT9Y+cuy/gvbXD/pvafFPpAAAAD+Jxw/3PVvkeZxfJPWc/yb1nYIIsSdz/
                AJSbs9r12BB60m+Z/oAAAAAfMUj3kXMXj7IBCovFivbxY/QAAAAAAAAAAAAAAAAAAAAa1IH2vHKe9ldw
                I02nQyZK1JRVf3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPzIml4g15KFZFV
                OkEfgVPuNd/6W8rj/VHU/wCkno+N70AAAAAADoz3XUtgTuL8uQOVU6JTJAqAAAAABTPbzWM5g1NAJq3N
                rHLHthAAAAAAAAAAAAAAAAAAAAAA/g12eWbCPZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAB5xyMtzonCj6jzSLXq39ENmcV+jQAAAAAABMx2b+fnfHL/mICDJpOQz/AFAAAAAAIhF4
                DWuSI3sif1n2sqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAABBZ4nJuKem/1P9nwuVgAAAAADPfL4xY/7t/JL1NPDHAi3unbyoAAAAAAGLnhmxAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                DzitD6PuDFuo/wBM/oz80AAAAACWbsP4ckq5z8hDESG9eb5QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa4KzXFvo32Orv0M/Su4A
                AAAG1PYcJsS9z/lH6+vg/IQaNJoWeagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGnU1x+Nd+fJ1n9/er4nJQAAAMs8j0c8nbn5md
                Ae46u44THcvLcpupAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGPEUOfncH8d7y0Rxn6Bz3jnefs+FywADbPsODSydrfm/zJ7brv
                W6evle9Vf7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAANVnBq/KPrubaR9V2Tgvh8o8ynl555nFur+RdGdBb+okCV2AAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/xAA2EAABBAIC
                AQICCQMDBQEAAAAGAwQFBwIIAAEQIDcWMBESExQVFzU2cBgxUDRAYCEiJCWQJv/aAAgBAQABBQL/AORm
                wdqqV4NOSckeOA2+LIDVwMsSORL+SXjxtHtLOOHNhmfKKo9zYLxu3bs2/wDITwtFY/vuzK467aGobId4
                5454+dq7B7h4DlHU06suVYsWcYz/AI/k5WMhWZdtYFxGczfF0E/JBoVEGSYdHY8+EonleU9FnJLnrGYj
                Wf41teF8R2qkodSK2gqeRxPy94dl1bgErY5QOD0UKQn8fd99ddWbsxBjec06MD18zjWTDr0UGLfhQ34X
                QQcp7TtAYdjmLF3JvYvWGwh5t8JbYwHPjzamB5/U0dw3GG3wYryI2SqSWzjJeKmmv8cSEgyimVp3eQWY
                7jIZnF4emAilJybm5Xoah612EaTs3+fElEPha3IIoJtgSf4ntPVmrcU0fQ/HR+V5M0ZVE4nK6tyEI4St
                26qoVCjsasCI/ja+rQdWAQs2aDFv6h3JphPWKPEIqRSc4snORrlrHWUIlGQupEx74oIXckK10NBthix8
                n6nTRq+bHdRE1US1UW1B2jEfxpsVZGYMGwMX1GsvkHEUjbFIzsl9/V6ed9rPZBVy3q8iihAnkyeZLpKv
                Tsi7n4l47fxvruKsZQCmazsOKssY/jOyCfux7U+SGWYShCLgOQVUcB7rBJRFVFRH631/tMXPcJO/cn1K
                GVkzUj688MFMJBBXXK4ccsVMf4xuUr+Dq3F2n3aM+ZKRSEok4G5RDoSHBWMxUsIgSbqTMutnD2IbQeYL
                e0dNK/39WxoymRVZRBFmS1X/AIuUtWt4VX89Kl4MG4qZ4/7vvvrrpnNQ8i5/4vMTUSPx85spJzshkI7V
                l/MNerdW4+14uFJI0Y3NX7n44NefHBrxkV2DIuw6hLdk8YCoB6F6QbotUvO3c5nmgknikn6nLpuzTdF3
                eWf/AOvf8/ACLPnw5Oc+HJzkj2/j3Ef+KSLpshi2R4ssk3T+Kof7RBdFynRNgunC/pmo1KZh9RZFT4e/
                xL160jWdwXrPWE/ixsinOBuutklLsHCoQAHvmmdlBYCgU7fOMspTYm3ZTJW2bOW5+aNl8/NGy+fmjZfP
                zRsvn5o2Xz80bL5+aNl8/NGy+ZWfZOXSh4crcr2qbDtlcKCYABgv8nc1hqVoEylq2TMOteryI3pH5LrU
                AQR9DTkORR/+7PDiGr0bFIcw2ZLR8cgxWN8kQ9EFcMVQKwuSc1DGWb2c9V+yPc1d/qmZtGKTZRL+fUZx
                7Nhh5nJTqMZ5ZZZ5DUb9xY8UUwRTmZdWVX5HSTqMWEib7q/auUXrX00Z/wClvT/E7Yl60QI8CEUW4Z83
                PPBLC3tnck1Hj15IukGrl1krGSSGPE8es8xmniIx6/pctjn9Llsc/pctjn9Llsc/pctjmGrNr5dw2oBU
                vkH621sK5Y444Y/5TblkuvX/AChB+QnrT87PVTJEqFZ2cQVlNixPDmMF/utljdcqsGtA9AFCfTeHuzzT
                r9H9RI8/F7Z9L52mxaRDRSelOuuuuvPffWPU1I9yT6EY/iEj4LHqnfFo5+3x8RUmrFuqRn0yCuvTCf8A
                q9u/8Tt64zyPOB37R+bsrcq7x5VGuxAfJDFI1kKJooIt0+TgQHkuBvqcNyKZSHlIBL19subCeQNYonYc
                d/mysYizIeZadI4vwoBFq/jfRbOt0KY5UYQkNRHX+5XWwboiHeZNZ3qvH3Z5p1+j+e8usendgAjDKKLB
                adygnH3+V9Jk576TEUek4v0FUh91Y8DW30I+EmCKbrhCPJ/Z+NRTDpGQ9EmRj0L2+JB1TavDPBXDw/kG
                EU0hiKAI0fEyUjI51DkMCQoelyVDDPP44CuR0rFy6PmQl4qJT/Muue1Grxo/Q8KKYJYRBeKEC/iUmoeD
                bwpgJkanyVl0W+G2Ttq8sTgd+0fQ/NwyLzjTcMmVfVapf2CgOvVM/GrzHHHDH0mIWPncLZtcS9ZkkHPT
                A1J0rfDCxU/kSErFxKP5p1p9aPlYuXQ8ruG7VPDPBTHw5kGDPvHLHPH0d99Y9ODIQaZsJWMlU/Rnngng
                6smvWKkSYiU/n5lZqHgm8MfBBC68yEnGxLaEI4Elb+Zeyq/gVEbvqddWMn4KbwfzcPFq+Jaza9glELuq
                dyrGTkJNYPZuHjXHhWwQNB5131l16HLpqyRJiKmyNrDysLKNfPxmIdy3hy5bM0GFgAko89EjMRERh1Zd
                c5KNnTV6j477666lLTriFUa3ZVDtWOmIiXTczcOzfeJtPNWGr5+nFnnqvH3Z5p1+j+Ld2KiARYpsQ4O3
                H9uYZ5p5j01hFqYZ4K4egwy+mTFc+soj0ETv73K8HkfsYf0z8f8Ah8hyuyPMSOPB7YQ3XMMfbFn5kqt9
                vlnyv7VMK5e1naI7Z0QdncDXg/Y9ok9lyut885hbW5e2wOQkq/kH8q8AjSVAidNTBZPjhw3aIWLtO0Zr
                saivO1E7b18iK1Cuaie3HCAhhxaJsbaEoIFnzuRkluCpmTBUjTt5w9lozUzGD0XcF5TlkOwqeci5Zy6r
                pYVgwIyggLpKMk5CGkK/JcjAL9VmXUI1mnJ3Vc1py0RqkXT3LorZlVxPwO/aPi2rzHqywMbcsE8Wyxyx
                75VWwhMCLjxDDlUR6LzGX57lFxjGFjfXc1doWOF54Zp5sXruNeUzZSVmCHnOVb4zHHbtrHtbM2glZJ02
                1/uo04XUVZYY1iZqXgHlH7E5k7vlrW3BVdEmh8Un8nqGVPlu+XVsi7TeO3juQcayn0pBnXjLLHDG0tpG
                0UvPl5ya58jpOSh3dTbPSaT7rvrvrlv7BQ1eZIwl53vlJ6wWvHt3rGRh31XbFlQa6iJaOnoyyDWWGmNm
                sLJaTzN46jnYvM4kQ3w0KGgUKmh0Sn0vqH+wOKqpoJWJb5pbRPC6efWay+nffSRrXhhXEhqcIYyxE5co
                M2x1ax1cpTD6eY9tpjTtTpIyAi6upPUoPwkJWUlI+EjrUJLksqF5qcZvZkb8KqpN0rR2nzSWmiEjKHPI
                2UkoZ5TGySc8rll1j1eGxTqUWxzyxyrOcXJK/sSwoSth2wLPLLHkP7c1uN5Ezr/hISwgjD2Ls+Wkazxz
                IP1eCRuUA8jUF3wtnNpSSZw0aS2FYd7FkZp22+7zenjvBErDSuv5XUcOTyS82QLrBZzTx6hYQN5LSLqB
                T5ePuzzTr9H5sTbaoFCD0JIFZACV6N17DXFVEHYI3yLi3EouyZosG3oMk++nwa7+jLy4V6QQyy7yy4xw
                +zZekwbdZsvAk8ykRUmIowTgT87mrDI9aagiU4KWhYieY3AGNAKwGbN1IOqJo/Gum5HSPdnyxlAYipZT
                +fado3nbCdcD4vqsXk8aVDUkHkNfhr49LU08EU5CQZRTG5rwlrIe65Uw1gYzm1HtVzUT24VVTQSu22Hl
                lketNSxxi9yYss2mytYRYNPc1/oJw1WO6zfWnI3PX7Ctjbh5YUXXoaLUme3Y5s6t5WsCOOj3ss/BBroO
                DvTfFxY1tDx7GdNiSsKzhKyH+bd+4/A79o8uuz0qyE115Kdk6mqeDraBPq5GbDh5WOcw8oGBc+eztY1v
                EViOejtNPtT5OxQniK2fzWcuUHLK8WLaAxWkVrxJTJlhzYy4lyuX1UrRpk05/fmytYNAohwzyTypmwXx
                /XMnQAtM9c1LV7Ts3Ya2HqSkTqMXvYmWi3kJKVUrkjZnjZm4XCjvXqo29hzTJiyjWpvUQIfN7Sq6bq+c
                hoaTIZQXjXcMM7A27lXcHTwKpZx80aNWDXmxdXszET5qhYSzWW+jrrvcfDH7tylu++6q5sp7Oc1D/YHL
                acqs6yrYsSBjgUMRo2jOEQ5ClkRWNeMazHLrcqtKpqwxbgJ2MFo6ZRnCcXgzGGrQBZ1uLScPGzOB1+yO
                ae99/EfjZu3V3z+l65/Mo0iYWJgWGztUQaY/ykaKfWG5OBKYLI2/aZgKvb8pKZYQ1FOIc42fMbdoyVqp
                vzXAJdh1eOHCDRvc9qvrNJNZ6kjStZVgxXabIVlGAJL/AH5r/Qa8UtsQ6VaU7TZ0yrs7HyOCKo3hkGD5
                3CV4GNgAR87BU3nYUbXNhkdRlAPYQrYUZwlKx0Pja9kJi4bF5ePuzzTr9H/tyzy1Q3O9ToVOQsXhcTR4
                cN1dVM9aUyHfTil6Shj27j2TvNi6buEnSHiez+ziPCX/AES9JFj9eG8BLbJkGbeFyiSLVuo7cxMa3hov
                l4qLGF10lRjGumvi4PdELnERgtp8BlTOe5esRIGF71BUsVV0JzbCxFftqhFUjOxeuuuuubUe1XNRPbjZ
                ouUGq25RsKnBVTzbsnYuV6G186jPO13ujwQgZLYQswwwTw28/wDMJaFoxMEQ9Lx23YND0ueHRbqIJoup
                Txt37j8Dv2jzYwuUKLN1+hU5y2uP3zSLZMhucueyK6rgfrWC+Sssi3SlLiq+GyV2Up1Pv+pqoOf1NVBz
                +pqoObG2IBWKjyBlM4Sce7hDeGBVtTYE3hIyUhLvKXgPhur7vMFQmt+U2zTY1Z42BG8CSq+afzCiRJI/
                p/KwPFK7maGqRYbb8urHrC1qw9yeHhNgGhzpy4euaBgkoGqPFx1/3Y4RUlMQVXse++uurOL1jk404Zp9
                qeMscc8bAHvhQ2A5lQfNObj/AOi5SvtTzZT2c5qH+wOF8L2SCi6CzVeHnJgfehO2RJG9hVlBtgNuHsDm
                ThSieaSkLPzY29CdtJ5h2G2IHnzTwdfsjmnv7k4fE2IcGOF1nS+ocKm2D+bNlEfCVnRlCujhVq1bMW3N
                w/0DgJgS2/AwEDFDEPta4RRq7X6hcpPPm0RcoPV3ymoVOAq/m3JKyfytD6+4wXi2h5cqrjkATEIq9Cdt
                pVtkInQocsfScVICWDxbUvKOfJVVenScRrQP5SLRo1YNuXj7s806/R7AkM4kF5p33h+OvnzKMZzChDs2
                VDY3DCUNGI/ciH1EEDmxzgZzuMUTUTWw4S/onhHv6UfSQd/RD8FIXIjJ8cescdl5DN9bwp3hiU8uS2Xk
                ctqwO5trI83B7o1rHspawccccMeCABGDEh4OCBQrMNUsU+7S8bUe1XNRPbjcOQzzmuV53hkAW3bMbW0V
                T1KvUJLztd7o8G41hDwHEwCLWOvVsJNZwlS81IxT6rXxt37j8Dv2jnninhJPVZOR1Y7w6tbPPBPA/KZy
                +CEDA4Cu4H5EpKxsIwsPbFxkos1tez1+qMtrLn5F23z8i7b5+Rdt8/Iu2+EdZHglH+BfVo/n2o7qQGMO
                zirsYe6U8MEsNwXSmAvymXOLqq/Eqxxk4vvr6O9S0887Mkf0/mtg9GENo+Ls916w9yebWyObKruVapgp
                WnoOXSjEJ5pw5x6W87RMMWdss081nfNx/wDRcpX2p5sp7Oc1D/YHi7tdVCh9KRMnCPuMJB9FPKFv50Xv
                OXbrivPvpGNkYd5yNk5GGe0Lfa5u44dfsjmnv7k5tXIZsqt5qx3h3VRoawIFBBtfz15FCSSSCXjcP9A5
                rXGMGVR8LAGNNpjrrrrrm4MhkoU8DO8Mg+3bbY11HU3SbmLe+bo1sePHzxk8jnXIablx6Qoe9MrD6+Ve
                PuzzTr9HtdBRzWfNcDaJCjrJcq2anYODiRqK4VtO4u3/AFd9dd9SIm1cdsmhHCZtHX3pMhx+vDeI3P7S
                P9JUp9SH5rVCfido82GQUQuFJXNBUyvl6QNwmuImmBDUeJzTFfNwe6NSe5/oJl8mo5ymzBuD2Kisk4Sn
                CCEGY+9L4wsNPmontxt+gpiY8HdgI8aqCp6gfMZH0bXe6PI79P8AkbbLZJ1pzUc0YtFuHtoB9dMrQsaR
                s8n4HftF2lku0yxywypMlbCdnEZeT7AToYFwAHBfIcLotULLsAmvI0rHXETDm+OOOGPp20U6wrLxCN8m
                kLyeAWszYPNvI7NcJ5q/M9SdUeO++senOeKjnUEYUSZSP6fzVH3R8XZ7r1h7k827Ty7r3mthGlPVX6Ci
                Pylxr+3NTpjphY/nbJRPOzqUGFCyzObj/wCi5SvtTza40ZRwjzUP9gcIiBkMseGAAInjM61NnI7qUiZO
                EfQsq5g5eZJo+DacMq7Dz5od6nkMV1IxsjDvBmZXHSLh1+yOae/uTm3CCilc8oG4B2vgAJAiO5JzHHHD
                HzuH+gc119m/Rt4gpjYHIrYFpBVPUtPOoZ75myBlAq8N6wC7BbneqhVCdPGTyOdVvNLjx78q8fdnmnX6
                O7aovmpaOvBIl67+junLBCjAX8X7k3jLtR+27T+S+S+3ZeBpb7aH9Jm4/wC3HHLPLV0f6ZyXNuRNVrP8
                1fsAMGHmzpThC1jUA12JVuQk4+JsAc3dWBly4PdGpPc/0SjP8RjFUlEFeQlkHo2zwzMLCnbCpWMrGm+a
                ie3G2ImrLhnKDNBYIN2b1nIteP5FhFNBuzUD+d5td7o8jv0/5G1Mco9qviKyrdXK5LTzaVvWhPbhBsSG
                wIIU8Dv2jy6BNUNsjmuVhBUmI+Da0AwARFn05Kxfp2hLFR+udTQZuyHvXuA86wEeCcVlOlHotAQ+OgRZ
                FZstqYZIRRH4u43bA1fBohMHJEJDMcGjkj+n81R90fF2e69Ye5PNjoNSbqflM2s6q0iGyiALovmeeCeE
                GeQhTMcvAKWCLEBCXMPMWL1pJM+OHCDRvaJd0dn2uVVqgg7zcZPLuN5rpYI7I11Z9/CIGzkog2OYrmof
                7AIyyGF0r6bvH9Ka83GgaQ/i3K6Hz0VaNVnzvYmP7/JegLibnkL4umuh83D4mPVlpXr/AKcOv2RzT39y
                cuITUNK5/twLmIofKhgpHy+K5lljhi7t2JkyFPrLHDcP9A5rr7N+jbUTVkxbmvhuKBBo1dtXzfklJx0O
                zF7KTsGa2jRWyq6jreZ2TA+NgK6HyoIB45WWM/krrItkTyeTKDPmnky2wX5sdTTswQUTURURWWbKsLgt
                CNwYmN1WO8syoH1Txn9/lyrb7nI8DHP/AG+mae/f5EUifr56+RX3MO4dhsYfC5oEEQFNcykX+aWV2W05
                xrKhCo6kGzZuybcuD3R1/rEnJS707G1i8Dy7g4OTJZMVDTsNV8XtR7Vc1E9uJGPZyzC2alnKym+QpSSj
                mXV4WzjgDVbZlzvBsbhhKG5td7o1/W5PY8s2S+7t/kFQ80LBsmG5YRneVDSc7Zr0bGoUSh9uAuQc98Ft
                gzYnjg+Bfj8LfdS92SPvmD2Ledd949xlrWTD4JWdcpavTGvnw269W4rvPKTobFLCovXuDL9LEPNYxnue
                s/07D0S8kXSC7li5Ddt5ePaSO4I7g2Uxs/Ywrq2qYCr4fkj+n81NCpr8e8X/ABjmLtoamMh0iGbaJLee
                LxzN1G2dXMxWxLyDI58ZdtNmrdbIjTa5thHomKQoVA8uCrGNojZENzgnK1ffxVW7dPcAS7RsO9jO2eUl
                rpiNLeNoRlaerTxTWvMobZ3qPtm1IcD543i39PVG5E+FsFgTi6qc2JToBtmng3b7A1A4StzZQaeD2vVG
                zKs4cjvxaHYKTYpNgW2jX7ujsBUC6VxbHj0sO670dMpTPJ2O/F4N8ydRr2m7Ryqwkr2fK7Ay5sPSr8fl
                +RstKQzhvdlrtkx6Nua7nVa1kP1lCc3D/QIAemiiUqwTegwD6JaLYTkZadVT1ZTfIUrJxvv88LZ6wA6m
                si43sBARAvEWkLKmlfxsnOCc0DbaRS6Cd/1AoldewsMUwOuVIy0PJelVVNBOf2DqgfWfbcV6hx3uMzx7
                sbYUzsFj4AjF8BlkLMxxDE8L6jr04UW1HrdRSK1bqmOUgx2BGWm0EF3L1XDOPvMX8owY+IR79wkvQTyf
                TNnDRSkq5STwSwDYf4fFfE8OQJQxu+malBBOpdZx+fEhWpq8C8/KuvNePipq1bMm/plo2Ll445jRIjsK
                qangqvhubUe1XNRPbjj5gxlGk3rHVMwolqPW+GQ3RNWi6n9vJlRoYelUJAww3HfKsKpg2y0RzVeuIV41
                atmTfjhu3doSmqlbSEsJBIuDR/gtrcJOcXepdaOFI7VSrGSg2GCoeh69xWeeMlqqSpS1c+u8ibEqtDmt
                AHmIgnqMqWro5WW1CB8lIDV+rYZWPjY+JaeF0ul0RnV+s4Bwggi2R8WFVIhZbeH1OrqPdxkXGwrHkzBQ
                xEwltWqqklMNRa467g9canhFGzZsyQ8k4aLmbOS1Krp2pHak141VFQIPCUfKyKThKZ1Pr2SkBHXishFf
                jls3eN5LUqvnj4EqgIrpPwWVoCnHF9V6qV7aauVO2zHK1AhLLwW1eBnGS2q1VK9s9XambZjlcgol35sK
                gAaw5ES1nrYYd9ddddc766y6JdfKsJ1v6Ra4+vBa31PBqNGbSPbeLHq2Bs9EPARIDZ+qQjY+WZzesNUy
                6iOo9bp5DVG1eKqeSypq9NlVdVarU7Zav1K1zHQELEvUWlkKEwOYVZl7KwWv1TwSfVYVt1z8sq35+WVb
                8Xqus3KVg6pQcgjPj02LSmt1wpij/wBJNCpEY6L9rN8ZCVZRmOBhHZZ4Z4qYet02Tdt3zJZg54NynT9n
                4kJBCNbppPyKQYMUI5vW8F8RGvoKO8r0vfHHFPH5e0VnqwETqWBJ94+NqParmpSGSVZ/4jaAVUIK3pmy
                FK0MmTxpItPTc5+lXoL33333QdRrWEQdddY9f8dkQlMmKvXYtaDVlRFiVqSVrMUJsEmkn/f03LA/BtzE
                cG8UX4Kr9rRPyJaIbyqL+KexubV0uzXYljFbB6URzdNKLliBwzZN2CPNc4D6VPN0nnVfAWtYH2KA3zLV
                I1Cqw6lhEx+tfG1amOFWcoSBzH6o/wAQ5bIPG1wVi/rIopK+HldqQs3EEUd5Ky4fCoi17Nk7PJKfomcs
                ZzBwcUNxP/JyYXgjCItugyCu1Ki2LmQjocJ4Aui/O1IZnNBsW96kGJM3Tbywgn3hF/Jyxxy6XH4hfv4U
                iPpaw8az7812O/C4d5Ns8rvvbHDFPH5a3eWKWWXeWQc4TeCPjcAlR6Z1cDubBNUkkkEv8SWCMAbQx1qs
                XwikZJWbVEhB7fkjVP8ArFiPqTG2ZnL94VneltSVf6tio4ommmin/wApyxxzxtDV6Gn+/srPpmcDtu+v
                qwV21YQ4tJBg/wAZVGOdR0yk2r8r6TekMk0bJs23z6qG/ic183Ke414Ca0gWQuF/NM4JUYLNdbqglB7+
                /D6yxWuowkniKzzOkanQrEc/xmWOOeLkPEXuWAACJ9s46PjsP+XOmbR+hN0BU05281Gr5bvPT0d+lLUA
                b+sYaojrQTGnmGbb/YUCL/hY35ns87/u/DDBPD5uxdIyRU4ctXLJdoRkMekIVHY1iOqopEcrFH+Jdj6t
                XgZNg9RkG3zhiBck8+yZt45n42Dsr4EEKFrf8vAr58jCQsv00ERNgp/E7to2ftbRruQp0oSVTWT+br6I
                fdmfienIwZh6uhpK7bL/AI6LBWGNIEpF52oyTHLHPH5YYKvDEhYMWsYy4uug1RMCOZ2NNh0fixWE/js4
                BoCwYIyCSynpVo9avk/kwkJJkUlXwBHAkVw5vWvAXp0+uLY3IDAh+u4L+PZWJjJxgWamQ7ledq25QziJ
                W1+u3kWLv1CIXOmkhFqVhS0ZP7WxOa/wnsbbnAfXOuw/nXXWPX8gkQQIFuBBqfX0lyT1YsSM49qu84jp
                WJsdpzCMsxx2xrS8ZjuLoe75RmOao1/GdwAoNCzf/wCin//EAFsRAAEDAgMFBAgBBgYNBw0AAAECAwQF
                EQAGEgcQITFBEyBRcQgUIjAyYYGRFSMkQlJwsRYzQFBiwRclNFNgY2Ryc6Gj4fBXgpCSpdPxGENEVGWE
                k5Sis7TC0f/aAAgBAwEBPwH/AKIxIufliw8MFIODwNv2lgWG5SrcBz/aLY+B+2LHuoHXcpVvP9oTTDr7
                iGmkLcdcUENttpU44tauCUoQkFSlE8gOJxl3YPtLzGlt1rLztLiucpVedRS0gHkr1R69SUkjiFtwVpI4
                g8RekeiXPUAqu5vhRj+kzSaa9NB+QlTH6fp8zEVfwGIvop5HQkeuV3NMlfUsP0qK2f8AmKpUpf8Atfrh
                Pow7NALFeY1H9ZVVYuf+rT0p+wGNsmxXIWz/ACdIr9NnV8VRc6DApkWXNhPw5D8h3tH0uoTTWpB7OnsT
                HkFEhFnG0a9SbpOodRj2D8saPAjGg4AsLYJsMc/2gRIUqfIZiQ478uVJcS1HjRmlvyH3V8EtsstJU44t
                R4BKUlR6DGQ/RfrFSDM/O8w0KErSv8IgqafrLqTx0yJBDsOnX9lVgJz1tTbrUZwXGVdn+T8lNBvLlChQ
                XdOhycUGRUnh1D1Qkl2WpJPHsg6GEkns20Dh3fSezp+N5tjZWiO6oGVmT61pVdDtZnJbckXsdKvU4ojR
                xf2mX1TW+Fz3EX3ax1GLo8MWR440jorGg/LGk/s72f7OMxbQ6r+H0VgJjsFCqlVZAUIFNZUeCnVgXdfW
                Ar1eI1d54gmyGUOvN7PdlOVdnURIpkYTKwtvTMr0xtCp75I/KIY+JMCITyixiNSQj1hyS4ntT3cz1trL
                eXK5X3k60UelTqj2f99VFjuOts+bziUtD5rGJ02TU5suoznlPzJ8p+ZLfXxU9JkuqeedV81uLUo+eCnG
                nl9vI4It+7CRYf68LPTvaj441+IviyTyOCLfs32e5Fqm0DMcSg00dmlf5eoTlIK2abTm1JD8t0AjUr2k
                tR2tSe3kONNakBSlpyplWjZMokOgUKMI8KIn2lGxflyFAdtNmOgDtpUhQ1OLsEgBLTSW2W220d7PlMVW
                ck5tpbadb07LtYYjp8ZKoD/q1vmJAbIwPH7/ADGPl/xbpjp9P9YwevztjkMc8EEc/cAg8FffBFv2atoK
                1BKQVEkAJAuVE8AkAcSSeQ642KbOm9n+UmBKZAzDW0sz644oDtGVlBMWlg/qU5txSFi6gqY5KcSdC0BP
                uNoeW3MoZ4zJQVNltmHU5CoVxwVTZZ9bpyx0N4T7GrTwSsKRzSRu/wB+48R+/HLh/wCJ/wD5ggfIfv8A
                cg39k/TBFv2aejxklOa89MT5bWul5WQ3WJQUm7bs4OaaTFVzHGSlUwpUClbcF1s/H7raFsdyftIeYm1l
                E6FVIzHqzdTpT7TElcdKlOIYkIkR5Ud9tta1qQVMh5GtSUPJSbYmeiXSl39QzpUI3h65R4037lmdT7/Y
                YrXop5nhxnn6LmKl1l5pC1ohyIr9KekaRcNMOF6bHDznwoD7zDOq2t9CbqE2FMpsuTAnxnoc2I8tiTFk
                NqafYebOlbbjawFJUk9CPmOFt5+Z/qGFAdP339z8SfmP2ZgXIx6OWVhl/Z3FqLrWidmeQ5V3lEe36mLx
                qY3fq2YzZmt+Hry/Gw95tK2P5a2kMdtKT+F19lvRFrsRpCntIHsMT2btpqEVP6KFuNvs/wDo8hlKnEuV
                n0ctqFMmKYhUqJXYxVZqdTqnAZbUk/D2jNTkQZDK7fHdtTKFeyl9fBRy16LGap6kO5nrFPoMfgVRoV6t
                USP0kEpLEBknkHUSpdjxLRAF8tbBNmeW0IJoSK9LSBqmZiUKmVkf5EtCKWjjxBRBC+hWq2Gsv0FhvsWK
                JSGWgLBpqmw22wOVtCGQm1uHLFe2UbO8yNLRU8pUftFg/ncCKilzgeivXKd6s+vSeIS6txvopCk3B2le
                jTVsvMyKzkp+TmCltBTj9JeQlVciNDiVR+xQhuqtoF9SWmmJaRpCI8n23EkEEgixHAg8CCOh7yTY4VzP
                82WPhjSfDFrf4baf1jbHsDpfGpP6v7sak/q/uwNJ8Ptiw8B9sWHgPtiw8B9sFSegH2xfy+w7tHp79WqU
                ClxReVU50Onxhzu9NkIjti3M3ccRimwI9Lp8CmRE6ItOhxYEZH6seIwiOynhw4NtpHfzBmWg5Vp66pmG
                qRaVBRw7WSuynV2v2UdlAW/KfIBKWIzbrqgCQggHGZPSiW/KNM2f5ZdqchxZbjzaqh9ZkK/yajQFCU6F
                fE2pyY05YflIoN0hCPSjzp+V7Sfl6G5xQlRpmWeyCunZAIrhH+lS6octV7DCdiW3iXdc3aWEKVxKV5uz
                ZIX9bQuz8LBKyLeFhj+wLti/5T/+3s0f91j+wLti/wCU/wD7ezR/3WM9OZ0yNXXcvP7RKnV50Zptc5VL
                rtdLEN532kxHVyHGSZKWtDrqUJUlsOIQpXahxCMjHaLnzMkHLtKzVmVK5BLsyWqt1VTNPgNFPrM18CWL
                paSoJbRqT28hxmOlQW6k4oFFYy9SIVIjyJstERoIVMqUt6bOluni7JlSX1LWt11ZKiAQ00LNMIbZQhtO
                KpVqZQ4L9Tq86LTafFTqflzHkMMtjkkFayLrWqyG203ccWQhtKlkA/8AlJbLfXjE/Eap2IVp/EvweWYP
                O2sJA/ENP/uN7dMUat0jMMBqqUSoxKpAe/i5UN5LzeoW1Nr0m7TyLgOMuhDrZ9lxCTwx6S2yyFFjHaHQ
                YojLMptnM0ZhOlhwyl9nHrAQkBLTqpJbjTtPCQ5IYkFId9Zce7y+h/mtKbeeLjxwVDzwTf3wBPLAR4n7
                Y0jGkeGLDwH2xYeA+2LDwH2xYeA+2LDwH2xYeA+2LDwH2xYeA+2LDwH2xYeA+2CQPPBN/wCdEi5xYeAw
                pPUdwAnl/LQL4NkcufeHHcs9O/sEpH4vtRyuhSdTUB+VV3eun8NiPvxlf/Opij5Xv0t39rO16l7NYCWG
                0t1LM05pS6bS9X5NlvikT6mUKC2oaVghttJS9McSppkoQh+QxlDZnnfbbUU5yz9VpsSguk+qrsluVMj6
                v7noUNSTGp9OBH92KZUh1ftNtTHFPPoyrkbKmSooi5co0Sn3SEvSgjtahK6kyp72uU9c+0EKd7JBNmm0
                JsnubYtorWzvKj0uOts1+qdpBoMddlfnBSO3nrbPxMU5tQdVcFC5C4sddg/cSJD8uQ/LlPOSJMl5yRIf
                eWpx1995ZcdddcUSpbji1KWtSiSpRJPHHo/7PkZOyezVJrGmvZnbZqEwrT+Vi09SddNgcfaRZlfrclBC
                ViTIU05f1Zu2KhPh0uDLqVQkNxIMCO9LlyXTZtiOwguOuKPOyUJJsAVHkkEkDG1jalU9pNbU5qdiZdgO
                LRRaVqICUcU+vzEJJQ5UJKeKj7SYzREZkkBx17GRdoGYtn1WRU6FKIaWpAqFMeUpVPqbCT/FSWQeCwL9
                jJb0yI5J7NelTiF0ev5b2y5CqKIawI9Yp0qlVOC6Uql0ia/HKdDyRa62HFIkxJCQEvJS28jSrUhE2HIp
                8yXT5aC1KgyX4clo825EZ1TLyD80OIUn6d5Xwp/mpA4+W4+/CPHvagPHGsY1jGsY1jGsY1jGv5YKif52
                Rz+m5XLuIPTBF8cv5WkWF/HBNz3k8huX07/opU8PZyrtRULiBlxTCf6Ls+oQylXn2UR9Pko97OWaIWTM
                s1fMk/2maZFU4hm+lUqU4QzDiIPRUqU40zqsQgLLivZQo42W5Yn7Z9otRr+alqmU+G4mrV4+0luS44ot
                0yjNWJLMZfYlIaB9inQnWELQtTaw22202hppCGmmkJbbbbSENttoAShCEJASlCEgJSlIASAABbuOutMN
                OPvuIaZZbW6864oIbaabSVuOLWqyUoQkFSlEgJAJPDG1rPju0HOM+qoWv8IiE0+hMK1AN05hatL5bPwv
                TnCuY9ca09qhgkpYRbZFk7+G+fKLSHm+0pzDhqtXBF0mm08ocdaX/RmPFiBf9EygrpgAAWHADgAOQG70
                mc3TnvwbZtQ25EmZV+yqVUjQkOPypDQeU3S6chllK1ul+Sy7LcZCe0/NoagNDhvVsiZ0oTBlVjKtfp0R
                IuuXKpUxuKgf4yT2XYtnjyWtJ+W/ZptBqeznMbFXiFb1PeKI9apoVZuoQNV1AAnSmXHup2E+bFt26FEs
                PPtubbYkBOfZtapDiXqNm6FAzXTHkCwdaqjVpaiOBS5+Jx5/atqAcac1NugOJV3v0B/NSOR3H3yU9ftg
                qt88aieu+5GAs9eOLg4KB5YII5/z4OGNfywTfn3Qq3lhXEXHT+VnkfLvp5Dcvp3bHw3eiREsjPM0jmcv
                xEHw0iruuj66mft3vSvzA41T8r5YZcITNkS6zOQDbUiElESCFfrIU5JmL0n2dbDarFSUlPowUlqFs7dq
                ISO3rVcnPrc/SLMJLMBlr/NbcYkuJ+by/Gw7npJZ3/g5k5OXYbuip5sU5EXpPts0ZjQakvhy9aK2YACh
                Zxl+XpOprhj0UcvJapWZs0uo/KTZrFEiLI4pYhNJmTCg9UPvS4qVdNcO3NJ30zJdJp+Zq5nBxsTMwVtb
                TZnPJBNPp0aMxEj06np4+rtFqOl2W4k9pLkLWpw9kGmmyAoEEAggggi4IPMEdQeoxt12GwTBmZ0yXBRE
                kxErk1yiQ2wiNJipGp6o0+OgBLEiOkF2XGaAakMhb7SESW1pl7pdRflU2nwH160UtyWIeq6lIjTlIfdj
                hRNkMNSkOyW2wP46fKXzV3v0P5NY+B+38kRy+u492x8MWPh3wLnClW4Dvg2wDfHPCk28vdWPgft/J7Hw
                PesfD3Nj4Y0nw7tj4Y0nw7tj4d/j8+7Y+HcsfA96x8D9u7Y+GNJ8O8eR8u+nkNy+m8Jv5YsBv2G7Woez
                mdNp1ZiFyhVx+KuVPjhSpdNfYS403I7EX9ZiaXT6w0gCQgDtWO1UPV3YU2JUYkefAkszIUtlEiLKjuJd
                YfZcGpDjTiCUqSoHgQe76U76nNoVLZJOiPlSAEp6ananWFrV5qGgH/MGPRrltydlsBlBBVAq1YiO2/Rc
                XK9eAPz7Ka2fIju7d80KzPtJrhQ4VwqGsZfgi90pTTVLRMUn9EhyprmuJUPibLfE2B3bC6WKTssyo3ps
                5MiyKo6bWKzUpsiW0o+UVxhsHqlA7pAIIIBBFiDxBB5gjqDjbXkZORc8z4cRrs6PVU/jFHAHsNRpTiw9
                CTbgBBlofYbRcrEURlr4uccHiDvAvgJA+e8pBwRbAF8AWwvluSm/E8txFx3AjxxdI5C+Aq53L5/TeEeO
                8gHCk28tyU288HluSm/lgC248D3wknGlI541joMJN9x3hN/LAAG8pvy595Jtc/L3INjvULHvhHjjUkf7
                sBQO5SbcRuAvgADCx13JT1O5Y4X7gR44sBvKPD7b0pv5Y9lONY3FN+XA7gPHgMC3TuDjgC2F8/pvCQOJ
                xr+WNfywCDhfhuACRc41/LGv5YBBwvw3DSOvHcscb+PcCPHHAb1J8NyU9TuPAnAF8AAblCx3c8BHjvIB
                wU28t1gkXxr+WNfywCDhZ6dwG4wRY9wbk8huX03JF/LHLBN8A23bOtnFc2j1oU2lp7CFGLblXqzqSqNT
                YyyqxIunt5T2haYkRCgt5aVKUppht59rKOVKTkqgQcu0ZDqYUJKvbfcLr8h91RckSXl8E9q+6VOKS2lD
                SL6Gm0NpSkdz0raetnOOXqppIZnZcENKuinqdUZjjtvmGqjGv5jxx6KOZkNycyZQfcsZSGa9TkE2CnWA
                mFUki/AuLaVT1pSPa7OO8rilPs765UkUai1esOW7OlUufUl35FEGK7JUD8iGsPvOyXnpD6y48+64884r
                ipbrqitxavmpSio/M7smxRAyhlWEBYRMuUSNb/QUyM3/APrx73pUUBE3KFGzAhF5FDq/qri7coFWZKXN
                R5nTMiQQgHgO1WRzN9xxzwBbCldNyTcblKv5YCrcsDiMK5HCRfGsDkMDjgmw3pTbzwpXTpuRz3L5/Tck
                W88LNuG5BvuUroMA25c8JNxuAucagngMA33Hie8kXxyGCb7kcvruO5IudxN8A23E2wTf36Tw3LHDy3gE
                4VwsNyR1ws9N6Dfh4blCxxqPTgNy+X1wkdTyxr+W48j5b0Dr9sKVbcCRgG+OW5Iv5YUbDek2O5Y67kdf
                puVzO5PxD/jpuXz+m4cx54IuLYItu5YJvhPMYIuMWtu5YJub7huX03oHX7YUbDcg9NylW4DngG3HCVX3
                K+I44I88JVfco3PluSLeeFnpuSb7lK6DCfiGFC4xy3A2wTc37iVW8sEBWCLbzwFuvXcnkNy+m4Cwwvlu
                HHBNseiY8FUXOLHVuqUx76PxJCB/+Of9fe9I3JjuZ8impwmi7UcqvrqiEJTqccpjjYaqzTdv1G0MT1+K
                IBSAVKGMo5lm5PzJSMyU/jIpctD5a1aUyY6gWpcRZ6Ny4rj0dZtdIc1J9oDFArlOzLRqdXaS+JFPqcZE
                qO5w1AK4LadSCezfYcC2JDRN2nm3G1cUnftpmGDstzo8DYrpPqf0qEqPAUPqmSR9d9NSEU6AgckQoqR5
                JYQP6u9t2ipl7KM3oUP4qLAlJPVKotWgSLjwuGyk/wBFRHI7zhHj3E8E4Uq/lvTyGDxGCbeyPruTwTgm
                +5A64UbDejnuXz+mEi53K5ncjqcKV0G9HL67vhFuvXcjrhSr+XfAsMLPTejl9dx3JHDCuW/4Rgm/u7Hw
                xpV4fuxpV4fuxpV4fuxpV4fuwkEXvv0HxwEDz3K4k4SLncrmd6eB3L6b1C/3wo34DkNyeQweR8juHE7l
                czvBscE33AWGF9O4OIGDyO5HX6f17lczuT8Q/wCOm5fP6d0o8MEEc9w57yjwwQRvG5fTcOJ3L57kjj5Y
                Uq3Ac96Ou4+zc9em5HPCldBuQOPluVzO5HU4Uq/AbhwI3Wvgo8MEEc+8CRjX4jF0/q41eFhvTyG5fTA5
                jcvpu+Dz/du9EiSA7nqITxcay7JQPk0qstuH/bNd5SQoFKgFJUClSVC4UDwIIPAgjgQeeNt+xaVk+bJz
                NlyKt/KUt0uvsMpKl5eedVxZdSLn8MWtX5pJ+GPcRJBSoMOydiu2J7Z7ONIrBdk5SqL4W+hALj1Ilr0o
                NRioHFxlSQkToqfacSlL7AL7ZakwKhBqsKNUabLYnQZjSX4suK4l5h9pXJbbiCUkdD1SoFKgFAjd6QV/
                7EWbbf8AsK/l/CWj330hwPUqmOjiHafCcB8QuM2ofv723B0NbKs5KPWnx2vq9UoTKfuXBuQhSyQhOohD
                jhA/UabU64fJKEKUfkNyPhwdwHU8sL5DuJ5DB5HeTvHAYXy+u9HPcvn9MI67jzPngC/lgq6Dl3Ecvr3L
                8Ld9PMbl8/pvRy+u4718vruHs8Tz6DBN/dBHjjgPAY1DxxqHjjUPHGoeONQ8cXG/WMazgH2b7kczuPM+
                fdXy+u9fLenkMHkfI7kc9x5nzPdG5fTuI5b0dfp/XuVzO5PxD/jpuXz+m9KrcDy7ik24jclVuB7ik24j
                luG5fTcjnuXzwBfF9IsOfj3Eddyue69t6Ou44Av5eOCroOXcSrofv3FJt5e7TyG5fTA5jz3LFxj4f879
                2/0VJ4ZzxWICjYT8svrR/Seh1CnqSP8A4LshX/NPj33G23ULadQhxpxCm3G3EhaHELBStC0KBSpCkkhS
                VAggkEWxnz0Zsu1516o5RlpyxPcKnF09bSn6G84eP5JtBEimaiePq/rEZCQEswmxjKWWNvOyCYpFNoze
                aMvOO6pdLhVJiVBfP6T8Jp1bFSgS1JH90Ig9m4dHrTEjQ2hOWcxnMcESHqJXqBLRpEqnV2mSYLrLh59j
                IW36nNauDpdivrOnSXm2FK0Y25RjK2U5yaHHTBiSfpDqkCYfsGCd+QZgqGRsnTb3MnLFCcX8nTTI3ap8
                0uhaT8x3vSRniHssqccqsarU6NAT/SKJqKmU/wDUpyifkD03UChKVlHOubH06WKXFp9FpyzwDtXrdRit
                PpQeS+woaKmXUjikyY6uF9yfhG4J6nlgnUcL5geHcTyGFcj31C43pTbjuXz+mEddxT7R8PHBPQcu6jl9
                fdo5/TcsddwBOALDcd6uIx8PE8/DBN/dABIucFRPy76Of07t+BHjuRz+m5fPur8N6+X13p5DB5HyO5HP
                6blc++vl3EcvrhRsNyOv0/r3K5ncgcb+G5fP6dwG3LAX490EjlgL8dx5bhuX03I5/TcoXIwTp4D6nuo6
                7lcz3Ucvru08Tflgq6DgO8CRgL8dx5H3aeQ3L6bhxG5QIP8AXv2P5nXlLPlGqqIEyqlYm05NMgBBmT36
                lCfiwYzHaKSi7lQciaib6UBSkoWoBBpBqq6fHdrSIzNSeT20mLDUpyNCU5xTCbfXZcoxk2bdllLYkvBx
                9tmOytuO17nOVLVW8pZnpCE6nKlQKvCZH+PkQX22CPml5SFJ+YG/0fqqKpsry8NWp2mKqFKf/omNOfXH
                T9IT0X/wt3vSxryQzlPLDa7qU7Mr0tu/wpbT+H09duusuVMX6aOF7m0aM/Mkx4kVpb8qU81GjMNjU48+
                +tLTLTaf0luOKShI6qIGNstAZ2dbJMiZGQpBnz6zIrdYdbI/O6hEglE03FtbDDtTjRmFEAliJGKvaB3I
                PTcsHCOeDxJ3EW89yeQwrkfcWHhjgPlgKur5bl8/phB4+e5QJHDuWtz+25HL6+7Rz36R4YJthJv99x3J
                NxuUDe+8AnvoHHyws9PcI5/TceR7oNjfcsdd4Fzgm2Oe9fL6708hg8j5HcnnuUL9y25JuMHiO4BYYUb7
                kddygb4CSccBYbl8/puT8QwpNvLeDbcn4sKTby3g23jcvpuBsRuPLHLfbqeG5HXcrme6g8bblAkcO4Rb
                n9sI54ULeW9JsfPB5H3Y4Abl9NyVW579I8MWSPDGW6saLmGh1lN/7U1emVLhzIhTGZJHzuG7W6g2whaX
                EJcQoLQtIWhSTdKkqF0qB6gg3B8Pd7S8unKue8z0Tsy2xHqsh6Em1h+HTT67T7dDaJIZQSOGtKhwIIGP
                RPzAFR805Vcc9pt6LX4bd+KkOoTT6ioDoG1NUwcOr3Tr3FKCQVKISlIKlKUbBIHEkk8AAOJJ5Y2tZvGd
                s+VussudpTm3hTaQb3SabT7sMuo8EzHO2n6f0VSlDpj0admZmSztCrMb80hKcYy008jhImi7cmqgHgpu
                F7caKqykmWp51JQ7CQT6U1b9fz9Bo6F3aoNDjIcR+pNqTjk14/LXDNO+fs35W3A2wDffpHhgqA+HenkM
                KPC3eSbi3huPDBN8I57l8/puCr+e6wONI8MEhPLnjnuRy+uCQPdg33KVbzxzwg9NxSBxJ4bkm3lvsPDF
                kjoMKV0HLvo64VzPuEddy+Xn3kq6HcUeGNB+WOCR/wAccE37iz03p5biLc/tuBvv0DHsp88HjuBscXvg
                pBxoPywEgcThSr8t6Dx3qVblhPxbjbrgnoOW7ngo8MaT4YCT1wpXQYHA454KPDGk+GAnqcKV0HcUL4Nh
                w57kq6b9I8MeynBN9yOuOWDxPeBvusMaR4YJA5c9wNjjngo8MaT4YSnqcKV0Hf0k40HGj54CQN5FxbeC
                RjWfljWdyOeNlFbGYdnWUalr7Rz8HjQZKv0jLpd6ZKUrwUt+ItzyWCOBHu/Soyao/g2eojRKUpTQqyUJ
                4IGpx+lyl25AlcmI46rhf1Jq9ykbtkObRkzP9Cqz7vZU95/8LqqlGyE06o2YdecP6kN0sTjbn6qBx5Hu
                ekRtERlXKy8t09+1ezQw5H9hVnINFVdqdLVbihUsaoEa+kq1ynm1a4hGNlOzWftIzEiEntY9EgluRXak
                lP8AERio6IrCj7BnTdKm46Tq7NIdkqQtthSFU+BCpMCJTaew3EgQIzUWJHaFm2I7CA22hN+NkoSLqUSp
                RupRJJONoFf/AIUZ1zPXgvW1UaxMXFVz/MGnPV6eL/0YLMdPhw4WHcSpROCvjwwST3NR5e4F7XOCb7kc
                9y+f036jjWfljUT17gUR7wEjGs9zWcE33gkcsaz8sazi9/cI64WOPn7hIsNyjc+XfCiMaz8saz3dZ7gJ
                GNZ+Xc1nGs/LGo+PdvbGs41nFye7rOConfrOCSd4JHLGs41nFyeu8EjrjWcazi5PXuBRGConuaj441n5
                Y1HuA2wSTz9xrONZ+WNRPXuAkcsazjWcXJ73PFwnlxPjjUfHFz4n74ufE/fFz4n74ufE4C/HHPCk9e/6
                KeYBKy3mDLbjl3aTU2qlGSo8fU6qz2a0tjqhqVCccXb4Vyxf4k4zxtJyls9jsu5inqRIlBSodNiN+tVG
                UlBspxuOFJS2yDdPrElxiOVjsw6XPZxF9KnIr0xDEij5khxFuBHrrjFPdDKSbdq/Hjz3HdCfiWGPWHLD
                2G3FcMRJcafEjToT7cmHMYZlRZDStTT8d9tLrLzah8SHG1JWk9QR7jMlAp+aaFVMv1RBcg1WI5Fe021t
                lVlNSGSoEJfjPJbkMKIIS80hRBtbGccp1TJOYahl2rNlL8N09i/oKWZ0NRPqs+MTfUxJbGoWJLTgcYcs
                804lONgO0dvOeVWqNPkA5jy2w1ElJWfys6mtgNQakm/FwhATFmqupQkth53T620Duzznei5BoMmuVl4A
                ICm4MJKgJVTmlJLUOKk3JUo8XXbFEdkLedshPGn0vOe3XPUqVYrflutuVGcUL/DKBTArQy2Lng0w0C3D
                iBfrEx1K1kqWqTIGS8mUXIlBjUGhs6GGvykmS5pMqoTFpSHpstxIGt53SAAAEMtJbYaShptCRtbzJ/BT
                Z3mirIc7OUacunwCD7YnVQiBHW34qjqkGVb9RhRPAHu/Cn5n3qB18MLPTejnuXz+n80oPHzwoXHfAudy
                jbz/AMH7+4BtgEHCk9R3vR+zQMt7SKQh5zs4deS7l6Vc2TqnFCqebHhf8TZht6jbShxyx4kHb1sczZPr
                FRz1SJMnMkV5CFS6ZpBqVIjx2whLcBhsBMyntJSVaGEJmNlanHWpRMiXu9G6su1bZjDjvLK10KqVGjBS
                jdXZJLNSYT5NM1JDLY6NtpSOXudpuy+ibSqUmNN/MqvDS4aRWWkBT0Ra7Esvoun1qC6pKe2jqUlQP5Rh
                xpy6jnbZvm3IMtbFepjqYmvRGq8VK36TMB+EszAgJQ4ocfVpIYlJ5qZCSCcuZjq+VKxDrtDlrh1GEvU2
                4nihxB4Ox5DZ9l6M+i6HmV+ytJ6KCVDJ3pNZOq0VprNiX8tVRKUpecTHkz6S+u1i5Hditvy44WoElmUx
                pZCkp9bfspeM3ekbkKhQCugyjmmquoPq0SG3IjxW1H4Vz5klhsNN+LcdEiSSAkttJV2qaXs62m7cK23m
                bOrz9EoSj+QcksrYLcIq1eqZepDp1obWNP57K0tO39ZW/PeSULyplGg5KpDNFy9BRDiNnW6r45MyQQEr
                lTZBGuRIc0i6lWShIS0yhplDbaceljmjS1lrJzDnFxTuYaigHiEo7WBSwbc0rUqpqUk8LtNKseBG9Iuc
                KNz5e9TwAweZ3o57lcz/ADUk3wpN+XPu88AWwVW8/wDCnlgKv54Kb8scu5HdcYebdaWpp1paHWnEEpW2
                42oLQtChxSpKgCkjiCARjZ1m5nPGTqJmFCkesSoqWqk0i35CqRvyE9rTzQkvpU6yDYmM6yvksY9IOhU+
                hbTKoimtNsMVOLCrDkdoBLbMuYhaZelI+H1h9lctQ5a5CtNk6Uj0XYLsXZzLkupITU8zVKXHJ5KYah02
                AVDx/OIchN/FNunun2GJTLkeSy1IYdSUOsPtodZcQeaXG3ApC0nqlQIxWNh+y6tLW7IynDiPLN+1pLsq
                khJ6kR4D7EPj/SjKHW18D0adl4c1mLWVJ/vRq73Z/dLaXf8Aa4y7sr2fZVcbfouV6czLasW5spLtSmtr
                H6bUqouSnmF/NhTVuQAHDubV81/wzz9mKttudpCMwwaYQbo/DacBDiuI8BKS0Zih/fJK+4PZTfx9+d6B
                1wTYfzXywF+OOCsaPA40fPGgdTi6R/uwVk/L/CwL8eOOCsFHhjSfDfsV2wo2bGtQqtHmT6LUWDMYixOz
                7VmtMICGlJ7ZbaEMTmQGJbntqR2EVxLawhaVNws3bc8/zJkaJ+c1OQ0uW+lLhplBpjaUsMdu9ayWo0Zo
                IbBs/OfSrs0KfdIxlnL8HKlApWXaaCIdJhtxW1KsFvKF1vyXdPs9tKkLdkvaQE9q6vSALD+Qbbc3fwO2
                d1uY052dRqjf4FS7HSv1upIcbcebPMLiQky5iDy7RhCT8XcAucKNz5e+HIYUnqNwBOOQwo3/AGQaj441
                n5Y1/LGs+GAs9cejlnej17KicttxYFMruX20iZHhx48RNUiEhtmsBtlKO2kK9hipOkKX612b7ih642kf
                yD0oM5CtZuiZWiuaoWVmD61pV7LlYqKGnnwbeyv1SImKym/tNPrmN8DqHc+FPzPv0qtwO8qAwVX8v2TZ
                RzTVMnV+nZgpDvZzKe8FhCirsZTCvZkQpKQQVx5LRU04BZQB1tlDqELTkrOFKz1l2DmKkL/Iyk6JEZSk
                l+BNbA9ZgyQOTrCiLGwDzKmpDd2nkE++zlmaJk7K9azLNsWqVCcebaJt6zLVZqFEB6KlS3GY4P6Paajw
                BxUahLq1QnVSe6X5tRlyJ0t5XN2TKdU884fDU4tRsOA5DhvSLnCjc/s62QbUZmzevdq52snL1SU0zXKe
                k3OhJs3UYiSQkTYmpRCeCZLJcjrKSpp5mm1GDV4ESqUyS1MgT2G5MSUyrU28y6nUhaeRHDgpKgFoUCha
                UrSQPe+lLnz1uoQMhU9+7FN7OqV3s1cFVB5s/h8Jdv8A1WK4qW4g6kKXMjng5H4bz7I0/f8AZ3yxsP2z
                uZGlJy/X3XHcpTXiQv2nXKDKdV7UthIutcF5XtToyASlV5cZPbdu1KjyI8yOzKiPNSY0lpt+PIYcS6y+
                y6kLbdacQShxtxBCkLSSlSSCDb3m0HOsDIGVqlmKaULcYb7Gmw1K0qqFUeSoQ4iP0ilSwXZCkXU1Eafe
                sezxVKlMrNRnVaovKkT6lLfmy31c3JElxTrqrfojUo6Uj2UJslICQBvHsi55/s9BtjZHtwquz9aKTU0v
                VfKjjlzC1gzKUparuP0pThCS2okrep7ikMOuXcacjOreW7ljN+XM4wE1LLlVi1KOQO0S0rTJirP/AJqZ
                Ec0yIrv9F5tGoe0jUgpUfc5jzHR8p0eXXa7Mbg06GjU44vitxZv2ceO18b8l9XsMsNgrcV8gSNqe1Crb
                TK362+Fw6JCU43RaRr1JitKsFSJBT7Ls+SEpU+5xS2nTHaPZt6l4CSceyn5nBN/2fwalOpshuXT5kqDL
                aN2pUKQ7EktnxQ8wpDiD/mqGMsekftFoPZszZkXMkRFk9lWmLywjroqMVUeSpw/3yYZlv1TjLvpS5NqH
                ZtZhpdUy8+q2t9oJrFOT4kux0szx4hKac5YcNRI40HPeTczhH4DmWj1JxYBEZma0mcL8tcB4tzW7/wCM
                YT1HQ97Pe0LLWz2lmo1+XpddCxT6YxZyoVJ5Av2cZm4sgEpDsl0txmNSe0cCltoXtH2mZh2lVUTaor1a
                nRlLFKo0dalRKe0rmokhPrMxxIHrExxKVOEaW0MMBDKNHjwx7I+eCon9odyMBahx8OvI/wCrFG2lZ7oG
                kUrNleito+GOag9Jhi3+RS1PRP8AY/Llim+kttQgm8mfSawP1KlR4zafqaT+Fr/+vDHpX5zT/dOX8rO/
                6BFVj/8A3KnJw56WWZSizWV6Chy3xOSZ7iL+OhLjRt8u0Hnipek7tLmhQiroNHvyVT6UXlp+f9tZNSQT
                5t6f6NuGK1X6tmKoPVWuVCXVajIP5SVMdLi9IJKW2wfYZYbuQ0wyltlpPsttpTwxrPl/0i3/xABTEQAC
                AQIBCAMKCAsFBgcAAAABAgMEEQUABhITITFBUSIyYRAUICNCYnBxgZEwM1JTcoKioxUWJFBzg5KTobHB
                QGOywuE1VWBkpNFDhJCgs7TD/9oACAECAQE/Af8A2dZIUEsQABckmwA5kndlVZx4RSEq1UJnHkUwM321
                8VfsMgOU2e0Q2U1A7cmnlVPsIsl/2xk+emInqU1Eo85ZnPv1yD7OX44Yv/yo/Ut/WTLAc4MSxOvWmljp
                tSI5JJXSORXVVFlsdaV2ytGpup2E29I7ukas8jKiKNJndgqqBxLGwA7TliWeEEOlHh0ffMg2a+S6wD6K
                7JJfu14guMq3E67EGvVVEkgvcR30Yl+jEtkB7baR4k+Dmhh/e9E9Y4tJWHoX3iCMkL6tY+k3nKIz6RsT
                xWlwqHW1DXdr6qFbayVhyHBR5Tnor2sQpxTGqzFX8c+hADeOmQnVryLfOP57duiEBt4VJTmrqqemXYZ5
                o4r8tNgC31Rc+zKONIo0ijGikaLGijcqoAqj2AAekXE8Rhwykepm2kdGKO9mllPVQe67G3RUE7dxraye
                vqHqal9KRz9VF8mNB5KLwHrJJYknwsNlEGIUUxNljqoGY+YJF0/s39I2cGKnE65ih/JafSipxwYX6c3r
                lIuPMCDeDf4DC6sV2H0lTe7SQrrP0qdCUfvFb2WPpEzoxDvLDWjQ2mrCYE5rHbxz/s2j7DIDw+CwvHa7
                ClaOAxyQu2mYZlLKGsAWUqyMpIAv0tE2F1yTPeYfG0ET/QnaP/FHLlT56Ujuq1FLNApIBdXWYL2sNGNt
                EcdFWbkpyjkSVFlidXjdQyOpurKdxBHpBzrrO+sUeJTeOjUQLy1nWmPr0jqz+jHwuE47V4S2injqYm70
                zk6Pa0bbdU/MgFW8pWNiIM68Hlj0pJnpn4xyxSsfY0KSKw5bQ3mjKrzzo47rRwS1LcHk8TF69ulI3qKJ
                9LKrzlxerJ/KTTJ8il8Tb9YCZj7ZLdmRqaljpNUTs3MyuT7y2VNjWKUhBhrZ7DyJHM0f7EumovzAB5HL
                Cc7IallgxBVppjsWdT+TufO0iTCT2lk5smwejqaVYIpZn6kMbyt9FFLH+AOUsjTSyTPteWR5HPNnYs38
                T4dNSVNbKIaWF5pDwQbhzZjZUXznIXtypMzgqa3E6tYVAu0cJUaI8+olGgO20ZHJ8iczaDZaOqcfpqu/
                t20/utl+MObabI8IvblQ0S//AKX/AIZfjLgP+5/+mo/++X4y4D/uf/pqP/vlhww/EaYVS4VDBG5Ij11N
                TaUijZpgKG6F7gE77E2tYnEfwVhtJJVTUVIQuxE73hDSynqRr0N53k+SoZjsGVTUNVTyTssaF2voRIsc
                aDgqIoAAUbOZ3sSxJ7kMM1RIsMEbyyvsVEUsx9g4DidwG07MvxTxnV6eqh0rX1WvTWer5u/6zKennpZG
                hqInhlXekilT2Ec1PBhcHgcs0sYkd/wXUvpDQLUjsekNAXaC/EaF3j+SFZd2gB6OM5J9Rg1YR1pVSAfr
                XVX+70/DwTA5sWk0iTFSRm0s1trHfqor7C5G89WMbWuSqtXYvh+b0RoMMhjepHX3lEa3WqJAdOWXzA3R
                GwlBoqazEa3EH06uoeXbdUvaJPoRrZF9YFzxJ8DAsKOK1qowPe0NpKlhs6N+jGD8qUjRHEKHYdXJFWNV
                RFCoihVVRZVVRYKBwAGwDLObEzX17Qxtemoy0UdjseTdLL29IaCndoKCOse5HG80iRRKXkkZURRvZmNg
                B7csEwaHCacCweqkANRN2/NxneIlP7Z6bcAuWJYZS4pAYahNovqpltrYm5o3L5SHotxFwCJ6arwHEotY
                OlBKk0Mi3CTxq17qeTC6Ou9TdTzMciyxpKhukiLIh5q4DKfaD6OM9JdGgpovnarSP0Y4n/q6n2eFQUcl
                fVwUkfWmexb5CDpSOexEBbttbjljNZHgGFRU1EBHLIDBTc0AF5qg/KcaV78ZZAxBFxkSSSSSSTck7SSd
                5J4k+AAWIVQSzEAAbSSdgAHEk7ssEw0YXQRwkDXv42pYcZWHVvxWMWReBsW3scscr/wdhtROptKw1MHP
                Wy3AYdsa6Un1O7mjQxjX4tUFUjgvFC0hCoraIM0pZrAaKMEDbum/EZQ4lh9S2hBW00r8ESaMufUt9I+w
                d3F8LixWkaB7LKt2p5bbYpLbO3QbdIvEbesqkZvvJ+DY6ecaM9DJLRTKeBhboD1alo7HcRYjYR6OM932
                4dH2VTn7gD+TeFmVShpaysYfFqkEZ7ZCXkt2gJGL8mI55Z4TmTFRFfo09PGoHnSXkY+0Mo+qPBzTw7vu
                v76kF4aKzjk07X1Q+pZpNm5lS+/uZ61V5qSiB2RxtUOPOkJjS/aqo/sfuzV88tJT0IOhS04J1an4yV3Z
                2llPlG7WQHYigAbbk5ZuZxSaxMPxCQuj2SnqHN2R/JilY9ZW3I56StZSShGh3FiVJZJVFjME1na0YKhu
                1ihCk/JjQejjOPBHxWOOWB7VFOrhI22JKrWJXS8h9nRJ6J3NbrCSN4naORGSRGKujCzKw3gg7j4OZigY
                XM3Fq2T3CGAAfz9+WdqFcZlY/wDiwwOPUE1f84z4ObdH3nhNPcWkqR31J+tsY/dCIxbnfuZxza/Ga08I
                3WEdmpjVD9sMfb4Wb2InEcOjdzeeHxE/NmQDRkP6RCrE7tPTA3ejrFcWp8Jp9bN0pHuIIAenKw/wotxp
                udijcCxVTXVs2IVMlVUEGSQ7lFlVRsVFHJRs23J3sSbnwcy5QaCqh8qOq1n1ZYowP4xNlnrRkrSVyjqF
                qaU9jXki9l9aPWyjj4FPEaioggG+aaOIeuRwn9clUIqqosqgKo5ACwHsHcr31ldWyfLq6h/2pnPhZmVJ
                jrp6Uno1EGmB/eQNcfdvJf1D0dZ7D8ooG5wzD9l1P+bws1a8UeI6qRtGKtUQknYBMDeEn1ktGO2TKupI
                6+knpJerMhW/yG3o47UcKw9WVTTy0k8tNOujLC5Rh/IjmrCzKeKkHu4AmsxnD15T6f7pGk/yd2U3lkPO
                Rz9o+Fm25TGqE83kQ+p4JF/r6Bz+c8906OGvyNUh9opyP8J8PN3OBK6NKSrcLWoNFWY2FUo8of3wHXTy
                uuvlBM4MBXFI9fBopXRLZSdizoNuqc8G+bc7Aei3RN1kikhkeKVGjkQ6Lo4KspHAg9zNj/blD/5n/wCp
                P3ZxozTLylkHuYjws3RfGqAf3rH9mKRv6dwkDfzA9pNh/E+gU/nPPOPSw6nk+bq1B+jJFJ/mVR4YJBBB
                IINwRsII3EHgRlhud1VTBYq5O/IxsEt9GoUdpPRm+toud7SHKurM2sdjBlnNHVAdCaSJkkXkshAaKVPN
                Mlxt0GW5OVXS96yaK1FNUoepLTTJIGHnKDpxnsdR5pYbcs3W0MaoDzkdf3kMif5u7iceqxGvj+RWVIHq
                1r294t4WacWsxmFvmYp5T7YzF/OUdyqqbV2H0KnpTPLUSjlBTxOVvy0qjVaPPQb4P/T/AI6P5zxyjFdh
                tRCZY4bauUyy30I1idXkdrbdkQf28t+U+pErCnLtEpsjyCzyW8sqNiaR2hNugtlLMwLH4Ggm73rqOc7B
                FUwSN9FZFLe9bju5zw6nGar5M2qmX68ahvvFfwsyabpVtYRsASmQ+s62Qey0Xvyd1jVnchURS7sdgVVF
                2J7ABc5YDUtiuN4liJB1cUC08APkRPJeP1Mwhd2Hynf4P/T/AI6P5zq4e+KWpp/noJYv3kbL/XIggkHY
                RsI5H4PCKrv3DaOovdmhVZP0sfi5ftqT6rdzPWl6dHWAbCr00h7VOtiHtDTfs+FglD+DsNp4GFpSNbPz
                1svSYHtQaMf1Ms7cX0E/BcDdOQBqsg9WPekPrfY7+ZojaJDlmdT6vDZJyNtTUMQeccQEa/ea30c41T96
                4rXQ2sNe0ifQm8alvUrgez4PMyv+Pw5z/wAzBf2LMg+w4A/vD3Mdou/8MqYVF5VXXQ89bF0go7XXSj+v
                4Oa2FGtrBVyr+TUbBtu6So3xp26GyR/UgIs+WNYtFhNKZDZqiS600V+s3F2G/Vx7C3PYgILDKWSSaR5Z
                WLySMXdjvZmNyfflhlN3nh9HTWsYoED/AKRhpy++RmPo5z0pdCrpqsDZPCYmPnwtcE9pSQAdiZYdhNbi
                jMKWK6p15XOhEl9wLcT5qBmtttbbk+ZmJKhZZ6SRwL6sNKNLsVmiAvy0tEcyMnR43eORSjxsyOrbCrKb
                MpHMEWPwFJUy0dTDVQm0kLh15H5SnzXUlG5qTlQVsOIUsVVAei46S36Ucg68b8mU+8WYdFge5nNhRoK1
                p41/JatmdCN0cp6UkXZtu8Y2dA6IvoN3cOw+oxOpSmgXftkkI6EUd9ruezgN7GyjblLNQZt4ciblRSIo
                7jXVM29ie1jtd7aKCw3aK5YhX1GJVL1NQ12OxVHUiQdWNBwUX9ZN2NyTlglJ37ilHCRdNaJZOWrh8awP
                YwXQ9bD0dZz0ffeEzlReSmIqU9UdxL9yzn1gZZtY9RRQRYdOi0jqToTX8VOzG95GO2OVubHQNrAp0U7m
                dlOIMYkZRYVMMVRbtOlE3vaIse0k/A4RjFRhM2nH4yCS2vgJsrgeUp8iQeS3sYEZYfi1DiaBqaYadrvA
                9lnj56SX2jz00k87KrpYK2B6apQSRSDaOIPBlPkup2qw3ZV+aFfA5NFo1cPkjSSOdRycOVRrc0bpfIXd
                lQ5qYlUyWqU7zhB6byFWcjiI41Y3PaxVONzuymxXCM3ac0mHqtRU+UEYNeTdp1U42Ejb4tLkdULEpuK2
                uqcQnaoqpDI52AbkReCRruVRy4m7MSxJOWZVHtq69huApYj2nRlm91oh7SPR0QGBVgCrAgg7iDsIPYcs
                VoWw6vqKU30Ue8RPlQv0ojfj0SA3nhhwyzXqJanCITKSzQvJAGO9kQgpt46KsEHYvPLPGQPiqKN8VJEj
                fSLyy/4ZFPt+CVmRgyMVZTcMpIYHmCNoOUGcWMU4AWtkdRwnCT/alVn9zZfjbjFracH0tQt/52/hlVYz
                ilaCtRWSsh3xpaKMjkyRBFYfSB8DBaLvDDaWnItJoaybnrZem4P0L6v1IPR3nBgRxbveSBkjqIm0GZ76
                LU7G53AktG3SQbAdJxfaMjJQ5uYZGjP0YlIRdmtqZj0m0V5u5ufJjXedEZVlVJW1M1VL8ZM5c8lG5UHm
                ooCL2Af2DN+h7/xSnjIvFEe+JuWhEQQp7Hk0EPYx9HudWHT01aasvJNTVJ8W0jM+pfe0F2Jsu9ohsGhd
                QOgT/Yc0KDUUT1ji0lY3Q5iCIkL6tN9Nu1Qh9HtbRw19NLSzi8cq2v5SMNquvJkaxHuNwSMsQoZsOqpK
                WcdJDdXA6MsZ6siea32WBU7Qfh6CkevrKekj3zSBSfkpvkf6iBm9mUUSQxRwxjRjiRY0XkqAKo9w9H2O
                YPHi1NYWSqhu1PKefGJzv1b/AGGswvtVpYpIJHhlQxyRsUdG3qw2Ef67jvGz4bM7DdCOTEpV6Ut4aa/z
                anxsg+m40Ad9kbg3pAzhwAYknfVMoWujXdsAqUG5GO4SKPi3P0GOjolGVkZkdSrqSrKwIZWBsQQdoIOw
                g/CYZh8mJ1kVLHcBjpSvb4qFeu54bti36zlV45QxRwRRwxLoxxIsaKOCqLD/AFPHf6QcbzehxQGeErBW
                gde3i57DYswG2/ASi7AbCHUKBWUNVQSmKqheJuFx0HHNHF1cdqk8jY/BUtLPWzpT00ZklkOwDcBxZjuV
                F3sx2DLBsHhwmn0Fs9RJY1E9uuRuVeUaX6I49Ztp2ekKSOOVSksaSod6SKrqfWrAg+7KrzUwqpu0aPSO
                eNO3Qv2xPpIB2Jq8qrM2viuaWaGqXgp8RKfY2lH96PVlU4dX0d++aSeIDy2jOr9kgvGfY3hYdhdXik2q
                pk2C2tlbZFEp4u3PkguzcBYEjCsIpsJh1cI05Xtrqhh05SPfoRjyUB2byWa7H0jz4ThtT8dQ0zk721ao
                /wC8TRf7WUuaWDSdSOeDtinY/wDz64ZNmVh/k1VYPpGFv5QpkMyaS+2tqSOQSIH32P8ALKLNDCI+v3zP
                2STaI+5SI/xyp6aCliWGmiSGJdyILD1nizHizXZuJP8A6i//xABpEAACAgECAwMGCAYJDQwHBwUCAwEE
                BQYREhMhABQxECIyQVFhBxUgI0JSYnEkM3J2gZEWMENTdYKhtLU0NTdQY3BzdJKWorPUJTZAg5OVo7Gy
                wcTSJkRgZKS2whdFVGWQlNGEpdPw8f/aAAgBAQAGPwL/APSMVj8LYFWqtQ8xVA44SPG0F7RcynDO8Q3z
                hrUeONpeZvHj7mwJK3b1Bm7No54jsPyt5ryn2y03yc+Pt7K5Wes5zHDMczE6ga7J1jX9VL3M79TmI34O
                62VrgupqbHmzhdVJpWMcGXrm2aVnqxDU2HVXCLOEOeiXIM61iADvFclN5a5OQH++Tav3XLrU6Vd1u3Yb
                PCtFausmvcwvUC1gRlPsjtltSO4wqtZ3XE1jn+o8RVkgpI23mBYQyVmzA+bNuxYMeheQNQ6gW6ro2i/7
                Sm6gsKLzqVQ+kjRWUcF+4HXfenVKLHOdTRUqpVWq1lLr166AFSUISELUlSwiAWtYDAAAxAiMRERt/fDK
                L+ptP0ZH0ouZnHVpH8qHWQ2/T22n4QNExPsnVeCj/wAf2gaGrdM3SL0YqZ7F2Zn7oTaPftBgQmBdRIZg
                hmPbEx0n5FPQuOfw39Rx3zLyBbGjB127LSW2xD8Z3FyO8dCr0rSTjgf5JyOUFtbR+KeMZCwPEtmUsxws
                +KaTI2mJkJEr1gJ3qoMYHZ70zFXHY+smnRpIXWqVa4CpFdChgFqUsdoERGNoj++A3I5jIUsXQR1bcv2U
                1KweyCc8wDedvNHfiKegxM9mVNLY+/q24O4DYHfF4mT8PNsWFMvP4S/e8fCmx+Ks7FxQQ0XUtKUmbxw4
                2mtDuXPo8VvIzeyEHt4tqd23nwEYnh7SepNXZfKlPiNy9fyMfcPe7HCAx6hFfDEdIiI7fOPts/jKAf8A
                VSX+l2/9Z/5aP/J2Vhzt5OpUGpbuXbNY65sSpK+BMjDq5DPFcbVWUT9Az22naY718Hnwn3KDo84a9n4w
                w4zPsZbxVm0LhPwIDx3BP0uKJ7fh2Gp61pJ80WBUoZMmAP1IwjsbmiL1wdqsZzPjxej2Grrf4NMvh3b7
                GaXvrMmfpQOOy9CqUTHsm8X6PHtvayGWwh8Mzysph7BzvEb8PHiZyid58IkmCPtmO2a1Pc4h+MbRd0rl
                O/c8cn5mhUjrI7pqguGyG0MfzXbcTJ7U9PY6CUmfwjK5Dg4lYzGLIe8Wj9RMnihNVUzHPtMUuSAJNgY7
                T+ErDUxuMriiuuNuIvWx7j2jm2bDZN9h0+c1xmc+P97/AHnpEdZmfCI7OwmiFp1TqDckFcGSZg6DvDaG
                JKGZZ4z+5UzCtG/nXZMDR2jK64zlu6UTJIpcYiiqJbTy61RUDSojMdC5Cuae27Slm5dtqtcFzttLNuJp
                fewtz/Rvt7I+S/UFlfDb1AyO78UecGLqEYJ236j3l8vdO3RiRqn16eUk2UqsJONjU9YNWcewgOCEo++O
                2FxeH0vgKGpc1ZZdffx+Nq0rNfFU/NKT7qCYJl+2wFg1osmVVLYdJmJipjsfXbbvXrCalSqkeJtiw84W
                lSx9ZGZQMff17IuaY+Ev4ly1mrXLI1qk5bEJXZgNzrfGGMuPO8lDDYC2spK443LkjxTHb/c/WFDOQHhH
                xhjb/Mj2cWpsVXPr7ZMZ+16+3+6egqeagfSleJHIGX5M6Zy8Dv7NllH2e3/pT8EV+tw/jC4sxheH2zwZ
                DEXPD6ssj8qO0Rk9M6lpTPj3OcZkBH9LbmOLb7g3+z2BZZ9+JafgGXxl2uG/27KFWaa/vZZEff2G7h8l
                QytM/RtY63Xu1590OrsYG/u33/vc2slkrSaVCihlm3bsHC0IQoeI2MMukREfpmekRMzEdrWm9HnYw+jg
                KVWrPnouZpfUZZeMZ40UWxvycWE8Tw8+9x78mr80PG+Y8+wcRzC9sD+9h9kf40lPX5WJw654SyeQqUuP
                97Gw4Fm37lBJMn3D2OjpylRy2XxGLRbo6SHIqp5G5h6RChvcV8D3SY11NCmU1yS+2sKpMCTkxuYDUjVB
                XbXyGTwOfmvFI21KKm3bmJztFZNVWzWNqrbxnTnu9wEQxKYixUZb1ngMlTx2Zy2n5nUWnrNFvJqar0OU
                qyjmVHKlyBy1HTbTyIMVzKloKlgSAGVmk5Gnq4SpeZ05S1Rpa8R9MxQPnIydRquGO65PE36lxLqwsfBh
                WsHxBNcuPUTFs5lTCsXp2l13gQxPEu3wz4SJZQ8g0ZjpwnHj4zPwlZqvu13Oq6VS0fxSYkkXsxtMdDdP
                Mo0i6TCouN2IX12R8ifjTBYfJcXpd/xlK5v9/eEs37GFjReJpkW+zsMDMKxZT9IYxZ1VTt4wLVMX9YJ7
                Hlfgx15lcHeHqqvkHOrnP0oX8c4fkOBcT0gGY2xvE+eyeskqp8KWljz+EhkJjOoFK3SPohK8vj4PFWD4
                fOGrer1r7v3V6y4pgMzpq+NpPmhaqs2Vfxz5jfu1+rxESG9J4SiTQ8Y5ldzlbH/e3PQemrUjpfDWZjKW
                kz83l8jWPZriIZ+dx9BnzVJe/Ls24m3uwYpmkK1ceEA/yjL6RnPrMvXP6I2GIiPlYb4wWLccWSpqyKmb
                8Dce54JvKPhmJgWVTaBTExOxdJ7UtH3M1lLlO3zsn8D+rbdtk5rT+fTwb6WdlpnvLKeQnkYzga2VJdYw
                2QDkLC8ntjNbU1qVct2kZyzXFMwhWp8ZYAM/UlMbKUjJzy81ZrQvlBUyNaltwqmO2Erpa08KjUcY6lzS
                k9tH52580iN58G4vLXGHHWJKyW8kPb4OM6fV+kX/AAkUuCZ9OK+N+M11N946Os5t69unV8/W7Y7GLMm5
                HP5erThp+cR2snbBUuZ7fnHcxk+zimdu1OMnkKWCwOHp1cdVK0yB+aqoFKEIUES61Yla9+TXU17NiKAn
                r2tO0vau3kVJiG2XYbMUKpcUkMQm3fo1qzz82eJKmk9cecxQRMT8t9O7XRbqWVGmzVsqB9d6WRwmpyWQ
                S2LOOhCYzEx49j+Ef4HbFoadfibl9NxzLUop78x4giZksphZiN31GyV2htFqu44Dm0pdV4aGeorD44wh
                sgmVynze91CnabOOafRbtoNJzybAgfBLf72nxbjHyrUWqudj6BLLZ1KgIjGTyA7ecDBW0KlUokTGxaF6
                pmaxR2Hjj8JfsyxPridvNV9yonaftyc+Ex+0jeT85mqOKDO45q/x6c9g1GN6uovTgrfKu0x3mN+el3iI
                TB29picoa8uXWIFd+yk62fIFD5qgyGRQTgWPQaq6wdIGBhN30WVXafAJ9kUaPJif/hgnspJbQM38plI2
                n0WZPuiGhP3Djlz74Lw7RqjI0nZS3hqVl2ncYooBdzUL+XUpd9Z6SqVVD7d5jFxJ8+tXWPVkdmap1Fdx
                mVvJYxQ5bUO/7A9MzsLPi7A4UV2i1JfrwSpYlVTJILz3vxuZSQZntXsYRPwu/CUdUx5wIzc4HSw8O3zP
                7HU0MvTRRX0FEOymOAl7b0qvFyhp3L2LsYW5YTDLGLtuqWLFJnXdTHUXWKrPDiglNnzSjjFbONYfLH4Y
                fgvgqNjHvm7qHEVQ/BwWXW3kFVgkePG2R4hzNCI4FgZXF8tUOlFbPY+Ir2RnuuXxsnxtxuRARliZnpLK
                7ImHVH7RzkFHFAOByl/3s8xlBbzsJgT+K8PETxJKpj2mtbQ9Uxfu95yMTtvKjFZehG37S6pjZp28dYZL
                mY/IpN1eGkMAbUypyHKNgCInEMlRcIySimOzDTbNAEZkCpTDRUJFJQsZ5gTwhvtG/X29e0zXtrecTvIE
                Mp44EY5cD1OOP0484oHrHWOs9pS1ZKaO0EDIkCHeN43gttt4mCifDaYnw7bCPFM79N+Hcdpk+It44V8O
                8tLiH5uC88B4p7KPIXC5Sg5SeFHeJUkT4uVjcbJ1kQuCIzObLKtY+OxK4KyEyyozSenFHm6rUOrZG2N7
                VOoIavgkXVKa4Rp+AXPDK0uxbXq2hRWm+Mux+t2Z1iprMeos98HlnTzJMeoxUzOOkcRKoifPTkaqbLfN
                iqwtiiflmtgCxbBIDAxggMCjYgMZ3ghKJmCGY2mOk9qmQqSwPg51sUjYRHFKaaJdEWE7deJ2nrFhdyoX
                DLSxdgqkGTG2D7CYEJgYwQGMwQkJRuJCUdJGY6xMdJj+9lqfLrZy7rKM4vGTE7H8YZWe5JYr7dUWsu/k
                1i8fCQbMbMtlL59vB6Ko+7hjjj/CT+27H83YACBNofxiwPfiWXWOYkty+bOdh42SuQljJKE1kjYE+rnA
                xQ8c8W4L2aYFCgiAKY4YgnbkcnC0cEZDVVK3qS96SMEm0WNw6p9R5O+riyF04nfipUgqI6R/uhYFhLX3
                DA9x0hi/o47SdJOFX97LNePjB7J+kb7ZyRblPnTPbmNyuSazx42XrJn/AJRNmf5ewlQ1Hk+AZ/qe3YLI
                VJj1x3a7z1DxeEksQP2FE7T2TjNVKRhr7NgVkVFMYmwc9IF3NIjx5l6pYxtaZ34nI80J3jrE/KzjoXB3
                NPEjUFM9uoRTPl5Dr48M4t9wpH0ZMFyXoRMaUtuZzLVGoeEtTM8RceHcdFEmXiRtpKqvKZ6zLd53nr/a
                wq+R1tp1NgJmGIXkkWnqKPEWqqE9ii+ywRL3dv8Afxif8m7/ALL2ts0vma+YXQJQW2Vl2IWk3wcqAjcl
                QyZQs54BkiiIiSiIId/+FzMzERHWZnpER7ZntYp4/KY+/apiBXEUraLTakMkhX3oUGc15bIHyodwSzls
                4ILlnw/+y78rm8jUxeOrDxPuXXAhIfVHiOY42HPmqUHE1p7AsCOYjszB/BBo2/qm2PScpcpXDrRG/DDl
                4ypK7A1p8YtZG1j4CY+crcPXtzsnquppJTJ3GqnKpxZJCfoj+xendfMxHhFm4Td+hnEx04r3wy5CGevg
                yeprf3+e29Wmf8mOxFjfhbs3Gx4Lt5fU2PEvdzFPyG0+zcNvaQ9gr6oy+r6QPmYq3l6iyVrG29t+le8i
                6aZZwxxzXZK7QBsTEBEx2/34ao/zgy3+19v9+GqP84Mt/tfatQoam1hdu3HLr1albN5l1iw9pQK1JUu1
                JmZlMQIjEzPZVvWHwjZ3Tlcxg/i+nnsplMt1j8W4hvLx9UvtBYvTHWCVE9gmzmtbagsB15+b1jnTjf1/
                gmPt4+iQ+wW1m7R4zM9ewIrrFSgjYQH/AL/WUz6yKZIp6zMz8jRej0F1u3bWatB70QONxs++DK5kv0rH
                9C1B6CgFY/kgMDH8kfLl1lwJXHrKfGfYI+kZfZGJn3duVjaktKZ2E3QU8X5KF+fPu3OJ9o9t92Vgn/BV
                Nv0f1R+vftueW/8Ajbpf/Rt/L2/rv/8AEW//AOO39d//AIi3/wDx2msWUa5gxHM5VixwhM/QmSmPO22m
                dvDeI8d4hdZNy353Uz7w7Za49Jhef6vVH0imB9fYEiTDgI242nLGHPrIyLrMzP6I8BiIiI8hNcwFLH0j
                OYEY/X659UeMz0jtwc1u377yD5f/APk/6PtDa7QasvAwnij7vdMeuJ6x647fsKy9iXjFc24F7S3aEVx4
                3YySnqaxRBPqb9Uglyd5XyAX8nLYh23JyuNvY1u/WOXeqtrHvHs4Wz21lpx+4tw2fr3SWXiucnUKoYfd
                DcKfSOnFJT4l/aq1kL9hdWlRrut27Li4FV61dZNc5heoFrEiKfZHa1jcTZtYjRqjNVbHpMkPyyxmY73m
                CXME3nemGPkpq1h4IIG2BKwU/EuBzWX2nhn4rxd7IbT7J7ohvX3dkjew7tLYviHvORzy5rNWvfzuRiyk
                chYfw78sCUhElsLbSd+LtU05gkyNavu2xYbtNrIXWQPeL1wxiON7uEY2iIBKgVXUIpUAx+2wzU2brU3m
                HGjHK4rWUsx12lNCvBv5ZTHD3hoqqiXQ3h2YnRml1LX1heR1G4msL7XxXj2rBUx4jxZN8TPpL6bSX/pU
                WPVPgjF47GUxH8l0VDt/5dktvV6+3na+1bH+Cz2RR/Il647f2QNaf5zZn/bO39kDWn+c2Z/2zt/ZA1p/
                nNmf9s7f2QNaf5zZn/bO39kDWn+c2Z/2zt/ZA1p/nNmf9s7f2QNaf5zZn/bO39kDWn+c2Z/2zttPwga0
                2/OjNR/1XY/V2+e1nqtv+E1Flz/7VyeyrFi3kq2mudHes/mbFp6TEZ+cHG17DeZkrO28RK+Gqs44bFpM
                7QVfT+nqvIqq+ce9kwdy/bKIht286BHm2G8MR0EVqWIJQtSFrWP9s7OcqKU/LW7aMTh1v3lEXrQOd3h4
                DIkaqtWtYfwRMQ1oKSRALJKDt3dcam5hlJ8upl7mOqrmf3mlj21qiI9ykh2p6H1hkXZmtloarD5W8fNy
                NS+pRvCrZtl87cr3BWa1nZlthdqUjDeSUiHlrY3VOoVYy/bRFlNWKeSvN7sTDUL2xjqdvu6iYtggT+Xx
                8s+DeALZOVwWSp5XHWPxVui8HpmY9ICkJnltX4NSyBaovNYAl0/4Zc1HmjnlI2TUprmIs5K+yC7vRrRP
                7o3hIjOYkUIBtg/MUXaxmtWXrFDRWEfEFUokS6aCPzl4jEgziWV5qtmZHJuFr1plcntzaSBTiNPYypis
                ciPMr1V8PEW20teyd22bB7fOWLBscyepmU/Iv4HOVF3cbkUkl6jiOIZn0HoPaZTZrns2u8PPU0RMZ3jt
                ndO2D5jcLlb2Nlu3Dzxq2DUuxA+obCoBwx6oOI8mp9U2lAyxg6tHH4yTji5Lst3wrdhf1XDWpjXE468q
                28fAp+W2nvxK05jMXQj6sTFMsyW3vizlOAvXxDt9H5fDGzbbI+aT6oj98bt1gN/CPSOekbecQ9+yTmBW
                n0PURj9WuHoqV9vh6z4Qc8RRwVUAv2ntuw/y2TuZfdvtHqiPkSYzHeG7rrj9r6TJj6qo6+yS4Rn0uxGc
                yRFMkRT1kimd5mZ9czPj2hpj+E24hh7+IL/cl+7pPGUfWLafRjyG1hQC1jJmU+AiMbzPbfqFVczyE+79
                8P1Swv8ARjzY9cz25tcuk7cxRfi2j7Cj2/VKPOH1T4xOK1BjymHY27WtSrfzhNDBNldn2GhxLmfBizn2
                zHatcrnzK9tCbKDjwNL1i1R/xgKJ+V8L+m48xTWZi6kPD5qlqMe6/pitl/1cUx0/tVitK1Gyt2qbjWXu
                Ges4nEchrEzt1GLN59L3Guu9UxIkXk0mlClpUGm8JwrUArWO+OrlOwDEDG5TJT06zMzPWf242MMVrWJG
                xhlAAABHERmRbCIiMTJFMxERG89rWnfg1cHmSSbmrOEWDMx0YvBqYJAQx6Pxo6CgvOmkrbk3Zfev2rF2
                7ZZLbNu25liy9pekxzmkTGHPrIyme3DWrvsFHiKFMaX6liU9pN2PvJCOsk2o9YxHtmSXEeQRJgKgp2lj
                OOQD7RQoGM2j7CzL2RPaP2NZjR+UbI8XdFairJyAj9Y8bZBF9Y/aOsMePs7f1Fhf+eq//l7f1Fhf+eq/
                /l7f1Fhf+eq//l7f1Fhf+eq//l7f1Fhf+eq//l7bFWwS4+seZXMf9Glhf6PYJz+qcFjFT1McYm9lrER9
                XawvEpgvVvDWCPj5/h2Tat0XaoySihg2s8cNqgcdfm8UmF0JDwmIuLumM9YZ2EAEQABgQAYgRERjYREY
                6QMR0iI6RH9tcLbXEkqjqqt3jb6AWcbk1A0vsw7lq3+s8Y9fk0t3JRknD3gzmRfETy6tPHfPcTSiPNix
                Y5NNf1m2AHw3mPLU11p6u27fw1HuGZxyAlj34pTXWUXaqx85rKLH2IsqESYyswWDtFQoMMji2lYxrzAc
                xhGsKKeTrx0np50IuqGZmpdAZYk/NOG1zchtDUOCsxax+QVBhPSGobHR1S0uJnk2qzN1PVMzsUbjJBIm
                X/Cn4Cs0jxOkpnE10hvIty58E5Z8jHi4bEDjoj1RR3CIlp8WB04pYjYq0luyZjEb2MtaGH5FxF4l+EES
                lbzPBXUlUTwrH5Wuf4ZL+bV/Jrj+EsN/Nb3y/hCyU+cI53MVlT/cq2RmlXn/APb1B6e/5TrTPRUG8R9c
                56AEflnMD7t9+zbNyeNYTzrHsKZ6KRHsDp4fvQSMddp7RERtEdIiOkREeERHyJIpiIiJmZnpERHjM+6O
                zHRM8kPm64+xQz6W3tZO5z98D9GOyEzG6hnnO/wS+sxP5c8K/wCP5UYqvBEb9mtFcSRFG+ylQI7zPEUS
                cx4+aHt7cb6dlQfXJJwEfeW3DH6Z8ouDeVlsL1epi/8Azj4gXqnp6MlE4VoN5pY7nYoy3+jWmGVB9scN
                B9QZifCRmOnh8rUNYfNHK41u32+8aYxeVZ/01Y5+8d/7VadqTPzadIpsDHqg7WZy62T+mKi/1R5NK/m5
                g/6Mq/t1v4OdM2yVj6ZSjVN1B7Fftx6eGWY9YqVJ83I7TvYtcVQ4hNdkWUZvNtZpzS7djQ8k8WUyyvrY
                6szYU1jj0chaiVluJ1q9wOKRV3HS1C9aXEb5HOLHMXTZH7tE3YZXrM/xGvVD2BHXsKq6lIUPorSsVrH8
                kAiBj9EeQwz2mcJlOONpbax1U7I+9dvlxaSX21OAvf2da0NkH6fv9SDG5Frshhm+xYvPmZOlvPi4m5EY
                iIGK8el2+LtQ4+1ib6551R8F8zZAC821j7qZlTwgtvPSzjUfmNhTYkIRS1CwtX4MZECC+2fjmsvw3q5W
                eJj5GOvKyMWePaFrdWieOO/6ayQPJYjNzGv2RlMcRfRuU5IiGN9xCwqW1HTBciwzhnb+3eU01mVkePyt
                fktlcwLkmJi2varkUEI2KtharCZITDmLHjAw4hmZyOuWNxYs3hVLCii+1W/oy99+zXrs4fp92tDv15fq
                7fFmmMaFMGcJW7bJ5+QyDRjaG3bh/ONmNykFRwVkcZxXSoSkfkvzmkZqad1GXG2xW5chhsw2evE5aYn4
                utnPUrdZJrcUzNmsTWFZFvwfa5pW8PjtTPBaIuxw1a+aieRTv1LG81rFPI7Dj3WapsUbe5GbRCsf/CnW
                GTstCmOZPsBYyZT+qJ7aaO984ed1ziXXuLzuOchnUNtb+3i5rN/b8vXP8Mz/ADav5Ncfwlhv5re+RJFM
                CIxMkUztERHjMzPSIj1z2kL2tdJ02R4rs6ixCWf5DLgn/J25eE1LgMwz97xeYx98+nj5lWw0unr6dPX2
                1Jkp6zdyLLG/+MWLby/Xxx8qpUifxhG9n3BsC/5SOfvGO0t+k+wwpn7IbLGP0SJT/Gn5Pdgn525uHvhA
                /jZ/j7wv3wR+zyWrkx1MxrhP2Vxxnt7ikx/SHlsXZjjsv2jmF+5qERAVL+rGw7nPiZTO/TaI7HfoL4CD
                crCAjYSD6TVjHokPiYx0IdyiIKJ4/Jn9EWmdLyAzeJ4iiI59P5nI1hjxJjkOr2QiPRCnZKfH5O2Yz2Gx
                M7cW2TylGhPD7fwp6unv7YDPUM9hreIbR5LsrVydJ+Nhp6WymO5Z3lOKtBwzkhwy3fjJY+Mj2FizFizi
                CAwKCAxnrBCQ7wUT6pidp8rr+UvVMdRrjxPuXrKalVI+G7XvMFLjfp5xR16dmWcBm8Tm0KKAa3FZCpkA
                ScxvANKq1sKOY6wDOEtuu3lCc/qDC4Xmfi4yuTpUCb12+bGy5ZM/iRPr9nYrOAzWKzVdcwLHYrIVb61l
                O+wMKq1sLPpPmnsXSenyiXc1HgarB9ILOXx6DH8oW2BmP0x2/wB+Gl/84MT/ALX2KziclQylcGyg3465
                XupBwiBkom1mMAWwDFnK5nigTAttijfyw3K5PH4xRb7MyF2tTXO3jsdhixnb19e3KjX2i5ZPSA/ZRhN5
                n6v9W+l9nx93YLNG1XuVmehYqvXYQf5DVEYF+gvKbWmK1rEjYxhQAAAxuRmRbCIjEbkUzERHWezquC1L
                gczarxMvrYvL0L71DE8Mmaaz2MFfF05nDwb9N/L3zNZXHYip4d5yd2tRRv7ObaYoJn3b79jTgNS4HNOU
                PGxOLy1G85YfXNNd7GCH2pGB9/7VLHuUhceLHMFYR95HMR/L2wrKlmvaWOjKCyOu5bgFkZzUMyBEsiiD
                iCGZGesQUTt1jyaV/NzB/wBGVfkkvJ6u0xjmDMwS72exVVkTHiMg+0BcUezbftCMRq3TOUeU7CjH53F3
                HzM+EcmvaYzefZw/L1FqJUxF2vT7tjInb+ud9g0qR8M+nFdzotMD6SUM8O0661ekrOn61tk0Kdrc/wBk
                OTBky+xa495fjart4dvuN65xIZJKRbUyBGIERiBERjYRGOkRER0iIjpER4fKsYLUVIbVVsSSXRsNyhZ2
                2XcoWOEir2V+oo3Bg8SXrag2KJuEyP4RUdBWcNlBDhTk6HHwizbryrSZ+auVpKZQ3aRk0NQ5tbMYHI2c
                XkqhcSbVU+A4+ssx6g5DI811dwsQ4PMasxmY7Bgs5FfF6xQrflBPBTzi1juyzjoOd12VjEstY+SMoDex
                WJiBcFX9o7xlclQxiP3/ACFyvTT08fnLDFh/L24P2f6N332/3yYjh3/L73wfp327d5xWSoZOt/8AiMfc
                r3Uf8rWYwP8AS+RzbL011RMRLXtBK4mfCONkiO8+rr17CayEwOIIDCYISGesEJR0mJjwmOk+URt3alUm
                egNmylEn6vNhhjJfo7CYFBgUQQkMwQkM9YkZjpMT6pj5MkUwIjG8lM7RER4zMz4RHt7Su3qrTdVkeK7G
                cxiTj7xZaGY/V2l2LyNDJKjpLaFyvcXE+yTrsYMfr+STGGKwCJIzMoEBGOskRTtERHrmekdpTb1zpGu4
                fSUzUWJho/lL73xj+mI7cvB6n0/l2z+443MY+67p7U17DGR+kfkd8zeVxuIqb7d5yd2tRRv48MNtMUEl
                9mJ37dxwerNPZW7sUjTpZam+0cD1Il1wbzWCMdSIAIYjrM/IK5lchSxlMJ2O1kLSKVYJnwgn2DWoZnaf
                EvV2db09mMbmqtexNV1nGW03ULsitbZSTUGa+ZC2qPh4vRMZ9fyDRltZacp2FzsyqWVqMuLn7dNDGWQ/
                jKjtyQ1zhYLfbdx2Kyuv93sIUmI9/M2j19uZhs1icuvbfjxmRp3x29vFVc2Nu1RGRydKnYvvVVoVn2VB
                au2XnC1Ip1pLn2WmcxHAlZz4lOwxMx5DTldZ6cq2Fzwsq/GtR1tc+xlWuxtgP4647cleucIJTO272PqK
                /wCXtISmI98s2j19ubh8xi8svbfmY3IVLwbe3iqtbG36e1OnfydKrcyL11qFN1lQ27r2lwiurV4ue+fG
                S5SyhYCbGSKwIo8nxc7WulFX+PlTTZqHEhYhu+3KJRW4MWzPSFlEHPqHtBDMEJREiUTvExPWJiY6TEx4
                T8krFyyipXD032XLQkPymNIQH9M9pxOqdS6AyKOLcUX9Q4Tm1m+HNru78Fmi+PCLFdiGj6mR2CcJl6GY
                rJWtcPo5NOV80RgQltlb7BMMojeWNYTGTuRERTM/I+If2U6e+O+Zyfij45x3xlz/AN47l3jvHP8A7jy+
                b6+HbystXLCKtZI8brFloIQofrMa0hWA+8iiOw47G6y0vfvsPlqp1M9jLFlp77cCVLskbi39SoKfkwzL
                ZTHYtZb8LMjerUgnbx2Ky1cTt6+vblDr7RcsnpARqjCTMz9WPw3qX2Y6+7sFmnZRbrs6rfWct6Tj2g1R
                EBfomfLMzO0R1mZ8Ij2z2JOR1tptL1zwsrhlK1qwsvqtr1De5c+4wGe3JVrrBCUztvaeykr/AJe6pCYj
                7Us29/bnYnKY7KJ235uOu1rq9vbx1mMHb9Pani7OTopyeQOQo44rKu/25ECacopwU2GAtSza1gr5alAT
                GEIDM+XLqVvzG4y+te3jxnVaIbe/imO2i8i6YFFLVWAsvKfAUKylUnT+hUF8vXP8Mz/Nq/k1x/CWG/mt
                7y2dP6bSjPapVuuyRnM4jDN+pcNRCy5cCduOhXNUKneLNpLQ5BEWoc/ksiBlJBjlsJGMVt4cjF1eXUHh
                jpzOTLiiN2MMvO7bT0nsLFmS2AUGBgUiYEM7iQlG0iQz1iY6xPh2Yp4b17BDJMH01EO8QW30g6+dEedH
                iO/oyLFkJgcQQmM7iUT4TEx8lI+oaa/5Wvmf+79XZcfvbnhP3yfM/wCo4+TY2ncK892X/wAV6f628c/d
                t5KceswJ0+/mmRx/oyMfo+UwAjZDvn0eyBOZ4g/4s4IYj6nDPr8ml9QifAGOzFQrU77b49591yIb+rmU
                HWF7+HndYnw8s5jUNqR45JdDH1+FmQydgY3lNNBGETwRMS57CXXrjIy1gyaxNyMddZpPCFMwvH4Z5quM
                X4fhuXCFXHEUbwYV+51SGeEqxbcUy2xzSN3zktdxybZLrJyZ9T38eLed/It+DyLGY6TibmCuGx2JuBvu
                e9fi/Bnz9G3UlNgZ6EZrk1H3/EH3XI1YActhLBhN3HNL6XTbvNJpRPdroCINiJFgIsC1C7Gfzz+FYfNU
                6apHvmTulEyqnTWUxxMLaSYc7LQkTc2YAJ7FdzNkk45LCnF4Kuwvi7GrnpHCHTvFsh/H3nDzmzMiHJrw
                uuvA11uMKmdG7iL6oLYHgyk99TiHwkl5BFUxnbiiOMRmOMt+1jR+i2qZqMR4MtmNgcnB8cf1LVAuJbsr
                wzBNJgmijEwEg21JjUfkMnctZC9aOWWLlx7LNl5z9JrmkTDn1dS6R0jp2xuosW5od2euL1YTmFZHHEY9
                8oWA34WLcqJ4OKJ5L4VYXwtUBQtq54ltAWAXtAxghn9MT5HWrT01q1dZusWLDAShCVjJMa5rJEFrAYkj
                MygRiN5nbs3CfBvSDNXePu/x9cU0sfzpnggcVQDgsZE+KdlvdKa8siOWi6kxKRyGv9X28BjbUcY47IMc
                b+WfWCjTGOKjjam8dCXaZUtxtEMR64/ZHX1FkcrdHJUaJKdUrVapDa53EcABOaJDy44Yl5R16+TOfntk
                P6C055Lmcz15OOxlFfG+w6f0ApQDux9hxbAlChNrWTAAMzPZ+P0VzNL4Xclxd+bLP3Q/fCf84vFwUbSK
                6UlZXO+98oLgE8hkrN2/YeXzl2859pzi+3ZeRmwt/acz5AyemsvbxlgSGWAo+KpbEf3K7TPirW1T9R6z
                4fSDhOBKBxd8U4fV6E8b8bx/guSAI+ctYc2FLDgYjmPoskrFYd5g7KQOxF3NZm4mhjMcgrFu0+dgWA9I
                iIjcmMYUitKVwTXNMFKAmGIy7HUDsYjR6WbVsWJ8DslwF5lvMkudnGUxDF0YIqlTYNue8JtHp7PVHGhm
                Ny1KwZAXDx1ueA3EH7VWapOQ4fAlMKPX5Ao0QTkdW5JJMx9Bk716NeZIIyWSgCE+TxiQ1qwkB3GLOINa
                1sZDcvqPK28rebv87ZZuCQmd+TVQPCipXGfRr1lqSPqDfftUyuKtvoZGg8LFS3XOVuS5c7iQlH6iGdwM
                JIDEgKYnTWpWAK35bFV7FoA6LC6MSi6K48eVFtTuXv14OHf5c17rSyuoDXx19P49gd5iCHdbcg6eJeNr
                H02NonYYM8darYETkRwmlSuY3vMzyMRpIWV7MKiYjnW8xxd9AAiY7xZm3SojvxGtUdhyGutaBUttjiOu
                kbOor0b/AELF61bqJBsdeLkTdV9Vhb9MfgKOStZVVzAVsudi2pSTFr8hlKcqEEzI8uBoAcTMyXEZeqI8
                mlfzcwf9GVfLOOWuM3qlquYnDpbAKpCcbqsZexHFNYCj5xVYAK1YHhnZCWDZhg5jPWxpOnYMJiyOhihG
                Z6L7nXLe3tv5rLx239dubt07SJRIlHjBRtMffE+RGNzrrWpNKyQgdSw3nZLGL8JbibTy3kQjr8XWGd1O
                I4UlTIydNPO4G8nIYy8vjS9U+E/TS5c7Giwkt1vQ0RapkSJjE/J0DoWoTFVcvqV2VzNpf/qmIwdBg23T
                4xxT8ZgutBxwFeZUEtt94o4nGVl1MfjqqadOsqNgTXQELWPtmdo3IymTMtzOZIpn9ovY0FB8eY8WZLT1
                iYjjDIJCZmpx+MIyS4mo6N+ATJFkhIqy+xLYJAYFIGBxIkBjOxCQz1EhmNpiesT0ntVyFCw2pepPVaqW
                kHK3V7CThimrOOomBxBRPZGSdwLzuNIcdqCsGwjF0VwQXUhHo1cgr59UbcK2xYqjJ92k58tbCDPHddQs
                5RgRP4ijXdXqwxm2/CVizZEK0Fww0UXCEt6xDPaxevWE1KdRLLFq1ZYKUV0KGTY1zTmAWsBiSIimIiOz
                MB8GIHVrEzu37IGVudk8iw55cDiKLVnFRbCnZTXqZebxBK1UmD53x1mlcmzaGGc/VmaOcm0Z6xzVfh96
                vPX8TbBBh9SOnZuQyWB75jEDJvyGGevJIrgPUmWFK2uoSEdTe6qCBjxZ2XkMJk72JvKmOC1j7Tqruk78
                Mmkhkgn6Sz3A46EMx07VdIa6NCs3Y4U4jOgIV0ZZ3gNK8oOFNfJNn+pmpFda4W1flJtcrvfaHWuG/nro
                H8T4NbIFtiY3HvVsus1cco+hvkZJpxKa4GcHKzyepcm63PGU1aIESsbjwLwTQpcUqQMDsMsnjsO24rDn
                M3OdTaOtWWOp1a9fN4tLDIop7vmrkgTxTPAlxupN5Q7ALuazbjeyZ7W9K/B1cFC6xHXyeqU8LGucPmtr
                YQpggWlc7geTiCY1nWgSlgFqw25ftWbtt5cbrVt7LNhxz4k1ziNjCn2kUz2oaUddezT+pIs1e4tYR16m
                TGuyzTt1llMwlrmJ7k3lcIvGyJOgyQmQ8hGZQIDEkRFMQIjEbyRTPSIiOszPSI7WMJ8Haq2UtKklWNSW
                oluNUyPNMcXWiR+MJGfC644pcQ7qTdSUM7NtZ7NZzNr4tyA2PLHomfO2VSrwFCrHr4UoVHh08i7+JyF3
                GXVfirePtOp2V/kPrmtg+/YuvangPhGau5QsGusjU8LBFuiZTALnLAqARZp+EMtgtdlEcTrHe9ykImJ3
                iesTHWJifCYnyOwWEUnO6tgdmok5+LcNJRuM5Nipg22esFGNQa28HnWH1d1Q4sk0slkcRLZ5br1peH00
                khLhmKFSSTWeSp+bYylVtPiR/CWSyN+xWE0MTluCJKa+MyypsbR48IXl0RZPsBZkwvARKdo7Oo5Crbxm
                RpN4H1bSm1bdZw7FEGpkA1Rx0Id4jpsQ9Jie1bH6ltW9TaXkhW1dtk2MvjV+HOx11xc1wqjb8AtsNJAE
                KrnTmZPtSzGItqvY3I1ws07SZ3BqWeE9diAxncGLOBYpgmpgiwCGAx2ksHa1NrPKLP4qxdVDHIpJ34Cz
                GYYHCupj0n5iue5EXbPzC2CIWWoGz8Jq8mOYyKisV2X3osJKvx7SuhNJrqCEJOdpp1OWFfiHdIccb1b9
                F7K1ylYTaq2FTwtRYQYtS1Zeo1sESH3x2wGfCIGM1hsZlOCPoTeppskv71kyQmPVI7eTN6ovBLUYekVj
                kCXBNmwZhXp1YOd4CbVxyK/HtPBzOLadtuzsxqPINtMIz7rUEjGhjUEW41cfV4pBCQjaJnznOmOZYa5s
                kydQfnhZ/oXCeRjnGKlJA2tYcwILWsZIzMp6CIjEkUz0iI37fsX0o+9UwF+/GKw2FoMKq7MQ1vJXZy7Y
                JZMiz0cVZ7IoUU7cwZNTrTFs1DrPlXCCJbUxGLhqEHt1Eb1uyB2IienF3Gv93YjwOtoJ8RPBXy+I5ajn
                1cV2nbYao9U7UHe33dgq6jxzKfMIu45Oqcux13g8Sp3l7RxxE7mhkJtqGYlqAgh3zetsiEvjAJXj8Ybt
                z/3UyIM7xZEi3+dqY8OT1npGRgo84YkbFy00UVqqG2bDjnYEoQBNa059QrWJEU+yOwaY0227UwmSvfF2
                G0/TbNXv6yKYGzm2gQ8+TXHebC3nNCgoZ2D5pllqzz+tSG2QxLa+IxUFXSe3UQuXLQssDE+BzSrb/U7E
                en9agx8R5lbMYmUqMvVxXqVp5Lj1dMe32+6Rpajxzsew+OaV9B82heAehMo3leYe0FHMVMrspgx56VSU
                R2z+u74S8sVw4bEtb5+1+4rm5KxBF1h6KJV64lvPzWRfE7dO1zLZW2mjjsfXZauW3lwqSlcbkU+MzP0Q
                AYJjDkVrEjIRnKZXTum81gPgxoVrFsyNyMbkc3jUhLGZK9XdZRkLdAq8FYClSQ6nCfPadwwFgds1pXIP
                OxOmH03Yw2lJmGLycWI7mMz1lVKzUYS9/wAWFwEh80tYB5GPe1aUJWbXOaYrUpSxk2MYw5gAWAxJGZTA
                iMTMzEdrGF+DUVTCyJTtVW0i4TKN4n4mouGVkET6N28DAb53KpcHLsmd/PZbK5uxG8y69ZsW4TBfRXBk
                S6y/qrUK1jHQRiI8icjib9zGXq5cSbdGw2rYXPj5rUkBxE7dY32LwmJjtU0t8IDUVMu2QRjdRbBXp5Nk
                +aFfJAPCmleZO0KsLgKdop5ZBWdwd5kimBEYkiIp2iIjrMzM9IiI8Z7W9JaAunVxKiOvlNR1WcFjKlG4
                MrYpwTxIxsdYO4uYde8EkunvNyGCRCYlBiYzMEJRO8FBR1gonrEx1ievbSGbtMl1u9gaBXXT1l11KYrX
                HT722UtZMeqS27Oz2ZKWnM93xuNUQjayl6RmQrJ4t+ABiOZZslEhXTElwsZKktO3nr5xRFsnQwlYzXis
                ePgMKr8WzX8PQ7ljmWWdY4xXwLDeOkx4T24Mw9lvJ6dyB4ZlxxSb7lMa6LNF9hk9WOFTiqGwt2N7rDmk
                bWGU9red1BfVj8bTHdjmbyRnP4uvXUO7LFl0+alChJhz4RtEzD6OjpbpTB7kA2V8E5+4G/RjbccY43ij
                YhVj5h6p3ib7hnaDv5CxcuveW7LlxrrDXF65Ow4jNhfecz5AyWmcvaxzYKJcgTk6N0Y8VXqR717S5jp8
                4EmHppNbBE47hYFWI1bWTx28TLPmboB+Mu4gznjciPSdWPezT32OXpiLR5DL5FsIoYynZv3HT15daok3
                uPbxKYWBbDHUp82Os9k6ZxDrFXG5S2SMVpuvYKtRXVXxtm1mWL/qw0V1nauPfzVp4GdzQEcKyCczrd82
                pGJYrGYgBrqL1iD7VsmPH2MmvXmf3uOxs05rNFl8R5lTM4w6gFO3rv07NuR3np/W+dvrdvi3UWOs4q5s
                RVniXFWuJieGXUbqZlVhXWOLlnxqmeW8Fs3CNQa+ur5lk3/EGJa3ziWIgq1lrASW+5PltOsLo86IVbVv
                MMOPkak08a5UujlHnQnbbjxlou94xo+rzqTk8XDvAMg177hPbFZbnCWWqKXjM+nf5xWVqLAGuId5mF3w
                4LyJ6xwP5fFLFMiPLgUKkZv6g1RgsFSVPUjXavqblmRHjtWwqMi/j22FgqiZiTjya5/hmf5tX8muP4Sw
                381veRWn8DY5WqdQoZI2An5zD4ncktvj6wt2WQdbHl+5kFmzBCysqDxWBofO5DN5BFNRMkiiDsM2ZYeX
                UuWkeOxYPrMLAz9XavicDRSDRUA3soag+McpYiPnLFyxtzC4z3JdeC5FYZhaAEI7ZNoY+snVVOo61h8s
                lILuMs11kxdC20Bg7NO3w93kHczu5M7wmIYHnduUrzVjtLnT6Khn/tHO08AR4+4YIoXVRE8C/WU7kRT1
                Ii95T16bRHhERHyazfUyrwfpU05n+Ro9rVIp9Lawr7x8xv6duXP3DPyHOnwSpjZ+5YSX/d2kincimSmf
                bM9ZnyU1/Uq1x/yVDHykWYjzq7uGf8G6Ov8Apgv9c+XTOQPqd7T+GuHPtKzjqzi/lPtlNR5hvKx+Jqna
                fMbSxm2wprpGZiCsWnkutXCZiDc0BmY337W9Q5lk7smVUKIlM1sXjxIpr0q0Tt0CJ4nN4YKw8mPPzj2i
                v8IGo8ei/ksoZnp+tdSLkY7HpZKhyAobEhN240DNDiEpRUFDK5CVhk9m4zNY2llKDxkWVL1ddhM7xtvA
                sGeAx8QYHCxZbEBCURPbOadxxsPGKKtcx3NKSaqpkKqrYVjOd5Z3Q2HWFpTJtBQsPzyLtXo0a7rdy25d
                erVrrJr7D2lALUpYRJGZlMCIjG8z2/ZLqCedq+9UJU10sk62Epu4TZSDlTIXLzOAO92PPUEjFenuEMs2
                m5/4RM5lq4CJowGmsC+oqrgaJbcPerVmreC7lbOwvyLa61oixtWU63TrVy7ai04DytLwuYv45VkhgDem
                tYNammMeaLDXAkwR82D3iOnbQRR031Pig/Q2yKp/XBzHaKeLMW6vzwGjC1oiGFSVPzTcu5XXcUFPLpLO
                Ji1d2jgYlFqBnOan1CvTmRyPHcXQtUHZbJMN+7eZl2Tep9zsPMuYwOK7YDj/AAgF2INA5XTWXEByGItT
                WfKpkktGRFqLCCIQKUWq7FWUyYAfKaHGAFuMYfTVED2uWQK+8I6UcWkhPIXTnbhHko4uVxdG2CSgfPaE
                StSx4VqAVgMeAgEQIj+iIiO1vJZKymlQoobat2nlwJRXSMmxjCnwgRj758IiZmI7NxeMN+N0ZWd+C0In
                lvypKLzL2W4Z87eY5lejvKKvmEUMsjzu1LXmpKgu1Bk0jZwlWwG8YTHOHdNrlnHm5O8uebzPTqVDWoOW
                5lofIz84cP8A+K8mc/PbIf0FpzsxzmApKQNrWsKAWtaxkjYZltAgAxJEUztERvPZgVHNXpPEOYnB0/OA
                bG3zbMvaDpxWbm0ymDjepUkECMMKybr2rtS0wu4PCWAp4/HvDiq5LL8AvaVsJ819XHpYgirFEqsvsqhv
                EpLUt7gdOqdGVcmaRV1FU5O23K7tI8nlbdODg4dvV2xma09WClhdSjb4scmNq+PylOUlYGsPgmpbVZW5
                FYfMSxdoFQuvCVL7Y7X2tEtrPSSruncEUkpyzjY0ZTKREwYFHQ6mPnafBtyPCv2GrqTMXsNorFN3pYTD
                mkchmr8RszLZO09VivXrqmSRjaY17LeTLbbHVW2eQp2n8XbtW8czH0slUK9KitqC1zlmlzEqQpsg6uyQ
                MUq+bIIIZIZMuxamykw1xVkrxlDj4W5TKPRxoqr8ZEOhOtO2LkVltZwmUAs7uvtVZgMBXzjitV7lqk27
                bvBOwpmhjO804RiUqEUUzbbXula+7qcnZ0/EWSsKvqfVC9jclXWSlXaZmxXFKTI5r2FNUxb6/MbweaYs
                NbFmVPF46uy3fyFlNOnWVG7H2bDIUpY+8jKI3nYY8SmIiZ7ad0zxw08Ri69aw0fQbcmObdaHSJ5bLjHm
                uJ6wEjE7z1+UvGYclN1fmknNESgWDiaW5KPLvUUEJnzIJWPQyOW54MYyGKqtS2tRrzYy2f1DkICGWGkx
                1m3ZOSbYsvPingGON9l5zspIGwthCeysXjwW/J2AWzN5iQ2sZK5A9es7kqkiZIKVSJ4FBuZcdlr3N7YP
                8ycf/Tuo/JpX83MH/RlXyHbrctmocsTKOn6zIghh8BE2Mi4J9KtjlmDCHrDbDKtctgcRgb7DbOSy2Vuc
                TGMInWrt2231zPnG1zT2j2zMRHamuKdWxqZ9cGZrNEsGWStMGCdUqPKJNGPrFPJUtPLF8B3hwk5hT2s4
                zN0K82iSY4/MAlfxli7G08p9aztDeAGcJNqyfd7IRy2hMTvGSxFyIG3ir9zHWhjwizRsMrPiN4idoYot
                t4j7u1bAaeqd4tO897j3CpQqiUQ27edtMJrK4o36ExpyCULa9i1kGExrGWrL2Rby2RdvBX78rFZNBPEQ
                Vq4CMKr1w34FDEtY5xMcfyBdIDLQBiwZwxxitsrJgCXjAsJKiMY6FKwmfRj9qyxV18ujqJa9R1YiNhE7
                5tDIhH0f65ouNgI24FOVG220z2p4w2TGO1Yk8NZDi2DvkQVnFP4fpNi0E01+wL7vb5Su5qyLb7VlOMwd
                dgTkskzwHgXP4ioJ/j7zY5KY3gea+VoZrb4Sc+UTe1Hma+KpKHfkUcTg68tRToxPoVFtyjFT9N767Hvk
                3mbC7WdF4C1I6Xw1mVZBqT83O5WsezCIxn5zHUWxwVV/in2AK7PNiKcpf8JGXrC6wVh+P0yDg4hrhX+a
                v5Ze+8S438ePrsjYkd3u+POGQ7bT1ifGO1TUWCrDWwOpyfzKiR4a+NzKdmWEpGOiq11R96rJHzVsC4tU
                AhaViLFkQGBQYGEyJAQzuJCUdRIZ6xMdYnrHavkfmLWp8Vx4XJDZbKVPyNZa5r3rBgDGCq5VbXtWTUkv
                n+9rrrKVwPbOZ/XF7Kas1Rka1lrMmdqxi6eOYCDisvD4yk+BRUpRADXr335Idg+d4+I9+18I8H6Qyi5/
                i5PCu/61do+C3REvt6hy/Lq5tuOgnWq6bcRC8JTFPEychfA4m1I+cimYqHdlkprDbyeocRh8o1fMDEyh
                96FTI7im5fQYrU2J6M7qm8sfoNb2yWGyC+VexV63jri4nigLNJ513iJfSGGLLhLwIdijpPbQBDO0zrHT
                qun1X5Wqk4/SLJifd5bPwb6btyqrXiA1XdQWx2XlEF8SLYM9K6RmJyfDO7nF3E+EEWlvtZjPpM9LafNU
                ORuQDl8myOYnHywdp7shW1i/yyhnAdVHQbUmCaWPqVqNOuELr1KaF1qyVj4ApKRBaxj2CMR2cOZwtdOQ
                MZ5Wcxq1Usug58D7ysNrURO/zN4LKOpTy4KeKIx2RnvmNuQx2GzKlkCL6ALYgMZ4u73q/EHeqvGfL41s
                A2JathUsLhqbr+TyLxr1KqB3NjC9cz6K1LGCY5zJFSEgbWmCwIo09iL9iLd7FYPE465aHfhs2qNBFZ7x
                4vOmGtWRxJedO+89ey8RhGjGrM+pncz80pxGPieU7KkE7/PGfEjHQccEvFz544pkltTG5A3txyudm9RW
                JMye6mhoS1ZPmePnZK25NUncfNGLDbEcRK7V6VKumpTqJXXrVq6xUhCFDALUpYRAgsBiBERiIiI8lzUt
                CqA6n0zUZdW9QRDcjia0S29jnzHV0qTzLdHeDYD1lXVwjbb5LfweZB8lSyYWMngIMt+75GuHNv01bz0V
                cqAdzgjzQdTaQjx2mFMztG87bzt1nbw3n17ert8H7NvPh+pQ4vXwkvBlMfrGPJoTfr/6P1Y/REnEfqjp
                Hu8mqfe7Ab+//wBIsXP/AFx5NQfnhZ/oXCeTXb0TItjS+XXBD6QxYqMrmUT6pEGlMTHWJ69tPaqsVCvV
                8VbYVmsHDzTr2qlii808UwE2EptG+uJkIE5YCRgMyUDltM5Wtk6k7Q2FTI2ajJjfkXajIGxUd9h6w448
                9fGuYKe1vBZ+gnI426HC1Do6iUeg9DI2ZXspnz02EkDVF1Ao7M09QsndBuWyOTO21Yrc3vTYXVF0B5pN
                r49FOs1g8Itao2gtQnCx101MyJlgbFaZjx5V0103x90peyJ909sDqm3UO7Ux7bK7aVcPPitfpWMe91bi
                kRl6F2ScsCIBbIcmWLhnMEMvprK1crSPaCJBTDa7Jjfk26zICxUfEdeTZUtm2xREjMTPa1gdQ0VX8dbH
                qB9GIbETy7VV0efWtJmZlT1zBD1GdwIxJWmadkr0BfyV1t1ihS2yVu0ZIJoDMjzU0Bp1WEM8JlXkxEBK
                AGsrKVV3UVbab6qz9zrTbr8XdmvR+Ks93MuchdgWKXZBNoQ7xXQ1esfzV1D/AERb8msY9XxJQn9MXi2/
                65/X5bHwcaftSvG0CgdT2UltN++OxxiYMZ/qSj5s3B/dr3zBxEU55tbFWuYGEx6SymdaqZA5pJMACmpn
                0HXrDF14KJ41omxYXvKNuycXhcdTxmPrhwKqUkLQmI22mZEIjjMvFjWcTGluTCIpmex/CBgcfXxl/HWq
                ys8qkkK9fIU7zwqruMQqIXF5F11cCcICVhL2TYIyQnbsrPZ4HUNGVndTjdVnPNUWx06E+kuoJRIXMhHh
                PFWqTNjmsqVtF4nIFpnSx1VqzmSq/OZK1j1jyU6fxQGWyVuWG+TvWZmIr8iopV2LF4Eadv6ev5WzXyrb
                lO0jLNq2GA+qtDVuS2rUpxwtE2Q1ZqLhMRICgS4B7aZzWXtLp47GY7NPuWmz5ikVc7lg/KItggFrCCY1
                kitYkZCM3MzV/wBxNG4gzoY63fgzq4+tuJ8lFdU/h+auRwW74rYK1RKUutrSFETx2T+N05/DZCxNHvwU
                Sxzqt/lG8K9irNq6PA9KnlXcu0fFyGixaZ5fM7JbklEjJaltlnXV2RsytUahKMchg/ROaqYtmBfOLK3K
                WRBrkYfastBFaslliw9pQC0oSEsa1hT0EFgJGRT0gYmezWKY1WmMW1qNP4+dwiVb8J5O0v13b23HPF/U
                qOXVHqDWOua01NTXexGKtRRxGOshB1L+TAAdYs21H5titRW1IrScGh9lp83fuhLZNB9Oq6gS+SVJtdTK
                hJ225U1jCUyvbpwSHDt6u2PyWARFTB6nVbcugv8AE4/I0TT35FaP3Oo0LVaxXTvsoisJTA11KAO1DXut
                Etr5FfBb0/giklspzI7ryWUgZgosyM71seX4iJ5lwefsivrE0zIkxWIqlMfvVvP4qs+PuNLTXP5fbHah
                ydZlnHSi1jr3JjisVq90RGbdcJmIYaDECNe8SxHOWHnkPZOX09lKmWxz/RsVWcXCXjKnrKBdWeG8cyvY
                Wp6/prHyWMDqKmNqo6JJLY2G3Qs8Mwu7QftMosq36F1BgySXg1DGKPFaVrP73GOizLbnK5JW32rb7bXm
                viZwzMu4IHjPgAACCmBj5Cs/p9QfstwtclAjcQ+O8bBE3uEmUwI267DY2gZzAFLHVmzENU1DLSq7+VJ9
                y1Fp65DKve1JZMEpq2Dx1MhTKWTVeS+OuyWLMDQ16WBktN5JdiYAZuY5sirKY1k+Kr1Pik17FuIvDmVX
                7TNd7R6+RmW1JlqmKpBBcJWWfO2DGN+TUrjxWLliY8EVltbPjw7bz2j4SrdKxjtDaPTfx2iKlodjvZK8
                Hdb2UMdyBjRrcyHkEkms3uVVDGup22z21z/DM/zav5Ncfwlhv5re8mo9QyyWVrOQajGdZ4V4mnPdccIx
                4DxVVLc2B2gntazxOe13KtDijAafuPrl9S7fdXx4T7t6TshHt/l8mX1Lk2CFXFU2WOGZ2Kw/bhq01e11
                yySqyo+uyN9h3mCRRHuOFqNEszmzX+D0gPzu71w3jvN5o78isE7BGzXktPnTkFF0IHr4o9k8JDP8ofK5
                q43bTKXR7ZVMbOiPujhZ9y+ybS/SScFt9YfAwn3GEyP6eyrCS4ltGCGf+6fYQzuJR6iiY8t8vang/wCU
                MV//AFeVcfYD/sx8q7HsBZf5Dll/3eXSNM4kTqaYwNYhnxEkYqqoon3xI7dtN6IrN4Ys8zUOVCJ2k1KN
                lLFLLb0lE6Mi0wLpzK9c/EImK9RMbutPVXVHtY5grCP0kUdsbiKY8NTF0KeOrD4bIpV11lR0+wsfJqGl
                gFsy7zuYzB0UUhlzH3KWMpU7ddcR4ynILtrMvQHlkclwRJdl5vOCi/rO0nz2+a2vglMHz6WOLbzrJDMh
                dvj1ZHFXrbVuYdrya9/OfK/zgu2ndRWEssJwmXpZNldUjDHjTcL+SBF5okzg4IIug77zvt2Z8NfwjL52
                SyTIs6Tw7Rnu2OpD/UWQhDN5BaVbDhlH1gd8syW2bCHh2y2B05SPI5R4YOkKUbec8cLSa1jmTstSqySj
                vL2EKkLSUsIYCe0qEl3tRZIFlm8tw+kQ9RoUeKINWOrFM8PFsy03ey+B+ZRX7Uvg4xj+FIrRldS8E/jW
                HMMxWNZ9lYRGScE7iZNx5xMSqYnTGCshzKLb3fMiE+gePxiWZCyk/YNoK3dN/a+PX2iIjaI6REeER7I8
                jPzhw/8A4ryZz89sh/QWnO1jH1W8u9qq2GDGRnYxx8gdnKHH2GV1RQZ9m/4euO2jKwBwncxK806fpMZm
                zPKQR+2RVaUofXC1gPq8ml9HVZh+SpHYzGQgPOKqNtYVsfXnbf56yPPeSp2MVRVZtIvCe1PWuvKcFkvM
                s4TTtkIIcf4ErIZVRbxN/wADq0ijaj0bYjvvCul5E/mvif51k/IjWWqK7q3wcaU4cfp3Ct6Dl3V+XzYZ
                G/CQOYtbsy8d4PZGISxgoc1ArWIgsBgAAIgQABjYREY2gRGI2iI6RHSO2hMXUUdjIljchI10ATbLu/X6
                1empawiTYTH1ngoBiSI5mBjeey9U6mUDdYW0TFerPAxWnazh2NKyjiE8o5c8FuyEyKVkVOvMhNhtn5Nq
                9bZCatKu63ZcXoqr11k5zC9wLAin3R2zWp7sn/ujbOaiCnfueOV81j6Y/Rju9UVicjtzHcx0+ewpnUes
                rK4IsUlGFxZFG8BZviT8i4PqtVVXXREx+5Xnj6+vkwf5k4/+ndR+TSv5uYP+jKvky9cG8WP0ztp6kET5
                sNpzM5Q+H0eYWTOyqTjqSa9cZnzI20opwcaMfYtZlnr2PFU326ZfoyAVP/8Avkt5LIWF1aNCs63bstnh
                WitXWTXNOfqgAyU+v2de2fPTNKVrzWdymasWH7jVw+Ov5Fz4sX2DvtIA2BhQcTrL9wQBTvsvD4VXMsM4
                GZXLOAYu5W2MfjXlG/AhfEQ1KglKqq5nbjabnN/aTdYatCVxxMa4xUoB9pmcwIx75nsQXtcaf4wnY10r
                kZRgzHiJLxcXDEo9YzG8euO0wOqHu29asDqDafuluMX92/h+jr2/r7f/AOYsv/svb+vt/wD5iy/+y9v6
                +3/+Ysv/ALL20vb0tkX2sliWZGtbB2Nu0+KjcGs1RcyyhYnyH1igQguL8JMttt9u2GzK+KWYjK4/JhA9
                CkqFtVoYGenWZV07FOO0dnLTPojdvUKAT+UaIyUj+hZdm18FXxulKrImOZUCcjlIGfGO/XR7uPTwYjHV
                3B6QMgtph2Qyt63kr9kuN9y9YbatOLw3Y95Gw9o6RuXSNojp20djiDgczErylqJjz4s5kzyrAZ9tPe4R
                7oVA+Ax2z2UqNlOSuLDDYpgzwmu7k5lMvWXqbUqRauK8fnK4+rfyaDSoYET05j7kxH75kV/GDi+8nWTI
                vfM+XUo8vjtYVIaipTtvKmYmZbbKPysWV9XT98393k1ZgOKeVfwlbLwEz0huKvBTmRj1EYZfztvShY7+
                hG17/E7P+pPyZbPVUd4yTdOZDF4gJHiUGSvWKPIfYj6SawLbYle0881BX8yGywGa71gDLWutQ823M3vn
                LGHrXplrIPj3mMtkOOWZBpbNQB9xjl/hnP7a7gY2j4/tF+k4Ayn9JFM9vg+/PbS39OUfJqPUx8MliMXY
                sVwP0G3jiEY5B/ZffbXTPr2Pp2sXLbTfatvbZsvZPEx1h7Ca5rC+kbGERlPrKZntpRYBAuylQ87aP1ub
                lmFZSZe8aM1ER9hI79fLewdYa3xwp9a/hLFkpWuveS2BZxtEDIVPpMtV2bCX4yD4CIA7c7deV1PbXw5H
                OGqB5YTtM0cYBblVoxMRxzvz7hjDbEwIor15mZ2iOszPSIiPGZntqDURsI61m6xGLGZ6JxNSe745Yx4D
                vXAXNgdoKw1zPSOZ7a+yEjEuANOU1F6xW2cy54/cwk1p/wCL8pAYiYGMiYFEEJCUbEJDPSRmOkxPSY7a
                o08IyKcXmrqKkF6XcCbLseU+86LK5/xu2lc0spH4uz+LsM2nbirxbUNpUz9V1YmqP7Jz5NAf41qP/VYX
                yaF/gCt/2meTVH+HwH/zDi/JqD88LP8AQuE8mpMAO0HmcHlMaoi6QDrlJyEMmfVy3GB7/Z7OrWVGixXa
                xD0sGRYpyTlbVMGeomsxkSGesTEx2DI4PKX8ReX6NrH2nVXcO+8gRpIeNRbeeo+JZx0MSjp2RU1tjEah
                pRsB5PHivH5kY9bDTEjjLpRHgsV46SmZk7E9ufprMosvEOOxi3/g2WqR0ie8UGTzuCCnh7wnnVDLot5+
                TVOATETYyuDyNWpv4d9Ksc0uLf6MWhTJe7fw7GpoEtqzJbFmMiYGE8JgYztIkJRMEM9YmNp7BkcBlb+I
                vB0izj7TazCHffls5ZRDVF9NLYNRx0MJjsmprnFJzlSNgPK4oV0cuMetrakyONul9hXxX7ZMp8e86YzN
                a6YBB2Mec93ylPwj8Kx7eGwsYKeCHiJ1mF+JeyOvl1j+auof6It+TWP8CUf5/Pk1JqaeHjxOLsPqifoM
                vnEV8co/suvurqL3H2dastN9iy1j3uYUkxrnHLGtYU9SNhlJEU9ZmZntqPPyG1jLZ8cfBeuamIpJYraf
                ZNnJ24mPXIR7I8mQw7jAsjql1XH4+tv5/Lq3Kt+7bkfHk11IFXH9GzarR9LtX1RqlTamj1M461aeJVnU
                bFl1WqY2YnFiQ8Nm3HCdjrXpzxc2zWRTp101KlVS69atXWCUV0KGAWlKlwILWsIgQAYgRiNojyaL/hjJ
                /wAyR5NG/BJiu8YvSOlxs5LWmVH93ZazeSvVlxPUDkUPBWNqHHzl/vF16zRQA1UMFhKi6WMxqBRWQv2R
                1NjC9Jr3HJNsPPdjnGbDmSKZ7LUzh5lrU2JTX38eYCMhYKR+5CWxM+wtvXHajrvWtSRxgEu3p7CWA/rm
                UeenJ5BReGOGdmU6pxE35gXtjuPAF7t8T1W8u5q28OMLhnY4xdce9ZORn2M2q0Wj9JN1keTRNEA4Cbgq
                mUfH0u85kfjaxx+0hZclfXwEBHwGPJpfSFLaxkcUNvI5CF+eSGZQaqqFPYd557FIOwavS5baZRHznapr
                PXNQTzXmWMNgbAiYYjwJV7IgW4llfAq9afNxvRjN7/CNHtq/B1Vy23ZxLH00jG5PuY1qsnUQEbT57rFN
                ag+0ceHj5IyGnczkMPb6cTaNliYaIzvC7Conk2k7+KbANVPrCeyqmvcOrJ1toAsxhACrkR9rLGPawaNo
                p9fdmY2Bj0VHPSe/6YzNXJAIjNiuJcu9TkvALtFvBarTvvAkxcLZtMpNg+d8qW6hwwfGPBwBmaBdxywR
                EcI8VlUcNsVx0Wq+q2lf0Fx2HI6Q+EXK4awkpKsbqG91Ps4cnjMhjTCdukyFSOL2R4du7H8ODhRtw8yM
                c11rb/DsMLHF9rvPF7+wZjXmptQ/CDkh4Zn40sOr02bTxRDg7zcyDQGfBU5SETG4sSYzw9kUqNZFOnVU
                CK1WsoEV66VxwgpKVwK1rCOgiIxEeTXP8Mz/ADav5Ncfwlhv5re7ayyaykW0dL56yko8YerGWSRt7Pne
                Dr6vJrUf3ScTipH28A3LMH/KS/5O1nIZG0ilRppOxat2WCmvXSuOI2NYcwICMeuZ/l7DjMPNrDfBTpq7
                PPy5rITytsY4ZepTYEW32pKRoVjGYxdR5W7sc60NRlPA4CkuhjaK+BSlx5xl+6WLDPTfZeXnveyZNhzv
                M+HbVtCY2Ktl7KeH2d3vXklH6OkfLK3VCSpHO5DHjWKfVP8Acpn0C+j6BfRkuS/cqTS3L1yg5/dQj1x+
                +B6/SHzo2IWqMWLOOITGdxKPbEx5Lv8A/T/zpHlVPtWE/rGPlXv8GMfraEf9/k09gB3j45zWMxklH7mF
                y4pDG/cpZkyfZAz2gRiBEYgRGOkREdIiI9kR21AmSkgxdTC49PuD4pq3mDHuizef+nee2myZ+LHP4eT3
                +pGRryX8nkD4Ofg9E8v8IGc3pF3CeYeAU8POYRDPAvJkmSYrmGAY1EFkbhKAEQ7WTrnJsv05i7eKKwE8
                5cXrOWWg7FdpjBfOKx9wAbsJmhx7xHGUfI17+c+V/nBdtF43I1wt0L2pcPXt1W9VWK7LqYYlkdOJbB80
                x8CGZGek9hABgRGIERGIgRGI2gRiOkREdIiOkR5M9qJkBe1TqjIWr+XyxjuSlWHy1GIx8lHGjGUV8pIR
                0ZbJIWLPWEqr+TUmomHJ/G2Yu2kcX0KcuIKKfya9IEID7K47HJ+kGmcuSvczn48Z2/4omfo38rPzhw//
                AIryZz89sh/QWnO2i8VxTy6uLymQ4fVx37detxT7ZiMdMR7Ny29KfJoYl+hOj9MyG31ZwtLh/k7QtMLy
                ercmPKwOBCSY1jWlygu3FK+eCitnQRjhbedHdK0xPOdXL4S/hL4sjrPJvLJ1cfbgWRh3OnjG5cD0Jygx
                tFasMQjDrgAAe9AHc/Kn818T/Osn5MNjMZVVSoU8dUVWrJHhWsOUJT7yMzkmNYUyxrSNrCIzIp7W9f5a
                AyOYCpWxenwaHEjA42sByZVoP0shct2Lj2Wthmul8VK8R+EPtfK1UaikH5JVTCq26bjk7ia9wZ9xY+bk
                e/w8J8mVIfTLWOS5s+vccRgYGPugNpj759vlwf5k4/8Ap3Ufk0r+bmD/AKMq9iMp2EBkyn2CMbzP6u2Q
                yTpmXZC7autmfGW23m85n3yRzv2TBeJYDMQv8vauXT/ixP8AR2JjCEFgMmZnMCAAMbkRFO0CIxG8zPSI
                6z2n4Mvg5PbSNCwluqtVefNCxymbjEGPDDqCWhJU64lx5i6oXK4KNXvcowOBr8IRsy9ebAzdydzh2O3c
                ZERxHPgtcbKrq2UkRGOv7RayuXu1sdjqS5bauW2ilCQj6xl6ynYQCNzYcitYkZQMvxvwc0QUkdw/ZJlk
                cbmermY7FM+bSPrW7Jc4jGdmY9JR27+2prHV3EUyNjuuRuY9M/VTIL+LaYexaeSuOuw9t40Pl/090H+Q
                rMT2/wB4+W/yqX+19v8AePlv8ql/tfb/AHj5b/Kpf7X2/wB4+W/yqX+19oyuo9NXsTj5sLqxasTWlfeH
                CZLV809hcRCpkx5u3mz18tPI3buCwdG7XRaVz7Trt2UWVi5RxWpING8rOJkGXlEPhMb77A3UeczGoWDt
                xIrwrC0D9sGCit3pj1RK8gmf+5Wgseg04rN5vEzh442s5WHzL1b8LWkbjXjZm5VlrTY0opEZmZblIKWM
                AtYiAAMbCABHCIjHqgYiIiPZ20jSifmrGet2jj1SdPHkpc/oG839c+TQjRneB07RrfxqYzTOP0GiY8uS
                xrNuDIULlE9/Dht12ILf3bM7TE+MdJ/R2vmO/CrSOTJk+rhLJYVcRP3mQ7fd2vf4nZ/1J+THjlExZViK
                F3OV0HESo71I6y6hNGfSGu2xFoB8OchXFuHEM+TXX8Ov/wBWrt8H357aW/pyj5AqgUx8b6lxVBsR9JSU
                38p190OxyZ+/byfB+S9uH9hmmg6fXVh6a2fqYJRPv+TrG6qdm09LagtLmPGGV8TbaEx9xBHk+ECnM+ex
                emrIR9lJZxTZ/W9PyMhYj/71w+Fvl+UFX4s/6sdHaqpW8tbZQte3WeM2CIbR7eKY8mgP8a1H/qsL5NC/
                wBW/7TPJqj/D4D/5hxfk1B+eFn+hcJ5bmsND8hWbs8T8tgmkKEZWxt51yg8tlV8g7/1hT5XWts/COch8
                t7y/G5jH3MZkKxcL6d6uytYXPq4lNES4SjzgPbhMdiCZGYnyIyGMuWcfeqshta5TeytZQyPA1OUQsCfV
                0nrG8T0nsrRmszV8fGopw+ZAAQOY5ASxtO4oIFK8iKhJqWpFabYAayWuyITb7XtYaDhMZO3J2svp5hCg
                L9ovObdxbi4Uqt2C3ZZq2CWl7ZN63g0pU1+OytG3jb9YuCxTvV21bKS8dmJcIMHeOsbx5wzBRvExPkr5
                LE3rWNyFU+ZXuUnsr2El7QaohKN46FG/CQzIlEjMx2HSGr5SOpYQbMZk1ACF5xdcJY9D0BwqTklKErHz
                AhXsoB0wpDE7WO2sfzV1D/RFvyax/gSj/P58ndhKYjL6kxGPZEfSBSr2V2n3czGrL74jyJgfEc/mIZ+X
                vWLr/wAWQfo7Wc/qC2KKyYka9cZGbeRt8MyqjRTMxLrDtvctQQb3mpC2MH/7UfhJrnS0vEhGmtMzJwN2
                gk5OsueLhMcTxTLXv4AZmXsaxYppkPEtCFrSlKwUlKgFalKWMAta1hECCwGIEAGIERiIiNvLov8AhjJ/
                zJHk07bq1VJs5ZuXuZJ4D87csJzWQoqY4/EuVUqoQuPREF9I3IpntpyzqDht4XTbLOQThSHir5LLv5S6
                78lBeaypjkrZyqsbjbbbOLP4OmUWoiIiIiNoiOkREeERHs8mkcVxTwU8BayAj6oLJ5E6xl95RiQj+LHk
                0oS/xZaawUht9ScXVkf5OwUqABltaZeBTgsEric3jeXKVeuITu7uwt81CI4XZGxHdq+0RYfXL4RPhEmc
                nrjJuZkVVbXC4cK6yUsKy/xBuYLi6cPzONj5pES4YYry39WfB6pbZtmy5k9L7io+8HMnYsYUy2UQuKZa
                eNYS5A+OKJnBqpqdSyFWzRuVjlVipbQytZQyPFbkOEGLOPWJjE+RGVweRt4vI1i4k26TiS0faEyM7MUf
                g1LIJTR3BgEMzHZmm9SwhGrKdebCbCBhNfO1FbQ5oJjzEZCvvB2a6tlNVJWKy1rW5Sf2rXP8Mz/Nq/k1
                x/CWG/mt7tr1St5P9iedZER4zCce9xDHtmRXMRHr8PJcfnbysficlp3JVX2nzspLqkpyqSnbciYYUX1k
                KCCY99haFAbWAPYq6O+6a+CDDXY57PxV3PPTPFAzPzin3p6GKfnKWHWYtd3m7yRdSwmEpJx+Mx6oTWqo
                jzRHxIjKdza5pyTHvaRtc0ja0yMpKe3wh0ZjhhuczFwB+zdvRkUxHu5Nvp7vlzExvE9JifCY9k9pbSPu
                jJ6yvbirzPuj0lfxeIfqrjtspEW60z56QaJrL7QRMi1Z/ahe0/TEtojtxSixWOPTVYUS5ifslMcDI94F
                P2oGena9H9zAv8hqz/8Ap8tE/rVK8z9/KHf+X5TR/fmoX+pkN/6leTC3TXxIxQX7e+3SHDjrUJL/AIth
                r/Jkwnx28msoZE/OOxTwn6y3YLFmMx7Yjfg+8Zj1dluUXCxLAasvqmsoIS/QURPbB6Q+CVBZXWWqMdRf
                Yu1xFidPDfqBYckSKZVGSqCyZuOf+C4gQKbBHZE119RaqvuHMauHC5LL57PWJJskdes2+yjRN3z0VSev
                djT/AArJWNnWNvwevX1TqN+8vzmfCpzD9NysVVhvN39cFaytoZ+2st/V8jXv5z5X+cF20D+dmE/nyfk6
                gshMidfCZV4THjBJovYMx74kfJp7O3j5eM5zsflD2mYVRySDqHYKI6yFRjFXDgdyka8wIlMxEqsV2reh
                6walyTFimqYMGti2BMgazGYIDGZEhmJiduzcpn8pSxNBPpWbrwSEztvC1RPnvcX7mhIscyfNWBT07fsX
                07U5Olq9tVor1tUjkMrarcwVtBUztSojzJlaiGbbvNN0o86tHbOfntkP6C0520tZnflN0ySAn1cyvlLj
                G/pgbSt/vjyaOxeJT8ea+KnOnsfg1Abu7Mo2CoULV8EzziU2tFWalRP4RfbPJDlgLXrP4R/hJfOa+EDK
                F3pa7JC5OAhobCICMcn4xWr5mOTHdcaqIq0BjglxfIT+a+J/nWT8lD/E6v8AqA/acYET0saxxij94jic
                8/af46Qn748mf0PdsAixknrzeFFhQMWrC68VsnWDimOKx3dFN6lDuTEptH4J8k2NQZIIuEuTp4apIvy9
                6fo8mrBRylTPSbdokVRnpLuPhGS1DfqV6AJprxmOpV+I+7Y5Fi1ZSD3l1s2Zbcebn8ChKS2WlaxEY7aV
                /NzB/wBGVe1pIdDdXcoZ9hMWQx/LPYgKJEhmRIZ6SJRO0xMeqYnx7aVy15662Pm43HXnuIVoTXytR+P5
                72FMCpFZthVlrCmBWCZMvNie1jQfweG7FaBpsEdUaqYtgfGCOOd1j6Jd2fwz3HGRK7GR2516a9MWiqtp
                /T1Xu9RHnucex279ooiG3bzoEedZbwxvOwrWEAlC1IWtY/tDrVloIr1lMfYe0oBSUpCWNaw56CCwGTMp
                6CMTM9q2nNNItuwo3irabwqvm+9nEEJ5nJbzAC01Qx0nYmE4ujxDuM97e+vkNS16uqdS7Cxh21c7D49n
                jy8fQcPLeSy/9eurNpEENQmlvIdhABgQGIERGIERGI2gRiOkREdIiOkR8qgM/u2r8WuPfMY3NN/6lTPl
                xFU44TrYyhXKPYSaqlzH6JHyaJ1zPLh2l62arPEvSsjcqkvG/wD7F9i64PYb+L6Pk07kwHijH6khDdvo
                LyGOt+fP2ebUUvf6zAj1+ShT4oJmByuWxRx9KIZY+Nlb+vbl5OAGfYG30fLJFMRERvMz0iIjxmZ9UR2s
                MCNgY9phHsEjKRj9U9tU6weuRC42tgccUxMSQVfw3JHG/pLJraCxKOnMrvDxGdr3+J2f9Sfkb+a+W/nO
                N8uuv4df/q1dvg+/PbS39OUfJgWx6IaxpiX/ABmFzsxP/R7fp8mHrcyCt6ddcwdwd/OGFOK1RnaevBOP
                tVgEuoyamRE7jIj8jUWKCNzyeCy2PCPaV2hYrDH6ZZ22npMdrmLMogM7p66hQ7+nbovrX17e3hqJv9PZ
                1+j8imIbcSdJYpbf8JOQzDo39k8pq/0bT6+2lsfC+OtTyCs1kZ2ngGjhyG8yGbeA2WqTSif3y0Ebxvv5
                NAf41qP/AFWF8mhf4Arf9pnkraKUwGZXUNqrcsIifOq4jHWO8DYZEejNnIIQqvxbcwU25j8V5NQfnhZ/
                oXCeRGSyJcukeTxWMc+SgRrzl76Mah7JnpCV2bSZeUzELTxsmfM8nc9T4WrkOEJCvc4eTkqW/XenkFcN
                lEcXnSqGchsxHOUwfN7OvaEyY56qO5xh8nKaeXAfqIt/N4+8X+EjGz9EAaXi/GZjH3MZkKxcL6d6uytY
                XPq4lNES4SjzgPbhMZggmRmJ7YvNUikLeJyFPI1iidvnqbwsB19kkGxe0ZmJ6dsTkLpcFHK5TF4uLBTA
                ihmYnk0WM36QsrR10smSGFi2WzOy5ie3dtTYatdYISFfIAPIylP1x3TIK2sLGC8+UyR1mF+OSyOnZ17Q
                +RHUVMdzjFX5TSzSw+qp/mY/ITEdZn/c9hdAVXYXZ+OytG3jb9YuCxTvV21bKS8dmJcIMHeNpjePOGYK
                N4mJ7YPPVjIHYjK0cgMjMxvFWytprnbxBqxJbB8DAyCd4mfJrH81dQ/0Rb8msf4Eo/z+fJh3BvI19YUC
                b7gZiM4qDn/jCAPvPyavrZ95S+jmEZPE41PD33LNylIapVqkFO0AhmKBlt7NlVQsQc8RmCjrfCb8K65V
                gl/OaS0b54VCqyUMU+zXPzvi5mwM+d/CM0cC2xwYwK6LIgAwIDECIjEQIjEbQIxHSIiOkRHSI+Rov+GM
                n/MkeTRn+Dzf/wAy5n5On7M78p2jqqQn1cyvms2bIj7hsqmfyvu8miMRgEfHvwg2cUjT9LDKWdjuTsay
                cPVtZBSZ5jCsLQltKkqefdlgyXKXufZnwgfCFYnOfCHlpKyR2DGwrBQ8NuUnaOUWQhXzDHJju1JMdxxs
                CgTdY8uBXeLlhn86nT6HEUCCrtqhkbdSD38e8vojSVEeL7SvVv5JVqPDpbbgOBGXq8NXMVYj0eTeAZM1
                jvMxXsxYqb9SQU9nXtG3A1TQHc/i9sLpZxQeOwhJdyyHAPiSW1rDC2FNEp7Po5CrZo3axyqzUtpZWsoZ
                HityHCDFnHrExie2kMug5AqufxsN4Z246lmyFW8np6n0nvSXuOf2vXP8Mz/Nq/k1x/CWG/mt7tZpWQ5l
                e5XdVsLnwNNhZKaE/lARR+ntm9N3omLGHyFinJTHDz0gW9W0MfvdusSbSvatoz2iZiCiJieGd9i908Mi
                W0+E8JRPsmJ7Y2npkKOFs4ympFvSi5BTsYYR84VdUzx26LWcTV3x45dx725C5Llj5Mndqku58YUcWxyK
                bVNYFv4sDGd2bAFPJscykppqZsyBaLJHzx3GXwItnqQB1EN/oQX0+Hwk+nEW5RAxMDH7TbTHWW1nLj8o
                llA/y7eWt7VcxJfxGFw/9HIfKp1Inxk7Bx93za5/Tu39XYQCJIzKBEY8SIp2iI98z2zFvh4poYhddp+r
                vWUtA0pifbC8eahnx5fkwOs0LnumVpfEt4xjzV5HHk19UmF9a3RaQLj6uNZ+ntk8Fn0UcTlsy5c4/U9m
                eEXq2AfiS3ZaXBRXzQ7zWOOVXtNMl2j5yqfMfjkNHvOq7tTFo4CjimksoyN5w7TsSiTWXUOY36Xh9u8a
                TwzA5docWF68MxsY3sqZ5K0tnrkkNtTW3n6KRiOkR2PJ6jy9LEUg3+duOgCaUdeXWTG77bvYistri+iE
                9rGaxeMfjtGqk6+Mv5NcqyOpLIlINt1au8xSw9WYIAayWWb9mdtqQ03psdte/nPlf5wXbQP52YT+fJ+T
                kcfvA9+oW6fFPgPeq7E7z7o49+zUOGQalhqaBeIMWUgYz7xKJifJGOwerc7jqA78uki+7uqeKdy5CGSa
                6/FM7lyRXxT1nr2pUStZnVOdvt7vTG5csX7EyXWYhlppwiusRljTIl10JAmMkFLmYZfuSnJavvZnDBkM
                kMTKaKj55ljcXx7SKIIY59qRF10xgihSYWhfbOfntkP6C052xmpqq+Y7St84t8MdYxWY5FdzenWeTeRj
                +ngC2uZMjAlv2Xf1Vj0MrW6806maYsnN07aYX9Wgrzo5L1yVe09aitoUXEgoVNpT03cfar3qdkIbXt1H
                LsV3rL0TU5REtgz6iEpjyOv5O7Ux1GuPG+5dsKq1kj9ZjnECwj7y7OoaIrNt6exDP93dX20sTj2NjaV4
                jBIZy3Xrr/TfbdCa1KrHOhdqbNTj7J/NfE/zrJ+Sh/idX/UB+0sshG44fUOHyLengtkW8Tv7vnMouN/f
                5FvQ1iHpMWpckyW1TAmCBi2BMGBgUQQmMwQzETE79u4zrvUfJ4ODiG+Y2uHbbreHa9Je05scU+uezAU5
                40ltBuf1Jeltkawn1242Hx3ci8YnkVuZxF+McxSBJsaa09p6p3akjRVBjTKeOzetnm9QC+9ddtHOtP5Y
                cRbCAAC0JBVdSlB20r+bmD/oyr5NS42VyFO5dZmcVO2wHjssw7ShV7RqtJ9CZ/fKh/f5MbpOgqhp/UWM
                XwXcTxQosy/aIZmajGlLL7bkCJ21yZ2ajIlXBFMKpl5N8/lQ7+cR3XCUdruauEXoCmisuJcM8AfbKtVk
                vN5/FMR2DK53HDhXX/n6uE4ubaxlEo/B15N/SDyjh+etqUC00pIKUQ1td1qx8mcVVZy7eq768SUjOxxj
                FAVzJEPtFsLr0Wx603TjtkNeWkiWQzVh+MxbCHea+JosgLRqn6JXciDFO8fMx6dpjjZE/L0pj9+tnUbr
                kR7qOMsJmf0fGMfr8mnMKEbzls5isf8Axbd5CCmfsiJyRT4QMTM/J1FpsIHvdylzsbJTwwOUpMC7Q3P9
                zBtlAIafqS1njHTs2vYUaXoYaXpaMg1TlFIMUwC2IDA4kTGYiRKJie2Z0fddCl6kQm3i+YWwzlMZDuZW
                D1cy5RcbOvpTjwWPnmIl5M1blwjlMtWdhcInf51l6+k1E8B+rQrk26Zz5m6lqmeNyxLH6bwieZbus+ca
                UTyKNQJjvN+2Ufi61YPOKfSMuBCoN7VAWJ0zihmKWJqDXAy25j2zMss23bdOdbsm2y7bzeY0oGIHaO17
                /E7P+pPyN/NfLfznG+XXX8Ov/wBWrt8H357aW/pyj5NQSkON2GZRzgDt+50bAjcP3cvHvttmfYEx69/I
                dlim3dP5YVV87QVMc2QURTXv1OLYZuUeY3gWZCuwlrkEayNb0pzOnMnWylB8R87XPz0ntvKLSC2dVshv
                59ewC2j6x2mJ8hMYQgADJmZzAgAjG5ERTtAiMdZmekR1ntexemWfHVbERtmM5UKJw1W0f4jHVbnUMnfZ
                HzrRpcdWrXiSfbB5Iru7ZynCpDGZWwzOYY9vmyo5FptJAT/7ja59KR9LhQBz0YMzpzUw8UjiMpWsWAD0
                20pLk30j9p1JthUe8+u/arkKD12qV6um3UsqniU+tYWLUtXPrFiyEo90+R9u05detVSyxYe4oBSUJCWN
                a0y2EFrWJGZT0EYmZ7ai1GjimpduwjGDIyJfFtFS6NApXPUGProCw1f0XuZHZuezdeU6m1KpJsQyNm4r
                ED87VoHE9V2rBz3u8HSQKKtdgi2qe/bQbfohez65n7TUYsh/XCi/V5MLgbOXx9TOafGzQs0LdtNawyvF
                tzqdqutxgT681XJUbFcUA9bAPh83d9bGW6mpNTkJBWxlGwFirTbt0bmLaCkK61+lNQDm6/zQgErObKtV
                /CtmyY6jTs1It5O3xANy5dv1cerHYpe3DyqAWQmQXw1qddQI3hhrCe2ofzws/wBC4XtX+MXyd7IOiriM
                PUgX5fM3TmBXUxtLiE3GRyMMccrqVRnm3LFdEEyNV97UpN0auJvOQg5cqvNbO4y0xAukRl/JSBLJ/AqH
                EMtFShKFDX0nnrQjq3D1oUg3F52exlYIgLSyL8ZkKq4gMgveWNEYvjxwdmK/kyY5OsleUxuPuW8PmRCI
                t4+whLHiEtjz2UXEHDbqHMrMJlgQFgEuXVpVg5li5YTVrrjxN1hgqUEflGcR2zq1TM/Ff7Hmjt0mRRmM
                dWkvdwrbLPdw9k6ezdoR1jhq0AzmFsWcoIEQDJqkvTtgPCOSVEyXM/DBiFPkEeTM2b9ZKczhcTfyGJzI
                hA2qzKVdtvuzWxHE3H2OXK7FdnGA8cvUI2AA4xuKrxJPyeQp49Ix4k25YXXXEe+TZG3baPCO2sfzV1D/
                AERb8msf4Eo/z+fJqbCVl8y/NOMhjAiNzO/i2heQhf27fIKlE+yzPh49tp7YPM5zDpz2JoXlvvYt3ULC
                eoyUBJCtra8zFlKLE91e1IJsxKDZHZGY05kq2SoOEeqDjmVzmN+726/RtSwHgaHgBj7OHaZ7EZlAAESR
                EUwIiIxuREU9IiI6zM9IjsrRmgYXqzUjZnvdutJHpvT9UCgbORy2SVPDZCtxRw08eZlascFGbVR7QnsA
                mfMOBGDZwwPGUR5x8I9B4p68MdI8I7aL/hjJ/wAyR5NGf4PN/wDzLmfk4XVlVcmemrrat/hjrGNzHIWL
                zn6le/XqqGPV34y8N/JNrVVGvyr9eKdHPtAmnp6yRTBO4OsLrXVnNe3bBZWK4wHCQ1WXYJNulZRcqWAh
                qLNVy313LL0WKcoiWwJ9RAUxPkdkMtfqY2hXHifcvWFVayo+25xAEb+qN9ynpG89n19F1HP0xiGcOY1b
                dQxFS5aiIleIwFZkA6y4+KG3L1kVLp1o2Cu07lR0TcQZqZi9R4S+DVlIGouKxUWwDHYgIGWwkSGYmC2m
                J7LpZBylawxFcAy1ToE5BIcKwzNQekEt8yMXFr/qS2UjIAh1WWeTO6gsVk1tQaaxFzK0cssBCwxOOSdp
                uNtFEb2a1hYMWkGTPdrBi1Mju0G6UxiRkmXdRYavG3qFmQrwZz9lYcRnPqEZn9qdYsMBKK6mOe5hQC1J
                UMmxjDnoIAAyRFPSIiZntqjUCd+75bOZG5U4o2LubLJ9zgonaeKKsKgukedv08mtNPmUDbsKxWXrDv1a
                iqVqndnb+4nbo/8ALT4beRes9LVJs6ix1fu+UxyB3fmMarcktrBH47I0dyEUxEtuVShK5Jtashxpcs1N
                UZLapgyDFsCZEwMCiCAwKJEhKIkZiYmN+wPrtYh6ig1OSZKaso8CBgTBgUeqRmJ7QqrrrUfAMbCNrINy
                HDHqge/95kYj1RG0R6uwYHG6h1bmn2NhZUx9t1SvCjnh5mQOn3WsmpE+m68Y1x+kUdtFZW/fjIZPK3Mg
                WYmvvNKjYq/F76dSuwxFtiTWdwm2DgOaa5gFCAQTN48J/a7aNthFxSv/AAbPnF/6BR5LlOZ8JCyEff8A
                Nt/Vsr9fyrDxndUTyk/4JfmxMflzuz+P2+M3j5gbjVifpH4E77g9EPt8U+IR2t5Ih2ZmMs8gL61WiAVV
                /wCTZi7+vyZPTGU81V5W9e0I8TaF9Xn07yY3Hcq7tpIOIYemW1zLltPs/CaiosrOAj7tagSmjkq8TsNv
                H2ZGAsIOJjfbZiSnk2FqeJrHtUQy5ZbXoGbKNdzmOr1DZK5ZNeu0iSrmypXN4AiGcsOPi4Y7d3/ZvnJ5
                myxhBJW4pLzYgGIQDuOZ6RwFxTPh17V9W/CvYzEYveGqx2YuXWZ/MxE8QjaKyybWMxxT1LjJd147wlaF
                sC32RTpoVVqVUrr1qyAFSUISELUlSwiAWtYDAgAxECMREeTXv5z5X+cF2wOq01Zpac09lqmSflLgMBN1
                lF8M7hjY2/C3kYcDmBPIqDxS5nN5SHfJt6lpV5LTWqbjbqnLH5uhl7HE+/jnbdF81vNuUuggaGGlfEVN
                s+SngcBRbkMnePgSle0QIx1Y97C2Wiukdzc9pCtYRuU9uP5rJaovKGMrmpX6MTsU4/G8ccaMes4jinzW
                3WDD7EDAor1mfnDh/wDxXkzn57ZD+gtOdruLyNcLVDI1X0rlZnoPrWVkpyi22nY1lMbxMFHiMxO09nrY
                ixb01aeU4XOQuSQ1JyRLp3GDHAjJJCJBqj4OfwTYrjKZ83tJ4DUGZwslPEfxXkrlIWT/AHUK7Vg3wjeG
                CUTt17cuNc5nhiNt5KsR/wDKlXlkz75Lf39quV1jl9QK0uBg0srnbVx77ap6yvT9O4RCXMGeGLorDHp3
                KYmwwJqnTwOApLoYyiHAlIbkREU8THvaW7H2HHMsc5kkbDneZ8Ijsn818T/Osn2HG4CnPIWQ/GOXsCY4
                zGKLrx2rEDO7SiJ5FVfFYfMTwBwCxgIRxcXJSpXFttxcsIDi23nbfbfbedvb+05vTd7za2Zx1miTIGCJ
                BtCeRaAZ6Syq/l2Fb9OYod+2R09m681sjjLBIcPXgYPpJsoKYjmVrKpB9dsdDUYl08PIFx8OxOkq7dru
                ZJex25AvPpYgWRw2LM9QZY2KrS6k7mNhdV1TBafoJx+NpjstKo85hztzLFhs/OWLTpjidYbJMYXpF4bY
                HXVNDLFOjTLBZiVjJdyX3plrG2WcMTw12Ot267GlsC3FVX6ViPJgNC/B/olBalTi6OOblrl07mPqLpVk
                1G5Q6g1a4VUDA87juXGrSZCjlXTkAamrmM1b1Dm3mVvMZi2c/hV523MGojouljq8RCKNKuCkpSHFy+c1
                xGq5iAXGq8DDTxnGQrjJVGedZxLWlMCBGQw6ixs8tVmCWRKVbe4LGPyVSzQvVGSmzTtpZXsoaPiDUtEW
                AXuKI6bT4T2ghmRIZiRKJ2mJjrExMdYmJ8J7CrH631ItIRstLcnYuIWMfRWm6VhSx+yAxHu7LwtHVOrc
                nbt+Yulh2OVadv6UbYtaXSvb8ZJTyxDeWTA79k6x19IZLVXHFqhjzd3xGHfPnd7tvkiC/lxmfMKJbWpn
                HNSyxY5T0fK0NQ3+bTRzdvh+3asY5O8/op+b7Ny9vbREK2gfi2wU7fvp5O8bv0y4jmff+0aPwUH/AFvx
                F/KMCPVOWuLrBxe/hw5bb9Ygt/AuvankGLkqmmKNvMtmY8zvMj3CguZ/fIsW+9rj19zP1DMfKta+0XSK
                1Zdu7UmEqhxWHtiPOzGPSHV7WR/XCquJcxkd8ULWMs9k2azXVLlR4OQ9JmmxWsIODW1ZjwmpqmDBCQzB
                AcbxtMdk0tZ4Ec4aQEIy+MsBQutgdo4rdJijqPeXiTa7KIeHzG8yXYpxGkM1ZucPmBkbdGlWE/VJMrFk
                GkI+O0KCT9HiDfiiHwjnrr/MCYiyrprTVNhQRDzS5vCZ/jDjis5O9wRwi0VAK5p4/wDDcvcFc5jNuXAW
                LzA6wpQbl3WgkpnkVRMv3xzHOmWeS9/idn/Un5MhrmxXZVwa8VaxNFzgIfjO5Zs1TbNTfbmV6YVTF748
                znsWlcmQWOT5NXDYAhG9br5OqcxPC6tepV2wa5n0hBvOrlMdIalgfR7YDUAp7wWDzWLy8V5Lgh8426i5
                yZPYuCG8ng4uGeHi32nt8XaFwF3TeASQ/sg1ll5S19RfSWY/B1Fi6kzMOGYhL3utLprLvL6X4mGOxNlX
                PoWKTMc9DjNvOqORNZqmsYRMZzEkQsMyIz3mSKSmZ7W8RfS48axrW4PKyHzGTx/H80cMHzItpGRXdrbw
                aXddpQxDWdu/6ezGRw1vpBOx9t1aWDHXluhZQD1e1ThNc+se0JPN0LsxG0Pt4XG873bzXRXAp+0YEU+J
                TPXeK2V1BklaSW6Byt/lLx+DUI7FKE4+iNJGXvxG3LUcOlMkLLT0AcGVHTuBrRWoUQ23naX2nl1fctti
                B51qyfntZtEeC1itILWHbuPEupnsbLbOAyRxPCmwYxDadmRiT7hegFg/ggiUxaLIgyUcllnCahx1jGZG
                qWxoeO0GG8wL67Y3VZrN2mU2UGaWx1A57BiCSnUOmxMjXirjjQ+jxlJtjGXxFs1gYcyZ13V7VfmSRqWp
                jGme7dKajCxt+KW7GNTxeznlYSe3v7t/F7BpLTuIfi8VkGir4nxhOyWYzR8W4JtPUlUnX3iGdyrVwDeJ
                7y2yIjwVNWa7UmznVSFjF4LcH1cO2POC1eMZJNvJLnaULXJ1aRxzYOxZ5RVfIzIVVyyxpjJ1swcBEyc0
                CBtC9tH1VDaXcbP0FVDLfaJ8tbUGrF2cRpLcWpRO6Mlnh8RGsJRx1Mcf075RBvCeGhE8fe6+pcPg6Kal
                PFVMQ2tRqKhaUU8dmsdZscIDHSF1luewp6lIkxhSUkXkjHaIymep38wxVbuWEsWQZkHdYSM10TwuYviP
                gMgklCTJghGT7Tq7Wt1+e+EHJp2fdv22ZIsLXbHnUq1p5tJtsxnhvXBOR23qVJ7tzW3NQadORD46w+Qx
                wsLwU21WYpD/AF/iHSDY6T1Dw7Go++YXP4O9IzIEda5Ru1T9IDCYISEo3AwnhMJghkgKJlGO+EPGPN64
                Ff7IcMpRc/1czIYuSTCz+k11AyE5n5vHqiOsOHWdVcTHULGPzCGjPriVNxwlvHh5sEM/Rme2T01oJlrL
                X81VdjX5gqlinSpVLYSi13ULa03LN1qTNKZiupKZPvAuYQCssfrrV2PdjMZimDdwmOurJN3I5APOqXmV
                jiG16VM9rSSdC2WbAVyWB1eMj1JpuJGGZfD3alYj9BdwlSVFp/ZVcFLC9wz241ndwmewl0h3GTrXaF2s
                cgY9NiEhmCAx6iYzIlxAUxKKHwhYx42QgVzn8KoGJft05t7FySirn04msoE8DOfmqKA6docOtKgRMeg6
                hmUtj3SpuOE9490TE+qZ7ZHSWgpt5SznEHjbmYOpYp1U0bUcq0iki0Crtm1bUR1dyrJUoGkxZtZwxFLX
                ur6DcbVx34Rp/FXAlV23dIZhOSs1jiGVqtSCltQHQD32eVYgRrqGbHbM4mCgJymKyGOg58A77UdW4p9w
                8zee1vHXknWu0bL6duu2OFiLNZhJco49RLYBDPvjtZyrceeUx2Sx54+/TU4UP25q7FeygzEglqWLkOBm
                wmpzY4hLhKA1flcczS2luCf2NYAmSzIZfmRtOezL+BX4LAbjiceCxSZMO+3vPKxlnyXtbaZoMs6ayjGX
                MrXqLI5wN9kydppqCJkMVaPisA+I5NNxsrM5Cu6cztFvEZK/irceFrG3LFGxHr6OrMUyP8rtC166zpDH
                rsPXbZ+ltpTmz+k+0UfjnUGRw/M4b2Ryt66rTVKI4ePmAG1N9mImOGrWQ22fQuAVQbA+LMQHPu2eWzL5
                hwxFvKWQiYgijcoRVTxHFSmspWgSIiJthj7De2i/4Yyf8yR2r4bAY6zlMlaLZVasHFMDvEE5x9F166t4
                l1h5LQkfOYYx17ad0tkX17N7GIt96bV4+7869kbmRJaiZAmYo73yOZIBzeXzOAILhj5F/D5SuNrHZOo+
                lcrn4Nr2Fytg7xsQltO4GMwaziDCYIYns6rbQ+zgbDj+Jc7C57tcRPES0PYMctGSUEbWapcJTIS5MHWI
                GT2mdP6hzWF4p4jHGZO5SWyf7qpDQW3wjowSidu3L/ZzmeHbbfirSf8Ays1+Zv7+Lf39quZ1vltQJ0wB
                i2cjnLVx92+mfOlWAq3SOBBo+b3/AJYUVQUkrvbFlXmlgsFSVj8Xj1cqtWVv06yRsYZTLHPcck172kTX
                NImMIimZ7ao05XGCuXsdLKAzMRB5Gg5WQoL4p6BDbdVSpPwETmZ6b9lX8dYuYXOYmycCweJFqrYVJLch
                ymR+WmzVeErYEsQ9ZARBKaev8XYo3RGALM4ZXeaFiY/drOPk4t0yn6UVe/AR9QUgJgB50a1pwO2/Cyhm
                Vt/5E8cLd/dwdrWidAhdyHx1K62QzB1H1hZU5olNHGVHAF5rrhCKXMfXRAok1KW03cxCtfawpHjnoSyN
                O4e0PBdBlpRJblL6C86rwV2MTTquiLHG07LVolNeW/JNzmAlShk2NaYrWsBjcjMymBERjrJFMREePYqz
                dTBk7ATMGvB1rGUXEj/75XD4vLr02C2U+2IjtMUsNqu8X1pqYyqmf4zMobf+g7TFHQVl0eoreoVVZ++V
                pxFvf7uZH39nYWF1dPYGx0s0MaTTsXg33hN/INmDajw4kV01Et/dwbG0R5MPqehuZY+x+FVuLhG7j3Ry
                r1MvV8/XI4WZQXJfynxHEoe2PzeJsBbxuTqqt1Hh9NTR32KPEGrndblFsaWgamRBgUR2KzqDTlVuQLxy
                lMm47IlMdIl1mkaZt8MdBi5FgRjwHpHaTXltY1wn9yXkcQQj+STsExn+UZ9oZZq5vN8MxMBlcuQr6e0c
                SjFcUe0SmRnwmJjp27hp/D47DU94IkY6omqLDiNuY7lCJPbt4tdJsL1lPa5cAONunsrjcxG0efyiM8XY
                /iCrJS5keGyeOfQ7Um77zyBWX5afmj/WQTP7WjIBH/u7/wCUlHP+kEz/AIOPJXcU7LIuS72ctvmzM+4J
                4WfxPkzVWX4RbGR6eK0eDD/j/ix+8pj0O0B1GuvYrDfqj9Qf7ozwH2dS2mB7ApQwILGAAI9Qx0iI7YHD
                8PCyljKw2I/97YHPuz/GttcX6fKWN1DiaGYolPFyL1cHwB+HNSRRxodH0XIJbR+icdruoqi81jck9oUc
                Fi6uW51Wzkn8RRzRyVbIWpqVUA61YgLSiJaYQDltcue2L1JrZmaC9lt79XGUrSKddeJbA9xm1BU3Wifa
                De5uq0mBrvrr5YtBskt+A0vj691fUMlahmSyQF6yTdyB2X15L1xWNIerh2+RltW5tORzl3LZKxk2UL1s
                QxKXPZLOAKtNNZzljM+hbs2FMiNjXI7xKalOuipUrLFNetWUCK6FBGwKSlQitawjoIAMDEeEfKtY7NU6
                d/GWVSNurfUt1U1R527BbEhHBMQwWdJUQwwSEhgoXpv4I8I0abrg4uqUXbdsMtkDbwttVptuf3XFK2mU
                nJ7d3Bt1pgkgWiK9QRuZ26pfx1mzCOdabGxTWq7xvXxqWfiK8dT2h1iWO6j2Z+cOH/8AFeTOfntkP6C0
                55H0MlTq5CjZDl2Kd1CrNZ4T9BqHCa2D7iGexuRj8ngWMmSL4kyZgrin1hXyKslXVHsWlS1x6gjtxMzG
                snR9QsjhgGfv5eAE/wBRj2CxS0tVu3FzEjbzRtzDBMfRYtN4200sGeosRVUcT1iekbbR0iPCPKvVWpTy
                1piqFXHxi69wKmPYqqx7YJxJRF+SOXlE8m6iIiPb17JxOBxlPE45H4upSSKV8U7cTD285rmbRLXtI3NL
                zmGRdf2tX7IKbV5CsErqZnGsCtlK65mS5PNJbk2K/FMlCLaHrWRGSYUZmUjcyTcxqXllBKp5OwhOP3Hr
                EuRQRWbY6+INsTXMfNYgx33TUpV0VKlZYpr1qygRXQoI2BSUqEVrWMdBABgYjwjyOq20Js1rCjTYr2Fg
                5D0sGQYpymQQMWwZkTAxkSGZiY27FkUPz+JqMPmMw+PuVe5QW+8jXZcpW7VdJdeJXOPhieFBIGBiPizS
                +IrYyuXCTzDiZbuMGNobduOk7No43nh5rCFUTIqFYeb5Y/ZPp6lkXAHAu9syrklD6gDI0zRc5Yz1hMul
                O/iud57SxGR1bRGd/mUZLGsVH5M28NZd0+04u0HZ/ZJmBj9xyOXWpc/pxNHGN6+5sdpr6ZwGMwwGMC06
                dYRs2IH0e9XD47drh9U2HtmP2jQt/b5t1HOU9/VB1n4520z9qLfm+3hLbwnseClkd70tlLVYlb+fFHKN
                Zk6jp+yyy7IID/FZ9W37Rqm+k+OpTuRhaUxO4SjDhFEmLn1rsWlWbQT4TD+nTyRl7yeVl9XmnKNEo2Yn
                FLAhw9c4n1kpr7/tjv8ACziCV8tlzMYFaMmzeTy2JYWNvsKfE7BI/B7jP7pdr2DjaIgojp2mUak1UpW/
                oMPEuOI9nMHGJj/o/wBfrB9ytltRtCYKBzWQju3HHr7tjEY4GB/crPeAmOhwXZOPxVGpjaNceFFOjXVU
                rJH2LQgAWHtnYes9Z8rkTMxDlMVMx4xDBkZmPfG/YLd5WT1O9ZQYLzdlXcBKPD8BooqLeP1lXStJL1r9
                XZVeslVeuhYqQhCxUlKlxwgtSggQWsBiBEBiBGI2iNvKheoqjguUxIKWXxzRrZOqsp4iSLTU9LkSXnci
                0h6gOSNQrYRFI2cje1DnFAW8UbVutUqHHsfOPq17Z/8AFW0R47xPavjMRRq43H1A5danTSFeukfHzVri
                B3KdyMvSM5kzkimZ8jMZncZSy2Pb1OrfrrsK4o34WDDInltDeeW5fC1c9QMZ69iZVRnMHxbzy8VluNUT
                PsHL18rIx9kSgY8BiI223PN60OPZ8YYQY/Ttp/f9Ux2F84BmZcG3CWcvWLy+n1qYyjHt39cOqMj2RHXd
                VWnXRUqoCForVlAhCVj4ApKhFawj1CAxEez5HcNT4SjmK48XK7yvaxXkuhFUuKlduoZes6z1FMdJnbtL
                KGT1Pit5/ELuUbdYY9gd7x52v0nbZ/39oZfyuqMpAzE93K3QqVzj1wzu2Piz1/udlU9pTpfT+PxPGMA2
                wpctvvGOsDZyNknXrAxPWBdYMRnqMR8htewpb0PWaXJaAsU5TBkGKas4kTWwJkTAokSGZiY2ns27QyGf
                waHHJljab6b6iZKd5GpNyo+wlfsBrrED4BwhEDCrq8U/O5BMiSbeonhf5TBnihi6S0VsbBwWxAw6ZtVI
                xK2DO8z2sU7aV2KtpLa1mu4IYl6HhK3JaBbia2LIgMZjYhmYnsyzSyupMVWYfH8XosUrCUxM9V1nW6Tb
                IhEdB7wy0ceMmXh2n9juKjv7B4H5m+cXMs4fWHeiARrqLpxopKq1zmII1EUcXlg9T6co5GzAcsb8c2nk
                hCPRD4wosr3CWHiCjcSo6+Z1neZWrUFWPqozHFEe6O81rBfrKZ9/aCdSzWQGP3K3mrAAX3zQGkz/ACWR
                2Bmn9KYfH2F/i7vdYtZEfuyV2bF//wCI6+Xnal03Rv2+CA+MF86jkuEY2ASv0GVrTQX+5rc1ih8ODaZi
                dwXqGt9lOYiYj3fhFV5fy79oN1DM5AY/crmasgE/fNCKLP1MjsB6e0th8a8Og3QqC/IxHs+MrXPvzHum
                xMfInNW+/wCFzTIGLV/Dsrri/wAAwIHerWa9hLWgEQMPVCHmMCLmNEFwKshZRf1NcScMT8fOQ2ipgz5p
                RjqtetXft9S93xfF50BEwO20dIjpER4RHkkSiJGYmJiY3iYnxiY9cT647MtO0/8AFNx0yTLOAsMxnEUz
                vJdzDjxvHM7yR9x4ymdyKe2/x3rTh39D4wwn6uL9j2+38vv7LcWCfm3r6izO3nXV7/3SkruuOd9zaZj7
                uyadCrXpU64QuvVqIXWrIXHgCUJEFLCPUIDEe7y4erqC1k69bD232wXjHV0HYN6wVK3MfVtbK2D9yEGd
                ejB7FT0vhq2NhsD3mz5779yR8Jt3rBMtOiJ3IFSzkKki5KlxO3y34/KUamRoWR4LFO9XVarOH2MS4TWf
                tjcek9Y69jbXo5bAmyZIowuTIVcU+sEZNOTSqPYtQLXHgIRHbiZl9ZPj6hZHDgM+6eXgRP8AUY9gsY/S
                1O1cXIkN3ME3MOEx6ixQXzdVrtGeosrV0nE9Ynw+QVrUOmqVm+cRBZKtL8dkT4Y2CW28e2s2zwR0CLUu
                GI83h26dtwHUVf7KswMx93z9N8/y7+/txuxuWyUfvd3NXAD/APt80T/0+0TpzTOHxTYHh73Xprm+Q+HC
                eQbDLzI9zLBev2z8q9qLPWe70KQeA7FYtWD6IpU1SQ861YPzVL3EY85jTWlbGAGU1tkLOg9AsIXYvSdL
                ecpdrb8SbGQWfCsXmGxjZyS2ys43q4hCmc0wENK18q6IjjtZ1z8oxsx9I0PPuAz7eRTUP2e23/2faJ/T
                pXBl/KVGZ7f2PtEf5qYH/YO39j7RH+amB/2DsSWaA0cIl0mUacxNVv8AFfVqpcH3gyJ7Ov8Awf2iwmQi
                JOMLkHutYizPjy0Wm869QYX0ZadyvM8K+CsG7YsYbUGNs4vJVZ+drWQ2mRnfhaoxklWK7NplVhBsQ2PO
                Wwo7fsI1Ha5encvZ48VdeeysNlXTESphF0VjsiW3GW8Lq3NnlALsW3D8nOYB+3KzOJyGNIp68HfKrEC3
                8pRHDBmOsEMTHWO2QxVoZVZx9wwYo/TWW8qauY9q3JOC9hF2ibTNiL0FBHG0/fA+qPtFIjv0337QJJtA
                EztzJFc7e8hFkzt7eHin2RPYWAUEBjBgUeBCUbjMe6Y6/tDazo3W4JCfbHsKPtCWxD74jsys6POCfNL1
                MD6LB+yUfqncZ6xPkhDC/CqowBxPixUdFt9/TzD+1G87cceUrD59y1/TafqAP++fAY86exn9I5iWM68q
                srwGPuGOgBvxHO8+PEXYa9cdhjqRT6bD9ZnPrmf1RGwx0jtgMcQcdeLo3bkfR7pj4m44T9guhPd/ymjH
                jPyaelVETtF6E53xkS5mUP7m5U5g946cWRyMVsGsgKfwZHe1dOPsIAIgADAgAxAiIjGwiIx0ERjpER0i
                OkftidB4axKsnqCtNjNPXPn1sERGkaglHUWZVq2g31xSS4CHhuAUZX4Q76d2CbMJgOOPQ8wSy15e/wBI
                oNVBLR22GMgqd+Pp5GfnDh//ABXkyTCjaLOsMm4J9ojisFX3j+Og4++J/tSeUrLllvSt9WXmB6nOOYJU
                8jER9VYuTdbPqVSOfd2rZN/MPB5AYxufQG5T3FjBIbilx6VjHtiLC4242K7xWCR7zJRWv0LCrdK6hVqp
                aQcMTYrvCGKcox6EDAKCGY9U/KyeTW2BzN8DxWAVxRDJyNpZD3oR8eDHJ5l0524ZJSkzME8N5mZ3mesz
                PjM+2ewZfLVi/Yfg7AMvkwZheWuhwsTh1T9MC81uRId+VU2VMrbbQUQIxAiMREREbRER0iIiPCI9Uf8A
                s9Tz2puC3i9OTE6XwE+fTHIzETZ1FlA9Czf4tq+KrFxpoV1d7/q24a6ny5xucr8u2kTnF5muA/GGLcX0
                knP42ucxHeaTZ5DxiJ+bcCXqnGZyvx1nSZYvL1xKcflEDPppOfxbwiR7zTZs+uUxvxpNLm09Ea9u8Arg
                K2B1HaZ5gh0BOMy7j9AQ6BTyDJ4RHhRbIYEXTvHycoQBy8fqsQzVfpsPHlJKLn2eL46r2p28RU0N/Hq3
                IJIrQFEcav3VIjG2yxj01x7BjjjfeYPzj8gDPXu7Wo/R0aP6obER7o/aeFnmODfkviOoTPqKPpLn1j+k
                Zie3DYVPBv5rw3JJ/ce3Sfslwn9nsFiucgwJ6T6pj1iUfSEvCYntEXOKo36U8JMSU+0ZCCMfuMen1y8e
                34OffHTHmgEEIR72GQxtHuGCL3R49ot35KvX+jJRw7L+pWTPhH90PpPpSTJ6TCKy+AI6z6yMvWZl4kU/
                yeERAxEeTO6naHQBXhaRTH0i5dy/Me8YiiMTHqYyPv8ALlcqhsBl70fFGCjfz/jK6BxFkY//AC+uL73h
                wyaFqL8bHYc3fVMZrWJKyz5ZHzqsXAl8UVymevzimtyBeve9AH1VH7bq3MkzmKbmbVWlO+8Rjscfxfj+
                H1RvUrKMojpzCMuszMzovGAHBI4ChcsRtt+GZRfxnd+/8Ltu6+XhnxbqTELD8qFXm/8AZWXk0nXcEhYv
                1G5p8T4z8cWW3q28eqYoNqBMeMSPXr/amxTtKB9W0ltayhkcS3IeBKcpgz6QMWRAUesZmOz6PLa3AZA2
                2tPZAvOF9Pi3mo5m23fqHEKbI9COOVagBXYDsvT+oOfkNHPdJDAbtu4JzS3OxRGSjm0mHMst0PHikrNT
                Z8uTbr5bB5GrlMbaHiTbptFqi9oFt5ynBvwtQ2Ack9waAHEj8h+b1HkFUKSYnh4p4rFt224VaVePnLVl
                n0VLido3YyQUBsE8raEquLpwyrgsXvvFKjJ8XG7aZE71vYGXXR0khWkJ5CExCMpkwsYfRwM3dkiHgtZS
                Anz62GBgzx7zHLZfMJqV/P4e8PXNftSwmEpKx+Mx6YRVqp34QHrJERFMm1rTkmuc0ia5pm1pkZFM/wDt
                PZweosenI46zHVbehpbETC7NVw7NrWlbzy3pIWDuQ78BEMvyuLh+e0hvJxkQXE3MUMz5qcwhXoiPoxkV
                BFRs7c0ajGAia2A1RFjPaWDgUhvHx5bCK8IiobJ2u0lx4UHmJKHaKlhSw7sxOZ05lK2Vx7vB1cp4ln60
                2UHAPq2A+miwtbR3iZDaY+RS1XSXvf0jak7EhHzhYfIkpNkunnF3S2FOxHqSibjfNjinsizG3EYbNiPo
                uHzWR7vO6j9mYn19ncqIEWgD5GPCDPfj/wAoh4/vLsZT+622mP5MApf/AGgL9qkSiCGekiUbxP3xPSe0
                yVMAKfWmTT/orIQ/0e2/A/7udO3/AFb/AMvaCRUUJx4MLdrI98G2TIf4u3yMLijDgtRWi3f3jYu/XZ7z
                YAvbKJZFWJ+ogfkYvRVYidpLRBOnLmuZlLO6tUeeZxR4TZtDU0+kuvAwJeHmGXYQARAAGAABiBERGNhE
                RjoIjHSIjpEdI/bGkEbmKzkY9pQMzEfr7SRTJEUyRTPjMz1mZ98z20tbTMSqzpzCPVI+jINxtYx292xe
                XSmkFN3eyy/UV1UT1UpKm47HEcf3c35Lh9nd5n1x2w+nVCXdDdFvMPHf8Fw9UhO8zij0TYO1WvPrt2ED
                O0Tv2WhICpKVgpSgiBBaljAAADHQRAYgRiOkRG39qrGB1HQC/QfscbzIPq2BieVbp2B+cr2VcU8LAnzh
                I1NFiWMWbrejnr1Vi/OMKhmmlnEB48BqaQU73APTmVnLc8ongoBvA9isVB1JpGzJRz03KNqtTt8PQe80
                r6Jo3Q/eyYpsRvxKKPHsC9Q6UxOXIYgZsY67YwzT/ujFtVlUkyfGYUKFzPoiEeHTQ+S5n1fjqtwf5fcJ
                n/o+3c9KaUx2Le/cFk47WoL/ALprrWnHo5vr2ZUsh6uCfHsOUztLLzJeaOS1YZYenVUc8W1Og1YOXWKf
                P4MXjCTv53DvO8oyWrbP7LcmvYxpEnkYBDPHzqpSTslwT0ibhhVZH4zH77bAlKwUpQCtSljALWsI4QAA
                GIEAEYgREYiBiNojb/2qIDETAxkTAoghISjYhIZ6SMx0mJ6THazmdBmjT+XPia3DN3HBXT8Z7twCR4hx
                zvsKxZQmeEBr1I43dudy83pLI8XL5vBxY3JAEzPBx7PxOYrR1nh3tKEuvmmPRVXXWnikogRLL6dkfO9X
                G7E3GhA/Wade/MePKqR0DsHctZ4iuw9vwfLtLCOgp/c9sqNQWHv0+YNolPoEUduOjep3QmN4KpZTYHb2
                7pM429/a9Uy3d5xlyq+neC0Yrrsq2VEl6mkcjECxZkM9Y6T21Fp1WQr5vFVbRzj72OtVbi3qKIZUI212
                EkLE1zBN9W/Ei0og4dh6mYh5zSjjLryq6o80eIvYIxtH0mF4RxT2TWV6CQgI9s/WKfeZblPvn/gGKrMD
                jpUD+N8h03Hu9EgMFnHrGzamtWKPqNKfV8jKZdTBHL3I+KsCHTinJ3AOAsQM+I0Ei68e/ml3cVT1aPad
                R5JZfHms5XkmE3eXJxA8c4tRSW5cVqGtyTS33OLaBbHGiP27Uen3Llc4rMX6i4n6VcLB90bH2H1ZS5c+
                sGDPbH6E1RkUYrK4nephrd5gop5PHyUlWq96ZIpTeqcXdVoaS+8IGt3eWv5oxvHWJ8J7NvZ6+rvcqIqG
                GQwDymSbtPACK2/ECpLoy46Aqp+mzikQKzlG123s1n7q0UcbTE28oOiaONpr9Ll11QC4npJzB2HTxmw5
                nvkKdqjMip+ctBsY1+GJlGJqsjxr0+MuawZ/CrRMbvKhrCv+1kiQwQlGxCURIzE+MTE9Jj3duK5pbTls
                vrWcJjHl+ttYp7bhorSQT7Q05hxn+Sn25ePo06K/Dgp1U1g2/JSAR/J/7Xsq3qte5VbHC2taSuwhkexi
                XCazj3EM9iY3SVXHuLf53Cvt4mB3+rVpuXQ+7iqFt6u0lTzerKe/0CtYq0qPyYLErb/lOLt83rLNBG/T
                jx9Fk/rFi+vv2/R23t6xz7x9iqlBBf5TO9R/o9sm3R9zO3NTVF97pDlLdNyr/IiSdjhVVoUwW2yveKpz
                vtZFIMOFGwoKgaYrXKUyt6eXCSLhnglhL2GeZExwP4o4oZG5bccR/wABsagsBta1A2O78UecGMpExavH
                qPeLE2Gz6mKGsfXp8irp+uZO0HoYmd9YEz3e0us9cZNwmPmyeZvAnF1SA95x6O+q9FsdhWsRWtYiAAEQ
                IAAxsIiMbQIjERERHSI6R+3RrjSFTvmYXWCvnMQnbvOSTWHhrX6UTtz7tdERWdW35liuqv3YScqVvbVu
                V31LSCkHVrKWIek48QaloixZR6xIYntCKGezNFEdITUyl6sqI9kLS8Aj9XYX0MRdipYOCfqDN86pjti8
                Xd7sjLr8x03Giu47rG4QPnR3yJ+OdTvVwWs3YUIcgSj5ytikef3KuXgxnGdqz+6thXDXX/eln4UdL19q
                lhw/sopqGeGvccXBGV4B6d1yEzCch4Su6QWdym2wkrspnzT6EP0lsj0ll7x/ljYo6TH7fi8FV3hmQtAo
                2RG/Irjuy1Yn3V6wNdMevg28Z7VaFNcJq0q6alZUeC0V1ipQfxQGI39fj5Tx2NdtqbVAOx2Mhc/PU6hD
                AZDJ7R5wkpbIr0yjYu+vW0OOK7YhMX0wGotQSrKZvePnK26/wHFlP/5egy5o9drti5wkQcH/AACIy2Ix
                eUiI2iMjQq3YiPZHeVM2jtDqOmNPUnD4NqYXG1mR9xprAUfr/vUWaN1CrVO4hta1WeEMTYrvCVuS1Zbi
                a2AUiYz0mJ27S2sDrWic44yxlnqc1/EyxtkvVeojM8kz6X6ccwZ5o2ArA1RQa2DBAY+BDPhP/wDvWPCf
                265rC4rZt7jx+I446jTWf4ZaDf8A/EWAiuBdCgazvEHdfJkc9mbI1MZi6x2rTy9QB0EFj4se5kimukfP
                c9i1BEkcR2yHwsaorGGm8HbFOncc/wA9BWak8eOor381icUJxkb7BgVvyrw2GQZYWH97q/p3O1osUL6+
                GdtofWcPVFyoyYnlWqzNmJZtMbxIME1GxZN03n4J+JsEb8PlgAor3KnFtFlPpcBhuIZClxEyq6eMeYpi
                m2RMCghKIISGdxIZ6xMTHSYmPCf2yjhKsEINPm3rIjvFOgqYmzZL6O8DPLTBbQywxKt/P7VMdSVCalGu
                qrWUPgCUBCwj3zwx1KepTuU9Z8jrNlyq9eus3Pe8xUlKVDJsa1hzALWsIkjMpgRGJmZ27VtCaOY+roLD
                WIs5fMcBwq1CykCyrxnh3DbjRgcezZlhxFbscseLuGO0/ha8Vcbi641qyvEpiNyY5x7RzLFhpG+w2fOa
                5hsnqX97x+B1BW5qT+cqW18I3cbbgZhdyk6RLluDfYhmCU9ckl4MUZDPxfmkHkdOWXFGKzdcC7pYDqWw
                zMl3S7A7zYxrz34hNldjU/hDObVcLR9e3pBPsMJ84J9xRHu6ftVbE4iqdu7aLYAH0QH6bnH6KUKjzmtP
                YQj37RPd1cNnK2oA8pkuHYnsj0UJ385dNG8woPE54nM889h7ORayw5jMK3j4lwcrvWhbHTgtvE4pUOGd
                uYFmwFiB85ddvo9l0amO/YV8HTHAb7DOdCLiQPeCbZYKLGoGh1JVWimtjOeC+9SpgLsCnBYCvIhvzbt1
                3CV3J3JGBO3cbEDxFO3CtYwKUL2WoBHx/ve2MXmKFTJ460HBYp3UhYrtjxjdbImOIC2NZxsazgTAhMYm
                HX9D6htafdMka8bkBZeogU+Cq99bF5CqmPa+Mmz3z02Mrmn2ahx6t/w7C/7rhID6R8FWAyihiOssuUQG
                I6+qdpTfrWaLgKQYJDJwso6FBxsLhmJ8R5O8dvwe0hsz9GDjmf8AJzscfpH5UUcPW3WEh3y+3cKVFZT6
                b27dSmN+WhfG9u08AcImQnWyWpMTUyTAE8lZt2FszN4hjfZWMrd4vjVCZnk1kIZAb7mTXETT+LNA6Vy+
                qMi2ZXXbaA6iGH9Eq9CsFvJ3B/uRhj2e+NuvFqjLxoPTln0saPHjiJB+kv4npMLJ2vfXz99HhvE+HZNq
                3SLVOXXwl37OiDaq2R9KriY/AVxvEEubI3bCijcLMdoEYgRGIiIiNoiI6RERHhEeqP74UhqPTmIy88PD
                D7VNU3Fx4fM3ggLiOn7y8J7GzBXs1pp078C12BytAPvRf3vFt/Cg9P19iLTur8TllB6KrhXsU4/ZwVyD
                J0+L8u2Efa7TDtH/ABiI/u9F+OvyyI9iqGQh0fcVYC93bhtfBlq4T+uOGzHK9+0xi2jP6Gz22rfBxqk9
                /D/0dzrIj75ikEf9XaO66KsUR9ZXu5Yvhj2zGXvKOf4gTPsHfp2Vjs3r+tprDfTxmKu2yjeduMnYzEJx
                eLssL6TG3WMMt5IuvF2F2oLuY1TY33YDn/FWPOfHfu9Au/bzPjxZQ4n2eO/ddO4LF4ZMxEH3CmlDHbeu
                w8R59k/tvYw59Zf/AKiv/8QALRABAQACAgICAgECBQUBAAAAAREAITFBEFEgYTBxgZHwQFBwoeFgscHR
                8ZD/2gAIAQEAAT8h/wDyMhlBennyGFz6ykk7TbVVWq57uJQAWwFacoRNty4f6a1NYyyp/wBSgRdzyraG
                urE7nLLNzsCgzNcDDOFXydn4Zr6mDAYMdtiunXlYB/qEoCqAFV0Acq9BiJrjsHIkZ+mQz3KI72Ncbz/e
                MI1y/gOFrCnFwuh9inwmE3kaLNjpTsLkWHrAhvDqnXJz54nDkR4A+2qv+oB8Q2sRQDuPooGK8LZissXd
                D0qGV3gD1gAKGAVJYQOKgm9p8ATEMDICgcgx/B/RZ/R+v/Y3OwI6C7V3S2cU2Xz2aun4GGgwBs6QB416
                NsQiXGk21edGcWl06Vz0QDsiQhVzNrNq2tXZGBUQzU1HQjURg6wFsoBWKRSVNKFLy7n/AE/QIAUAAVVd
                AG1dBhX6RKK9SovWy2wuI201qX0q+PRTQDveB50l4Pi9sdo6wz+LJkZ4/wDC9kRj0Y8YCDBMdIgAM0EZ
                Rvpw66LSCucJZqcPlwapnl43IywO1MNIe0Djh6bIo5Wd9r/fjONwTj3/AHebfh5s1E4NW9qsvKs8J1mo
                NpS01ynvGnnkt+XxS8CzvW7D/TlPnA9CwD/uJyKJLTWBRqDmKwyATkPLfYE65wJXyq3mndkh5DG9mnjw
                Lygresmb15ZHz5vJpYnjAgIUtumce0rKAzp9su6EcDE44qGWuOC7nK5a5Cvj30EuRaHxuSe527Z5753b
                hAiiGIOW9kXh0wTZr6R0LqT6SZFNA/U1T++iR7NYgQjXUQNshqD/AE2eYRVZyYfBW+EgVm28pDTlheA0
                fzAem3ouxBvzUQQctXHxNBs21IpTVJ1WcTu55rJSsGGW6gui1MJgRg5/EKCpoU9soE2xlRp2moFICnHp
                W4oRvlGLsWLfBqlRuFIpHyZO5KSoyVJ0DjrvX9KmzJNp58eTPEjhGiQOP9Ncy3i2APqPs9DEkTcNqv3h
                yUhgPwCnRkwNG0LpJxSwnyeq/TkEHAL/AAR9rRn+cdIHWScMrLtG6M+mibfXVC4KUslhmLsNNBBcqBOQ
                LjDtnQ+5xUurNm0JWIX5BrOl/gSBM0qqAjmNCzzLHHw1mB3/APTR2P30PAFdSujWYfxNo8b2zmhgkybU
                1kFaOFSoKqcSAQuhEzm2lY8xqEUA4IKDYlq5QTe6gSC07VFmBN7VhGtsc6XG8I1FeTBdPRLCczYSj7EW
                wWK/grzpovKjNVJKQRTFxQ1h+4hrmg7xMzjCuxZQIo/6ZcEfbIN8e9eVIwOpmX/65flg5prr1Dc+2Jlu
                T+AbY+kvFpwzGtuYnQ6meJxnMDRCcC5Qlka728lI8NMzbVi3d7bxXoTvA6XDQE2eDBT592AchdrRlEAg
                ARGiOxE0icPy+ojaniTxFLsVkS9VdNaVd5UV/lSgKoAVXQByr0GcZqSuA0z6h2PHmzhFWjFbrMkf4yCZ
                1IA2ogAbV0ZMSRWeVodppH/6YbBngloeAY0lqpANdYfJp2wEjh3tso2KzGhMCJqN6Vem2g5p3JhgWs+C
                osvBFrqbxvDfJsgto0kifEiQjYjSh0sIh4xHOIkKO2sbVMai0Ss/dQeuGlZyoCFh7Uq1uwChfhaOYVET
                Qd4DocVwDUDfQD/AfPTSDWeaaoNi/cxzjYIPvxeVG4eMD6Jh5vUBH6/vhwkvSj+f/EjyssjTZO25UzLC
                XHIY1KuSfxGihQikTgvgrmRdNMzWoiMCMd9GG+SaCoAVDNjk5/uATX+r6zh2MdO1N9JD6BwIqlTAppxt
                WGfJgWi019xm0OzD1iyppjp66HOC/wCUkc6coF66iiQXWBHCnkYl5ilikBG3BPbQ/dv6xaGbjHLsUD0C
                MafWS9BWgv5gor0zq6ZyDhe0CIN/QAmmmFuXDUs0JqdgfNB6BTGwqUFvt0G26GH0EDQT8NWrVq1atWqu
                dXIV6kViI7Wnsy5s+d33v3M07+fBpAuVVNzU5d/zSSvkRGOAMHh69sCw8Ai9oxxVXUZqDaMXYwC8mFrF
                v/DMZ2sYv0lxVQzkhiOkXuhSWGEkf4t86xcdrtC4+5ClyEnnjLIdlgDdUBa5amD3vM+EyoVCbzQTh/Yc
                Hyxq1TYq1ZsfAoVQ16YjVEmyr5drK+oseNr8FXA+ZMELTtBcDECCXBiL8wWq3JEnujctg4YWF/3Zjdet
                NfBPi5R47DlA6KNSsdi8qpLtoKnatwYcjjdL7Y4k3tqxoQZxAr9B1t4Bce0QWhyJjD55Hv4Yndg5TP8A
                Hb0kXQ4KLFckgDkUDikAYbgXKDnQ/wCn5H6q6kUhw3yH7B/lTsnhiwtCCtjxZnrVMcPaFo2kj+Z61Urq
                knEnIAuNEKOslvo+p787A9Yq3sbofvGh+oaPaQP2YIMISHIaD2s8BMaES8qbmT2C1lYETalTal6SLVPj
                z58+fMn6Kd/Z/SFknhchU3B2nrSCmgzgziTyBox2YfYGZwhBQMAAAP8ANUPwkqdK8B9KOUxl7Jj5MACP
                rD+HdQ2wu7wmqfxZTU6U9kYkhC/d++qGYP8Ai2gc+PGVfZtp2rIsEoeMGCFUb18UQ+JCGt38qP8AVa/f
                4VisqP7th9WboR18tq6rYoHPdFOxoccEfzjnL7rJdLBYAmOAACAaANAaD4PYc4DVDoAVXQZtwJ1KEXTc
                eyxTDY8HaVPpnp1t151IN4diGi55ZrEkAV/tQwB8tFGd5e4Oir7ynEGgkWo+B27ipiI+P1plo4i73X3/
                AOVFEet4MOKe+y3B/gNWhgCadfwaAWBZD7mTjeXRMxZb92dIItHuNvcoMowzPQN/R4QrtRtqaJ0CShLm
                /qPAinrC0gHQV3ViJz8xjosLpVIBCxG8UXDXYRUYTVQ9eQZv88K1dsSvctY8TONi0OB/8VIlB0jC9tPK
                EGdoLB4+HbqebJQq5j2RKd28TAxeGQg/8VDkgFR6O46Zt3bchO+pK7b5/KHWF/AkeqwAFRANuN0lAcjE
                3AeTc7zX1lj4LQ+e4+jEbQxcquf2f5O+AQdiB9jG4o5CQke0Ef1oL7+JBndI8M/Rwb0m/E91MOQP6xXr
                T0+bdPIKWXeuJsizudOx5MYIHFm2Gg9WGATyX8QEKXfAiysRPhpy3YBxKL64PvDUPZrhzrpWBMnKmtjV
                hTVA2Pnfgx4QG0ICZQNoY1I75Y9jNACI8yB+khyHa2scTBTctylsMDQ31B+KgV0G1eAxMKx2PSv+g8SB
                cWsarGctsL/g9m2GK0uOineADCAI1gA3ToG+CiZStOUdfu8pw6hack0SZQDJVYYVxccqmpvlmKLoXKmV
                dy+EN5tVkYQNqZDfGfif7EYAxf8AnDABfIvLsoYop8tWjIZ1cF0087UuFdJxUZQ9Wx6PmY2VxeNRrLQ7
                yBhtmzSdUiz82sB/wCIPA4AAABPkXfxbqlRXQfwubaqDOoFmBjNXe+TjwKUga2MEJbuE0/uQZEP8OC7E
                CmwhRvQbTic4hfVatRnBAvKlyoYQcmCgvAWb6+B05iUMYImg0uMAq0F2orwUINGedh/iCvt01q71h4Jn
                g0tGRQiNH4v5AaHWEACqQDbjdTjf70stOno+sbidUTsi+mviKqqitVHCoA2uNDCKLvVm0TvawhakCO2g
                XOnUeEfgtpS2iVApul9GUdISrVCcdGIG/gS6QeBQuCAKinDloLO6DtGhJxx+H1+jdQzv9g+nDy+NuOF9
                tEORBhBQj/yTAWZNN9ZTgIgsg8mfvqzVbv8A936cMBoLw8X2EJ3DPaVVPx2qN6Zc5wxgrbV+BST8bdBy
                5CragMLQEWtiYfkCR/ZiAQURpr4zHTsk43k6jhEa+IpGCCBVAXDlyVoQf1WCwPIgVJ7o6bXZKBEUPlVC
                AseTlUpj3n6XMBTXgtvW/jV7QC+T6zCneEWMIisANxdUyNl/0ZwP9m8ggAoAAqjoA2roMcUk3ZiBPsYb
                kwVE3Zvb9HQe8aG42PcbXdOjlSxlhYh5aJ8/AdIs5Cz7IPvGzohELvQjep+QOs1xkgG2bGIk4c+aYxQQ
                AszSjWJFIIKIkRORHYnZgqpWJG8RFwAoTEgAUUT6TdUG6ZmLaUStIInr4tQ4Y6rj+SME/n6z/wCQX8/F
                9AQrQEjOt5Jz2TwUqKPs5f0R9D5DMRA4YHo7AbXggA7ueX1NlRsAV4L9mkqlg4Owmgh+vRaLhq+sXEnJ
                p7BAl20kqq3wjJKTpHOysQcGC9INacOHgNgQphi6yB0dtaT8wFTYNJ0l2OBDBVvP87S9KeiAXhY4APKy
                scCJ9XOra1FLSAWgQACLzW8tksgxIx+ZUeoFOO9J3vfhWTxQCK+EkYLikS+aDgQt+rMo709AKWStLR4Y
                Ku99Kt22CqnXwDW7kpyseYR9t4yUvi6pAUUowMZJJg3Qtd1Ctq9+E3tdQdeakJI+drxVoHTc5QXxmNPt
                AsgDFTNkgXvyX1ldMpgYQW6OidDOVJtPXgjkoOELDqETy5JtkwEhAVkKkk96kH4gwdn4RhgaCuoRVAUp
                EktfmXZzjza8DyrlDZZ7+kUTWF6uQohGojVgjZWCFOL6wa+XgcIGvxGoUzwLYLd47gyk6Ku4csNaJeqQ
                NDPFHegCfyeHsULWTsLYsn6HyRvwa1FcSvHx5wiBXCC0KTGOU8ziA5ti1Fs7+akggKEXF9JgOEUutJFo
                xHAEBMXPsKldAWuzdKZKiMfSYkUHwaAlh9lAbAMpbXgBweA0DKMKirkyc/VR7DO8+MsL+CIqLBrt4ThQ
                sS6l0mU3lMGPUgAQFpuHMx2pRJKP4faQWvRHh1YrO+UMMwwtbwQwuYGszEXmCajdCa+BOcPxHeNFODPz
                XjOK56Kf2qhVDrtxY5mM1cHfyhNqANmIlIHKABVAxZ112XY61iwfxgRL6qtWnargeHAPVKosFKEARscv
                K4GWfCbfiGGCY4gAKBpE2JpPHLSyfVrxVQn5lliaTgpVoi1iXxRIfVOm1JvqGzvsboWByKcoOkVuF5mA
                q9GFZnNxlgADL3HBA6oCk7cD9edowlW9sSlGEBlblGPk4nMV6KJrOjwUOfNlflQtng5lIAgUCAzXfrEA
                VWSDzo0OZ+JNqOEcCeISTDOvQkKhcVycIDJaUQA3ujkpRDlLaCbf0uKDaDV6/HJEao4zYPVj35EVWoVO
                kzjObBa5Uj0lHc5Ar1qunrsa2YsC8mRvAgSiMY33uu47RzFUC9Ml2UowMDdUZVyEHK1e5+oWSS2u6cwI
                8wX1hzjxZINaXQgQG8Jy3+h5C9Ki2oHlB3lJOBivmRhca6rotYjxHEYI2EVMRe3KDJrgw+ZB5k20A490
                jCgkSegyStzLZB/AAfV4AKiACrMY/jKIJFK/zGsPZAWz4ERoABuIqJGqV/rRDaY0genlmjhzfwht46m/
                VhKpchcQqEUCDETYibEdicZUc/CCitsQeMlmG+rRwkI7teJLD0ZfjS0ZMfwdkan+7GC1tW+J7D/B1Xa/
                MwbldtXCNnyLeYDT4r9E4mxVkooGHS/uej9SDEZ2NDKLjreng5zmyWKa+g4KQhyVjlm2xINtDVnDKjOR
                Gr6UHH4Kx2MUobAn2E0IQ1SJC8xDEJsfwCyGm1sgEbMn6n5B1khiFbs9gumGkRjRVB/JDs09ayWgZvCa
                g0w0tGt0e49WKhQxrwi3RPWma1oiBYq5CAKTsMa3FqgVRAHwit1L0/zOU/swI5JvcDPaZBunYa89hxnF
                H/tlNiJcrUfaq+P7klv+3y5mlvtlP0QP+Tw9qnjVdL2rt7xHBt0EJVGGU0Ccoy8Ypdge4/gQZINEjv7a
                3CVMZ1OXu04DgH8KskAqTkfzCWXJYzz+AgAzsqwpqamBmjQ0Fcq0IlKtZImGiSBV1WgqakcVmq/0L/aH
                ECdyZYfiho+KQPSocyBhNRuQif8AkMHwZ0CMGNU7SgAUEwlPOaINYtBlawxWwwMpz+aTSGFeORvXqC0V
                NiiChADS4JFrEWEKK8E/uvrzDJOSRMaDMp5AFzccXY2tqIfjpuSJo0zjcOyCP2xiMoQGtAAcQGnk7Oz0
                PgBSC3M6MaPVXIsvbTWBGtgUFggWLXsqJUeMTvHio2eOLgEogCE4Q7Bbi2ha5vs4N+ltNajGFpk8Tdnm
                gvQ2ghpEHK5QoboDSXyCvlYQ1ERDaXYg+UqnIONQTHUOsWz8rtdxP5MwfqQLn0D5NQQXcUV4so3K5Gg6
                aCGPaNX/AB0A8BEDY6HiMUrcLAUxVGRquFoBUhAodY4beoOe71BhbfqC1a/Cbaq+IhVRMlSZ9vEAOrP8
                J6q36+DlMPhGrb03Dx6C3LZQseSnuijbJSIWXFebJOBRw6OXwTA7EmFgwEvMqvxYUGyV/S1qDlXjkAgA
                RCiOkR0icmPE6F1AvNCM3cAsuhKNoRHwAgmG+gkeL/6ycYJ1jROI2ydQaF4rNpO8geu0D+Fyfaw6Z0Dd
                xU8Y6P268Ly7sEwiWnZVxCaZ0gYh5KdH+CntRJ5cNgMOde9ocud7uDXZCTBWgmTgGdhJCxXBj1hNPaJS
                9rlfyBZDlODfLwCL5p6brCNIqiYEyDlLrMKoOEKcgERJgOSxqWKHI7vQ5z6P5JHIVjUJpgOa3zuYQDxE
                AbgzlJ7oEk4u7oVfvbV6yk4GJa2DbOxBdrKzHy5uO2nlLw6b7fCElbSqwDfQAcAA0eEgCgOHhpPsgx7B
                5Ph8eyjyAQkXDgQdmLINkYZtEAvQfCrTFMRoKMDbwNYETmys0GIEatD7mrEoIHDMimucEU2EE/bth1na
                aLBSG/OIpj7NZOEHHFF8K9PSg0Uc0ta2ToFNlBdfYqCIEBX4aKVeDRtfmvncTSjpDX7CX7eVZTqRbkF2
                ehHub7MCF8JCQGK+X3h0w1Zeg4r1HlIC7jHOH8eDJqUcfwy9shPPz3cNS0YTFBYE0egy+dsQLHgevEIX
                jAV4eB/hTOJTnE4vHBpfyccrdn0QTR42vXYe6ATnjGiFg2oCXMWiCowyJPgYbQgiAq04Iz7R0pplnpQY
                RPdl6AmLAGEBpljfWTnYXsYuagUAKqABVXgDtejHkDsn0okwFgeJJ5JJGjE004SERTHgkB3NQGiZA3NL
                YJwwGgqEEGM8C9g82ub/AJGe/Sj/APQdgy0r4SRk+EAFby3z38EkeB3qa5KFyStiApvCI79Ygt+M0WiH
                sPwCRdMASR0fCyQWh+Lzh1igVQAVVgByr0HbgRxBSi26YCKr0W0RB37J2KSk68J6i15tk6QV7DNboFS2
                lUWFEh2ZGIbsgj+kPk/lgBf4owv2htM5rwXB657CeijYZ7k3tHk9wORYbPKif+m3/UnyPoi/oHyFLofp
                0/8As/S+f68FHbSVfZjHK06AxyPDLMh/w+I3mTNFyyNMLQS6d+CFGljg+VMS2JLr4yNkUQKkK+EMfLKb
                0zlEUmmEOrW95InkhJvFLDeNva7ehpie4oGfITcIKRtAeBXHUrUGEQ02UgwX7ptVfPTLZOiHAQAAAAQA
                0AaA0Hj+6+vMMgpuKN1QQ614q8ZqEjASCOxLZ3j6uO1wqgZwBZpTlr0HI+xlvH46Q1JnCDn8YJ7ugUqt
                RH4iPBAAYtxsrmp9l9sAdx/YEwa0+WWWVQL2ul2rrkLSYfkxCLkDofBKuMsPQSBBN68qxD5w/Ujy927m
                tO5UIPBjhGhpeOufvBs0PHLYR+wPI8FSBQJuRnjQtiIkgYkhCo2R3KCYNfi/il6WXJb/AEj7y0FOY7Eg
                0G2gctoabYDqKXTROx+BVq1UjJo93O3mG5p4AmgqKsCAgShXaGBgGaKJnmQ6hs4zo2Fw10TYPwBzgLwc
                QA47Pk7ExpbZdwbzBMQpq+wckbDOPs9LYv8A2u2/JtmhjAct2cIPaVjv5oRSDXQ5208gum8/AQK2VVGD
                hGzM/nO0K0cnR4axBp/z+V9vnIFfuBeAEV5oqFgqNxutCbWntJzg6RtNXVp7Tw0F8kXOrd7Udlw4YZgP
                Rmy9zHygZAmOoACoaANq6DFcBWW/MU/F+K39kqQ/6zf114fsDM4QKtGUIiODZvcq2+1Ua10U2o5Uv0NI
                /mtT8SYpE+OM95VABBRhDZHjD2X+eQwK4LhTNG49chI5Ruu1ULaSs8ByCLQRpL1fwvJOBs3gHDYHMLWW
                gkNawqImjRT0DFiRYBMnFwBkJWsSgTNEvqkqfRcwIbTkxrlYSVTiqisgXzUZtMZ43+ojRkZBdNfBflkJ
                C4rm3DFISFbuYJ52SeBCzaCq39nBpFRYLvTijFja0aLwBnHPJkrlMQA+GBuRMyW/EiJl6550O4s329lo
                /NUrHaa7kdFAoaSeXQ9SDqhykzfEIOUSTfju+hF08GWgECcSC09SRdTH+FXmV7TON9A5Y/ldeKitJUj8
                IVktAwQRPs93g406Tkwwzn2SiUGO4b0RGkqrVZnuGVS4Hx8aZU3Kq+IaOT8nFwDMFa24yPV9XR5/g6cR
                OMtNIrop0nUZQR8xpd7DnHcXHB/ADwRGSBuQPiHWaWTSJYu0g/Z14EqchdAT1uPT9sd56uONtKg3AqBV
                wbJ2qB6XjywTaVi4s8tbemgX9tUv8wD+D5IIiUdI7EenFNBJVXZm7PTRFMbRpgLEHYUADYDYZmYGKZ40
                D/4aOzxej/58xF8HfpXyp3v+kv8A38ESWxqt02I3tusDeMIPBmgAAaAmVJF3EmeqD2y05MTY6GxF0Ete
                vEgekmWCYgkboWIegq3HqthJ8TjENHiBttE3bIIYAD5iISBwAAAA8DTBvEFg13wkOUBVACq6AOVfWGJ0
                iqIV3AjsKq4CA0kqj3ox07DhfP8AdfXmG3vAnSAB7GbOhsyIG8FLEJ1pgf3LjFRwc3aNgr7icK1lISPy
                yJtppA534FGqeBjy6HDJ+bfjAnTjS26XNJC7D2JgpnDGzAeaCcCwbL8R+r7BzQH8YLjkm/rDnaZduTF3
                c7h32eD9nrEUqtRNqifBKAZKyDloXLQrtZXfSOEhr+M8T8OtJm1KIqQW414CI7rjVsUUhY+HOadfNnYj
                RKgLYK4RDPu39ksn9PjGjRoyIrZgHHoUBYavhHPtbrGYZZCAYuoImvPrTAlUqGeDluRynwND/hEntgBG
                aFBoAY4w2Rpe6pBd8Xfiiox5/tgIk88WTjdYndVPWISiIPIqJ/Dg2x+ORJwUhy3DSnguAu4DA48TBMBf
                Iw8ghD1Sl/8AWH46EBfQAv39GG/F21v2g43UCbvjm0GuZY+gX7318AJBiSVVPt5v17wbgDND4NqgDl1+
                NMUifNeAl6pDP18lNMUyIt7a0WhJ6sM69tgoRpVJ0oQX0fEgBjre755TinWxU8EEPXWssehQWpBxEFRh
                1JDG9AVN0jQLLJwgTB0/LOjKM0z0kAw+vvNe/PE2NfNaB9Hgvo8ONaXwR9InAwxPkopQRNbq+NFI1Lkh
                Ax3zIwD44JIvSJPK1chk/FShmxvCK1xN6YgEzhgBANANAaDR4XKddWQezvrxTc2GppBNJZHvD7ccdktm
                Txi4zRup8dZ6wx/wQG0c2L6xxaTgfdg0pV8DCD01vxyPPE4lQJbeln80lyb3KRxqXh1hkJsSKYChsKkG
                3wxL1ylcqXm8q4Cj2KRglAT2bK5dpIJWnxwQeHnUytgOj0N+smvmCYCAKCIOkTSOkwnFSWl6na86pDCj
                o6kHa5j9A0RwHgTt/VLNRKGIn1/U5/t5f+3fJ/4o/j5DaiL9qJ/U/jw1C6VBFpOUeRyeA2i/DE0w2STR
                fqxphgyiNdUpdaxQCQDMsGlm4QCKVNq6CkXQ4x8+X6dnXkOtYWvxMYb+j2FpsAT7PDYg4CAeZwZbEk4E
                cfDFfMjIcOOzuhkvVyO6UTuDziEr0jIH3ywxlctlDgyUO1lApcQCHI6fGU02+ZPyoQuHBoIRUP8AAHI0
                o+Bo4/WoQPQ9eETZhUFEJ98JgF9pMDCsd5g2Y0D6boXyQAH+ZFqYLY1KLvUFvWADOFUl2wEDsSOVrotG
                fsZurOycwVQA2fcW8W4I9gWr6dUPwyo+viuISKPUxEAZfUhyCNaCr/mi4EZ442EUFXKMwGzgQkDgAAAT
                5K1EL7HP7ief+YKd34P48H6HxejDZvYjOxMWguqaE6ykTxHKYmrNRx39L1pjWp4eg58DVDQBVdBtz/jz
                BjoRnHiE8ur32+FN+GXTw8llI0cVT/VB9z2eAn9DiWs+I4Tmf8Nbt0GYikFCIkRNIjsR5MWWmQO2zmon
                dPFfDhaJopBPscd+gMXVVQfjC6x3q1+KYpf67klYEo4P9Y+fgwtnE9/5TZJhxT2IsLoOS6KXlJUEKag5
                wVeLgcUwIN4r0WxJ5YJxICwdRuaWwAUjSrBKnxeaZ9xeHC4dVgMMOBt3AV0gKlxurWKNvWWPQ4LUqxEF
                Q6BWB3BUNpRGednHxozTYD4s1BNAIqaTvwuZBkCvK8hdyyfE4NaLKlxuSABsxEJA4AAAAH48DQSqmWle
                koZVIunwelzDpNF/5FdyeFaoNbUAAHwJJ+laCRPsutr4Jek/XJXSjx8szUgeD7G4jaJFmdwEY98DCL01
                vEbbqJRnbuN1nj8f9j6N/wB/KwLX9MA1D36x/K3qOG3DWnFmE8oHJDVzB2Q10iQO+b9kkhZz8+TZ5RwR
                KksSSjZYem6r2HbjHAL8R5qShX/lIaPs8hs1/qKB8kPKPTgP9s/+WG1B2gDu0AHtxKAXS61T0tI7Nvhw
                o/8AVpAtbY1rwK0QQ3jU1AFA8V8vnJT6CPGHjltvl4IpDp2NC4dzpJDVrRv4fig3pSzdS8nlxhuv5ZdA
                3eyOww2PlQgPoldI+NxNIqFJSmYu/fAZnyv+5sTVY4wjolWHldrInBlegypiWx04fBIwaTFMJCiAwTLg
                Q2tPVHp8ke/Ddxii89PASroqzALpA+hFUn5XmSJGlWCCEyD6Nw1w78BeHC/eLBYmA4RjRZ4GjaDYtVVV
                eVZJH6dysMWoOj9qssmD4c1m6vWBTtTmvFxdys1bMr0T5ggD5N7kbDlElbRqAggsvx6qCA0/LMXJZ+uC
                9xOQ+TVqYGJzyG2DE3gPwZu9DJzF32G9ft409dZQ6RxeuhA/Hc9wYSKfoFKiKMZ/XS2BuyEImPbj+T14
                DJfIXmnCYzpCDddU5kFsZ9WwA2n3nlljKd0fSee6ALP8BdPDycrDWMLP18O4hDAHE1lJNU+BToJKeKEg
                wODcsRQxBLrUzaIr4BQDNRHYPaUvDHiLFih5bJDKbnFOH+KPPWm4eLNoBAo+16UMg1L08gNPD4Ce+vSE
                GMoBw0mnFIw51h2R3izBCzANIF0Cl4gEdQtAYvAph3Xp8BlB5G504OPryp+txYc9onWFNv29Z4uKUQn5
                hRWEEeAiMgVI0uISIwjFCbkGwpBdCOXdZj59C4dwgcyQNYDodPk/quGoF/bhng26L9O4o6KPsUnP9S1y
                GH5axdhNW601QHlrw0krS/8AsGO1wAAgAHoNB/B8aM1O3rYnOl2aKXgRSCIoiRE0iPCdmHAHOWMfzoWP
                i649blMj+CajXjPwj+cYQcrAFUDJxcpTQxNO8XlaVos06KnuvAfgwNHMl91Qrb2adQPxKU/riLzAG88k
                2jYtQyu+sz4XpomEWpuI3EKBj7DksCFMYqwNkBulVYAW4wDMcOwPIaryiK4JIDiPcnnB7xQVLQvqCFua
                daH8SteJGfI+dFgBmk9ghElAJqkUOPDn6OJQF/CW2Qb4YicY3cXGQcTR6GZ6x4AYoAmfrF4Dmagp04vG
                QmCRUzg8IBAyebFoKRUDiLxsBdorXicbPiQhAIICJsR2J9J+N9Gpfdp9wLOxPrwDuHvII36X9/fwUBVg
                bV0AduHMB9e36bV9KM7hofQ2J52tsUEdnCMCyG73ynHDkbgmzDDGwghZmFSo3rWdhI7XeNVoX6FIOFJG
                5BgwPaL0V2oUWlVh8xsMgcYxVx5HolncrJ2SUAeceqpNVXqzoJH+TbFlDB9hv2dOWaeASIoVPYIXQ1zU
                SNLdMCY/hP7r68wx8OFW1aDY6MiHAGB0gb/Bc5fGHo7pcadoAUAEMMowIj9/YS5H1eAls3sZOf4SYNNA
                KKOvTB5Ejl3bH6B00ecff7XdrkfYJXP4WAhuK0KeN9BYw3AnDwY+AjyUZwjaOCeVxLN2fBgTEhSCm98g
                DD4hGqDal130w+AspegFUnMx2EAYSo3rnMoJYLSq6hrCGTRUg4oJa1PKEaSgoK/kCT/RgAQREpvD+K4v
                AND+p8NbBP7pBc11IRWNZtk7U5Siuh8/xqvHaD3QivQ54YaRhCr/ALKdpXb+AgSuDlGTW4OxAK+DCHGW
                fpOwYltpfEjUo+grJe5ZCz9RcBS4v8ymAGuNL4YRUKgVlvYLE2ETjbFxGIW6wS40UCDG2/gjCcqenYfK
                qd5LvejVYQOyuRInkZlGAwYORJTleCSnM0u5CtojKYdKir8WsIOs6YO8b9VlQ4mvA24RgVIRcgDJ8STc
                NRn0V9Ltu3rgMhMchIatVJKKsBD/AIpRdXxj4hkrK09pkZUfxZ1gelzG48UjGy5AnSy+RUJgjH7jKwwe
                bg47Rz3v/bJnr6YzBRQG05Gr4v4OJQmIeWwglKuB3WiWo9f9TAfAVcGHkIIey9U2HYzfUNlMkxBMPWeP
                h5rQsMONyPuAlcYtdF4xqwGq9gBfTwbcYsk3jd2zDXEdjVayIAGXEYv2QV84icqw9hAacWRYFGQNg9Dn
                /TSb5cg7Yk7GOxHhzVcPEzesjE3cfv05SeCK2cMh/g6KqotBaQb0OK3leqZvBqbx1Z/B+a9VpPfUT+fR
                YII34kNrKmNjJVpqFhrFxyFQT+FP2YGxrQDmM4WLjN4aygvOupeP4xHlWWW9mHEvwIV5hN3QZUsIu8BN
                AGiCbae1FdquNeYQI0qEa0TJRZxi9mQ7eahwpwUXwGYiMFVH5zZ1qz82ldME/HqAwwsM6WGh+2MLNm6x
                LN+Adb11ZIbi+7I4owwJEW1B+0P7cxnnTsCWFCgq4FvxgCBTNDBjLGFbuQLNV5KMkkPmU/tOqY3A5J3V
                ewBCTK1NyZjlfQF9J3+Q9XBQ68sGMXBPXwX7NkEpCKTPkwKlqvBY3eohlQGLetjpE3SGCpxDkJlZ6CQr
                edmH3rNsPTR6A/scs4GDu7QmNAMG8gshcKKfaY8QIyMHE7Qx8NPVTELyQL4rfcO8A0Nzi8zuJNPcu68Z
                uVatoQ3TLsqpwJ1oAMXUdM3blXtYSvt4BHWJ2WV7aM/f8g9T8b7VAJHG5T2rPe3YeC2zg6Ev2bPimC3l
                s7HYi8drXA1uBHbpHWhHcDoCL1ndFDuWAHau2uGlpDzWg6+wdla+eE6BrRGaoKF2MB92OIazAgATo180
                yKR6RJiBi13EyG/GPRodPhob9RcoCyeCzMH9N+4gUhigA+W1SyiXjhQVTjrHmc12rDYoWQFzOBCFwwPF
                ni/uvr4QzgBcpaq0BiUE2Dnvd6Ij0Zy+iYaBk/YIew/U33EZ9D+G8QOyMriAAAAAIAaADQBweYGaQfal
                y+UOAtRsigJ+mBRt34wndbiQnLP6ONqEjyCEyk991DgPqJ9xArAFQDw7R2oI1dqUZJi+73Y3JXAHgRda
                EDqLpLp4WT4L5cwTsptmXUoKkOU2rQhPApSVWq6cCwXzQZwdI4R3m64DysVNbaHCfgsExEfQ0DWHYStC
                Fm/DZ/WRHiM/AAp3r0/KFV0TsPC7lWzshRVNCsQfJYc1hbTVa0sccLG1GvjRlNxUyWhcTUShFvLd2aYb
                e7jS9ERl4KjRV8wJMPtOKQspLzjLwBF63q1RrrgDIDTCc0BcjAPLeqAc1Mc58UKKFo2pvr+5IgTA3tS8
                VQfJVF2X5Jfsb4JuoQzmVlvo0VW6HBMwwxBje7fsr/8Apcv5teKq8fOgSERjWcFn4cR/WYfADsAOHhNg
                BTUaYR5Z9dQaJ9oa5xIaUaO0x7HF3YlLgv7AAVvFU1+CcC3NyDjmVkMehfshsujgkCAgtbKB0+UyhfGj
                jCYfAi4kacSkXGB3ScLyXa908LmSvT4NBWPPy8nRZCgupsdm7wnheEaQv2TsBz3Q/SKe/wDg5wirf0mI
                ezVba+U8dPENlT7QDMGIhVia8GccFccq7yPJLDbeyeHicR3gJ70iEdkDlYqpVfgQmTSUbXCmBLLFoWcR
                vOnmbMgAAAAAIAGgDQGg8HQU8OiFAKIIjHJXdFWnFdi12KUNbJDq6dEOLpHtvGSCK4O4U9+tHO6JoaBE
                jF7ryTzbqXXC3DVURBjkHyyyXkdZf5mTJaH3PgQpJEgOCeRDFrQLwb4EAUeRmo5We8bwWNiNda3eDQrU
                7CkcaOPMnaAQJMWFfBExJiqxc+0k6r02t0eOzdsV3XvCawPu3p9ZyUus5BauafGRamdkiL2pGJsuXbl5
                3ypcwzxFgYA4aK6ULK8NYXCn3X9g58vXpgbQyH2K+hdOHONgKqsZYuEzLMZytgTwI++V4QFuABNtLv8A
                IvPw3iTDKtKdN58ZqE0sPr4MPscmIdCskHIEBdfwgsEjiFl9VXPA8jWJKVOlGu0AfT+DR8AzZu+gJSIO
                jjPhehGru87XvUDGCLVQ4gl3wLtC534CzoQJp63t5m16TOciSNrDvsijoqLpuFqwDOmHphCM2MDBUh3Q
                g+k0fFHKSiewrsrfjJ3yZnC0IgwAAD8kt163cAjCc9DGik/kjQdqlSQvL+6+vFgKcf8AbEP8psGDHBh/
                3aabg8mCBnfcYnsY8WivchcKS9SiHyJTsAeqKzOl9ImQoKhqjtV2rtcPQq0FWm5uoxQjsgeHaMAAAABD
                /p7UQl73rTCs+7+AIuAAJVhG3QiGIS/LJGo+ukoYwofMzYFDaGlbgfCAQRBEaI7ETken470NpQOUnBqK
                Bq5fPBHhrQHFgZLPgX2hF5lJ+vWQHX4QWr7VzGpaFkT2JYDaCej1hOZh3EWixwbR9eLpk9IIO4QAnnDA
                vqWHJhatsujoM+4fCLLAy7NI3l01wcM3Ar28csAlwW10IaGeiICK0mi3ZooKfBGg/gFOllKqaGrfHWax
                DupsZpm/Iz6lGIA4dzLEKBUaugt/aKtoGjg8EFn24iP6/wDjxqWtxY/M9HYyWH+UFj3Hr0QtPTTnFOKX
                WSFF7TVk5KpkdCkBAIMvaObGsoNuiBKDk8j/APiVQnauZT/Xk6OqWZnNLiMmOx0WsBt5ZIzc91iQX/qh
                c1meDq7Vxlyh2ubKGNv+k5vAcsrs4ZObDTFhX0cDyDhrAXPMEyYkfglPlUnNNljcvlsFJJoH6gvpCTzx
                wwM0iqKIOqEe2QhgVIfcK8/j/wAfX4gZ7EH9AQ+kz05Y6+z+uXhzAe//AGwz2QxCx7QP29DXnnRteDNR
                SmCri6YgW3j4KPQYL8vtOx12FfZGcLQiDAAAPyfytB4y1sBibwiq6s7UKryuPa9qp+/pTyKT728zhL+0
                NuaEP8C+81vaTEg3cm3RgCxAwIf5UnKggywMdnYkeA3EgWtH0NvgVBQhrAjJJZcpEzIci6CPoOEwsGGJ
                V2Y/wKf6MqNFJybsQ9FbZDxtDh7npDisgP1o7bNl4VFvM5PRzPSHghigAP8Aqp+wMzhCu0ZQiI4gKDTO
                nYBFw44cBDponeRGAJKshZwZXq1h5qLLMkAO4M7Q/L9QCUYADXPYWCOAxwS6OmViqvuIjggswodOhG6C
                udm7gEcegPDQGkcANHl5TcerJ9Xmv8A/LplbxNVbDHvw3jtCq2BPIXTKjiC3COFYSNNi/L30PrZXtRSL
                gFmFkvZ63QmYmhZxAIAEGiOxE0icOT4poSHI+ES3ItsEA1mQpsRFGcsEyBdkBQMH+WppoO4QWgZQaUIn
                ObxSu+nl3Zrd95/uT4zs3t/q5plxpM4NfOjQ/wCr/wDxFNj/ABEPrF9Ghq7rydwBxAKK0NLCPRoj7aHu
                uKreAEHqC/QMTgrgYOwmX/5cjBrYKdcVliELbg/cuCs75EAP8AnV/ggZ0uSauWeVxSvn4SwiR/ECkJqI
                /ETwQAH5pekoamKE7Hcm/wBffLTYEi+zD7TXG5BB9E4wtQzS0DDHlbGA88W5OXdkuMtP/Sa8QY9kSsT5
                l5/pbFaMTV4Z0wH3t+fqMGATuH6gLQHjuniAHl2ZtFVXyfHkfoVRvBBmPNohg7BrH0Uuiv8AAbUps6sB
                03DVxX8V09bcWjYOD/SgqKFOOUDbVkbxHMTXdo94QEy8RPxFBod/sQSgIn5li74CfUPB+Vnlt9ANGClK
                rlQlcP00KENkKN/07Z0fNTbbXXwYxcVJunNIWszAFwAwHwCO3kAgomz8hIrVnsEQYvFBLney7pN8weZU
                rLhlm+yC6TnRguJU35R9tE2K/JCfWIoAEMfNtT/TzfffMhHpGCFqSCrkZRMCxGgMyE6FhxnrP3QN0h/F
                NpG4dL+y0hdqsFn86PdDauvpB4ozmHyQFBtG6mVqZH/rMnQhTn0DZiewAwgPM4f9Pkc4uxRScmDewygv
                vEPASIViJOLPZoN47f8AaNMwDUMLb0TdESUdm5HWB/8AJ/4R8nQNtUdvIjHs/gd8vAFYeghlzkclQXf9
                NFUm+I4mhy93YGC/RCl9MKpzY6PJLAHZA8O0YAAAACH+oSkzptOnWtZwb0ZziUhnZDSknIGsGxMESjgD
                rVCTtxnODRyIGmPYuTjhCKHFtORz/iarlhZSVG+OTTVSRrrBJIwYfRxDsX2JgR6kjZAgAt0jUgOXlC6k
                Cpn8HmxBJKPOAvQLNCkP/wBFf//aAAwDAQACAAMAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANhAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAsoAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgjz9pslAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnEAA4AglFkoAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA
                AGhtBAAtFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAHQAAAFVNgAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAMRJdAAABAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAcEitAAAAg
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAFwAAAAAAdOKIAAlAAAAAAAAAAAAAAAAAAAAAENAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAstskFkAAgAACHchpFlwAAoAAAAAAAAAAAAAAAAAAAAAJgAAAAAAAgoAA
                AElIAAAAAAAAAAAAAAAAAAAAAAAAAIAAFAAAAAAAAAAAAAApABIoAAFAAApwAcw5AxAABAAAAAAAAAAA
                AAAAAAAAAEBAAAAAAEohANttpkAAAAAAAAAAAAAAAAAAAAAAAAAAggApoAAAAAAAAAAAAFgAAIoAAGAA
                DsAE5oXA0AAFAAAAAAAAAAAAAAAAAAAAFFAAAAAAEtAslAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAABI
                AAAAAAAAAAAAEAAAooAlJAACoACDAOIHAAMgEoBIAEvAAAgEoFoAAAAAFAAtAAAlAAANNAAAAooAkAEA
                AlAAABABoAtAEpggNolgAEpABAAAAkgEFNAMAAAooFoAoAFYABHAAhAAlgolghgAsAgoIApAFMAAAohF
                ABAJAAkAAABkIAogAMFEgAAlwtgptNhlBgEsBgsgBgAEtBssEIAsoEBIgAAoAAoophBgAGQAiBAACApF
                JlhopkFAIkggANAFtAAAMAFFNFkAAgAAAAIIEoEAEEEhsABBJMABBkBEAAFBBpFhYIFJokABAAhhBFII
                ABMFoooAFPAAGNAgEAAAAplEIFUAIlgIhFAIAFgoAAEAAFFABAAAAAgAAApkNFAIsBoIFBAJkgAEEFEA
                FBsBFIA4okAoAINsBFAIkMAAAtFAopFFPAAGVwgFAAEBAoJAF0AEAAIkCoAABAAAAggAFhMIAAAAoNtt
                AFkhAAEkFAoBEAAoAAIEFEAAFBAsBA4oIpIAIggBBpAAgpAAAAAooBtAAAAgYwDAACCEAAAFYAFBFAhF
                oAAEAAAAgAhFANoAAAEJgAAAFEAFAAMAAoAAAAIAAhEFAABFtNEMs4oAogAIoAABIAIgAAAAAAIosoF4
                AAAAICAACIBFssFYAAgAogAABAEAAAAoloFFBAFAABoAAAoAAAhAssAAoAAIgEEEtBFhEIIFAIFI4oot
                EMIoAEAAhIAgAAAAAAgkhgQAAAACCAA2jEgNsFYAAINIkINhAAAAAAtAMAMkhgAAAIAAAIoAAMttEEAF
                MotlBtFgBAkEhMpJttgsJABJANgAFINllthAAEkBAFAFJoAAAAGDIA/+AsgAAgAAMoIggBAFIAAAAAIE
                pAEJAAAAIAAAIIAAFhAAsAkgJEAAogAAgklABoAlMAAsAIEAAAAABhgEJoAAMgkFoAAF8fAAAEYYCIAA
                AAAAAAAhAIAAAAAAAAAAAAAAAAAAAAFAAAFlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAgAAABgAAQFAAAA3SIgYANAAAAAAsAIIAAAAAAAAAAAAAAAAAAAEtoANpAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMoAvDAAAADXwFYAgAAAAAEFAJAAAAAAAAAAAAAAAAAAAAAIJt
                tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsIBMAAAAAAAHAFIAAAAAAFAhA
                AAAAAAAAAAAAAAAAAAAAAFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEF
                p4AAAAAAAEAAAAAAAAAotAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAZAgAAAAAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAigAAAAAAQBoAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlAAAAAFYA
                oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAjIAAAAUFkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWoAAD4kgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs9JjtAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//EAC0RAQABAgQFBQAD
                AQEBAQEAAAERACExQVFxEGGBkaEgscHR8DDh8XBQQGCQ/9oACAEDAQE/EP8A+Rl8SzHm5H3/AHXIdism
                h1LeMKEiy0/6VjREZ5ur+w4DK54H98u+j/0OHR7V/uPqkMRNx9MjoMN/6+eEGDFhy50squLd/wCgAtgl
                0KeCqcySxQDWQBbUUchhGFgRscaaQbeCvuahDEbwXpIMbEjmdsDkEzVjQsOmQb03LVhki8srF02vF6Il
                6FNQmwXnZ9z5qMBe49xP29XYr9ymkch2T5ioDRjvnRMuORq/seVKpXF/6A12C/ktJJdLJRTxEyyFyCU/
                VsHoKYFmMp0bRCn0DH9REO5WLXbhC8ZFVUCIViXC207WpYFcC7SmbpMPuWqTMfuT71JgzfLuX71NgPZv
                0futJ8j4aTyna/jGkTETe3/OccKPpbIvFyxof6GmJ+edcmEQ9RbiWTxUj3RIWsgMULlyxrSXbFvcAqCA
                KgBOQmN3MdFtfPOrhDZuzyL8l7TtSiXJkaMSdEzqJ1buuHiKlY5Xd8jpnz29IpgpsxQOC2WTzRKxDU+n
                7K0s6P037KHikUJHztr/AM3X5NPigTNIWn/wo5RH2wwKfWJLzZydJVkWYExUIRvSEYAliHUDJMefagIc
                VonOUyywwI0xplbmy/0tiW80Bjze7Az08c6URyD2q6sKrNqwBHUfZf4BQNsHdyfDnzd6jg/s/wDmqeTN
                OwUUQAKrBLQhm4haEoUTRv8ABfHGiDDEA1QCaDLAoAiDSS+4mOMHZp01LuplBP7GZoI3gHp/tFgGBbtA
                ux2DagLAw5HcW2RzNzCoELv36mRcsmNdWzZnnr3v/AY1bLnl10elM4ejk/s/+aGKxzK0QEsB/wDxBOWO
                Rbh3WIZVkReKJoBOZNQMqQn1BnYeCFSlVFy+ukIIJRBJEiS2/fr8udaga5+VxnaXCYmhI4DNrdSZfMZw
                WoF4dD4N+tzGcv4S9N8L9nMRuf8AM4llMuxdoJUPkXTgQ23kiz/KJrJz5UJsEN6BScodr4xbd6JWEGi4
                7pYZCNtYzmDFTigR/DOYkBCGCi1iweLBfIEItEUWyBaDQxY08UllIiQkgF4lFZ3BURMhAUEIMIiIiCJD
                6onRs9cPNCC5z3v/AOYNgnpXNUrEROv/ANsOn/5gFYCWglw5BJ7tu01OAuZ/tInkdK5Dt9KMwdBfVZI2
                QHtFf5j6r/MfVIkoByfVAxXNAdM+4UtyG30L59KvIlEKcIgABLSYolho4BaoAMIAWsB60OSz8iLxICgg
                AxwXaJh4GJ9JUQiZQm3gRwMyQJCQQsMOil4kIQAwtAHW/fZwqBloFZa9BM06HeQ5E2sKPcE0SFsjpc7b
                SeG2zHw8IgSMUS+3IpmsaAXCLPN+4dqlF+J8UxJka8BaBEl6DNwahFR+pDCOiPajfIT2/wBP/KxwoLm/
                s2+6QxBuhQ5hlofeH7BpFLj4OR/NgCeeRu19J9k+KDyndX9+51yXav8AMfVf5j6r/MfVf5j6r/MfVf5j
                6r/MfVf5j6r/ADH1X+Y+qw0HQRbfT3pFKy/rH/qWJwxdj+4oO3cB8t6IEI1Mo1D0YInsHdikRhEef/2I
                gP8ADV/csaQQJRi+7y0MKVWVV5+gURGEwaUB1J4NBkZXnGH7b1idKtLooRExKpg1QvU2u4u+rQwfNmFF
                1DTlZO0EcVSVB0KkIQjiybAYcVaYMjakgL9fC58XrCFkWESlLQNjFhQNAsUAXN4YVxS49hUoIg3EgtYL
                GfIrL4FHWSpBKCmBYzpzrLCkFLPCRGP0o6TktF+LmWLqx6rk6eL8sv1//KkT+LMfPDE7vv8AzzA5rxy5
                6dKALBBoUoYob1Jqdzi4gHS3fCt3tW72rd7Vu9q3e1bvak5J3g9pqzTBoW84/wDrY/Ne5wYPVsd/jH0C
                KrCyPP8Avx1ozfHJ0/rX7pFI4n/1lIxuZyMvF6mHVttl6vC4Y9j7+s2r9TBoYtCb3s3L0wTisYFsURwE
                gQrbuWtyRDOjCQLwWwRggYpgBxdw5aEESdSgBasx4ymR2PCpP4LZOQqsFHYwhEuoAAAAABAAWALAWCxw
                midT3XyRpKINQezYShJHaMeyXCHCU9q04trRQdApJH2Z2/EyESKfqbto/Kf1/wCVjOfsH3wxO77/AM2E
                +j5fjSjsLvBvrt5KcUti3txMAps0D+gfr2oDJCfsSkXLvHbLp2pCBGmjs/8AuJQmJ+81OME6zbtHzSKV
                Px6Xsb+Rty5eaBNSi+sc9Ix7/wD12EWhB2t6/C4Y9j7+kTBOwtImIm4nvQAUw1gk7RKGWPE9WGs7FE10
                taM0AsPQq5CYJIF0dMD0j4JtcpVTbdl0zwGlYjb7IFbBUAjiXhEDqOREVFbTzjOeDIgIBRBEUSKRiNiF
                x5PB9gAhBMysjAeeLbLPoBcBdiahkIzOCM4nx6AWwS6FImIm5HEFwF2F9qRMRNyPVDo9qh0ezUJiR6IX
                Amv9x9elExEnCRJ4guAu16RMRNxPf+OxTa72OGJ3ff0iYJ2FpDFG4nriDvsXqJgMXcwyN3uG4nqRSMP6
                zRmczE0/2kBCSUl5deOT8fwguAu16/3H1SJiJvb+eHR7NQmJHqkwTo/VImIm4noBbAroE0hdQaonoBcB
                dr0iYibke/oEwT0Y74VzXakTETciodOI2Celu9c1SJiJvUOjxkJEmsMesDgc0Dfe16RG5DtHj0WJlGsM
                d/QhdA1R+vTC4E1/uPr0iYJ6Md8K5rtSJiJvaoYmGNcu/ExN/wBhRkub29fhcMex9+L3NvJ2+6C2A5v2
                8VOaB9AwfEON9AepRbxpaUMxhEPRpxXAXDUuMQcRogI6pQC8kGarP0kHDswiDAg7Mjwj3GR+GoS5yDlm
                X0ImcMAEQEAoiIiiRUHLI9HKpQZA0LwGBqMb4nniigPorFCXPDth3miMotplwxAh1Mf7pXD0cnb9akUH
                XkTj0ozzzdf6oS3MhO9/HDwga/1QAQEFEg9HR/Y8vQze00z6uXvtTahzf2yvtpTxIGLnlww9nu8AVAJX
                AoDU6Zf342ogsQciPbgBCT79GkvxyOnJ/X5YUCoF1sUF7Dq02+6EobyP9eeEm9hi/B86daAQEfO+tIIj
                g0JDRj14TY1cP7aAzdGK4dv9pC1joeAfilKpF48H3wxO778WvwzP1+tWDBJm3e+XSOJybPB/3WkRhITJ
                9IaggHNbe1+U0squLd/ginLB2/rE4IJDcas2Tc2+z0RaeccMcKiv26bv4q8A7CPj6+bNMOjbzh5pBIQT
                nULEMzM58zXTbCnegYv7OhIDrm7v40opMzI84w/bcJbOx8v13oAsEGhQKhcjqTnt6JryOWfXTaJ2owQH
                v3b8EHEHcmixtfLbTb24re21Zu3y/wBxKxEO0vfKhdTc+poRJLjR3Q8DufJ1mkRhslAt0GL8HP2L02YY
                McR6zd3aSRHBs0kKaKdngFAYr+elCYOrm1h7Pd4k5hdXLkbd16A6bOb8GHdo19jQtr6jj+70oAWm7Hjz
                7VjVkEhKuXI9tV7UvKzm0a7OT8OPcoG19R+T2pQAtN0PHmXp2BWC60UJDhguC6IRPNe3CAAti3Pv7fRN
                e3kY9X4/ygwAOxwQSEkpS8kvJmfZ534ZZfIcuaa6He+FCBosbZUjg6uQVhuOa4/5y4FAYJMaTP1wBUBL
                RF7nTI++tuVAFgDkW4AQk+/emeuR+9PmglgxbFCSJTFz6Th80vIRzaNfUPw/dAyXM/7KwDgXfg6fWnoi
                Hlfcs1NGWJs4fXT0CZ0BXHS2HPh4XDHsffhOlLPLp90oFyD8Uil6GhpTvG03Mt99tOEWPJTY9wUgqTiA
                jxhY645/PpUUtAgLX6xRBwBc1C0vCAFUJZEiNfQH1GrhjiREhhGG16Up5Ek4zeuaPAzxeCIU5NVSsVVb
                r6jDwqApcSBSsFEuOxd33oFAYv7/AGiMHV1df2FMqbBjz5be9CmCm1qQFxwdzPrSgS2CsCYHvz20O/KD
                AOayrthBodaUDqTXhVLvgYvx1psJAtjBbSzakATB/eKJF6GrkfsuGOFAZb6tOR8tMqMFnm/XDB2eGHs9
                3hDlxY8uX3q7FLAWUlc4yje/BQjiRDy/rgaOBm/BPv2qHYKxUwND5ehqrM4ij+68EIOroZtNkTGN4DWW
                GXX+oozJbJNKUBXApSOqvql3wMefI/WpjQAyp3LhkZH7Nz4Y+72OGJ3ffhZsi7tp1/ugAgsFO9AwP2dI
                hHpk8mhkEwQe9AFf9dD9zwp3L0ND9i/Fv55iZlvrxbhJPNT0bPw9OKsBbNyP2mNEg5Ermr/QcIyRdwnI
                +3261dju9cu3eeKhWObU/r2jhYMm5t/VBQQDKyu6mLqBtww9ns0ekLk4PN5GWrtdM2SazHUI94oZBMEH
                vV+88E8c3+a/XfSokGLnoa9cqxxrBG2jh2ozayYmn2UoJWD9+illXVWpd8GPPQ+6uRi2Pvp242zJYxwd
                fvhaDlZ2yfjqcP068PKeHvPdww9nu8DO096mBi/DNIoSPnbXgKpGH9+imcugdvtlq7ePF6mDPE3PvClK
                Eh/d+AqEYStKYW2KFMLViNz34YdzxzZj2c+uXK+dXbNsfuVKrKyubSyO44coF7PAJXMG396HfRBWS5Tg
                OrryvvzaYxa8nAKBdX4/fMVIRi8Y/WNLS6YwDSIS+M28cMIwsPnzwh82L8dKUszLucadeDiHEz1Ps89+
                Es4Gbrty6bczO4vYWkiGGZ3jJpFQkP79PBFIw/rNSCz9EmHE35c/vxzML7Jf/SkUJ9PMf3O/AFYCWgZ1
                Q2YFkO9/9OHhcMex9+EQcr7uPmnANW/S/AKAxaM6rgfsqIsS6Mbicph5+oid2R0C4lS6Thp/FMkSXigB
                ScSwcx6gGyQvA48tcrEZie3yudmfEVwBjABhFoAB6irKhEh5cUiESlcHhcu770buix1xpsLpSyq5s9+F
                gtsXotvFI4LDzzfrj4VCQ1IogLYxaud9Ne3BAKwSvmO9qd6Bgfs+GI9j5fjvUimOB1Y8Y8cHZ4Yez3ax
                nAF+Dyz04Kd6O1uBeQ2Pmpbls3XkcvfbHhj7vY4KRMeLQ8dLarlNWiW1ukTfzWAP7c3lodW8R6caiDQv
                vnWF1Psccfd7HDE7vvwiLm3finD5wd+ASwYtipBnICM1j9yKRy9DIP4x8F2r9H7V+j9q/R+1fo/arQQM
                Zjc2eCSJqJ3KM4dJfqgXV5MD9170AYAbWpSucdrfFQJli7H6OvBTvJ2t8cVDeBs7P9xwNlzTvf44wwyg
                u0OHOhhoG/8ARlw8Kv2NHgIDVCgggwLFKd6O1uMU5YPMp3oGB+z4RBnnu3fqsrfbL2+fQ5GoTvg+aMhy
                e+Xn0Z5XD3nu4Yez3eAwjoj2eCCQgnOhcUOjc+zzWAI55PXgoDonBBISTnQ5kdG53y80hCR7ccRue/DD
                ufbgIDVigggwLFOw0PKv0cGS5XL7d61RqyPt5d9OOPYe/CCW6WHa/wB9s6VVXFrwj8Vj9R+D57cJJ5Xd
                cvvpwUtzjtY9uBgTDA6XfjzWKGM3Xlt7+9ORo+Gz44IsQd61XR+H770hAj2dnP8AT6sEbaNzt9VcQL1j
                4a/R/wBpcQB5F/rxx8Lhj2PvQkNUO7ww6JfiPmscKIEt3lazn+vgWlpVVbrXSo2f+6bpBr6g/wAQDaPK
                RAQKIjQ6tZ7W/XiKjxt7TZiQsSraujiAUBpmYCEBgIJTN7eMMR9tgPJeK381Zt1A+pP4Cnlt0TrwTJjw
                pU3MyEyxfgIHNV7x8Vgdn24T5JvfP+vfAvgpypZjlFpNSSbxPT0eFTRiyHFEDACA+d3iYDQvvn5rD5j2
                eODs8MPZ7tHFscPIe9O9Bi6H3VrDBE6/17+jH3exwVWW68JQFiZebz5Fra30j1GeVL2LeY4ey+eOPu9j
                hid334BAGgHavZZb9t+mfAAzg6m786GN2KRy9sjb+EFYLrWd2ny/Xev9y+XXSuSrkq5KuSrkqGYEXihJ
                Cx28vxS2AHl828VKswM7n3Z68PE+eFu88s8SyOnDD2ezxSW5odLvxx8Kv2NHgJ2i+x88P2NX03Iapjhj
                wOLc9vf49Cnap8/NODOnozyuHvPdww9nu8fCDp8p7UIkiJy4IJCSOTXJGZpz29ueVQjAydDSMz2oRJLj
                wQSEkrzAaaXzHxwxG578MO59uAnaL8fPDF2KRQEv67SJOZMwiH77x6Mew9+DVzlY2OAgxikTnGYb27cT
                Zcw7f7wxO7706vYYrA5b+2NTGCLaT/Xv6IQ2D7ba+M6EbjJqcEEhBOdYkuvH+/08/wCLwuGPY+9eI9zg
                gQSidm31Vjkr8/Z7UqqrK4vCJTgm0OubCOQEYj1I5UbVGCiDgSUhQViLZoUmCPlX53eHQiDkQoB1BBHF
                6EE4klcRRBlTAYyzso0BeJgLKEQC0SckSnqj8Y5hHK43OGIEk8GOj3WZ4UviLIM17z3axoCbIywX5+6Q
                DAkAOb2nxSsMnv8A0Ho8KvC9JibnvwkQxxOmXXgCsAryrFG+hgTrz2tvww9nu1h3HtwRRtOXJe9pzm3L
                tM5DHJi7743vr6cfd7H8fhXxwa2izy093xrwVgN1wOvxjVumby72w5W4Ynd9+IlC7ZIvg0AS4sNH7XKk
                SuL+g5fxWwTm4xyP6xelWws0MXd+Pf1+FfHFurqvARkIPZ/duDuNfYnAQ+YP7t6AgDQinc0E9/8APPHD
                2ezx8Kv2NHhj7vc4GHzv3x8z6RhHRHzwMh0fDb3j0Y+72KkXNsdfol6ejPK4SaA8tvaeGHs93gCsGML2
                F+OCKVFDgY5mHUx7TtQiSInKkkRzIoFmMhehjwxBHLJ3KBgEczD7PNCOCO16Eo1E4Yjc9+GHc+3DH5r3
                ODwNIXIh/vrlQavqbD/sTaEt6Mew9+HlenG3exwWtZJZ1m9v1qmMFyzd+Xvi3w4gsxkS7GPBSR6ZO5+d
                KBsIdcvs870I3GTUoyHJjfL+PwuGPY+9YUoEzP8AezwQTLLbV111PjiO2nQRwE2ToRrbR/MYTIP8WT7o
                sNOGWK6HKIw6GOLTUrGYfMwXhwmD1GEAYEiiWAqC6KkbPuMdEuNO5S7S55uLDMiPpQTKtOYZ6MHh9+CI
                S4FwydYz+KEz0F+D3pyNXwWPFArAS1YCzmDLlObrGHOeHhV4XpLI6VjwXZQtWVgBdgD86UkWEGDXm/WB
                ww9nu1BDIeTD54XgwxNf8y4gtgl0KYpsXDNu6GmvKOGPu9j+NRvE+fjjdmHx2wozzyP2VMFcZdCCxy/Y
                8MTu+/CBcwh3P08CJSi2fjl2jjghbNbBu0gMDIZ67cvfHl6pJuAnrl99KkTIXd36Pd/gNzs7p9cHCcn0
                wGh8YPjhMAys7P188WAi0y7UAV/10P3PClUris8cPZ7PHwq/Y0eDg87d+EPRMNLxM9qRGEh58VBLacBx
                TWMjnnlN0qJ1LPTPqeZoSGp5y8+iIM8Xdx7YVOgwPLm/X98MY5HifvgRsKLZ3y396YuQavxr7UKDizbS
                yy7xww9nu0C4ZXXIOf6+BerNxO4lTJC7w6fXbi6ImJua/wB6NLAuhNOznJ3H5qZJi8cvri6IbKSa/taW
                BdBe3DEbnvww7n24TLKYdmz2x4BUDClmkVCQ8ZhgMpxdj5w4Y9h78PK9MC1Ftz74XgwxNf8AMuILYJdC
                lBgXDMGrvl/TWCaib2n4pXbFg/Dz9zrHBADBAm7E7lKEdH+MQNAnfPgW7LDrjwJIrOHJ+n658eSpuUG5
                7Gu16ZIphO0yM1d4xCKUEq0hcSkHAUUJZ/jCyUSgc3Bce4DgEdocckRl1tcMjIn0w/xANq8BFAAKoFP6
                Ax31e4ki9i2Dwpok/HcMSqcjsWLgmzpMYAQUEqhSITLyZnWgEnUzN+EF7Y2edclREQnUCD4fbj4VGLMm
                GnN/ffqPUDuZJtg/3wQFWAp3oZHzv7YVg7PDD2e7QwyYlyiORmPk5cHEA7lclVmByGW78Y7WpVKsrnwx
                93sULK3yM39rh/EMI6I0AEwf0PPgBgusDTm/WdKqVlorrO58+I4KOISBi8v8OdqUVggyOWW7zqXfFj9/
                se1CNxk1OC+TtTeIHPDzUmRmtE/R7+s4tj9+/vyv4DZcw7X+eCiOoOmL7R19RFy2S5cn4elWTJHqNC4o
                5N+zj3nejORtL8Fdc919eDdu7lsGBp6CgzTLysxO8/pOLExlZ3KSRNRO5FCbhchPdbMe7apvPWjM55mn
                9c/ngg4g7lcl705IOSbvfLw6UlKsrwebJsnLlzoAkZKdmYdcR3LX61zodfaPmrySmbYP2rWCkGbm8uRr
                rtjwgi4JHXL668RsguuIfbyyz0pWK4rd1RDzwCJBBm5daNsAG0Wnm/GetDCOiPZqw1E8NLmto4965rxU
                4YAXhz/Zz2ooUlcUyMzdwpQOiNWGSJ0Skuro+w/feua8U4lgLxOnMwjGiSSZxTDY15uGV5YoYR0ZoRJL
                jUMJhGTSjYMs3I5Hy9LXOBIJuYTmfZ54IOIO5NclS3IB0In7B1p3L0Mj9m/EcMew96UErBTETBc/SKMl
                kozomJ+y4KYg7hXJUPBNhY5rn+mlVVZXFqIdG+zZ8UgIQR/fmkxUmjjtOD1iuapRskXDHquBGP1RJiGb
                5g+/WX0Qc7eMfFGeh1X4qeY7T8lOTi88DY4zGrDekRRslnhgjbTE7PxXL7H7pXMNj7nxSrdV3pQeYnz7
                lX/1iyKRbpYQGRMf4nksAIIZsGqCPN6HQsYzzkFO5QAtAiCIiCIyI3ESyJg+g8jWGouRMfIA0CXs6JwB
                UTyh+y6J1pvYoQACeFdHGZSr8zeJCwoA4CjIo8qgEjmqYHSNutMIhBnjfPlyzrFFeWB2LegMAgBFi/mf
                HrFGSyUxNm04FiPLTu+BgfO/DB2eGHs93iHnO5Pmz5rl9j904pHIt7egBCLszEuEbZaUqsqrz/jwV3HB
                /cqVwg2PufHoBIs80v4Q8UilZ+NtOOIE9uzagdW59JSuhsfa0q5V3/gwjbzP1UE8hPUs/D1/ggTNu9fo
                g6cLQYWdc39p67ENtG55w6VyvL7pXMNj7l9KtpDa3lV7ejBXccH9ypXRsfa0q3WXV4CmCm1qBzHc+orl
                9j90vo2A84+fSJSKfszB60DjD0+n46UrhB0n3+qcQr7dDA6ekEizzRnrCVZpg5W84+d+IOIPSPasVbaF
                j9vPHFCZ8u1c07VzQ6HzNOMTyy7YccERyxOzauadq5p2KcQnlNu2HotJc0fjT760NFjY+WX0A4Wc7+96
                5fY/dL5xtbzjSrdZdXis4i+tISp00Nj1ilxh1KBzHc+orkjo/K04pHIt7ejFCGmJ2Zrmnalcw2CnEK7v
                qBQBK1khBfIba9I3ypfMbW9r1/uPuv8Acfdf7j7r/cfumLXGuZ9+/OhBIyVNYXMeYZ7ntt6hhEyZoU1u
                EgS4vgbnIqUekNcFUaJhdFnOo6OBc1VFrQz2LOtcWGnZbP8AgyQ5i4Qb/wCk0o+dut9CAALh8LoZXvZJ
                ynWwVvHYKkT4rIIc2JJS5gdZ4cRjFWGik2SUGEnQ+JJrDALQP7NBcAZB6S47PLTsS72/llZYYOb/AFjv
                FXgZXd8jtfjg7PDwj5/8mCOVnXL661g2Jh8nWsMfVFGWLt/eBwMIYvBq/H/58QQWXFzjSdNdc8P4FcnU
                yd/1qNtiYmZWOG58nyeqYy5vl1DHYVvKNtZlIUzebDQzDGlUYsZ0qrhGFrD/AArzDwpwaJgBUMrWDScM
                QUKK6Y+BjXn5inAhSioY7LPj0RoRsglTMZ/0G0sotDNUtjAyYvBsTCKV08Z1Yxsgg4Z6tkCWqgcpTAkw
                tD0GAMsXYxw1wq0GFhvm/tP5RC5S7t2nKc3xY4+y8FO9Ha3v/wCUJ5mJ87NYqB2D4x596RGER5+gFAEr
                RmMXN/ZUdhfRkb/VKrKyub/+oFQjCUdjbwdvp6TR3WOmT9UioSH0LHqO0MCYoSAhUhYEAjqNi3wTmMDh
                d9BcMpc8PRPg0CSvNgPiLqv/ABMkD4BRUBIkXKfR5rzi9MlRBXMUeDmU5E4MBcLBjBG9P1yFBGd0ko0l
                XxKAqgAqrABdVbAGLQXSbmuToY1QaKPouM2DbL5bctP58Tu+/G86LHW72t3qac8Ddw++n/lioRhKBsId
                cT7PO9IWTpDc+enek5hyb+bfNT0dmgryHbvd+KjwJtdPXDu1aCzy9frv/wDrGLSGuZ99XrUlFn3PkrVd
                H7/rrSOK6X9p4DDJiXKm4mLvjTS1dKPsyKBrLig9QJjt0rBYgSwoIRD+cb0iwhwZh62xEH0RRli7GP11
                q0GFhvn9dP5lKcimlCRuxiOdtOe88FYDdyP2lARZGK+WlfIwPnd/86XV7tS6vdqVxZ//AGAeZ3v73rkr
                o/CVPR3a5TzUgshxgbcy71x5UMuAq6Xoljg//wCFpR75TMCbgUkaZOJcdjUn6L7wfzloMnTUeXzjbARu
                MmpUGh2KzIkyMduXWm5ch8vPx/ya1mRIa4g0gtUySG0U84h2jJn84zoXjnMtCGiylDiIDy0b4WhWIUAA
                HDHMC78HWtmLHy9faP8A4JTBSpXFXq/8pOqiCNpECyaGnsKluTzCIV/Ma1DCXPkl0iib8gIUcYKgXWxT
                IWLdb/eG3/OxUIwlROPvNYGzyfFRXcbQbq/QcwMh/kalQmRCEIQFMmK2Ud5ZQpo4TCcAZxsH7y5Fi+Kq
                q4rP/PEUmPhNHl+xpV+jTFd0OMUHcnlHTIwR2T0T/wAXay5tAaHMMlEwBVkItGVcHDwQBouBgBbVsffa
                oWV0C1n46zBlqjl/oP8AnwoyWSsDtg8sW4DK5C9igpPqHEQgmWbSyUAbBYwIQRi5ziIagAmMwTJZgBak
                EgekWtxjZPscOBWhKw7wmEycgornCxQM8/681OGS1x84dQqWvBoW8473jl/0MwCmzSgG6EEgjIjCEYRL
                kWqw0+mahFazLkBTZQ08IlrmlnYT3rAjti/PJzla2c0gsYC6eJvCCCTfSKVgmW0BDbKyHJQTwDMcCLpV
                aNhVwjYfL/VKuKu7/wD0V//EAC4RAQACAAMFBwUBAQEBAAAAAAERIQAx8CBBUWFxEDBAgZGhwVBgcLHh
                0fGQgP/aAAgBAgEBPxD/ANWtf5/9IvEcOEtQABaqAb8PA5FJJSUENMgmqYnAe8U5vko6zlhZmWUN8jHr
                DlhRkOURe6++FnZHR8Y8ASqxhNa1y/IylfiCpXRi1AOOEhJEN8YU2IiSqVXVZXZhxkhMKvzFS7KQu9GT
                vNyHirTBG3rUY6/j2SiAejLGYnFcEFwK1UjTDHgEzMVFprstdxOx3qUi00qwSnJqFHNgRmwbPxqfj1/I
                DbFRgIq0YLT1PQYF+VQSHWzQLASq7bXclcfe5I/PGv8AezPon+/uufHvOGtf8/GygKoAKqwAWqtAFq5Y
                bCoEsSEG8ZIEbJHciKCMHIp03UCbVkI43zrWuM/3Ufzpz7d/Tm75zP17RH4+eh2zDZlCMDBGR+Y7qXVB
                VQNvAEiIk4iuae1YEuFQzsJE5lIGRAh4UkRlYiI7ujfZ05+tyt/3jy+fx8sIrh6Fup5OVFS95NAhhpLI
                Qk4hJMxCR8Sa0ibjKgwtSQLCMkC+gAENszQCVCCQmDRm5AMItJBhygMr+zMqGZuZzxJR2eBvMtKROYII
                uzRgNoJiqF1ltAiSMjYmScfxyxQJuSLYtHxMPrzJGXm7t3AOuE0TgigllBCmAUcmjrAmRm8yl4DWoSyJ
                Zvqy3BE4YSAIEPPcq4mUM81jsHHNUUARkbCmwWTDCLpDmFsO0YSDSuGBqGXOZCAUXFkMK5STBmsDAWsC
                UAuKl5kcVMleVuzm43ROILNoiIrR2xeJQCVSMjUpgDl9Xtv5+ytTrVfV9dNef1GaEWDExr1KN8Rv214v
                w2UQhWCooCwEGVyMwNWEDMRoNgOIEkb0qkhhgwTr2CjbnUqFyagSSTFG9jwgNADAAAAMRgVEhWVFSgS0
                Xfg5p3yU3dKglQM1AXFAFwFYDMChBSMAvZhhRIAWUwtMWTDAR2RIgJhG4JqiaRgCUdORochPntf3Wv8A
                Y+tdPvdBWEecKnTzwbVDIIkgEKpRiRgFjAZAiklQkgJlCBGTOXUCoKoVVVVVZ2D8IerwBKgABVQLxHMJ
                AKJJHA1kUJVSLsMAsmUI98jfjPPsu7nWSQBZzkVBgiqMIh5drNDn2hKQrLMiloy4QgwBqFQEs4TvmyWW
                38cSpNAHGVfCvc2iEquXCHwQQvciFJrgZE66qeAbtmYgmcWQuzsVSUIvha6jNJSNyo325JPYp8jYBjAJ
                vXcZ44oiKIiIwiWIliOTg7lZLSkUvh1UkXbnMGhAKGBKT3onhpOJ6mJHJn6j1+8B/vDFpvE58zVTGn5S
                bVBwgkImzCot2plR0Zg82/AoIS/fIpyidR2ShqCRCpAzZMFkXAr2PLyHzIA5bmscVRsiiIojIlImSO5M
                Sv8AzrKVItYxCdCvgNaz+ja6fQda0bWtavpntVUxy/m3rpnqvG61rf3WtavY1rXx9DaNGIgYkGG0GUBg
                5C5KiVBFxwqhSVNiZQyxvJbODHd6PDCNUACYZLFgKLWQIntnDHYJQUhvhngIhY5DA5AByOx3GWa0Oe0p
                gvKkkJulKLYmYI7x/wA/flrjl4HXT7N1r28Y5PR7zWq1+u61r18DrX87uPcTeFt+u0dIqglnl9FhWAcV
                gHIiihzmIsli0uHoMHlJa4JEMgpSdpoX7kP0Q9rLZobrUav97QOUikxMDeJIY4hsfF/vZ1rXzsN+p7I4
                99a/v0jXps61r3+ha369b+h9NvI9H9eN99eXhpglKOk9pFERRERGESxEsRycBkeIAsKwQONFnHGIigUJ
                kMgCrcSgONkX8ylDCO83IiSI9kWbo61649qqELJwVj22lKJTyaj5CeUT2AygES8EfmB1drX+bL8nunfm
                RPDwejw2ten0bf6fOvLxmR6P6+oantcUlccAV6epG2CZyygkBFAIiIkjOH6DAEWqzEBDOKjEQg/kmTC2
                vOkig3mMiFyaSpJsyAYGrzXiH7iOfaiBHURm9FRydpBSTlwBfKBzjf2EEJihWmM5c24Zkx2z74641rjs
                uXn+x3+v81x8ZrXxx+xda0d1kej+vqZFFKqfYQQYBKBQoETCQJRnAmOpO6qcGUuOTbyBOS9qvCA5oU+f
                /RO0jkgxm3LkdBuExBKXVTlRtoWRyBcCUF81YQzEgUDFJ3bl5/sfYutZ/Vcj0f13Wv8AdeW/6FrWv7tA
                xEX+RAvkzHckmAQUKCEGETciInHuxsNzfDcbpOHeRIi4Yp6UyQp3rBvBZ7tgFQBVQAJVaAC1XIw8q2UR
                S4lbd4W88HE8x80NTKsSIVBCriLWRznA5LjOe7b9n0Z+O51rXx3Ote32FrWna18+L1rXp43PL18Y9QTI
                gIihSUXehsTuzI8VZWbE4zQLdBDAvYrrFYSpTcqTOUmszYmIUtJIPNB71GZkhA92wlBSZZElhhXv7y2V
                FSpoACgADE4QSnOB/wBV4LR93ecenyP0Hzj0+R8QkFkoq8HBo5rGTgKzgPWJTFcuLqRxMSBJqBZtrLM2
                leDaVFL7KxYNyJ3FqB5MJJDRQKIhCTODwo6SIAjgVgPPSwucKy7VxRkgBS1HYpJUKEQDMgMT5sqpaASy
                Ioi2jw8AD70EfElSWyVVWlRoUgUlE8FtXAFp4jWv79Tz+f8APujWtfG2lI1i4AULFGZy8pBnQFBulVBC
                QYGOzCIhAgiXHFo3uZ9y/sAWohAYawiJlMGLbiU3FSLUitCRCHyBKFef7wBG8UUmUqk0Um4QuIW4wChO
                hfNlY8jQocmN7FAEUuS6AwYOBBNGqK27AlTsCaSoJBSiCakCS4rCj9k61x+68tk7CHCMgNIKI0imAGlJ
                534s0yFCUlYUmk6zYLeizhmQq9Y8XwcPlX+u6EZwSrJYBuREwWdImiGQxMypYqYrC9W8EHyV68aytsvV
                DicpNKqTsUZBmIlOVSohQbhsa1/PxjrWvTaPBxH0As0TVCAoTBn0l1vrZW1EQuEvEdJkRI3ZSW8rL4Df
                NHEwyGlRuOMtnR+OGxTVcRTE9O2CneAaPzJFkxNy0irmRH48yD4EUC7IIuIURUZuwIGG9mAyStDY76WA
                NJMUtN4pN9C0wWMmsuehAEtubfbrX8/HdZ6KQKJCGSEpKBgYhWr0hlRmNlBQRFC96ke0hZnRwNYQ5v8A
                x+1hQZiNhASEAmMT8NmIh4CIAiIk94V0AchA1oIg0EuEuBeZeQ8+bASWpSqv5BjgPHAKIoAQgxhghHaz
                mAx6cpOQIdzHMhSFy9LADmg0YSYDKRtuRSuSq7Wv1o/5+QKe1knw8wSw3N81HyH+zjfFZpUu9AOvBWZi
                gsbkfKKhin5xzHJJ2SDV1KSRxiBSwmfAHsBIougAZFZwlKPyOInOxqN2Ju4IWZ5PHeBszwSiLkvOgPUM
                IxJgMpjcBcJDM758I34YER2jTlVHr4uAyxVzb2MglyLZf/ov/8QAKxABAQACAgICAQQCAgIDAAAAAREA
                IRAxIEEwUWFQcHGBQGCRoZCx0eHw/9oACAEBAAE/EP8AxGHQO+eg/kwHslX+69NPymrIEFMKJtvE64kj
                uZzuByJ/coIE9JEmezyhNlsemkkyYuxN8u4F0zDnAxuServANtuCGzB7LaBtiLWU/cFkzlwAqCABVUAF
                WYlQWwOAGOwI94ykrZEAjCoFCiJrCRYI2siN2k3KTswuy+7+CfGPPT4I+DqRjrlCeGO1iv8AkI0zIsHe
                KAnKghFfkxdR+346c9mUgDrAth9W6YeFrC284Zb6TGUYbEPNM0WjJYJdSRoMCQQ7HGX3TB9AJ7XF1SC6
                Ez8Gk/lX84OVLC6mNgEUuGU49ERO8ESLmTTu6G608eojp8VAdFH7BSWfe4i2cNdk39JFHTORqTxPyayF
                phSPPJ+ea004IvLEL67NsoeDhx+3yL/gIl4HKABVAwJ5yKgNOV5ZAxs+8MLjh8mAAMmypIAPeiikY2eN
                h7yx1i6exCjmKFCdL2mT/wBWxv8AJxLUwQyXj8cjC2+5f4iQcBxLOILnreaVPrtvTK1xUyQeP6tBs/6x
                QxGnO0Q6lfVOQPRUClanQn9Ppr35ZzZPwrwiUwJQcFA6U5pclEkGHrcJ+3L88PruwahUM5AWDMbwjSlt
                PscjqHoj7BtKDareILjYEIASApIhEQoKkV/x87PyrSSiqBfTCFLZiSZClYwgQFgEli0poOc6sFJ1qiJh
                IOCPhyZcucD4wjBTHOJ4C1C92jtz7VbbigFWdkYmAP26oSIbhg0CQmxAEuKNXD8iJ+JIPgA0xU4RiFH7
                bsUHTX7G147vUtBOkGAiFFAB5zcICQi6tzRWzCC7ZpfoY/QuGLqYC5koQRTRXX2RQGeCXcAAc+eG7C24
                yqQTCMqEdYmgbIx1hykKUN45fjV8ABlUvcRStwTrf3IiAOH4gJnBLFISk4AKChIIJ7sJ/f21miXq2Y2Z
                4xhEkFYKKP4TDewKUNT4AijRibE7H7wb9gBXCBtJZMdf0M2AeHfh+yCOmQVVURIBEKADl56DghIZT+qB
                WThBErlWloySL1TGApqDOtBY4SRMKybxmzzGtq2FDRXKD8D4UdFh2+o4Q750YAylNxRbdf7aajwk2CL+
                Et84fFRVjR69Fwv7IZbr0NtRyyipENOQNITzGp5O4niGYS9UdJ8SxYMFdXF/Vmw0JDBC9oxudV66K239
                H6K/zweXYWGwbrZqbfgpOBDO+G2A3KAQaZ2sIVELNs66klwxVzqwX9sWc2IX5xUaEA3jjYCUgKtfbF7i
                13D5Kb3zyIRW5YSEp48juMyrVCK1S+76M7H4BW3FZaEoFVIht2Y776V33ZbbJra7ybShpBdxmpjOG0ju
                AwDnGmp7HZA8OExQCCiIij5InEBTIjBwHZLhGEiqVoUHb9LDKrJnLgBUEACqoAKsxqG2cUX0q7N9hida
                DZL7sqf8xONY+4SzVRHlIAVQMh+kKgP7rn/1iyAehbFlEhzKzgcbeNZzri2ITJEDBU+zCCkw8ZJVio1G
                pJIOhKkBkGFc0U1wGmI6QH9PtXJhy/uaqVIowgh0D+MIOyH518wkqZDnlpd/GOMaWqqiA8c0PED7q0zy
                FQc1dt4VQdOc7VeenxP+uaGm0BrXmxDHpwQCYIZCQFFS+Po6amAxeKlB21RbDttMG6w621l8Tanb+ATN
                AEGiAGfm5/zc46tZxLSrAig2Rsjk3kQsgzo9BJKi7bDxKELwGcTa+isCwIF9h4STPrqiyRL3so2LK1Mt
                0AvbWB6NqMewIc8qUZPkLrRTSLGcm2juwjc2QVPZGV6qb0/Sm9ar2pJS8i6YEbm5ilVBY7CubwrHTkit
                qhesI2ECkI2aQcJnzb5zRQTkVMtzRl+ZAj1n2gmB5rPVwgeQFCDO6ICYF0RmATKwBevIwmgikBolgEj8
                EKFChQoUKFZvRKqk7MCHVRCIpZqlktKSrsra77wYcFrhHUEuCmyC0eNUpM9/VTi19WQ6GpD1nrQssIUE
                R/A9LCl8VBGqBG4x9B8xUOSUCjn8QVIx9Ii/zOKtaze3SsJt5WjAGxJYqGJc2GxBlo+6BeSa6E98KFDF
                jqUuZgqAbApA7MGbEicSGbPCdxA21RIAeZ2pkk3kL1qCLYvJweufeQihfD1yn9HWXbfoG4szBKrOsaKp
                AiapSOOWVWH2i1U24D0SRb7slKmKUEq4O4vEQHU7FAStPCo/ViiwWOYFIgBEzmjANSIVeiKDioLKCISN
                ABFbGWD6KOK92n+aswcMVxaKlGtikYvfkDG+Xp2UFPcwBj9JVzFdimX/AJ4R8SL+G5XVVBj4i+U1+0hF
                6ISJ6ADr3GfjDRTnDo6XtIKSDSgGQDTvQVS6QAtAgvpxKA/5YYM4o9vCkic1wS7tQYgfVzCP3sUKdSfI
                8ePHjxOmS2ExUEO2idC6xKAa/SgP6jBnMqDgfKPUw06AASQAAMd8yMA/VIDvGH4EVU2ERODMY7KXsqp+
                j4TBUIISBYvM7RL5KeNduN+k4k6tbMQgxBqD/wCXvNzPZ6Dpvoc6MPPj42k2t7T+QyMAUAAV7XtCdqV2
                /CZeWohiN20qiOKl+UhOgFAowksBFcNEpGz4CSl0KMjQR/EEIOBgAAAHgiF5ZN6FJwBVAco4cQUqS/Cd
                ZGGDGUVk1s+6wYAAAABANAHQHoONvXGdaAD90UtVpSCgZ7i7OwUlGcM+6EqsoLxo2LP1CWQ0QTF1eQQy
                bIo7aKCa1o2Nof0pvNdrskkN8BCSQ+dRa5NQLgvXA3h+GHphLJNEKIbAeIqIyBB9FI6fl6grDa9Gw0LR
                riMiB4KHhSDgUEiiCcqGHnRo7If4kMy6sUbHO3uZVvM5WbCQehd1WLg8ZyFf1w6l41cowUTJ73jdMUUm
                1JRAxt2r4e7E3dR4lseIsZ1metaW6jBciI+MrKkD/wAlCUoQNjsc9knvGKLAhLs9ToW1EnyejbUOpWjI
                aSZQBcp/As8LgiCoMAM2dh0ct47A4jEOOSQVUaHapl9j368WZk1KZTb8eiYpwINR3dUPs8etjcPD1S97
                pKewQx90maXHJEkXan/oN8gF01JGhsLWYwxoBAAiAiJER0iaR0mFR66NSAYeUIJkZQvMzquyhfaeP0D0
                0N16dxl0sh0tBNy0zA7OxL5sagFc6kUI8jUMyaxzX7WLCk8XEqgnh6JXkx6T0qnpEBSyjgtDXe0FtdKG
                9LwQIAUAAVVdAG1dBtzs66q82BBKGnWvJSYwCQdOJj/hpImPKQaSh0lGDDshTxukXElkipjh+R0ECalQ
                lL2cpJsKPzQ0Q5SdB/yYvnBFYNTlqOd+jkiwPbSgUtpHXTJFLgAlD4kZGDHooJdBSGh+sC+sPf7q6VU7
                zKF5zyeRXQpBP1sRfeJBISCnPFBHzuQI0OgkM+hhDkDPTVOJwOYtogPBbjWgBimAHiFL0WKyluC5v1/0
                /aB9bsTA8p3q19OsLEvi5B0LcKKfcZbmNO41YgHqgVoIBuF6ewNBox6CNGLhooEolUUBQUgoQfCN/QBQ
                60hdALgPI61QXcfEpDyHsEbYpLIxoRnZmAXkIZGmZVyBHxeNGrU1CpolAFwVsmGdFmaxLoNoE/tJpFcx
                gVGGnxbAeLaBzz8oAXG8RPxQ0gKag9oYEymFydyYKGjjY5AitK9wpaghKqUQIwm8dyBRUi5Rrj0tDgDq
                QkA+L390wuwF3Xlkbw12NxFAuQKwBR6AEBEQuudDLh54tigfVZK5Urknu4lLPG0/FnKAqgAqrADaq6AO
                3Ei8QAoNjb10l0getmQVEV01UiJKLXydfHbdo3Kb2YBGWTh4h4OWR1QKAFRAAKqugDaugx3ZAdymuVFK
                6w61UrqkHEnIofEeOI2miHyEV6IXAhrMvIyOB3jHK0DRJDwEuvBTmpwDQqHqPRGmDh+LwvwYBApkEKYh
                /AWW8/60REQF8Ajz0ArN/cT6sJe120ywwKVs0ZMdX0mI+XW+e+UDfMRKQOUACqAuWv1D3IvekBBDgeeE
                G1Co4aDRARfrVR4ze5T2wi3C8hecwxQWXazPEx9PI9gj7RneRGdPHaaE2Igj8fo2OD5/SwB4FBLlI28K
                WHq0f/ZHsieXIEEBEBERLhbBzbitz71Ait3XcZNukhIHYHVOzuSl4RT9OxPFcKCnQsn3SfcHrHLEGO4E
                fp/rg+LMvTAa5sBltKgvHQOsR+w1XvbPFBEQRERKI6RHSJpHvIfuAkSPRUSRum4hlrkgMYDjlzARBERK
                JsR6R9jyilO+JajCubdJy3rRlXW1DzZN/qJ3ENbbqnE6AHCBIYEJgKRYUFGpIM4x3JZMQvxHhoFAwJoh
                uYoZaGybT6l3hNFdTODrGt8mhee7G55ISCgL7NR0FXsOX277+EATlE6clxVAQAAHwAIQdcEHRnyF+OTp
                owM7AkR4+Jj2Z/RaIHWQAzpsBzcPwS4j0JEeCwvXE/c0dA8Q8zxYb7KpR86mx/tro05yo2btwwoQcTsH
                1zyGA2pmbX8Hc13MViE5XZMD8XV/VU090tqSaHBRCGFk1YXDwfRMUt1SSrOJbWrEh7MI8McEEQoEAEpL
                DBYlUBlp5FDFQqYICnlrNBksZqzxygqkRvpjI89EbZkVrgR/nw7PxD1N4lt8Sa1LE8FAUD1/wmbhrDyi
                5MdxfUTNo7AqMdNhaRxGAxuCiIojRNInSPpMulNnDAfmWXqLNO/pjwcTmLx8Dzd2Z0fxtxELGdooHQ/w
                wx/xb0xS5mgMYjuMvjx5JF/wQLbxenHmZNGBEV5wTKxDKCOt4CcapCEjHCmc+6Gb0p3F8JRyDNRktw6i
                e1WWgHpdXA1QMQwVsBtJR4X20tjfeJDxOGaNsrNewYueQWprTcB3B3HvxAmarLw1oq2FjCDACwk7DwJ2
                xOOOXKdBQFUAFVYAbVXQB25PcW0TA3y/PNpINxHVaSr72riSwAlloPy4tTfhvN8za7AMEjdgXfiRDMlD
                nF3qLYWoyIDKiIokTSPY/TldV+SrAFjoBCYAaZV+TYPMyczQR/EMKuFlAiiPHUM8Sv2QZUxMkVxmE1SO
                vucZ3viyw00UHRjbZeQXc4dL3xgS1LZIs5WnGwekHiccgx5nbnOebyrWspTSObm4kWdAxEg1g53UfPiz
                EAKG0Ccyl7WYbYAzRTg1q2K0rE6qjyinMYYRsRY7ku1jDFdcISSQlI4UAM7bhxBVr2myXdayiNhHVmsC
                dwWQjRj4MTihySK4cjuRRnF2O7KqMjr0G5htaqz0ZeiGdSZMDNF7P7JKP3sotzJtjOAJUS6ZL2KkmAqs
                lhVODSNHApDDmhX/ALHw8/xRryuJzXdGMqdBcqBwIWdkOaIAi/Er2H/6KpZ+zmtwYjV88fLGbdll+kwp
                0r9jORBUM8NdmQ343FqBE0zxINxbhdClcKyzvBcD0KHwLoAcScAXEhw6jp8zr3FoPHzaqYcFUBHDt3nG
                wgA+Dv8AtXyxLlJGLqf4c9oURdwD745Up/IEn4uAAQFAiJg7g0z4+gliVAUaMWZCr2Bdf9jQfUkxq5D3
                DqYY2bpF142t4RI3FgBdSBGwQbblqjoX4Vp5QXanSDX1DLCYUTiF1UyB6OWOBhxosvTabbsc0aUOO9D3
                uxYZZoZZve77DQGvIj6/mDUMyy1dwgiIIkR2I9iexxbUEgK2O6XHYo91sZgEFkBt4AscJLTRqfotyj8f
                Rt+giaBVsQDhy42VDC1vv9C7pq4ZoxmcG8hqHgZq1NiX0j94zx2vIwSFBwY82N+hsiGs0R9PErTeWg0Q
                D+CPQnvD6p9YCumdsk8S+EVxOlEBqbBQZudZsUKshJ7WPyvAHAEUJ2etbW33e9+QOEJwElZtqrRYRU5I
                1fAxq1aS2lXvjQvCDaP02etj/j6mUDlIu5h7kFQ6ScOHIG5iFVSEVFxwv5YNJFmI+cuhE0YWzMqtqFx4
                8nFBTiEY7JTBzWKojMcfaoAddt+FwV8TwVUe/wCNaD8LHk5B9kGgY5n6qfBuFpqwp4tVpYA1ekeM+Zjt
                DWIVDvWWUzmtDrC1K2WCCq7zU9G/bUR+5JYNcyVZLsf8fwuj6G2eigm2aFPDBYPIFcIwoNrahwgPVFXh
                8eRj6Pg6T9sGQg8Md7xd085hSEgMVSI0F7hRq5wCAqAKrANqvQHtcB+f+7pu8e4+A/2ucmcxpKtU4P8A
                f7LwfXlUo/Un6bgocmdjMtasNWV3Njtee7PHxhde6iFdhlatCnNPFwQcVqH98ogsKOLvM1UDpYhlzbRO
                h7VNrJk+iNEWD4pwFBCvlE0UI1IjgpTMg3S6V5w0wt19oCDxRv2ViAg0fBEkSCZkwQXXlHSdS8wk5FRJ
                D57AUyMiPksGDIuHHsqqHAsEZVKllJLpbH/FnNX+QLBusZhcKw7uzatEKiws+CDlKHknAbwMXs2frArD
                VrjJgiTTso3MdztDiU+T8QC/sFj4YOyBI+higRBEURHDDpqiNwsyDRhDhW3uzSbfgkKrEatiq8NqiTwN
                FUW6TRri5lBYwEL6QJdkLFEpVAu4kbFjDP7Vcq6proavsgDD6x9kKMbsAYgysKJh+u39k5HEFvj7q+zC
                SohmKindwtIjAgH3AkFUIDZ1ix99wy6brZlcF8es686hxi5d14aOJzMimELYfNpQFApvz1Ib0R6GSZ44
                UUjdmnt9vnCKUL/7z1+2hUwcB6YIg4wOqV4tklOM+xAbXHaU73gqgEgIgMEIFrji2BQKdlRlACzhMYIS
                F6lOvhUAGHRDkAQGIAHQJ0E5rP8A4sLt5UIUhvBzPKn7TKZf5Uatq8gqFouG+pvsCR6q3Jcg4MmFZixd
                r9qypi7SPoo2sBFI68xnt3Z/u/Mkwx6O873wy4jWU+QWZb7AGmMiL0Mgc/eEs9rSXqGdzHjAqekRQkZN
                SMnUmpwQ5Gt2KT2JXoD3za5jVm2DnXizkoLVkQ2Z+vM4nBNIvB35IF4rm+oae9lnwBE/Z0B1Mgox3+UF
                DSYsQST8CZd89yN768ckT8a3dMGv/mx3rPOGUUt4H3+5SwpdS06oXYc93yZVOfAj1eCMFBmcTlEZHNmV
                8PFwuot7iD1iURcoiVpQBfEjMULlQJAAjfmsrrnZvlG9Zzy4ABUIAKqAXND0hCp4zYfFY1zwwsVG8xWc
                idNo1l+ircfDjM6VLSeClRLENqGLuPFwxCwChacfMiotZqeD6IrRPKDJdIgFLhBAYS393gKXB5RBcFDd
                WgFhejGE9fNHkupMSWXAcoe6+jZxnPBlQQAKiACrMqusLCbKtGfma2htKEq0ysENhz2uhX+uLMRYLQ3g
                zBx8DYgHTBIL8dn85fzIfJSLw5SQFPtlBIM2WWgKAmwTitkgNgOsAKENOJdinliI0NmkP7Me7PfJgaDQ
                6ACf0eR2jbyogr0o0noOlHgD4bIBm1AqtEHCIfFv/ICzRnjCTs1YksFmji70Lh8Alu4iCIBNpxr/AJ+C
                FbDAcZtbqo9u3uwaD+E1OFtizUA4RSUZR5ont9ETRwCbCBuKrBVGnb4zNY3X89EQHseBchkmU0GbVCp4
                q0Hu6Hl9YDkAA3zEQkDgAAAAB44LDJJW8VUC8tFwBgLtLABTU1Frw1WXIWOwu1fDIanGDn0ydH47lHsV
                5kfLYS/YIMfvOTtvrdygYBICmRpRqQuCu9ZXfkAC3m/7odQgmD6coIsMOAyukFgwrJgRGcAFypF3PZ3z
                NFCONUJ95DLsgrD1KVFzNYioUVhcKhxqJMKalM+IPApz/K62x3s0rLk4aXxUN27775J5AXcIJ9QdjFEV
                BnQBmRPpBMTowCcKIUKKQ1+CDBgq3/aiASS0TC45XA5hNEmnk0ErQb2HTatl0au4CJXDnS/RJkqbLH8l
                iyAg4cTn3ZXmGFUEz2nFkgoNx8kED/LfjVVVVWq7Ve1fa5KtUltM19/vuHIVSdaHub30DL43HmcLm5AR
                WyG+Y6uQk2ZWwp4NCNXr5sFzj4HxcDiCzp/nR+anlAsDF4hUIRVBHxfkYvLUO47oFgklIKGJEeJLxByJ
                1XFqAjWZ6KxfkCVExmd2LoI/iGEHKwBVAXE7pknXuf1gA3XyOmvp2JnQn28jqXIChrrmVgLfcTagFpDC
                hWMuxmgCvRT6lEI0+GR8NViAyHHrCIJoCFEUEEoAGHQiQyHsLNlV4xKmchRFDUEEYnC+A1EGZVZzOCyl
                4kEPz3adpAEYibPKbftuUcSgIjoEwc/CPMC4R/KJAku4UhH3KpYWZJBndJ+X17phCo+KjepATGSiIsOG
                K44EVHF8sXRSqIICyqZPsR2wS6tYOKKhOCTQCWkPfCT6IiDoATy5ByEJ4fS2aFyyOYbQI1RbQ+Tpr9R4
                0M4M/wA7BtZMWRQ03jk+gHFGIAPa77VLicqFxeLoJKMHdGJh4LvcUcAhnGr04kPNJxENriyuAJzwofeK
                J7QrgikFCIIiMRHYjpHY4orWocuaCxKzKZfZqIgHUBPOGA5+ZOIGoOaR+XGbqjkHapaLbK6ODRqvYKPl
                CUbs4QtNeCME40lCdXX1mSyIYgefimg3DWUM8fRtRCmowztffBHrhpDvoPsIOrtIHZx0638g6KFFDwxC
                q8UGJCGHOlFRtQWAYacNtjruvZGN3quJqDyBMBAAEQaIiiIiMcsYU+pqtIltLBTyUHrSChgZ5cQBKl+O
                zIdiDQAIGIfhB/lf/r/rlWqnfYN/sfI1UK/5Lf2B/fB2wlUPQhTixLgNhKRoQFHAAAMFAbtbgG2MQKQK
                quU4DVfeNNCro4193+ePiKwqkRylgjmP0iKeTw1Klwn5eyrSLUR8P5vmbWYBgDGsTZpzTyzaXhSJmIAC
                oQACqoAV1i0u2KP+yspdCqP6AkDSi7dFi0HjgsGMk6Ri6DZ2Kjw3Zb2HpkiGRNIdGLm2go92UYfiG38W
                eSgPPUD8sRxYgXKSLwxziCpNdZYPFIHgQ86pGI8PygOBUE4Jpp/RspqlpgsPkLRRYdNiicAK6oCsgXP+
                dmLim+eC+860O4KDndQjYOpY4/ecn/VW7lJDf37sr9TnR2HtBdN5bYnqQvhPxjqyJmf/ACc+BESqemC4
                fEHRrOvsQdH2YE+u6mSX8H16J9qlqDwuXLlyjQB4yTkWmiR4G3VIYcrVDdXpBXvSjZMduZVRb6GzbQcI
                Bh8V+aQwaYCgAYBufdDBek1poBWb/WcRdRrq/e1seR8RvQP5PoM2iNmNC18lij0gj+TKXEhR2CVaKtA5
                QcRFpy8kUNeQqjcIEcOkhEI0xZ98KUxol/yzi+5CuyWr4WCxgFKhWE0E3OJhpNfkKOlNGvbwKj5vqVYK
                dFoKw43cQo6MREZUAV+OR8NVn0I0gcec4Zd/yDGRJwxKF3+7WueHATcA7WLMj7n3CHkfZwYz+9GhLKwC
                g3qZnWCBQ4/aKA1sw55qz6u82kusCxQ1I/8AqdPr1zhTIEQO/S5+eY5Ll4AWDdwbFdRhbcgrtT0RhlAS
                2HldQrXzvfgKZAOQAiAi3PAIH96CJkAOqji3qEJoc/Ys7k1T7AzOEIbBgAAAcPWNq+rQUT2g6DhQ2hA6
                LuGU0ImnCdBUT7Adijtkxr5Gt8GFT18H1PrdnwbdSh8bSGmuhQ16DBEgXACoE+qWK8jp/wAu6vCFuAEf
                zIfD0bC+gqZjBgx4hzLiQNEGN/urX1dZUqzlgoelCC756Nxq7D0inOjX8pJZIApXzQB+1EJK5GUIiKYq
                pWZa6YkURwgVWG52RhRPqzDgBAHRDc02AKqWElACus+l38CL+DfIFosA2dS+zf8AK8kfAX2AH9l+wjq8
                RpAvakTelGmE5BQIxgyGxosLOABhUZaFAAKRRNc/j3BKg7XxBAPZofLylbVRjpQqmZa9FN2D8OrnQ6ce
                ojF0XFhBeBzHFKKmWe4PJ6McZJ6WEy1EHdHJgPVshwfKsa78UJFwOTVWArlUdvTAdEEgTgNQEuv3wLmy
                JS5FyBToX/gdUVj6Lp8yAB6EtTUIaTHDBsNKiDFEE3IOhmzIiEDHLsIVhZcLzZc0lyg4qGRU9CBQh0sZ
                hks9okIWqFgETE1GjxIuBuA8BOy+D12d+aHeycteSa4Y/Du2jXX1LY5f4cI0AVwGMl2dhSy3iBzVKQCC
                qZQcN4nmbUaBgB4//RBRDnkqaETIukQivIT04MqX1aUWHQsQLOAMLsScQlMBBDbg2kLMH2MB0tOHyQS6
                Ek2jE4AoAuf/AKUYJpL8YewUobFBFtHwovDqLhA4D21AQToazQNUnHaNVsCEHwRF+LV7neoimgog0FLo
                XHsgeXIYAEQEREExx4Tm3KoVLu4V5dlExokCsqkmRQrY/YUlz4dtFfBkMZo69b2An8iI/STggE3CUJRe
                kz4LrH2+QafB8Prm42jPVGDcwGIt4CSNL6TaqdpQBkgTpiVRGYFze+z1lbbdDJjNqI26cztsOw1+BEdz
                lfhXwbrNGxMsjKBs86PGVMzrAQoZW0UwPwtwRCHGPNbQgEFAiIiJRE0ibE0nj9ehZeVTbUDoEaoOAuTM
                2hAAWT3hMVPGqJGNHeOAnw3m+ZtdgGAfEEXSxg7QNBjBSIoyuzuHRA/+ZTmj4gqIHfBcr+PD6xIh+Koc
                GEW4HHGxAogZXsoPYfuZK6JAUS5jzXnPDXoEESBVBzQ8Yo0kCZOv4kLiJGiJQGvYETsRHZyb+qLSTLPq
                27NOKmssEGIImQkyoFVmVfCGiA2ZSuUOmDWc8pslBFtNJP0jtzEw/cQvh8mf4hCSprWpVaaH/ogcmb2T
                X8ixFR6utTyNXWH7PF3QFCVFqPpQAaF7DttAy6CUpNOFGtDpwLhEAw0gBbtODOBsjecI3G1czGScTAEW
                wskNzMj2Ochq4BiVsyCF9gVY+TqlgnNTWPKc6Nr4+CRq5kkVpxky70S2gNuWypg/v22jpvXG9B4pTu1O
                xM2VDemsxKQFacx+xSd82o++vIsL5uy8ONONoxeBvAG4/NKeLiX27ZxGrfmzwUJwWo3e+x8excmkK8xN
                QbBIPdvyo+ijMJCZp7i/sJTAVR0zh9/iwUAxMFxMaEJdi+U8nMNHM5vbzWhOHukFKfvAtulAzW4m0CJa
                oWsRwhHHzEh5YITVSVwgYeNrZAAjJU/uD5P+JQ6MiNHL4hsNj8pMsCTRvbwwyL/gJJg78jk9hd9E4KgY
                9fTnorK0HHhRRCdCvgvrnk8n34hdGPyCbDxywVlgNcDbyT1y2Vd9SAMKviWSVKHfWq54RgblC4xCnz8O
                4JHUXCCbZORCYrpQGqvL/r7YzvC7Fj4uCoFZrp4uvddD2OKTibfgk3VELDSODgRtHo3Et/uN3QyWAZCt
                UfNormLC4gOa/IlQuCIISGM67atsTJ8rYsgC9CBqHKjslhAHAI9xrwhXXYhInuHoNbKmuJGOueN9Ad9E
                5I77pFSdHpcXZTLNB+k2D8PlVkqUZLsExTsFEH3GdPAZtE5UJIboIF4tNi11HXqMKW22A9EsR78ALV+3
                EiinXqTuregH4Cs6jp1gn8m2VgqRBaQgYXwlpITRFXueChXs/wCkrBtBq9/xzcPbo8RHvB8EtoGAPoAP
                weP16M1wJKhEWYQCXF6DnlyACgRARESmAIXPlQBVUlcQs8hDsPVm6PFoQfUwAMf8yMESwmSbZQHJTISO
                V5FWwdXsupfAEXPVQyPylWTVyCxSIa8NodklM4eiLK51K2CtucDugBsKgDRI8ONRZtrmZUZjYRR9i+8Y
                FtSscKpOm+wwu+EFc/SVPC3qKnKd2E0kXxGrG2OPhUOReG5drfo0Bo7MNyNtVlNOBKBwj+jJNs0B4v7F
                Logc+PSe4Zi4fV41wqai3Zi11tkqo2hh2GsDm4FGzJAhGSsyy5k3pBkt8wLqjgD40ifwhwHEDSgRNIif
                HdtHCElHQXtNcIjIi2i1HU9C2UX1fECYCgAKowABVUAK4qVsDXvLsLZvRJBGT3+2HgdP2SafkFADLFOh
                MrIJ4OqfJtLEJYBlYLZ5mWGqX4PixhAhzdRmzjh0SnUmAGLRhQCUJJrF6FSCbyuc0JLoPAcsNjjV0b0U
                Hdb8mUfIgJ/OjOE4UOzUnuGcfbpVzMnPZAJ2oEPh7ldP4LFLyf8A3hY7ocNBGQwXBMkHRo8JsshGljRC
                itAEdizY9/d6k9rB4jfEZ+Zg3rIP/kTGGoKCzyI6MCGw0NajvsQqkG2JNIJSoP6i18D5UKE+JFrEzQ4g
                WkwQDnijpQvGF9B0flIypxUI777QRMM9chyK2DXyRIuAeeisNwDBpYq1t0F19gpSBDhZdoVBzu2TYZ4T
                3IqMxo58bEOtVK6pBxJyAHDau3UhiKy/XYrgeR6la+GiSQtTuGgs1iZb/N5pOHQSIkZewXdm0zZukWYK
                NCqbCB521Pj9UgNDnA8K5iYj7JHPlEHClUfoYNF6OVwZ+WCbFUEB1JtCEUOsioKjVUGqMyV5HwUBmkt4
                fC4rw4WFIODXRlFaWL8KRDhJGQTHNWneZGjtmVTTuQIPMF2UOhclQp1RAvHY/DPsDmgocGWsY/I16ryt
                Sh5fcAoCfARhsUDIyWC+BMIJubtN7G+oO+NwuPDIh+kZJpQvXfAg3YpoOOYapoGqCwhVjnFHP+6wpawv
                ccBNMPSSfOAFnRzEGOGssGAWxVQBb1fFCWauI4A4Ew175UvF2nOWZiurq7pvwOOeioV/SCkDEqRhNGeE
                JO4eLsTRIPOJz6LgE64Z5BKkeTFZA4Esl8PhIw5BZ2mybfLkIUziYhgiypCtbuPMAwBKEp6kuqnG59aT
                iKD/AIKhEIdMF3Ck1ykEGEMcRY0JPDJloPi4x0OekmlFPfTpHQpgzmXY6YSaqpUbV1rkUvcJxBEpzk5b
                nG4HNAu1YL9vqloEaVJtUwsM3CXkGKGwUESkUGsCVba/A0Hyt/E/aMKNmCcXCsBbetBoAEvGE2RgJBsS
                IwSKDjBWRIkUWN+/5GXf4rAJfCN/1BrvT8eKIS4k0IepzfbAEJ0Eah/xwb0Ma9HjukidwO9eA99k4uy7
                3vneD8decbw96o38Oo1OnC4S2W38npRpjXFXPMYk5t7raM5gvF4/zmwJClmjauUC3GJiSPtd6jlcGdBU
                nmrowMA+tA6bMpsBT6LNqDIF+AgJyIcRK8A39CeGh0NSBG5ZtfBA0d9AoRXv7nBGvJddpKnSNtGS6/Ng
                o0XRkC0zUcHdGaB3mrhae8DjAEeerqaU4Luv7CezAe1/WBqzAuBBg/U42l8LQyHsYCXRmpSSoCSKJxbB
                mYdB6EIiqnKmo+cDuy6q5VRGsZD1hu5oQK+C3As6F7GMoyhTZPxOvANg/RgD2VsKwAii+1ON0xbUERR7
                68BSRoRhPLVVtD3ECtC2dSS2e4zPLebUbmRsAtZEVF2doIQQEQTT72cQDqX3qE6RYoUlHgT8vBLKDICT
                6DwgR9kNyVOywiEKwQDJh5EKMJFCsGPAlYpoKVWx2P5oPKGovpp8DSzLQWTCLzbGs/mSXalwk3LciqO8
                pgsJHDgsLBkG5IIK5GE3ozT0adOxafgaBqBkBWB2VgIgjNgRCgt7bYOyBI+BgAAAAAADlcz2WYdrwiu8
                lCCJhxX6xmUX48LxV7j90+chDpc15HRo8OcsUkTKLY0f4YDhFDnH4EioSdHJOu1dAHDLLCTOrzEzU26/
                ObbvhW3uX5OWa5k4k5hoi2NYnFsNRmFR1WBkNw1lOgminZBmXK/BTug0OjFbaAYMj5IXtN9CBBJQb8wh
                fJNu0KDwKAk9frdh+7z3IgwDkSgACSWyIn4gXIU9QieLMAUMGk5q4dny2w2cNLopZNp2BRwfN6EXWVSN
                oEJTCAPN5w2B2vhkj+9hdui57ppwHWB+ZVXWEGha1abA6PYFkBXlwDg6hzLrtzLDJRmFfPKfIAcnpxGr
                ktxzQA1ACe8KFholwmwYN6gn8g4sjHA2DXOZV0weBWieAV6RFkcWnIY4Uy80Qz+ttQSC1W+QUlXNwD2A
                1jZsCIMlaNqiy5exJuNiOXNdihuWaFPXZuHyY/usOJBlcRzkAAAAAAAAIAGgDQGgwWK7hn+W2vbKxHX7
                1WwMUUOFFAQx4LefkqihiH8cg4TMT48vZoO1S0KTVldp3gR5CTqKoKIxxYGJLPsEwSG8aWoEBOKVisEI
                hFAb4TCXdHoSK4mjwGou4yguEl06BxpRPT+qndZ8bpAQ5ZcJ6sMiasPUOlhLyAVooUGT0F/wEQ8DgAAA
                AcIp2YiP1UkQEUwR0DhEdbuISdGTMKUaYJGwBDSk8NwUgqUDB0tiqpWKlqu10S6hXkJFDNJt3UPPs3Vr
                9EQKCXD8wLchkRG1NxJ0/FqcMpmlqs81kqIPNwUqEpZIMIHxi9RXCKCo2QAAAAAAACABoA0BoOW7x9RU
                1x5/nGjyVSLDtsVpGAZ2KvPYS1EBChXkk0Tsc364qmCjyDi6UjkYYQhmPjyY4k9sWUVjgIG1YCgOgnDQ
                AMYVuxztsa0LDcNvO7cet5SiLKN0yRFBC0atId2BJCPUWzQxOePbjsBd1HZ3wuWcNjPfXjpsa25uCfLr
                GhvbXttrotWkWCDHTJ5bLK+EqWoNokYILrCYOmRqOwFY+g9dg/A2jt6JEQjLDACMHpCzx9QQAoeOtKwR
                AMMlQFskg8irgkyWo1VCAMj1WDKddguhFTACLomGUKOGlAAWLp0NE7kiaLKuRPiTaKyceCuR1mE6ynnw
                BBzqAD41CBIy7XOKZgNFX1ClG0GBP3iwBsixB89CyJ6Xr9JPcOtGIgfiMQHGR1/lrHf3YzhKcpGFRODi
                jTQ8acdsj3F4wylsgD9qJSVysoVVVxiWzWTeBzVhwo00XtYkKknAAH+vPjNxnQPgrBcax83w7iWYI0cN
                xJUiOLrjLzr/ACG8aPDEEzyiGOg54cICARBRERj4+hrEGCvT+DBnLnQJRQ6WhFMH13iH11WlL9GvTtD4
                d5XxDg1LkdBuODnqjKK2QGaQ7JYPrRu4iDuoyumJawJAIED0rK6ML5gW1kLJargBThbTqHotS5iZyML+
                mtigbStIvFDqk0MLpBPAeLbOygqG/VRKVJZS/Rh+6nXWqqL5SdOMhyVRM5ZMYB9YZJ599KaiM5oNkH/x
                Sa3/AKXgdzGtk7BF4S/SSwYFjxwyRHSBFjEAmQDzFfl48YCbFRZaZg1gKn5nBr48JB7KqT3XtyHvUEGB
                sr1ql5cM4LNY4Yj1SVVZ95PmgSGnf7RtgsW0DoO0HtQcQyqmZ3LwCywSAG6YGhPPpWThlzZeNJUsgdsI
                H4diN25/kRFjcWbqGFbiSwdUdqcBg6EQ2ZC6x0ydoSFBQxO9MH2RV+5+Ir86Gvbwfah9mMjxYBO0EvbK
                u5d4G12y3+FgfwH84v2gWubSKdjKgKcgoBQACqrAA2q6A2uM/UlBaxBzARV4IONSEggnAEBIqwr/AOSQ
                f/gA+NbRTgolGxmnW96xNBp3UMqDlQqrn2yepDsLdxCCCJyBbzAFpaRpBKJEMyB3zuv/ABkoeS/tYG+V
                XAoA/SVQj8xJZxThQscCbTVYQhmkZwLdldIWYrjy/KgNryMYBeW4MCws0Wfwi/L/ABZGvvqUB0ELKkmU
                /THOB9yT5COFopyNjtZkg65Jmjj9vjaCjqf7S6lySoYq51YCkPPjOt0A+p70b2mwSLpV8EYT2+A80zMF
                TW0EltB0GXWAebmIf4VDRWrCiSIomISQEmpf6XpII5nF4qgnOyL8ZEtDyXadmASuB2EiFb3BZAkggPnc
                hETB/FrLZyR4LqjPVERnmBu5lxL8wRBQNqK+aKAyEvVgeEgwilG9NcuPJR1nOyBI+JigEFERFHC3wD+G
                N4+rG6pyeaMKCB7fWXDdhnrJ/wBNTYnbhgTqEkUqgQIzFDqhIBEWACaRD25/whG4fiQd9B0t+pszd9KY
                9AIE/wBvakhXftg3tThD/J2lXvRhrHhYGg5lR9KBSgUpdikCLYiQxh6YFEUzoKhRIs2iSMWW8c3KjBWH
                7juU9cA+kA+qV/goULskMdOFMgDp+EcojXQAD+pxqD/wfn7b43coPlYwBi+KBlLjok1cKTEct6TOhxhM
                0aFTJbTJ2mC0RuE3lxTTRwboGOid8H7TEi51JAp6HFRwMggL9kgwY8RTAcqnzGDqHVJ4o8bBPDLbKjXv
                XahVhVHhiFKTKp7D5LQfijDZCA2WjhL+esoTYpPoTGUWXN7PGqrZ4atUuiftOuKFcSRN57oWUP44en24
                4J1LB6vhBlAUYMICPlZXGKIpgBdlWA8tJfTfA2EEEJgkf1lz/btYwVZN98Z7wwLYxMCpERUem7XHKiOY
                OBDIKAnEiERH5GBYAbCglAREAO8gGieBrs4YLgYHFc6vB9b0LUvGrHYAtFMXgvqKhCsaOhj9uy+KIu7a
                ByykxhN8VKFH6WcGdbfjTcWGR6SkzH4RpFcSabuSYsHi7vswt5ARTrrw1Tg6ZSnVlLd4qWBXlBUPgdYN
                618QCtU9U7/b7I0ocVKg0yBRNpE9+UJrkJLZvpAldEBUp4tfKdTD5y60ByXgLJsI+pTdb0LonYh4hSM9
                qANesp8Kkt6lhDNtlZeDtEISiWLm3+RwVLUwU860zI7kGVXAR/yhy0wllMNNF7WJCpJwAB+4XvjKNego
                CSARB9iVUcXSLEMAXHTaqc90FBezrEQd6t+2+ZQOnTUtdkQ66AN2kVposWhM8EU4dD9AEgJ5pvAoKkVe
                DzhmH9CrG7jHxsQQtb6AHslSBHPSqLzI3IEXT6F/5FP/2Q==
            </property>
        </structure>
        <structure>
            <property name="name">raisonSociale.png</property>
            <property name="type">image/png</property>
            <property name="data">
                iVBORw0KGgoAAAANSUhEUgAAAI4AAAA+CAYAAAD9NyN9AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMA
                AAsTAAALEwEAmpwYAAAAB3RJTUUH3AYMDjQBqg3ShwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3
                aXRoIEdJTVBkLmUHAAAgAElEQVR42u2ddXgVV/rHP3Mtublx9wRCiBEkglspWlzqtN0KUCq01H516rbt
                UoFdqpQihQLBm+KhENxCSCAJJMSJe26uzfz+mEukBO1Kd5v3efLkzpljM+d7Xj3njCBJksQfhUTrfwFE
                AS51TJBAlCxYEFEioJRAEK33BZAUSixIKBQKBAmQQBAAScJilhCVAkoRFGYQlAJmpYRFIaKURJQokVAg
                SRaQQKlUgCAhIQACAh3UHgk3CxxJkhAE4bLfN02SDILmn5eu21y0m/3aFbZJldqBQ0teiVbAu652/pyk
                aA8Q14U4QcBiasJkEX8/aGg7OkLra4F2h05o22mZYVnMiJKI1JJ02TO1z0OENr8E4QrtdFAzqdrlIuZG
                ft2zm5TTmTQZLSgEMBqNWEQJQZDzSUo13WLiGD18GOr/ON+Uh3f7xpWcLGpi1gP34Gxvx7GDewjpNQhn
                G8U/hyt20OXAufRia0uz+XzR16SfOcfFokLSU09RbtBw++3TcNUq0BsMSAoVQZ1C8fD0Q6sUriLCWrF8
                SWb6rcfu8sGUkKS2eVozlWuNe0b6KVLyJUxmWVmqryrgq++W8MLsB9twjpZ2JWu9wlX6RAforqnjiA0s
                XfUTajtPYrtFYKtRUVddyZ6dG1m19TBvvf8JA6ND0BtM6Oy0LcVMDeQXVRAUFAiA2diEoLFFCVSXX8TR
                3btZJtZUXqQRO3xcHZvLN1SXUGVQ4e/lBkBpRTkebm7NYqWuvhEHezuqyi+SV1CM0saBqIgu1FcUcC6v
                HJ2DI4FBnSgvykZU2+Hv44PCOs67dyQSFncLvs62mE0mBIWAUqmisqwEVw+v5j6UlhRh7+yJnY2KprpS
                MrKL0djY4O0XjIuDbQdSfkPKN954441LF2UlJTh7+DCgT1883VxxcnLCw8ubyPAwco4n8tmybQwdMQo/
                NycaGhvQqDWcPrCelz9aRGLCctbvOUVMdBB/mTwGg3dvTm36gHH3PI175GBiunqQsGYpy5Yu5aW5czmj
                1zJ2UDwrv3qbb9du5ftF8zlfo6aTp5mJw0bhP2gioV5OvDRzPGXO0WgNJWzduQOluZHEQ2cJsCnh28TT
                uKqNbE38haj+ffj7u8+zPbWIAX17o5VquHvKeFatWcs/Fq/Exc+Tr957jiyDG1n7fmDitAdQh/YjLsie
                px66g1fe+StfLFlLiL8tWw+dw0WrZOW33xA3YTKOyg6gXFU5dvfyJzwkFM1vxI/O2ZsJtz9ARnIi+5IP
                knF8J3/7fhXGmmzumbuAbxf+nXfffJ2CM8kcTL+Iu6uGzRu/I2Lcc4zs7khWTi6HkrZyLD2PDz/9ki8+
                eoHuUVGk/bqMFcctLPzbZ7z49Gy2rv2WOpUL7jYi1XWNAGSeTscoihReyGRVwnrsO8fz1jMzKcg9y+qE
                Deg6RfPaG2/grbUj0MeX8rIiVGoNz8+aQuSU5/l5SwIhvjpGjh6Jq4Mjv/78Ez3HPU5YhD/De/fg68/m
                oYi+nWVffsyUibcgmBtYs3o11WpnPln0Fb6qZlurg64EHEEQEASBwvMn+eijt7nvzikMHz6cESNH8uxL
                7yKYTSxcsICEn7fi3akHh3dtolxyAiAwMIgunj5U1NRhUYBvcE96dw1A62CHRV/L2axUaiUdKmDUHU/y
                6ITBrFm9Ghd3WVx07hSCp4sLlRVVKATBas+IWCwiogjdIyNQVOUyoFsID736CbH9x2LK2cOAqC5Me+xF
                LIBSoQAUqCll1U/76BXfi6LyIhYt3YiXxhaVUoGrZxc6eziwfPVuIjy1JG75ha5hgTgGdOGpJ+YybsLt
                uBjzmTwojphRt1NmEDtsq+sxxwsyD7Px4DmeeOZVlq5KYMeOHWzfto1l3yzEw07FHdMf4qVX32fqrbE4
                u7lTnZdOIyBZTDj5+9ApwA/BbMLBwV5WLEURUZQwV9eSm5NLvQiixSRzOHd30tNSZL3IZCIwOAgfHy8k
                SaL8YgmZpw9xOr8Co74WJ/8wvl/5M399/XG+//ivnK4USD2TzfuvzCZtzwY2HshCo5ZlimS2oLK1YcW3
                C9G4dcNPRzMIXV1cQWlHgLcboiShb6xnW2Ii2LjgZa/lYrmRLTv28/3Cd6k/k8Silds7UHItHQdg444k
                hvaLx8vVtY0llJF+jO9Wb+aOex+gZ3gXtErwDOxEetJ6Ukst1FUWY+/uy5SxI9mZuI7QuBHER3Qmeed6
                8OzB4O5+LF2yjDqTChsN2Dm5EhUaxOplS1G7epCfn0eniJ4MiYkleecGkg6nUmsQEWoKkVyC0FJPxrlC
                Hpz9JErBgrNQSXq5wNTJt9OtsyuenXtiKs0kLb+CwbeOR2fIZcu2w9iooLyyBs8ALzJOHsfBpwt9Y7uh
                Usiqt6WpnM1bklAp1FTV66m7mMmxnHJGjbud/pEeaP2iiAr07EDKtYCTeiQZtbMXAT7eVtEFYCZ5xzqO
                XdDz7Nw5eDjaWU1UG0aNHk5RZjoqRz8mT5iIVqXAw78zQ/r1RqtR4x8QjI9fIH1696dHeDC1VVW4+4fS
                NcAbe1c/hvWNIu1kGsERcYwfMQQB6BwaQqfQKB595C906RRAaFgPYiJCqK6uoMEoMmDwUHqEh5J+Og2d
                kwuBncOJCPTC3dMLV1d3AvwCuXXkaPzdHRAFG7rHxNPZxxt332Die0Xj7GAni2aFguiYvgR6OSEqbInv
                04f4mGjOZ2aiUNngHhDKwOiu1+cL+LOR9BvKTdsrzXr2eSmnrLo5raLonPTAPROlxRuS2uQVRfG3xduk
                tXf/RsrfEN1IW6IoiaIoXV9L4s336X+Y2olVSRxJ3s7Bk+cIjYjEUaeloqwQj4BwYqMjUSs6HGId9BsH
                4CVASKKFRn0TSqVKvpZEbGxt5ZhjB2g6iN8RHe+gDnP8P61jXdW9djVct3evYx78e6j96PgV0toXU5cH
                Cm8ENJfKiWYTeoMBUZQQRRGFSo3WVnbatQCibQC0uU1JpL6hERtbLWqV8nf1o4NuAjiCICCaDVTV1VNZ
                WoRJ405kJ5+WFyvI3tzK6ioaa6ooqjLSu2fkTbnkL9VZV12JQRSRLCZK8nPYdzKTbuFh2Ot06BuqKCmr
                pWef/gR7uzWDpzVoDY01rF+3Fuy8uWXYUDyddDcIFvGPwHj/+0XV4eOHKbpYiNncxPz3X6GgztI8GwWg
                4Owx0vML0RtNbPhxIdtP5rQ7WyVJukxstFlQJQg0VuZxMD0biyiidXCjpjSHDdt34RMUQljnQDQKCz9+
                8zGPP/sSBdWGdrghHExK4M0FK4iMCMPZQXfltn+r3AkCGCo4X1DXvMao/b5KV6nlzysaLwNO6sE9pF8o
                IyIqHqEqyxqrkcloslCUk87uA2mEhkbQM8CG1AvFzffrqsuorG1oHphLA11YkEuTBauF1vKiVy9fTkBE
                FF7untjbajh6+DA5OUVIkoTWwZnYvsN4ZvYd/PzTj+zYn9JcriAvh9y8AkQk0k4ewTEgkujwLgiiCaPR
                1Nx2xcUL5OTmU683IgAlxfmcTksnt6gUs76Wd15/hpS86lbcx0JxSUlz/y2mpmYO19hYZ12HbCYrM4Mz
                ZzMpKq3804q4y4Bz28ihLPzwTZ5766/MeGsR0a4qCs+fZsqEEXy58hd6j57I8fVf8eCc53HqfS+zxsQj
                mprYvmkp8955hynjR/HZ8k0YLRLmhmKemvsY8z/5iPGTJ7M/PbcNeI4dOYKLy6V1PSaqa2ppNLRdE+zh
                7g4KBc5ubhRnHWHeO2+TuG4FQ0fcRa2gQJJElJKRQ9tWEhoSxaZ9x4Fann7yUdbvOsoLM+9i/a8nSDmx
                j8Sd+ziVvJldRzNJO7WHL//+I2npKQiCQFbKPh66ZzKDB/ZjwOSHSEvZzaDecWw7cYFXH5vMiGkzyMrL
                Y/EPy8jJzefXLYvZm36xQ1RdGkyNgzfPzJnB/rV/57l5C7EoBOwdXQnwdaOkrAoEDQ8/PgdT7n4efmQu
                ZY0mMtMO8cOmo/zt4894fsYUPp3/CfVNeh69azKT57zDm6+9Qi8fFQu//BZjK6W2T48Avl+9t5WSLVtY
                SpWselmaqnj3wwXcOfsFbgnV8P6C74kZOJrJQ+PJzy/EYuUHpRWVqHVOdAv2o7ahjpnTphI19gHumTwW
                Q1UxNTXVHD+YxLpdhxkydSb3jxtIjz4DUZlN9B0whPqyCyz6YTljHnyV2XffysCh/QnuEktdxVm2Jm0j
                btS9OEoVlORnsXptAkfPl/DAU28zdVB4B3AEQQBLDcs3badz1CD2p5ygbN8SnnzvOxwddajVamxt1Xz1
                9WJ8A0NZtiGZW/1qGTH1YU4dS6ZO4QzA0CFDkMprKCs/xbLNZwgKcEXn6k2ffr2pys2hsr5FVN3z9Nuk
                rvmIXakXmvV0G62OLcvnE9dvEB9/s4wZ8xaz8tNXSD1yiIq6WsLDw1AqWsSgJIrYqdTE9OmPzkZL6Zl9
                JGTUM6l/NGqVEkEAwcaRqLBwjiZ8gX9QCIs3JwFKBATUGg2FBQVcyLmAi7OCmEkzeX3Wfeh0jiiVCjqH
                xhATFojGRongGMywbp689cR0fEO7cyCjoAM4APrSixTkFtNksgDOjB8dz6lTpxGUSkBAKTVwPiuf6ip5
                kdVd90whNzUVo0ZDae65ZrPav2c3vHSO2GsbOXmqEFAgKWwJ6RSMq30r017pyLJV69HW5FBWU45SocBk
                NDJi1AguZhynSuVP3+5dAKjXN3Li5Cky0k6watMmzAYjkiShtrFF6+QKkhmlizN6YwOU5LP7eDp7tq/m
                dEENJoOR3sOmkJS8nzsGhTLv7U+wiHJ5o6EJsyiSfz6D7ckniO4ShuKSHiZJODo6IorydXlpBc+9+w1b
                Ny6nq6Oep1/5sAM4AFp3L1TmWlJOn6JO34TOM5gH752KyWDAYjYjKrR09bbl4KkUiitrMavteOCJmYy5
                ZRTOlkK+XZvIT9v28cTjM3B2j+SlOXfx3ecfsP/APkr1ZqY9+CCaVqawLB6V9Bt4Cx5O9tTW1VLfUI+9
                f2/efeUhPnz2UU4WVgPg4+uPTX0R9/9lJlqvULw8HcnOyadnbD9sDJUcOp5KdP9+TLltApHBztw/bgSb
                UhsZPTCaiqLzJO1IJN/ozKq1q7h70igUCjUuro4cSd6BwtGVuJ7dOL5rB2tWJ5CYtA8RCSd3b9wcdShV
                KnT29ki1+Sxdt4mgmNHs3rGBvt0j/rTAaV5WIXMALTHRXSkuKkahUtK1xxDGDeyFwWjEZDAT0jWSSZPH
                UllUgFmhxtUziJl3TsLOwYM+MZEcTd5HUPfBTL51IAoB+g8fj7Imn5MZRYwcewe9wwPbONtaOxYLzqWx
                c1cSlQ0ifQb0ZdKE8SSt+Yo1ezK45+7JBHp70iW8B7PnPMfoESMJ8bNHsHNnUP8h+NobyS4XmTxuLKGh
                EYQEeDP54bk8efdYgkKCEZS2dAkJpjgnC6PSgdEjh6HT2OMb4IV/lyj69exBTGwMGOoxKXSMHj0SB1sN
                ngEhjBgUj1Zti5u7O126xSLUXKSyrhHUjkwcPxJb5Z/TB9QqVnUFD/BNrkW5khf6t95fAFG0UFZSSHFJ
                OSajCSdvf7oG+nHm8BaGDJ/E2Mfe5ZsPXkDZypsi/E4v8LU84i2PffW9nH9ar/N/el3HFde6WJMT13wp
                ebjaS4++9rFk/E2WsoslHQtj/jjrcf4wgLYu8TBxZG8iL73yGk32nZg94xEC3Wyp1DcSGzeMAA/7Dv//
                f1ZU/ZG5ooihSU9BbjZ5BRfx6RJBiJ8XapV1vRAd+xA6gNOhR/x3hhx+z+C2EwL856D7CqCRLu/EdQUd
                5SBo25o61vH8B4AjWU0QASjIyyY7vwCTRUSS/pVcQg45IlnIOnua4vJqpFaB1auVk8EI2RmnySkqsR50
                0MHR/qXAaX9myqDJOJnMd0uXcDanEIv4r53Bl7qxa9P3fLdmM5W19dddThAEUvau5YslKyksq+zY4Pt7
                zXFRFNvdZdKeyVxfX29Nl+/VVxZKLz7/mLTox42X29TXMMPb26pypa0zrdMr8k9IffsPlM6W1rfZ9nLN
                9urzpb594qW9Zwsu2wLz2/IdW2PaJ8Xl+gTs/Hk1zz39CKMmTOVAZqFsuRhqWPDhy4SFhRPRPZZdp7Kt
                J1/JLP50yjHKapoYM+a2NpzIbDLy0zcf0DuuJ90iI3n05Q8orapvJRpkxVfAxLrlC3n14y8or2mQ97Cf
                3c/cZx9nwpSpLP95jzVfi7hZ9e1nRI95kDAPXXPnBUGgMj+DT+e/w7gxw3j8lY/QN+tJcrmEHxbg13cK
                A8P8WjimNQQiCAIXzx1h+p0TOVbU0CHCriWqLr20XQnfkFZhZu7LHzC1nxfTJk/HDJRW1eDk7c9b73/A
                suXLGNYrrNWxZxaK8rPZm3yCZUs+5+nH7mPKA09QYRARMBDSdxxbtmxm1qz76d0rHBdn+8tETnbOBTYn
                rOHcufMYRTBWZDL7vSXMm/cus+8bz2dvv0RyWp61QXkwN23+hYrck3z0yXvcP/0uPvx6JRZjFUu2HeDO
                ux9mwRefk7HjO+Z9usLalvXkrh170Jec5YP5H/P0Yw/yyDOvU2m4ZLmZ2LRvH9t/2khVq0VsHXQF4Fx6
                aSt/+hmN1gVvT3dmPPkktRn7OJKnR1BIhPcayp1TJhEbHYHOVtPiO5HM1NWUYOcdzN33Psqnf1+KpnA3
                s1+dj1LtQGy3SPILzuPgF8I9UyahFlorqQKmxmpqqkvw6RqHRiGisbFl6Zd/w9YjDGdHZ3rF9CPQW8fJ
                U2ltOl9aWYFfeG9eePZl/m/Ow2xY8SULvphPmV7A2cWdwM4RPHD3RLZu2tDMTeVy5dh6d+XFuc8x7813
                achO4u1PvgRgz9aNjBo/FrWi48TRG1COTTSZ6iksq8YigmDvhbe9PfZakbPH9rLj11+ZO2c2b332NeU1
                dS1KpaDGycUDHyc77KwndU0ZN5oTR+XlniVF2axYuoTEn7ez90hKs3i4BJ7SmjoKq/T07uqL2SKiEARq
                9Q0UFucBoNFoCPD1w95B18Yy6uTnj6ubKwBhYeH42ztSbxDZnLCW0po6FIJAWJfONJbXYG71lAFe3nh6
                ywcJODk5MSg2nuyM8wAUm7T4O9tfduRcB11RVAHYMWJIX1L2bedEShpHkn6h7yMvE+2ho/uAsbz0xKPM
                //wfGM5sYcbrf5MtJ0kCFHTrNRBXuyZ27UrCaBFRaHVMmDQCAE/fLnz86XeMinbnw08+Ia+0prlNs8lA
                XsZhfDrF0tjQgMVsprK6mgnjp3D+4A4Op2dx5lw2Lr7BjBravxXoYNaTT7J5xWIuVtfRqDcQ3LMbt064
                iymRdrwx/zuqG/WYAOdAH3mZmBUAD89+jL0bV5ORV0R9ox5Xfz/6DIwj5fAugoM7oVCqkIAmfSMmk7FD
                z2mHmpdVCNbDfXvExFF5IZVfkg5QJTrx8atzEC0mRFGJRiOv0uvsbcuzHy7mhcceQqVUICHg6uFHsKcz
                J0+nobG1waBy4tHp01BeqhsBfV0pu4+dYtjgW/B0dUIQBOrrKvjymyXYqRXs3bWTMzn52Ht4M2rUZMLc
                zHzz/UrMKh133j+DQBe7Nmt5QqL64WIqIDk1H1s7O+Ji44iOiOLWsdMIc1dQXGvk8K6NdOo3icE9uyLJ
                2xnwDo4m1ElP4v403D3csHdyZ+rYYWzfuZOsM1kU5Z4jYe1mPEMj8fX2xNPFqQMpvyFVa3NKkiQEtQOP
                P/9Wm0yV1RUkbt/B1LumYwvUVFcR3bNXy8lZknzsdMzAkcQMHGkt1QuAC7kXCA4KBqCuTk9UeBSuLs7N
                dWtUSkaOmIDSxgYnRx02tg2Eh4ZiEUXGT5/D+OlXDz3c/tAz7fpqInr2pezCcb4qVfLxS2PbCEdJkhgx
                bSYjWpUxG+qJ6RFLcWk19tpGECXcffwI9vPtQMlVgXMV176d1h5HjZkVy1cR2yOSlEIDH7/ytJXbXH0X
                Z23pOVaknCa6cyA1ko5777gbb1eHZiDY2rszYpQMtvKsQ5yttSE00M96LNuVQw9XDENYwVVedJaVifuZ
                8+yrOKtb0q+0B0xlY0/3XvF0BzDm4hfoT2BQKPY2qo5YWXsu32sFOS9Fnpv09ZRXVGNnr8Migrury3VZ
                HcamOi5W1OGo04JCib3OAZVSaPeM48ryUqrqDPj7+WKjUd30Q5kNtZzJLsDV1Qs/L7cbHnizsZHsnHxc
                vfxxd9Z1oOSmgNMqDnUF//1Vy15phv/2UOprH559I95wEYtFQqVSXr3/19HnDm5zk8DpoA66Dj/O/ya1
                NzUkqf30K+X/d/RLkv57TlRW/RlAIwigb4C8PHD2BA9Xmo/sF0UouwjFZeDgDAG+oPk3fdVEEEC0QEEB
                oIbA/yIDTtFaC76RmXatvFebzVe8dxMzlGto9pfUk53b4LW34GxO23Zqq+GDV2HxKtixF+qb/sl9uMZz
                mfTw9Zfw7dqbmRWXX7f7fqUbn2zXDRzJOgOK8qC82urvMENmLmCBPbsh6RDk5kJ9o5y3vhouVoG+HjZt
                gJRMyM0Hg0G+X5gLegkqSmDFSiirl9MFAYwNcL5Qbjg9FbJLZOstMx2Opsp9qimDygaorYLMbCvnqIOj
                RyA1S7626GHvPiiuBHMTlFWDxQjHU+Sv7AGUXYBf9kL8cBgSB2Ij7N0LBZVQcA6274Xpj8Cs6eCghN3b
                4UK5XLYoH5qsXKGsUm6zrgqSdkFhtXzdWAO7d8PFSrnMiRNgsg5gfoH8XJWVcOyw/D5NRsjOhsMHoLQB
                bhkGo4ZaLbpGSN4Hedb2C/LBZIGcC1BtXXJ0+ACknpPN3coKOH4UMs7Jz9sqBszB/XDqrHxtNsCBXyEj
                X77XUA0l1dBQA+cugNkImeegyXB9u6FaPMcCWEyQtAk+XwvDBkBdMdz9oPy3Yx2s3wnleXDwPPSNgUOb
                4NXFcN94edaczoMDidBoB1Gd4fM34GQd9PSH+Z+CRyiE+smd3LwO/u9VGDUFln8Ou9LBRQ37k+G9t8En
                Gr7/ECq0sHM1bD0APaLgwEkozoDle2BCf3j9fcjPgpUboaoM9qdAcQ48MRemz4Iz++BwLtSXg8oBBkbA
                Z0vg/BF4cxHERcugH3UHuAmw6zi42cNrL0JwFHz0Mmg84YvPQdRCgA5WboPCDHj/C5g0DbYmgsIEKzZC
                187w+lMQNhIUxfDcfBjcC/YfgZBAUNrDulUQGAWOEphs4PRhKGuEXp3h70sh8zC8vhAGxMLLL4KjF/z1
                EwjpAr9sgaoSeGouxI2GnVugVzxIFnB1odnR+enfoL4eli8DW08oL5FvzH8fgnrCys/gRBmk7oM1m8Fs
                hhc/gOG3gKvTjYgqQFDC2LugPg32nAa1AoyN8N0GmDgN7psGM+6HTT9CQTko3SFrBxwvgRkzYcwIuGMM
                LF0FjUYICIPP5oHaCx6dAVGh1kZVMOw2GNkdPvwW7vwL1J6D5KMQGQPj74XeEWCxwNY9cPd0GD8cEtaD
                yhaCPKG0CtYvBbMHjJ8Aw8eAjzNs/xVCw2HOc2BngZffg3GjwcEObGxhySJwCIKYeJg5G0I7g4879OsG
                61ZAgwni+kKIE6z6BQzVUNEAIf5QXQ3zv4KYXvDATHj/ZTi2DbIqYMxEuHASskqgrAQqGkFfA+nnQWyC
                T96EZ94DrQ5KM2H0rbDxGIT4QH0VlJTDmh/kd9orDmbNlnWx81lQ2ghzZkN1LpytgMGDYew9EKiD+fPg
                ubcArfXrfsCpXZAnwZ13wbxXoKEAjp+E/v0hygeWbwQHNRw6AnF9IDcL3L1A3wSN+hvUcSQJFApQ2cAL
                j8FXi+FELvy4CBa8CSo36NsPXPxhWl/4YT2YNPDWXHhxHvj4weB46DsOtIXw804IHwZT42DhjxDZHYKs
                M0KhACdneOY1SPgUjE5w20RZTJ0rgiceBE8n0OkgNh5CwiEmDA4dB1s7SDkpi7gDR2QdQamDv0wCtRIi
                IsGvE8y6D2pz4UgBOGqgsgrUajiVBsXZ4BYGj4wHlRKUAmiQxUGNVRzEREGjCZwdoWsIODqCGjhxFOwd
                wNkF4mMh8yw0WuQynk6gUYBSKf+Z9DIn9wqG55+F5AR48iWY9TwM7wUvzILv1oO9Tu5beobMPV26wIyJ
                YKORucjAW2DQAKgug7oKSC+A91+QAf/ZAkhaAa+9DbXWJQApB0BlB1o7COkKoh4KLsqH1vWIgCYjONhD
                YBB4uYCvN4R3BVvbm1GOW1HvcVB7BBQ+MrueGA8J2+GSE/Xxp2DVtxAVA2PuAeVZyG6ieYvunJnwdQLE
                d4WnX4TVX8uIBti6DfKsh3jp3GHGJPgpEW7rC3k50GQG0QAVtfJLV1stHJ0OpFK4ZRCkFoMkQI8wWJsg
                v5yqSqjXg1olTzulAlQqqEyD0VMgs1LW1aK6wM87oHMQnMuU9QfkW0RHyjO8wQTZ5fD4A2AyyyAQALMA
                vvbw4T/kttJzoVskpB6R6wgbCKHBMnfbmwhfLJXLFhVDUDc4exy6BsOWJFi0HPatgwvWtWmNjRAaBLv2
                QoCf3A+DueU5ACK7wLZECAiRxVV+Mdj4woFkGBwjA+bgGXAPgGX/gHMlUFEFrl5gaITiGjhfKk8qSZLr
                lZD7qFDI/TBbrg84bXQcUZRlHUDMUIjrBBZJ5jSdwkArgMUMakcYOBAC3QAlDBoFYb6y7mIRISAYesWC
                ix3oXGHUSFluVhfBvHmAO0R0AkmEPv0gNAK8PSHQE1b9ABdFGBQDdQZ5pjnZgNYRRAn+8ih094bkLHjn
                NShJg2UbICIGvFwhqDMEesscSeUAriqYNAvG9IQGPUyYBqVn4JsVEDcM7CVYtxYmz4LYHpB9ErbuhhF3
                Q7Qv1BtgwBAw14MZmDgeDm2Fjb/CpIkQFABSGfz4C0ybAp18ZO51thBefEYWA92iIeUw5Dd6ymgAAAIL
                SURBVDXAuNuAUth8QOZEtw2X1YHqRrhjOtSch6+XQs/BEOAG2EG/HiCawD8UnC2w4B9g4w9xYfDLOjA4
                wq3DYG8CfL0F5j4JtefhxwTwC4cRQ6CpEtatgz7jIC4EqmugR19w0YGdC/SOgep8cPaCIL9rK8htPMfl
                5bBzp/xfo25Bn6CQv/NtsZq3kiTP7Ev3lQpZH2n53LM1TWy5b7bIqLbVylaP0dziyxCQ82o0Mrs0GWXt
                XqORFXaLBJIRUs9DYDCUnYHd52HWHWBnJ5fX6+V2BaEF/CCza7PROrMUYDTJaUpBtv7KSmDxV/DE66A2
                ynqQIMh9MFvka2MTqNSy78csgtZWfs6GBrleG9uW+swWsNGCWgC9AbRauW8qNWCdmAqVnN9ikZ9bqQKV
                AgxG+f2oFKBvlNuysQFDU4tFrdXKXNjQJD+Lra08mS0WOV2hlHUVnZ3c3ya9/K5tbGSxbDLJf2obWaEW
                rZzHYJDfZUM9zJzVwumvywFoNkNNDVRUyIP8h4mLCNBUB6eOQ8pxqNXD5EkywK9JFVeuMzMN8oogfCDo
                y6DG/L/j+Ky4iTKVldDUdH1+nGaO89/wZZ3d22XfT0AojBrw++v7eT00AP2Ggr9zR/zpfy7IeQnUkgh6
                I9jZtnJa3mydIlTVgM4BbFQdn6T6n42O/3Zgf89A/zPr6gBOB3XQDdD/A/V0Bm9B3XgpAAAAAElFTkSu
                QmCC
            </property>
        </structure>
        <structure>
            <property name="name">raisonSocial_ParLegrain.png</property>
            <property name="type">image/png</property>
            <property name="data">
                iVBORw0KGgoAAAANSUhEUgAAANIAAABaCAYAAADNegj3AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMA
                AA7EAAAOxAGVKw4bAAAAB3RJTUUH3AYTCx8nAMEvMQAAGsVJREFUeNrtnXdYFUf3x78UlV2QpoAYilhQ
                sIAFO8GoECP2ksSCJdyYIiZ2LNFozM+SxII1mDd2lKgElbxGXysaC5bYAaUjXfBSLu0Wzu+PG1Yu5RbU
                JOp8nofnYWfOOTM7d87u7OzMWT0iIjAYjOdCnzUBg/H8GNZX8dKlSzh16hSysrKgUChqlamoqIBUKoO+
                vj7Wr18HS0vL164Bg4KC4OnpiS5durDexBxJe3Jzc/HRR/44ffq0kGZgYABXV1cQEYqKilBQUACJRAKO
                M4K7uztmzpz5WjoRAHz99TL4+/szR2KOpD0lJSUYPNgX9+/fV0lXKBRITk7G5s2bMHbs2DeqAV1cXNC3
                bx/Wk9gzkvb89NNPSElJRlDQBiQmJiA7OwunT5+Ct7c3ioqKMHnyFBw8ePCNasArVy5j5MiRrCe96ZAO
                TJkyhW7cuFFrnkgkIo7jycamGT19+lRILy4uFv6XyWS0c+cumj49gFavXkNisVjFRklJCS1btoxu3LhB
                xcXFtGHDBpo1azalpKQIMhUVFRQeHk6zZs2m+fMD6dq1a1rZv3nzJs2ePYcePHggpF24cIFCQvYLx+fP
                R5K3tw916dKVJk70o4yMDLXp9+/fr2GTiEgqldKOHTspIGAGrVu3nqRSqZBXWlpKK1Z8Szdu3CC5XE7b
                t2+nOXPmUlpamlrduurA+HegkyOlp6fXmVdQUEDm5hbEcTzt3r2HiIj+979TtHLlKiIiKisrIx8fH+I4
                Xvjz8OhOMplMsLFnz17iOJ5Gjx5DnTp1EuTmzZsvdLJhw4ar2OB5Y7p9+7ZG+3fv3iWO42nBggVCefb2
                DiQSiYTjNm2cycrKijw93yYnp5ZUVlZWZ7pCoSAvr34q9at0lP79B6jUY9iw4UI9Vq5cRRzH04wZX9DI
                kaMEmaCgILW6ddWN8Qo6UlWuX79O33//AwUEzCCRSEQikYjs7OyJ43jq3LkLeXh0J47jaefOXUREtHTp
                UnJwcKTo6BhKT08nb29lpz9wIFTFbmUH8vX1pZSUFOI4Xujsa9Z8RzY2zSghIYEePIimd97pT59/Pp3K
                ysq0sl/VVm3HVlZW1KFDR4qOjiG5XK4xvTYbK1Z8Sw4OjoLjchxPS5curaFjbm5BYWFhZGxsQh06dCSx
                WKxWV10dGK+gI4nFYho+fITKVbP6n7GxCZmamhHH8cJQsFWr1uTnN0mwc/Xq1RpX88pO1rNnLyotLa3R
                Ud3c3GjcuPGCbNUOpY19TY40btx44jieGjc2pRUrVlBFRYXa9NpsdOrUiT744EOKjIwkjuNp/foNNdqQ
                43jy8fEhIqLRo8cIQ1d1uurqwPjn0fmF7MKFC3HmzBls3BiEzMwMlJQUC39ZWZkAAJFIhIKCfHh7e6N9
                +/YAgLy8PIjFTwU7HTt2FGb8qtOhQ3sYGRnVSE9KSkZxcbHKtHtJSYnO9gFALperHJeXl2PdurWYPHkS
                5HI5Vq5chZCQ/QBQZ3pVJBIJACA5OQX5+WL4+4uwZcsWzJz5pVDHqjg4OAAADh78Rfhfna42dWC8IrN2
                AHDsWAR8fHwgEolgZmamkpeWlg4AcHJqAQDYsmWz4BBOTi0QFRWF7OxsAEB8fDwAYODAARrLvHz5Cvbt
                CwHP87h06RISExMBANeuXcOuXbt0sl+5Imr16jVCWkjIfmRkZODLL2di4cKFiIiIAABcv34dAOpMryQu
                Lh6rVq0CAFhaWuLKlatYs2Y1pk6dgnPnzmPfvn11/wD6z34Cdbqa6sB4hWbtiIiaNGlKbm5upFAoauSt
                Xr2GOI6nmJjYGnmbNm0ijuOpVavW9OGH48jOzp5GjhxVY4jCcTx9+ulnwrGxsQlxHE9hYWHCkNLKyorG
                jn2f3nrLjhITE7W27+jYghwcHMnb24fatHEmY2MTcnZuS6NHjyEiom7dPMjOzp58fX2J43j6/vsf1KZX
                rd/JkyeJiCggYAaZmZnTkCFD6P33P6Dmzd+qMUnDcTxNmzatRhup01VXB8Yr+IzUt68ncRxP06cHCM8x
                RESPHj0iOzt7mjJlSq16crmcZs+eQ9bW1mRr25zmzp2nol9JixZOdOXKFeF4+PAR5OPjQ3K5nO7cuUM9
                evQkU1MzcnVtT4cPH9bJ/urVa8jKyopGjRpN6enpNGLESGrfvoPgjEFBQWRj04ysrW1owoSJJJFI1KYT
                EY0ZM5bee+89wWGfPHlCQ4YMJXNzC+rcuTOdPXuuxjm2atWa7ty5UyNdna66OjD+efR0Xf195MgRjB8/
                AQBgY2MDDw8PSKVSREZGomvXrggP/xWNGzdmt3r1owDo6emxhniN0NmRAGDPnr3YunUrHj16BD09PTg7
                O2PChPGYNm0aGjZsyFqVwRyJwWD8DbN2DAaDORKDwRyJwWCOxGAwR2IwGOrQeat5aWkpduzYgYSERPj6
                +mLAgP4vRedFIJVKcenSZdy9ewdpaekoLi5GRYUCRkYcrK2t4erqgn79+sHc3Fwnu+fOncdvv/2GwsIC
                uLu7Y/r06awnveno+gbXz2+SyirvW7duvRSd52XfvhBycHBUu0qd43hq0qQpbdu2TWu7hw4dIkvLJuTo
                2IKmTp2qsonxRcA27L0hS4SsrW1o2LDhtHfvPuI4nr766quXovM8hIWFEcfxNGDAQDp79hw9ffqUZs2a
                LWx5KCkpoYcPH9LGjRupaVMr4jhea+fu2rWbyraJF0lkZCQFBQWxXvkmbKOoXNY/apQyTkFRkeSl6DwP
                a9eug62tLY4cCcc77/SDhYUFLl26JORzHAdnZ2fMmDED33//PQAIq6o18ejRo5dS5+zsbHz22eeIi4tH
                fn5+jW0ejNdsssHa2hr37t0Ttiv4+voCAAoKCrB69Rrs3btPax1AuS9o167dCAiYgTVrvkN+fr6Krqb8
                2oiOjkb37t1hYmIipMXFxdUqO2jQuwCArKxslfQTJ05g3rz5mDZtGnbu3KlSn8rnvh9//BGzZs1GUlKS
                VroAEBl5AT4+76Jr127w85uEzEzlHq7x4ycgKSkJP//8Mzw8ugsXH5lMhp07d2HGjC+wfv0GyGQyofzl
                y5fj5s2bKCkpQVBQEGbPnoPU1FSNZTH+Bc9IAQEziON4srOzp/37DwjpBw6E1tgtqklHU5wFbeI81IaN
                TTMaONC71i3s1euXk5NDHMfT4sWLiUgZXGXy5Mk0YMBAio+Pr3VXrY+PD7m5uQk2588P1EqXqO64EFFR
                UcRxPA0ZMoTy8vKISH38B03xLdSVxfgXDO08PDwAKHekHj16VNgZ+uGHH+iss3LlSsTGPsTNmzcRHx+H
                vn374v79+zh8OEyr/Lro168frly5otUwLDh4OwBg4EBvAMDu3Xvw++8nEBp6AK1atapV5+LFP+DnNwmf
                ffYZAAg7c7XRzc8Xw8amGYKDgxEX9wiNGjUCAHTv3h0A0KxZMyGY5g8/rEV8fDyioq4K+u7ubjA0NISf
                30QAwPHjx2Fvb4/Y2BiVuqgri/EP35EOHTpEbdo408WLF8nT823iOJ4mTvSrM36BJh1NcRa0jfNQnZiY
                WLK2tqbOnbtQbm6uyh1pwoSJJBKJaMSIkdS2bTviOF6ljHfe6U8jR45SG+dh0KBBREQUGBiokq9J90XH
                f1AX34LFefgX35G+/noZevTogb59+2L7duWVPCwsTCWOgi46eXl5ePIkR5CtjLNQUVEh3MHU5ddFu3Zt
                ceHCRfTu3RtLlixViZnAccqt7ydPnkRpaSkWL16MnTt3CPkPHtyHoaHy9VpycrKK3crztLOz++sipEw3
                NTXTWleb2AsKhQJSqVSr+A91xbfQtizGPzDZkJmZiaioKBQXF6NlSyeVF6710XFycsLVq1HCA3JlLIbK
                F7aa8tXRtq0zNm/ehK1bt9ToaIsWLUKDBg0QFLQBixcvgoGBgZBXXi7FyZMnMWrUaPTu3adKp1yPzMxM
                WFhYQCJROkVlvVxc2mmlC2gXeyEwcAH09fV1jv8APItvoW1ZjH9gaNenT1/iOJ7atXMRYgd4eyvDSkml
                UuI4vsZWc3U6W7duJY7jycHBkT744ENycHBUGRppyteW4OBgYWjXv/8AIiKaM2cuNW1qRXfv3lWRrYzH
                x3E8bd68meztHcjWtrmgN2LESDI1NaPRo8cQzxuTk1NLYdu3Jl1NsRcsLZuQrW1zmjBholbxH9TFt2Bx
                Hv7FL2Rv375Nnp5vk4WFJbVs2YoCAmYIzyAbN24kFxdXGjp0GOXn52ulo1AoKDAwkKytbcjGphnNnDlL
                Jc6CpnxtSE1NpR9+WEtLly6lmTNnkb+/P92/f5/EYjHZ2zuQg4MjPXz4UJA/fvw42dnZ08KFC4mIaNu2
                bdSyZSu6ffs2ERHFxj6k3r37kJmZOQ0YMJDu3bunta6m2Avjxo0nd3d3Ic6dpvgP6uJbsDgP//KYDa8T
                p06dxogRI2Bubo79+/fDy+ttNkRh/D0vZF8nvL0HYvXqVRCLxRg6dCiWL1+OwsJCFZm8vDzExMSynsJQ
                C4vZAGDXrt348ssvIZPJwPM8evXqCUvLJkhKSsK9e/dw7NhReHp6st7CYI6kiZiYWAQFbcDp02eQk5MD
                U1NTdOnSBfPmzWVOxGCOxGCwZyQGgzkSg8EcicFgvKqOlJ+fj82bN2P//gNvnE3Gq43hv6UiaWlpGDBg
                IJo3b45jx46+UTYZrz7/mlm7d999FzExsYiKugpbW9s3yiaD3ZG0QtNnTC5cuICLF//AunVrX1jnfFVs
                Mt5QR5LL5di3LwQ3btyAvb09PvlkmkpcuKKiIsyZMwdEhPJyKZKSkvDtt9+qXccWGvoLjI2NMWXKlDpl
                7ty5g/DwcGRlZQnfhfXy6oeJEyfU22ZqaipCQ39BamoqHB0dIRL5w8LC4rnqWZWMjAzs2LEDb71lh6lT
                p7DexoZ2SsrLyzFs2DBcvPiHkNahQwdcvnxJ2NB2+PBhTJo0GRzHoVmzZpg0aRICA+ertdulSxfo6xtg
                zJgxyMzMhLNzG0ydOhU8zwMAzp49h+HDh9f4sHJERESde5M02QwLC8NHH/kLwUQAoF27drh2LUo4F11t
                VqWsrAy9evXCw4ePMGHCePz000+st73O6LJUfOnSpeTg4EjR0TGUnp5O3t7KwCQHDoQKMpMmTaZr167p
                tATd0rJJjcCNnTt3EbZMZGRkCFsz/vzzT3Jzc6OxY99/Lptt2jiTp+fbJBaLKSkpid577z3iOJ5CQ0Pr
                bbMq69dvENrnZcXBY7yi+5E0xVCQSqVkZ2dPIpGI5syZS4cOHdIqToCZmTm1aeNMDx48oKdPn9KECROJ
                43javn27ity2bduEDlx1D1F9bFpbW1OnTp2EiEQ3b94kjuMpMDDwuetZWlpKjo4t6Ny588yRWMyGmmiK
                oXD+fCTy8vIQErIfW7duxaRJkzF48GCUl5ertWtrawtXV1e4urrCwsIC33yzHADw4EG0IBMcHIyvvloi
                HI8bNx7qRqWabHp59UNcXDxmzpyFiooKODs7AwBkMvlz1RMAQkJC0KJFC/Tr58WGPG8IOjmSphgKv//+
                OxYvXoyUlGQkJMTDz28iIiMvYM+ePWrtenh44MyZMzh37jwAwMrKCoAysGQln3zyCXJznyAnJxuLFi1C
                TEwMoqKi6m0zOPhHTJs2DTExMViyZImwD6lqXIn61FMul2Pt2nWYO3cO613sGal2NMVQiImJVZHPzc0l
                juMpIGCGWruXL18WAuwPHTqMunXzIHNzC4qNrX34JpFIVGITvAibERERZGpqRo8fP34um7t27SaeNyZ/
                f38SiUTEcTy5urYnkUhEf/75JxsDsWckzTEUZs6cRVlZWcLx48ePieN4WrlylUbbu3fvoXbtXMjCwpL6
                9OmrEp9g/vxAKioqEo4vXrxIPG9M8fHx9bZZFalUSj179qK5c+c9Vz0r40BUn5DgeWPq2bPXC/9yBeM1
                jdnQq1dvREdHw93dHfb29rh16xbS09Nx585tODo61tuum5sbxOJ89O7dG0SEM2fOYPr0z7F8+fLnrnNF
                RQVEIhGys7Nx5MgRNGjQ4IXe8XnemE1/s2ck3di0aSN69OiB2NhYREREwNTUFL/8EvpcTgQA3333HSwt
                LXDixAncvXsX33yz/IU4kUwmw8cffwxTUzOEh4e/cCe6efMmfH19QUQQi8Wst7EXsq8nsbEPYWhogNat
                W7OewGCOxGC8VkM7BoM5EoPBYI7EYPyTGLIm+HsoKFQg+GABSssIS6dbqt2fJZVWIPhgIdKzlcuVPhxs
                AncXo1fmXPccKcTb3YzQwq4huyMxXiz+S3KwYU8BrJsYqHUiAJi1OhdfrMzF1gMFiEmQom2LV6tDTvs6
                B6HHJW/U78vuSH8TJ/8owfTxZvhsnLlG2YMnJAj0N8fqOU1fyXNt69QAHh2N3qjf12DZsmXLdFEIPyXB
                g/hyuLZWfo/03sNy7P+tCB4dGkFfXw/hpySwstAHz+m/NNnqnLpUjOv3ytHBuRHuxpbj5B8lcGuntJMn
                luPnsEL8caMUjraGMDVRflRsd3ghzEz0ICmpwI+hBbBpYoAm5sq8jGwZ9h4rQvhpCWRyQmvHhvW2deVW
                KfYcLcKJS6Xo28UIA3vzam1dvFGCLQcKARDMTPTh2roRcvLk2H6wANfvlaGlXQMY88/aYNevyvLEBRXY
                HFKAti0awOSv/OISBfYdK8Kxs8WgCsDJTvnCuS57eWI5Nu7Nh9NbyvrcjilDdIIUTnYNcO5qCWavfoKd
                vxbi5v1y9HIzwpVbZTXSKioAmQwY0IuHibF+vdqtLvna6mDUqGZ/0PW8q7fjlv0FaOvUAJlP5Aj+pQCt
                7A3R2MRAvWPosp5o8z4xwSWO9Fwe0dkrxfQkT0ZNeiYQXOJo6UblN4949zhaFZz30mSrs+2AUhcucXTy
                ooTcR6QQXOLozJViSs2Qkq1nopDfrG8CZT2R0Z4jBQSXOPp4SRbZ9FGWM/2bbCIi2hIiJiO3OHLsr9QL
                /OGJ8jtLOtqSyyto4rxMQV4bW/89LyEjN2WakVscffefPEpOk1KzvgmCbCvvJCopURAR0fZf8gkuSrl2
                g5MJLs/aKDtXRi29k1TKP3K6SK29d0VpBJc4Wr1daaP524lCna16J1DTXgnU4/1Uch6URBUVFbWmTV6g
                POcffn5ar3arS76uOlSnPuddWztOXpBJlj2U8ss25b7Y/UijfUxwItgWBD3MX5uLppaGGDHAGADw3c9i
                JKdJYWFmgO6djF6abHWG9jPGo+MOMGoIrNj2FCHf2yjvBLfL8FVQHhxsDfHgmD0A4IuJ5rBpagi5QvkO
                +pffJQhebg0bS318MdEcof8twoJ1eYjYaovkM6rbKXS1teY/YoQel2DtvCbIvdRCK1uDvYxRelu5yuJL
                P3PM87fE3O9y0dapIfKvOmGByBwJaXIc/p8ET/LkOH9d+cnR7QcL4T/aVDmpIVHuDVu8IQ8WpvrIvdQC
                mxY1RY+OjdC9Y6M67YkLFFj4sTJehbhQaSPjybOt/YYGerAw1cfSzy0R/Zsj9PT0aqTJZIQBPZV33Cdi
                Rb3arS75uupQHV3Pu6523H1UgrlTlcPw0nIt1izUZ6XrkE/TCS5xtPdoATkNTCIzj3iCSxyN/iKDhnya
                /rfIVsdvvvJK+PsFCem5PKJ7D8voLa9EmrEimyYvyKT/HMpXXfb+1x2itFRBObnKK577iBQSfZVVQ4aI
                dLbV5t0kmrwgU2db1WUtusfTrFU5RESUmSMjuMTRN1tyhaspXOKId4+j4hKFip59v0T68v9yBJtyeYVa
                e7WVXfX/QycKybSb8vfwnPCY8gvktaY9b7upk6+rvKroet51taNpt3gqkshVzuWF3ZEqWTRNeeX6aHEO
                Pv3AFJ9+oPyqd9ipYsGjX7ZsjVmxv/I/XpKDDwc3RgfnRhAXKLDrSBFGDjSB/xgz5BcqaugZGenDqony
                ihedIMV/I0sw/ZscuI1IUZHT1VZKhhynLpdi+jc56Do6VWdbwkOsgR4exEsBAFwj5RW4jWNDcFWeFcf5
                Nq7x7PhErMDNB2UqdtTZq20KvioPk2RIOuWI+R+Z4+KfZdjxa2GtadXRtd3UyWtTnq7nXVc7jvExgYmx
                wcudtevVmUPPTo0QnyrD9PFmKJRUYP3ufDg2N8Sw/sYvXXZ/RCEcmzdAn66ckObVnUf7Vg3wIEEmDFF6
                uRvhzkMpfr9QgkMnJDDm9RC83EbQqT4yMGusj8xcBbaGFsKhmWoj6mqrubUhkjPk2BpaCNumBtAD4VxU
                KZ7myzXaqsqgvjz2/SbB+LlZSMuSo22LBhjlrdpuTS2e1TXyeimOnpGgnVND/HGrHF5+aejRyQgGBsqL
                jSZ7psZ6OH6hGKevlAj2jp2VYMOefFy9UyaUpa+PWtMqyc5TIL9QoXO7qZOvq7yq/aG+5129Ha0slf/r
                gRB5vRQnLhZjkKfxix3aERHtjyigb7c9e/ifsjCLth0Qv3TZvUeVD6mNOsVRYmq5iu6uXwto8LQ04Tg6
                voy6jEoh487xNPSzdBJXGQo49k+kuGRV/YAV2QSXOPL+KI1yn8pUbuu62go5VkDmHvE0MiCdsp7IaMin
                6TRxXqZGW9WHRllPZOT9URpx7nHk5feY4lNUy2nWN4HCThYSEVG/SY/J1TeZUtKlFHG2iN7ySiTD9nHU
                2ieJdocXaGXPb34mmXsoh0EdhyXTgCmP6Wm+nGatyiHePY7MPOJp9BcZlF9QexoRUf/Jj8l5UBKJC+Q6
                t5s6+drKq94f6nveVdvRzCOeDp9Q/u/l95haeSfV6GvPtUNWdVepgvLEMuH4YWI5Ff813nyZsuXlCvpq
                Qy6F/rewhq5MpqB7D8u0qn9tMz6fL8+m1j5JVFr6bNy8YmtuvWw917blKrOVrzMvot3U9Qf2VfN/CJs+
                iRg7yASbl1gjNUMGx4EpOLezOfr14P/Weui5xmPHt1aYOsqM/ShsZcOrh1yhXFVgoK+HU5dLMMSL/9uc
                qEiiwPELJbhxvwyNeT0M8TJmP8grhE53JD3XeNZijDcSN+eGuH3E4cU4EoPBqB22+pvBYI7EYDBHYjCY
                IzEYDOZIDAZzJAaDORKDwRyJwWAwR2IwmCMxGMyRGAzmSAwGgzkSg8EcicF4Ffh/skX08RhZsf4AAAAA
                SUVORK5CYII=
            </property>
        </structure>
        <structure>
            <property name="name">pavé raison sociale.JPG</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
                JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
                MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABVALQDASIAAhEBAxEB/8QA
                HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
                MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
                V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
                x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
                BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
                YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
                hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
                8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+sOfxp4VtbiW3uPEujQzxOUkjkv4lZGBwQQWyCDxitS+tft1
                nJbG4ngWTAZ4H2PtyMgN1XIyMjDDOQQcEeR+NLHwlHoza54WtbvR9Y0lHu7LUNL0OdYJcKSQzrF5UkTg
                Y3klcHOSpYMAeoab4l0HWbhrfS9b02+nVC7R2t0krBcgZIUk4yQM+4rUrh7Lx7Prdho/9l6TPBdap5Ki
                W/hljghaSCaVihKgz7BCeF2q29cOM5EY8V+Jre8t9Ol03Tby7XWJdNmkglaJZB9lNxE6q2dg2ld/zOV2
                NtDlgAAd5RXD6f4h8Sa1bXVhp76Umr2Xnmae4t5PIl23NxBEqoJNy7vs7FmLHbxhX3fKJ4n8SPbWurSW
                elQ2H9qjTLmzWWSWX/j5NsZUmwo4kwdhj5UE7gTgAHcUVyem+ItSlt9EW7Fo893rF5p1w8UTIpWEXWGR
                SzFSTbpnJbqfbHLjxx4yj0Z3uNKkXVobhUuLFNDkMixBSJJIF+04uUErRLuRhtB3FcMtAHqAnha4e3WW
                Mzoiu8YYblViQpI6gEqwB77T6VJXB3XjNdOF/qCx6bcmGy00PdPuswzy3M0DiVmDtGkbAnYwJQ7wec4j
                stT8SeHfBMVxLpdi/wDxNYoLa2gEkLfY5Z0jTEcrHZId/wAsbOqxqyg42FKAPQKK8rh8a+PrzUtS0RNG
                0az1iO4D2aTtK6z2xlePeVG0hF8t2Mx2g/u1EeZFrpG8RaxbfECTStQg+y6M2w2t0dPdo5tyqoQ3Il2x
                yGUsArR8gKAcuuQDsKKKKACiiigAooooAKKKKACiiigAooooAp6tpsOs6NfaXcNIsF7byW8jRkBgrqVJ
                GQRnB9DXJ3mjeNdZ0MeHtTu9KS1m3W99qts7efcW/IO2Ax7I5HXAJ3sFyxUdAOo126vLHw9qd5p1v9ov
                oLSWW3h2F/MkVCVXaOTkgDA5Nc34c8ZWMulxXF1q8l7Z3t6LfSrySDEt0h8tCzoiLsAndotxRB9zPLAs
                Ablz4W0a80Oz0aazzY2PlG1VZXV4DFgRskgIdWAGNwOevPJqxFomnQRWEcdvhbCVp7cl2JEjK6s7EnLs
                wkfJbJJYk5PNcno/jBm8R6ymp6lHb2mnvOl+l2i28difPCWm1mClhNFucks4yFxsBCnch8beHZorljqH
                kyW8qwSW9xDJDP5jLuRBC6iRmYZ2gKS2CBkg0ARv4C8NveveNYSGd3laRvtU2JFlffJG434aJmyxjIKZ
                Zvl+Y5uWvhbRrHWJ9UtrPy7qaVp3Alfy/NZdrSiPOxZCvBcKGILZPzHNjR9b07XrN7rTbjzo45XgkDI0
                bxSKcMjowDIw9GAPIPQivL/HnjHXtJ+HUHi231qe0m1KWMaba2trCYkikzIhn8xXYyeUDuKMF3YAGAWI
                B3kvgLw3cXHnz2Ekz/aJLkCS6mZVeQsZQql8Kj723oAFfPzA4GI0+HvhyOK1jSC+H2PAtX/tS632wClN
                sT+ZujUqcFVIBwuQdowJ/a2g69p0Nzrc+q2Opy/ZVju4Ikkt5FimlLh4lQMpEe3aVzkghhgg19W8a2Ut
                strpN1Ot3cSwJFO1nIqNFJcwwvLDI6eXJgTKVILKcqcMvUA1B4Q0NS5W0kBe3W3ci4l+YLIZVc/NzKJG
                ZxL/AKwMxO7JzViLw9pkNh9iEEjxG4jumaWeSSR5Y3V0d5GYuxBRMbieFC9BisvR/F2hSaG9xBrs+sR2
                929k1ytuZJZph8xVEhjHmYU5zGpG1S2SATVi08aaJfXUNtavfSzS/wAK6bcny/3rxfvD5f7v54pB8+3G
                0npzQBc1Lw9pmrXCz3kEjOEEbhJ5I1mQEkJKqsBKnLfK4YfM3HzHMbeF9JfWJNUaGdriWVJ5EN3KYXkR
                VVXMO7yywCJg7cgqp6gGsu1+IGkDRJdR1bzNKeO4uoWtZlLynyHKuyqgPmBVAZjHuVfmy3yk1of8JhoG
                y2YalGTc2S38MYRi7wMyKrBMbss0iqq43MTgAkEAA3KKw9M8XaPrN1Hb6fJd3BdEcSrYz+UA8SyrukKb
                FJR1OCQfmA6nFblABRRRQAUUUUAFFFFABRRRQAUUUUAY/inTLzWPDl3Y2E0Ed0+xkFypaGTa6sY5ACCY
                3ClGH91jweh5O18G68t7rF44023TVdYsL5rGC5dordYHR5ZFPlrvlkZORtXsSx6V6JRQB5HefDbxVdza
                LMl5o1rd6IjlbyPzWbVWWZJohcpgFQXTe53yfOzMBk11F94d167v7fxFGdNj1qC4gYWbSu1uYY0njKeb
                tDbyLqVt+zAIRdpwWbtKp2epQ39xdR26yPHbv5bXGB5bSAkOinOSVIwxxgE7c7lYKAV9F02axF7c3bRm
                81C4+1XCREmONvLSMIhIBICxoCxxuOThQQo87+LXgnVtY8G2WheGdPnu1TUBdLGZokjtY1jZfLXeynbl
                8qvIUZA2qEUesUUAebw6XZRz6v4L1Ge+TVb/AE+a30/VNQuJLn7XA6Ycx73IWRTjzI12btiuAFwENS8I
                eLPED2Fzr0uh3UiRPHcWUQdLbAuIJ0UblZn3/Z9jlsBQwIVipD9xrOh6X4h057DV7CC9tWydkyZ2kgjc
                p6q2CcMMEZ4NV7XRtJ0Dz9RMs48uJt9zf38s/kxj5mw0ztsU7QWxgHaM/dGADl18MeMIdYGv215ocWp3
                N3P9qglimlhht5Ft0GxgVZ5FW1jPIUMXb7uBnPTwBrYv0lkt9Ke7tZblrDXBfSx3kJmnlkMjxpEscuBI
                P3RIQkOM7XIHpFjdfbrOO5FvPAsmSqTpsfbk4JXquRg4OGGcEA5AsUAedy+DdeN2s7jTbm2huL8Cwa5e
                JbmG5uPPPmyeWxwCqKYguGwcuysUPUSaJNc+JdF1a7+yTvp9lcxM4jKkTSmH541O7aNscg+9kBsZOTWh
                HqUM2qTWEKySPAmZ5FA2RMcFUY5++VO7AzgYLY3JuuUAeZ+HPAus6bf6Zdz2GjWd/Z29tZtqdjfTtJLb
                xIgZJITGqSF9jLuYgoGUjJjUn0yiigAooooAKKKKACiiigAooooAKKKKAOf8a6hcaX4Vub22uZ7XyZYD
                NcQQiV4YPOQTOFKsDtj3n7pxjOOK5u3jvnTVv+EbvtS1XQp3tDHIt/5z5DMLlLaaVwWBVYlLeYAheQo2
                9CleiVn6xpX9r2aQC/vrCSOVJo57Kby3VlOcEEFXU8gqwZTnpnBABn+GLmyX7VpkMOq215b7Jri21OeS
                eSMSZCESM7qynyz9xyAQQcNkVw/h251LQtH8OaX/AMJf9o1u2ltrS88PzQW+5YiwjdVRVEv7tDvEm5lZ
                Y9/KtmvRNK0UabcXF3Nf3eoXlwiRvc3QjDeWhYogEaIuAXc5xn5jkkAAalAHDlBYfFC0SaPXLe1uIphb
                yyX801pd3JAdl2eYRFsRZNqsoDZfAHlqW2PEj3Go+X4f068ntbq7wbq6tSBJZ23OXBIIDOV8te+WZ1B8
                tsWLHw+lpeR3E+oX1/5GfsiXjq4tQQQdpChmbadu+Qu+N3zfM+41nwtomvb5NR0uxnujEYkuprSKWSIc
                42mRWHBJIBBGexoA8/s9VivdO0Wx8ReItVsYbvw1Z3Fm1vO8UlzdEOJWSRRvlmAaHEWW3F87GOCOk16y
                1+/+GFpDLLJDryJYT3M0cKzNFLHLFJK4jXhyu1m2LndjAByBXSaHo1n4e0Oy0iwTZa2kSxJkAFsdWbAA
                LE5JOOSSa0KAPL73WtSd7qLQPEk/iqw+yLNdLZfZ3ubcJcRCREkgCANJA821SA+Yso2enSeFkNv4g1i3
                tb3UrnSzb2k8SX8skrW8ziTzI90v7xTsWBzG5yvmZwN1dJfSmDT7mYXEFsY4mbz7gZjiwCdzjK5UdTyO
                B1HWoNHtLS109XtJ/tS3OJ3u2cO1yzAfvCw4OQBjGFChQoCgAOztcDzae51Lw5Y64i+L/smtJqF3d6do
                U0FuVuUeZpY41Ur5s3m5IDI4wz7cbkIrc8VXd9qGoWdzp+o3drpumanZRSNbPtS9nku44pImOMlI1LAg
                EqzSYPMRFdjaapp9/PcwWd9bXE1q2y4jhmV2ibJGGAOVOQeD6GsLWPh74Y1qVJZtHsYpvtaXU0sVnDvu
                CrbisjMhJVj97BBPIzgkElFxdpKwHUUUUUgCiio4J4rmCOeCVJYZVDxyRsGV1IyCCOCCO9FuoElFFFAB
                RRRQAUUUUAFFFFAHOeMb7WdIsLfV9Htpr/7JL/pOmxAbrqNgVG0hGYMrFW4wMBs54rC0aXxpqdrremXF
                /wDZr7S/NtYdQKQ4vJmKyRSFArCNVjKArhsiU9GWuu1CfWo51Gm6fp9xDtyz3N88LBsnjasTgjGOc/h6
                1ftXir/oDaN/4Npf/kavSo1HGioqEG+7cb79m/VarW6/lVoa13OU0bxD4w1TxFaRXOnzafZ6rELpI5wg
                fT0gk2zRlWUNJ5uY/mONvnZGdpqC+1/xvo9+UFjNfwaZfLbuzmOJdUjuSwgIkMahGjYxIwQEEsc4Arsv
                tXir/oDaN/4Npf8A5Go+1eKv+gNo3/g2l/8Akauj28ee/sYW7cy9N73+HT1974tRW82QavLq1t4XL6bf
                /btW0vynukiRAbwoqtJEVCvsaRDkBQCCy4OOvMaDrniC416LT9S1l7O4dpDaW97bxb7qJ4WliLxKquGT
                JEjBkTMIQbmZmHVRyeJYnlePQdDR5W3yMuqSAu2AuT/o3JwqjPoAO1SfavFX/QG0b/wbS/8AyNWVOfJT
                lBwi2+t4XTf6f12s3ucjaeItUgs/Dw1bxBc79e09bhGs9NEksTxorMsaKj5LiRWYsrAeW+Au8bMrRfGX
                iDUfCl/fza4kGrQ6LNdCykgiflNpE4RQGjBQqRvYhmlLBNiAN1Wq2Xje81ayv7K30OzeCCa3kzfSysUk
                aMkoTAArDyhgsGHPKnpWlZL4j06wt7G10LRo7a2iWGJP7YmO1FAAGTb5PAHWut1qKpp8kXJu+8NLN6bW
                1Vu+19GTZ33OR8Zate2dnr/h/UNcuZZn0qS/j+y6dkuroyGI7UcRwqyElmO7EqjeNhL7mjavfap4p1Sw
                udXe1lRbmNNPVYi6KsoVJ1G0sg2FCPMJ3mRiFCKN2z9q8Vf9AbRv/BtL/wDI1VNQn8dSQKNN0/w5bzbs
                s9zfTzKVweNqxIQc45z+Hph7RTpqm4xT780N9NbJeXm+zQ7a3OR8MatqdtpGgWya1ieP7BFFpcsURa8t
                JIoi8igAP+7MkmHU7QLfDAkOxJfFfiHSyZdW1eHyppb6FPs9sBtigvIo3lVMM29I2uGxl12xqSGIYnrt
                Li8S6TpNnpsGkaS0NpAkEbSavIWKooUE4tgM4HpVv7V4q/6A2jf+DaX/AORq1niIOo5OnFq/eHn+uvXt
                2sknbc5HUNa1KzS9ey8ZJdoIEutIZ4rdxqMmWWS1+RR5pzGoHlbWUzgHd8tHiHxhPo9xqtgfEltbXUeo
                TJEbry90ULaeZUyoXJUTFQDtLHAX5icHrvtXir/oDaN/4Npf/kaj7V4q/wCgNo3/AINpf/kas41oX96n
                Fr/FBdvLy+9v0Hbz/M4PR/iBcSeJbS2uNXS5hjnjsZreK+tpGlkkeQJOpWFRNHhoRhCjJtO5Dzmfwl4m
                vtUn0ezTWLazzZxR29ssMTRXR+yBiRGgDgJKJQzBkQeUIwCxYr2v2rxV/wBAbRv/AAbS/wDyNR9q8Vf9
                AbRv/BtL/wDI1VUr0pKXLSirq3xR031t8/u89RJPucNca74itNB0XUdQ8T/ZrbVNMW4kvPssMaWkyqrY
                +ZW8zejsfLUF2eP5SiFtu74c8Vl/Feq6VqOqw3P72Vrd0uItkAW4MQhZNiOj5eJRuLh+qt67n2rxV/0B
                tG/8G0v/AMjVHNJ4luECTaDociBlcK+qSEBlIZTzbdQQCD2IBqJ1YVIOMqcVfqpQXXTbtt2fqNK3U5W0
                8Q3d7Z6dqD+Lnto5WMOtQPDAh0qQozDl0zEBJGYh5ofcHGDnDGDUde8XJo9vNDq9sETStSuZbhLVVaf7
                M4EU6Z3KRIDGcAbdruQeU29r9q8Vf9AbRv8AwbS//I1H2rxV/wBAbRv/AAbS/wDyNTVeKkmqcLdrw8/L
                z/BBbz/Mg8K39/PcazYatfQ3GoWVzGHSLaBEr28T4UAA7N7SBS3JC8kkGujqjp0uqy+b/adlZW2MeX9m
                u2n3dc53Rpjt65yemOb1eXiHeo3ZLba1tvLQtbBRRRWIwooooAKKKKACiiigAooooAKKKKACiiigAooo
                oAKKKKACiiigAooooAKKKKACiiigD//Z
            </property>
        </structure>
        <structure>
            <property name="name">raisonSocial_ParLegrain2.png</property>
            <property name="type">image/png</property>
            <property name="data">
                iVBORw0KGgoAAAANSUhEUgAAALYAAABUCAYAAAAvfM2NAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMA
                AA7EAAAOxAGVKw4bAAAAB3RJTUUH3AYTDDcGFLqHQAAAEMVJREFUeNrtnXmUVcWdxz/1uhtaEZBFIoJE
                WbrvaxFwB2NAjUuIo4lx4jJDMmeiTpZJ3CeeRGck6Mwoxjgc45KMI+PCuCZxFDFijK1GDYoYhe5+Cwqj
                YAcFFBvobrr71fxRv8u7/bjbe/0a7Ka+5/TpW1W/+lXV7/1u3aq6Vd8LpUMBVcAQ4BAsLD5DSHiu9wUu
                BV4BtgA64i8H7AA2AtP7oW2eA5YUxE0D/gwcYF2nb2AykInhzN6/j4BHgSP6qU1agW0+8XcB/2td5rOP
                g4A1wFygFqgGRgLnAIuBf5G4vQ0vA/MC0r4P1FnX+WzjNuDEgLRK4D5gFXBoH2/nOOBYYBgwNEb8nq6X
                RQ/xnYj0gTJMWSMTRb9JpPsDPQZsBT6U3k55ZH4B1Ev4GCAL/M6jZxiwAHhfhgH1MkSK0j1T6va8R9c8
                4GNP+FYgDTTLMOqEiPhaYCXwWx8nfAj4ROYhNwMVUpcFMj8BmAo0AS9F5Asq36IMiDPM+J4Y/qcF8WfJ
                /9HikDeIg/5B5L8t6d+QcKsMczZIeIekDwEagEWS/2KgE1gaQ/exEu7y1CsncS5aZMK3HzA/RvzBkr/N
                E/c5YD3wY+CLkt4iTnyRhNuB4cA6T50+H5IvqHyL3YSx8oOskMflCcC9wB2SvlDSR3ocXgNvenpsd9J5
                vfSI2uN88+XaO279N+C4GLop0OUXbgb+CMwoaFdQvJ+OX0j4QPnbLPVzh2yu/DWAI9f3ReQLK9+iTNgP
                +Ecx9HpPr1f4t1V6Uw2cKXk3SrjSMyHVBasKbv6ZPo7zjlxX+dSrGN1B4Ws8cY9L7xsW76djrdikArgd
                mBJwIxwv4aXyNAzLF1a+RRkwHlgOzAFG+KQP8Di1i4uBQXK9VdIPKJBvjul8O+R6mE/Zxeqe4FOWW99t
                Er80Rnyhjh0ybp8H1MTo4atj5gsq36IMeBw4LSR9lBj+nYD0NyR9loQPlPDtMR3b7ZXP6aHuGpmQFpY1
                3fPfe4MGxfvV9z0JB63b+91MUfnCyrcoAz4F9glJnymGfyAg/duS/ohMBOfLqsfwGI49EHjC0wufIU+C
                U4HBMXV/6tH3757rUfIEeklWWKZK/ErJFxTvnYAOkPDPJPyQDBkGy3h/aIRjh+ULK9+iDNjsGRv6wXWW
                UwLSlTxqN8pMf5HPePFDWRnAMwZtAX4lPdafZFVhi/S6ThG678a8Cb1MwstkZeIiCc8VvVtlDnFMRLz7
                FPsQOMmzcvOoDBs2Aw/LMp6LLHCJj23C8oWVb1EGPCuP/ME+aQfJGPHX1kwWfQ0zMGuujfKY3E/+voJ5
                gbBYwhYWfQ6nAM8Am4AOebQ/jXm5oqx5LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsyosTMdtWt2M28E8p
                s3w5cDRmA9SLmBM1WzFvSzsx+zA+kLoswmwFHVKE7gMwL6faMafQy4kK6157DmnMtsrrMZudXimzfE8d
                424Mz8cczCmboZjX/e4BhMGYLat/jTmnqMXR454kv0/yfL4X6n++da89h07MVtHPyQ+8vczyPcFVmONh
                hXgA/22ikN8q+mzMMj4K0dUT7EfwHnaL3YCPgfOkd9SYLZTllO8JUvhTqGVCnNE9jNsSswzdQ8f2o1AY
                gzlpX84bxlI1FInFmJPj3wBew5xSAXMG8Q7MPuI48q7xg6gS4qQXoh1Dv1aIthCnGShpn3ji9sUcEH6V
                /JlNP8euA94uuFnD8gZRKFzh0bvI04YwCocwigpL1VACjvf8CFd44v8uoDcLko+iSohK98NfgKOK7GVP
                In9qBcwpmJdlLlBN8Gme0ZiDzFocOE7eMAoFV9blSAyjcIiiqLBUDUViH+D3wIXSM2vpHYIcKEw+iioh
                DpVCIe4E7o9w7Apgf3GQy8Qp3sXQRnh7zzMD2uSGfypDiA886VF5y0XhEEVRYakaisTt5KkPvuUx5qkB
                P06Y/Ea60ygUUiVEpfthBIZV6fshTvMyeYKbVeIY3jHoMkkfEeHYR0p4tSc9Km9vUDj4UVRYqoYi4T7y
                BsqjzjXeTQE/Tph8i6dHch/jWoYTxEgPwlAZ4/7M4wzeep1V0KsW4lO6c5NE8ZCsJn9iPCov9B6FQ2HY
                UjUUAddQSbozGv1HgHHD5JfT/dCvuxx4p4Sj0ouBt14KQ5G2JmCi2S6yX8AcuA1qU4Xn5n0hZt7epHDw
                hi1VQ5F4UQy1kDwNQIcsK/kZO0zenWw+4ell13jG1FHpcaF86nWuhP0mVk3kufVOIU/Q4w6J3GW504DT
                MW80T42ZN4xCoVXiJsgcoFgKBy9FhaVqKBK1sjrRgnlRsYQ8FcNhHuN+LYY8GD7tDdILPiqTMYpIj4Pj
                PPUa63H212U14wsF8n9PnrME4Drp8V6R1Yk6DP1DG/CWRy5O3rkEUygskXG1S94ZReEQRlFxC5aqod8i
                AZwsQ5pNMv59ToZFyKQrJ4/84dZcFv0JP5ee/KWA8baFRZ/EQPJ8f0slbGHRLzBCxspaVjeCvvJ1OHbP
                hUUfw0jyr+w3AT/C0CVXY9bCb/VM6iws+txk8zzMRqJNmFWPNZhX9FOseSwsLCwsLCwsLCwsLOJhd52g
                PgizGrG9j9ilt+rb1+xgEYAJmC/m/jd940VJb9W3r9nBIgSHYDb1PEPfII7vrfr2NTtYROB5zLrxmL28
                vn3NDnstlDxOx+H/sVPIH6Zd2Efa1Fv17Wt26HeIQ4ngMiy5f+34830A/Bf5jfthmIXZ19zq0RuXo6QK
                Q2uwpcT2lFLf0zDnK1swn9u7KkI+rt44bbIoEnEoEYaI8+3AnE98HpgdojMlsmEfRR0pPZpLTXAmZi91
                XCe4CP/zh6VQPMSp7wWi50LMh1FfI/ycZVy9cdpkUQLiUCJ8k/zJ6TjYhuHPmCc9WzuG6mueZ1XA24O6
                fBtXx9Q/CHOSxc8JSqF4iFNf94iY+430syX8dA/1xmmTRQmIQ4nw8yJ1uucCb5FecwJ5GoNbfR6/L2CO
                jMXFDz3jV11Ce0qpbwfdT9iPk/C6MtkhrE0WJSCKEmF/DBvpUzIceR9zbi9sd9xa0eGl8p2OP9XCbeTZ
                UW8k+qWRkt63KsAJSqF4iFNfl7jy6xJ2WaF2lMEOUW2yKAFRlAhflvHpgdLrnCOP1w4Mla8f7hYdZ3vi
                9pE4Lw9gNXCo6H5C0n8YUd8zgCfl2s8JSqF4iFNfd4jzlIRd6olNPdQbp00WJaAUSoTZkmdVQPoEzEHb
                TRhahP0w3NbuY9kPdeTPKobhWeDSECcopT1x6jsEQ1G2FvgHzLq0e0KHHtohqk0WJaJYSoQhRPNiT5OJ
                1acyPFgBfNezClII99HeEKLzSJGpjXCCUigeiq3vl6TsK3uoN26bLMqMy33ixorxl5exHJcI5sYQmSV0
                X0t3/1olbXd+FuMuuXmG9FDPZ6lNexXux7A/fUUe7aOA/xHj/1UPHWOqLHtNwryYWS7LXnGxp3q3g6X3
                nd0Lum2PvZswDLhHVi06ybMgndNDvXNkvNqJYVpagKH8iotBHifYndS6lRhKtCt6QfeeapPFXg6FWX+e
                Y01h0Z9wOHmuQAsLCwsLCwsLCwsLCwsLCwsLC4t+gNrUBTiZDE768hCZ03EyG3Cy7SQzL1O7YvRnvl1O
                dpn9cfdmJLProL4iQqaJ0cv36VPtcjJP2x9373bs6L0cyUwX1FfgvLaHv4UzV5FsnEaycSITlw0Ojtud
                5fc+EtSmjiKZbcLJ5I8qJdPfw8k2MvbVarmTf4uTebrXZL2Y9PahJLOLSWbfpa7hYJF7GCdz3U4dyex6
                nEwzTvqbJj01i2TGfB6uNnMlyexH1KYuMPKN43DSF0k+3a0uxeipa0iSzD6Jk23p7sAFesa+Wo2TeQ5U
                guSYDbD/dGnD2SQzaZKZLSTTDzJx2WBq0ifhZBrytsk07xwOJNPnksymSGbacLLPMvHNkYF6nPSFJDNv
                eG6qZ/LXf/skuvJRdOXjVA39bnBcZh7JzFuhbYu0tY+8X1m7dAJFtNW12ejl+xg/ybwN9RUkM4tIZlN5
                x9btm8h1XYviEuoazNe3dG4ZiiSDRnwLAKWXojio12S90AlFR+t3AIUe4H5E9V5Ql5BMzyan9oeO81Hq
                QFDnmzxsBeqY+PYYdPtitK4E3qBmZS1Unkuq9m6aau/0GLI4PRNXjSdX9Tu0foId28eH6lk3o41UzZcA
                aJo0klTNEpymmSh9Mq3bj0V1zESro6kcfgOJ3DoUSZKZn4DOoTqPQ+ljSDZ+EdSRqPVHoXJzgAFUVyYC
                9aQevIduH0VVnpP++mQSHSeTqplMk3NzYFzHxzeDmlKyjYLkfcv3OnWRbXVtNnTwpXS1XQlMJjn6fLr0
                jeT3tJMgM3UtaefXaOrRVWbHmkpMQOuFKDnV0cXroBf0mqwXqye/y+op66HrJtBnU9cwla2b/gCsBvUj
                VNdClM6g+T1bN5kdhmnnDVAJtu3YzI5Na1GdXybtZKgYeDP6k3t27SKK1FM14Dp07sekav6Td6d+FKln
                F1T8K+0t17B22hYaD3sLxT+hOIdUMgtKoVlPk/NLmureA6Wg6p9RHbfSeOI2Gp3HSE2axarDPwzUw1xt
                8vlAq7fRA+pJpmeHxq0+rqVHNgqS9yurG4psq2szcq+QOTxtrrveI1O7svtQZGdjc/PR/A11DcNAD0dv
                vQbURGpTp6P0cNRb9/e6bDe7/uV+oIVc1VwGDRuH7roaOIzUyg/pqvoqW7acxboZbd3yNB/dytoT22mq
                WyZGPQmGHM7klaNwMt5tpsXpQZ0CG5/wqWW4nnxjppGrzDue/uRF0Pmjaqmae7s7o54KH20tWo8vus5D
                sw4SS3DS1wbHFdm2XWwUJB9RVqltTSVf3HndVPfSrmNsF+mHlqLU++jKeZBrJH1kMyr3ICoxF92eofHc
                jl6X9aLxxG1oFqLU10ioY0g79WasO+XrDGx9gOajW5m4anzEHEKhKurpqt6AortsMXo0o1AjZuA0HYjT
                NLN4PfoTBlbnhwqJQeGnjxRD6Rw9rSQ9dQ0TzP96c2Aj5fwfqUmzIHcZqCsD4/xQnK395aPKUgwpua2h
                k8f87FWjc3eBOn7nHdDFLcB4Wjo2FMx0yys7aZWDk1mNk72+e2fTtgB0G6rzTxKzAq0G0t6SoDZ1PJWV
                B4c3Tz8Mug1yc2iq+YEnoVg9H6Aql0LFm+jWLOh2nKYj4utRv0FV3ETNyloO+fNQclU3oHPXhNyPA6lQ
                d+A0HUFdwzCcpjOi9ehPqU3VkKs0n/+uHKZlbfp6Jq8cBV2vYsgx/ePya9nzS7NRgLxfWd7fW6t08W0N
                W41qrCtwbIAt94HOnznM1K6E3Lk0H926q4Yyyna1fYDiERK6++M+O2UNudxXaTzsHdPWjsvNWG7UeyQS
                J5FyXvAMeW7zaeYLkLuaptpF0vPuKFHPfLReR4KzSB/ZjOYxtEqG6kF37bzs3Hwt6DVUVL9O9b6vkNBP
                5mX1kwU30Qp07mLzlKh4mVzVImh5NVKP5o+oittJNP8GrRto75LvV+YOo7P6fXTlIyh9VXAcoFmGyj1f
                ko0C5X3K6vZ7d84ruq3dbfaUp/5vQcX0/r/e7GQyZmwPTFw2mGTm9d241r3eLvjvOST6efvG0FVxAnX1
                g6ja/zp019zdUmpdw8GQW2zda8+hsl+3TnEbKvEwuYPWo/RPSCWf6t0nRPZ6lJ5Njibatv/Autee/Onj
                vB62sOhj+H+c4IPPzBtGiAAAAABJRU5ErkJggg==
            </property>
        </structure>
        <structure>
            <property name="name">raisonSocial_ParLegrain3.png</property>
            <property name="type">image/png</property>
            <property name="data">
                iVBORw0KGgoAAAANSUhEUgAAAMgAAABcCAYAAAArr/rLAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMA
                AA7EAAAOxAGVKw4bAAAAB3RJTUUH3AYTDDgREPEeSAAAIABJREFUeNrtnXmYFNXV/z+nunsW9h3ZRECm
                exiWyKLigqgoGo0at5jFmJjERI3GmFejib7qL/rqz0RNYl6NMcYVNxJjYlBxVwKIG7JO9wybgLIvss3W
                Xef9456ii3ZmBAKoUN/n6ae7a7l1696z1z2nYNcgBrQHuhMhwl6EeMH/I4GzgUOAbkARoNvBHC2A94Er
                gY/28jFrBdwPZIGLgHW2vT3wUxuzqyLS2rvQGvgzsMoYYkc+K+3cI4DifWCsOgBbjEEKNeY3gBeByyKS
                2ns0SBHwgH3fAaSBWpv8UcAQ4FXgMaAU8ACx83PAZuDDfUBzBFBgLTDdximMf9i2A4HOJnAifMFxEfD/
                jRlaFTBPH+As4L69zGyQ0O9SoJP9ThTsaw+UhPYF5x4M9DZh0Rja7YY+t7EPJswi7CEN0gf4X2BRwb4s
                sBBYambFjUYwN5iJ0ZyNfhYwCNgEvAm8EpK23YCjrI1/mqT9JrABGA9stOP6AcebNK41if1s6NpfAQ4z
                H2gW8LJpsQRQDow1CT4OaAAGACcCU4CpxhRjzTRsA3wM3GvX+ZIdmzRifNs06HLTrBVAT2BFgRapsD53
                BlbbvU+xfYcDA4EJNqajgEPNd3vB/LgzrY0668dEoCtwsvWpFJhnPtDCiHz3DI4skJqNoYURZwNwSkia
                BgzR0X53Ba4FngIeNf9khk2wZ9L4UmAZ8Iwx6N1GZKuAA6ydw8zcGwc8Ccw3Br7AGOKH1v4jQAZYDFxt
                BFQMnGem0IchrXiHbbvC/h8PTAJuNh9qqREhpjEfBm4xZnrc/DSMqLdYf7qGxuFo4LfG5O/btZ43Zhlg
                vzcboxxl7SrwhPX7GrunCbZ9sY3DtcDTwP/YmL1ZcN0InxOMtYn7R8gk6QWcY8QRN+LfZBoEIzAFngPK
                jMj+aNtmmBR9I+Tw9zUtNdEI4Qhr5wfAEtN0R9s1rjGmO8ck+0LgNDv+uFCbAWG/Z/8vtf/nGZH3N4Y/
                NXSvs01jtjAtcnBoX1mo7Z62rSfwkn0GAl8PjVUfG7vNtu0CY9Jl9v9fpkG3AKcDPYD1pimONGHzpAmh
                LsCYiBQ/O7QxAhgGjLQJOsK+zzCzawVwrkVsxpvEO97MmoztDzDICDtnmgeT/moEcgGwn+1XI45LzcS4
                tcCmP9eI9Xk7tsL27Qf8zbb93rb1tv9+iEGmFDDIWGOsGcC3zPQLNOk4YI0FL44AWhb4JYUMcrn1+Tf2
                /7sm7TuGzltq5zxiguBXZhpeY5psrTHqYOA1YLSdd63tmwCcALSNyPSzQQ+TxvcDb5l0XWuEEnz8EHEv
                NZPrT0aEx9i+paE2S4Bq2/61UFBAgTmmgYqN8dQk5Dj7/fNG+lhqvoIaswQItNLDIf8lYJDAxJpawCA9
                jaCDe3oDGG77xoQYarMxaxfb17ERBnnQ/t8EjAB+0Qghf1hw/TONkQ6y7R8Z891mwibAcODvoft5xARA
                hD2I/U0y32DE1RiKgHqbqANCjueIAhPso4IoTsa2n1rAINPsf8uQBulsvo5aXxoLAAQMcmho++9t2x8a
                YZDWZrPPsG2XhM5rC/yXBQgUeCfECEPNRFIzf25rhEF62Lan7f+rJggak/IBg4wt2D4m5C9da9qlEP1M
                CPgmlP4akeyeQRCmvNkc0dvNIW4M+5kJsob8E/jJFuHB/IKVphGSIeIvNen8wXaGXzfZ72QjzOqbRsJ8
                h+KQabjctEQhetv99S0I8XY2DXZbyGf6kgUBBtg4fNs0ZCmQaiZcvNq+PzBB8/F2jHmAOiP6EvM3CqNT
                ZRbEuMy0atzMsAh7kEGOAiqbmdi4EatY+LGxMO9CcyY7mOmQAC60a/zWIjuFbRb2IwHMtVDvmbhnL72N
                AY60/X8xifttk/Ynma8z3kKxASMFBPw+UGNaIojIBfd8lQUcguUiy82kuhz4srVTY/sae+gXs+9/mwY4
                2nw1bBxODPlAUvBN6Jov2PGXmPb1gGOtb+favRaF7mF5RLp7Fh+ZFI03sb8UuM4I84chIqMRaTee/NP1
                Z82BLw0dc6lN9MWhtt+2th/FPd94KGR2VZlm6xPSSrdZMGCtaY0fFjjEXXFLPhqAu4z4nrT2HjdmLzfT
                aLUR3BxjSqxvM6z9FcZ4g0Paaqoxz9nGtEXAL62dWjv3ZjNdA4aoCl27UEgdDrxr/V1iY3ik7T/DNHXQ
                l5dD0b0IuxnB5L1szHGREUohepnTutJ8iaXNaKQeZo4lzBxbYBMfoIsR8GLTWIJ7GNjGGGupSdEuRng5
                I44PzJkP2uhujLrJAgobCrRTL2vnQ+v3/sZEG21b1rYFUbT1do0aY6j9jRlrjfCX23GemWtt7B7WGrN0
                tHtvaW2vtv0569MAu98VofsgpDn7mJMu1sdFNh6trS/tzRxbbUyUjch3z+F0m+hJJrFKQgw0Bhern22h
                R4mGK8K+pkFKLJpzppkhS0za1dn/OjNHXoqGLMK+yCCBbX04Li7fxUyJ9ea8v2FmSYQIESJEiBAhQoQI
                ESJEiBAhQoQIESJEiBAhQoQIEfYCBA8Ku+OWUw/DrWl6BJcL0dx6n/a4Vbsn4NZaPY/L7a7ZQ31vj1vx
                ejD5VN3gftrg1lBtxK0Hm49LuX2FfFGI7cURwI9xy+PH4VYTR9hHECzXvhm3CK6FEd0g3JPzqmbOvRy3
                qG+zEdFI+/3OHuj3N4w52+AWImZwy+3LcXW8bsTldAd53wfh1psdG2KY7cFwXBJTP1ym5Tvs+qXmrXGL
                NaMaWp9jrMRl6PXGrexV8hl0TWEybll4O9yScsUtMd+d8HBlUcfjynyOIL/MvR9uvdjboeOLcKt6j8Mt
                uAz6ePB2Xu8KO2f8brynQbiKKxE+hwjyPxK49Vdv4hYqhs2v5s7thFuvNStEwLsTRWbuvAn8jnxiVEBo
                R5LPOASXIrzEPutwOeRjcAlKb23H9YLSorU7ab5q6HerkHkX7OsFnG+abVej2OajxiyFXETuO88gH+By
                qWcZ0c3B5VcHzDMQl8MxMTTpi40gR9pErGhE0g7F5a8HK4TT5FNqg0kchsujqMXljmSa8X0SuJzuqwuY
                A/MROjSyPcA7dp9D7LgwIQ+wPpQYE75kjB9UMAzuua31t9aYNLjWfqbB2ts9LcPlz8TIlw3qZv7dNFxC
                VSszEy8xc7YCtzA0aLMClyOSMA1fZWZY3PrbwvqQME1ahMue9K2Pg+yYD3AZj0sict95XGeE+xCuMsg3
                Q8RzqE1qlm0Lxn0Pl9z0CnCntRFmvLG4omjTjTDeI5+xFzjSX8fVzJpt/suL5ItANGWv1+ESiArxEyPk
                fzdzfmBm/SLEoGPM+Q5KB6kxPbgiEIor/yO46vUbjFiDnJnewPW4bMh5bFuQoo0FO54zgeObaegZ8QcV
                XNbgMhKD8R0F3GNjljOGu9D2DcPl7cyycT7DBMs6XBrxV2xOJtoxy4yhIvwHGEa+sNpLNkFBpOi/bXsN
                26bkHki+HE3aJioWau9jXO2n4HUAdSZVDwk52utCE38f+dI9fZvoZysjhlMLmBUjvMYYxDNGGGWMOIt8
                ZZExpgkDzRdUNxlRwCBPmhm03P5ncanCMVz9q4yd8+MCX6yLaZsy+38++Yow4OpxKdvm6/e169yKKxTx
                lB1zlzHVf9n/jbjCFYEmU1wFy+usT55pth9F5P2fR1Em4qoXBkXZMuTrWA0kX/omHtIs9xnz3GP7VxuR
                tiJfBicg9KRJPTVJf0AoIhSYMYeZtNvEJ0vjhE2y3xhj9mqCQSaFzKFepgEvNuZYhStWFxDiE8akh5BP
                dW2MQebicvYrjPGz1u/zbVxutuOvLGCQjqZlZ+Ly11sX9Pm75KtMBlHFIOAxysZ7nG0Lzh1s+xvsut3N
                NFNccb4LzDx81MzJCP8h7rTBHWTh0Mn2fyL5Qs2FDHKFOcDfMdt6XIiQTiZfu2q/kBQPJOENZpMH9WfD
                JtcC235mM/3tYGbb/zO/o5BBXiH/Qp8gG3I+7hnN0NDxxxrDLDRib45BnjOG29/8gQYbi8As+5Ydf3UB
                gwTFLupDptfRoQBIIYMkyNcRKzPGPo9t64wNsf21uGJ9mFZUY+JkyFfcgCvI3T4i850Pm341JL2mh5y5
                nkZQDY2cN5b8qwKWmYQMiHwU+XpVwcT6RqjYdyx0/VYh8yaItDT3gHKthW1rTYMFBelyofvYYlIX4PtG
                8BcVmDJtLQrXECLgprDGmD5m91Jr3/1DfaeRNmpMyl9m5x+MK4E0upnIV3dr/6dmuv7dNEIhfPKV4yXE
                kBm73iOmdb6Oq2nsReS+cwwSrsyOOcuBOdO6CcJpH5LmhCYwbgQfMFmfEDO0MDNsrhHlJpPc/Qp8hZl8
                +st4Vpt0v4F8nrwXYhDMzFtiNntQFdJvJIIXN3Pr+yG/RgsYVUPfJUa4PvnyR11wDxVHFvQzZmNwnzHy
                YjORejVxX2qMVGKafArbVmspRKEgydm9rjcGuxpXZWU0UbGNnWaQRfb7HDMhAukfhCq9RiZkaUiTDCNf
                96rBCPNx+/9ta2+0SdvxZq6ssOhOZ1xhNCxy1tKk3Yzt6PsGY5TNjRBxoGn+YKbjReRfPhOg1o7tY33+
                OMRcdaExCELInU2jtiVf4jQoOHcHrtDcupB0xwj9Rjvn/VC7DQV9LTZmaxVi+JPNfMWEyEEF/S8NEX3A
                7ButH+eZ1psd0mQRdhJnmQ0bhGLn4l5sM9aY49RQ+PNoO+co8uuaKu28SSGG6I2rH7vKoiwTzRzqHzIJ
                RuKqmK+x73+Zzd1xJ+/jV9bHKaFtXS30uhq3ZiyMClzF9FoL03Y0syTwv8aag/+Anf+uMdK15GvvXmFj
                8LJpkNPI17O61hjq0ZA2WG4CINCapxnxLrBrBdXdXzcNO8O0zzfIP7QMil0/EmLo4J0i43FvC3sRV9zu
                fQtJfzfSIDsHMZU8ysyMUiPq6WbL+uYsnmjS71Xy1doPsfh6a5O+s808qg9Fv4abnf+hMcGyAvNjOK4e
                bisj5JdCGmF70Qm3zuoSu+Y6Y5aHjbAvxT11n2whz9khCTzQiHWinTfA/IS4MUTatOrhxhQfmGAITMoe
                NnaVRoxtbVz6GTO8ZYGKw4z4lxnhLrax7W5tqwmSpaGIXjC266yduaHI2CnWTtq2HWHzFBTF62gh4i02
                X5N3Ylwj7CVSpZOZcOFXBiw1LbjGiPZx0yD3m7ZYHE19hAh5BMW51bRJt2hIImwPYvvIfX5gZtMQY5Zi
                MyObMjuK7Xg/IpGIQfYVTDOCP8hMsu64RZl1Ib8pWKEcvIdwM80/H4kQMchehTfNLynHPYX+svlhdcYc
                SdzyEcwpjhzbCPsk9setm5qCixJtxi1HeQwXQYpHQxQB9u3YuBf6QP5ZTy4yqyJEiBAhQoQIESJE2KvQ
                iqZfAvpFQAmfXPi4K1Fk7UfL0z8H2JNh3mNwablF5NdzfZHQC7dKtoL885NdiTa4BLRDcQsMN0bk+dlj
                T0mpM4FrcAsT1/HFK0EzALc695u4kPCuJt6uuNyNi2xsIubYhzASl9Y6mW1TXr8o6I5LW91IvsDErtYc
                V5FPR46wF2qhpjSR4BKk6nE5DV9EXIxbNv6P3dT+GPLJTYmInD5fCD8xbh9yDrfgch4K7exOuKw/z/yX
                TrjEngV2TiFGm039Bvm89eac0w64PA0Pt27KxyVyrdvO+0ngciE8Gk/bbYPLk4/hEqXW03y2XR8j4Jrt
                YBDP2m9j7dfh8mSaW67SGTje+nQ7jef/NyV4OlqwYynRosrdjt64TLclJu2nkC/mECbgIHMt/LmlGQ3y
                ezvmSj5Z8qYQh+CqhKwwQgkqqVy/A/dxFC47cl4Tdv4Ntq/eJPYPPqW9c4wAJ7FtPaum/JTbTFhstkDE
                ZTS/WmEkblXxUnasRE934FnzVzpH5Lt70dmiMg8YEfzU7O23cOuSwsdtwOWlr8Glg/4cl1XXFKYYoY/9
                lD50NG0TVDjpj0tjfcWk+PYgqMCubFufF9NKr+AKqh1kQYPluPTYE5tp85fW3qOfcu2huKLZk+z3KNwS
                +424RK2mBMhppmlm7MB8tQ35LBoxyO5HUBfrePufJF+i81bbVmLS9CQzg1raJ/EpEvIDY6rbTPtswKX0
                Pke+MB0hky3A/bi87ON24D5GGAM0xiC/NK0UONk9yBe8e6yZNm8nn6P+a9NuG3DptdeGtOJtdtztIXP1
                GvJ54k35FufaMdNxOfsBU2WszcZKrPYIzVnEIHvAwT7Nfgfvp5hnUSdC0rsIV0xgAq5ayGb7BKZQUwhK
                B6WAP5o/cpeZUzfh6vtiNnQQ+r3efKNr2f7XKQQFsGc3sf9Ea3ON/f8Il2EI+bKgjSFg2qAc6Ggj6lIz
                G6+zY3oWnLfOiB4bN+9T2u9pY3WyfdbhQr432diFTauj2PYVDxF2M4MEVUSCp9vhOLyG9h0A3I2rYDLZ
                CP6IT2k/cK6fNK00F1el43Ezic4pOP67uPq2p9i+iu28j9HGzE29vKdDSBMG97V2O9oNHOyM3Xslrjzr
                jTYm3zYJHgQzupFP510Z2tYUgtcqrMelAs8yzXmDOfhnFzBIb2Og1yPS3XMMsjIkxcLvCyEUeRqMq6Dx
                ojneL5t/8hdcrd2mHPAZIU0Sfm3CG/Z7/4K+LMRVJ3kBV6nkSvIlcppCe9xT7hqafsAWaMf9yNf9Cu61
                uTdiLbIoXXHo+DpcQYhaY46Wxvg504wjC4i/uQjTKhuPBPkaxZgJutq2tQ75USlrb11EunsOgZ09zrRJ
                b7O5J+EquIsR6YEhU6G1mQArzG5uqpbu8TaZlaYRAn8lqGH7SIG5URwymabauT/8lP5/03yWo3EZgo35
                ID83c/AlM6namSabT/MPLw/EhXfrzQfpHHLK1Uy63qa97jYzbLz9H2bHzCog/sLIWjD+D4WEwf7W1oqQ
                HzYcV1/4JyYUIh9kDyBuzmqFmSlBLP4jXMg1CJcWvtNvoxHY8bjCciNxheIK8bK1eR6uyNpRJln74Sqr
                /y50bC7kh7xrptyhn+IjYObYGlzNruOakNrjcGHU0bjCah8Z0f7KrtMU5hnht7Ogwv6m5XqamXMX+eqO
                t5MvmN0yFN2b2owWWQE8aONxvEWo0rhSphljtqB/h5oGuZ5tn91siMh49yFmxLXQTIf9TO3fhyv0Ftjt
                BzRis+dwL2sZhAvnvtBI+0FF8yVmRnQ1ppxqhDe7mb6dbJGp50ImWWPO92VmfuSMyIYZQa4wIl1kNv48
                I+TORmCP4yrOfxrmmanYYBq2vd3PH61vwcO9tcbY75oQ+Jr1/xryVeubYpJp1rf2uIeva3Bh9/Fm4g22
                +xyKe2YyCvcAM/BfgnmLSox+BuiBC/d+iXzJTYxpJpsE/fZ/6AeVk6/vC+5ZxavGSIc0c+7F5g9MtchO
                QIg1JuHv5LNZWj8U9xzp6V3U3vEW6JhkPtOskIn1rpmqyYhUPxt0M9v3LZNio03d/y+uzOUdJvV2FsUm
                jb9hzHCkSc9pO8F4JxvRLPwMx6s18DMj4v676RqtQgzSLiLRzx6dTRpXmkpfaxL7MvKvTfhPzLxTrb31
                5pw+8SmaoymcZabW+7i6u58Fvmam15d34zX62Byswj2pjxY5RvhC4ETc2rTDo6HYOxCVxN+1vlo704Br
                ouGIEOGTwYZYNAwRIkSIECFChAgRIkSIECFChAi7AVGYd1ej/+wEXrwv4vVD/TSZ1IJGj+s3M068qAzx
                BgM+oivIbXiTqhF1X5h7TVXHUI5AmEy6f3ZvnM7oPRi7Gl6iDLgU1W4ID+HWhzUy8sUDgB+ijEZowC2t
                mcmur9i4G6GlwD0oI9hLi91FDLLLGcQ7BNUy0mVHN3+cnIaSIF1W8bm7h/JZMUSVuYPzy/STU4RYaw+/
                1ic9wq1MVm0A/s3urJRZPjOGsG1f9iiDlKU9YrFSVHModWTKlPK0h3rFKEqmzGXGJavcalv164jFSlBV
                VOvIJH13vBShImTKakLHC+rX4XlF7rfWkUnmKE+LHR8jU7Zlm+PRWjLJ0MSk43ixYlClMnSsqE86WUd5
                2gOvBCWGag7RWtIpn1Q6jnjFVJZtpqwqgSfF4Gfx/TqqypVUpQcSQ8QDr4jK/k4Clqfj4BWjeKg2IFpH
                OqWkMkWIxKgsqyFZVYQnRfi5ejIp937D8qoiKsvqUdojkl/1XJ5JuPYUVOvJJIP3IXYC7e5MlXc6kB6+
                lmRVHI8SFEE0h9bXUi9KIlEM4pMpqyeVKUalCCRHpv8WytMxNFaCaAzFtzF2S/BTVUUIxSggfpbKVA3J
                dByRIkTqqSzLUp6JAzEqk05z9Z/VGo0NRmULZe8vw69bRX1MkRYH4ktnaLGKA99exrwRG/EERH/E3GTe
                vCpPx2z8tm8+stk6EjHsnASqvo15lgNnlKDxwagoyZnLydWuYN7B9Z809dJxiJUg6qHk8P1aqlI5ktWC
                aBFCka3trKcyVUf/dAzPKyGb3UIinkAoQrUO1RyeV4qKT7p/DYAHOgjV14AHQIOMtoG4Fbz32kC3R3gS
                4WnQ4aj+C5dPEdRy6gf8liBpyk3MwwjPIByGS1h6mvwapR64ggQTQ97QPQgvgAzYum3/SUW4nJPXgVcY
                MDNYNXw3ys0kqzrhci6ewOVVPEM+5XUsMJUBVcWgZ4HOBH6Nag8GvRcDDsYVi76GbYvMfRWXf7Ict2K5
                H2VzSnEVUYLl65ehLAAupH9lSyqmtwUuJ1WdAX5DkDtTni4GfgQ6B1iCcCV9p7chmfkxyjmIdxKpqtfQ
                1vuTrPIQPR1lGsJHwL/AG4JId+APCNdTMbcUl6++EHiO5DwPGIPos7jU6VnAt0yItAe9GJiL6GKQByib
                3gm3uHEiWxdTyhkg/+P6W92JWPFTEL8fjT2GV3I5iRaltGx7McSfQmOPQPxOEq3GUF5dguqNKO9SnmkV
                Gr+ROzQfIl1wiy/vxK0On4ZyEgCJFg9B/CE09jhSdC2J1p9cHV2eTiByJsIU3OLNN3GF0gHtaeO1AJiH
                cgd9p7TErUafgtAft/J6Bm7l+CDgRSSf/OdB/Qb83E2gx+GpMwty9fOBVQhHU5Y5Es/fBPoG0BPJ1eHn
                bgE9CE/djWTrlhgBHE5Z5gTiuQbQ14D9IKf42TtAu+NxFiMe9cjWrQCqEDmEsswZdjOvg7ZDQvkbiXal
                ZOvfxc/dCNIHLfmVm1N9FOSriJ6BL4Pw/YcRfQSR0ai4iVfqUC2nob43fs3rqDagLMavq6Gh9AQk1oN0
                6l6Q8aithi1PH47v9UNzv0CYi8ipqIygqqIGiKFawQHvtEPrJ4K2AJlN7UYh2+JelIPwc98C/5cEeeQq
                x+DTBs1+H8ED+TqJFv3IJP9gRDSBdNloyFUhudHAkWQbToCGI1BK0cQviMd7IdQDp+HHvgP+TMQ/HfFH
                InUjUDkK6i9Asl8GZiHSlgHvtUf8saDtqa8dBrkzUYYhLa+noeFlXO5NsAq7N8owm4OWiB6CNJwAOhS4
                lspBm0CPQfRlvE3lqHcKyDNU9q9FG+5GZSB4cRu/QfgydAfmYyExaYcvo/D1bcS/AZEKECsJpcchuQuQ
                7ECQS8hXoglMwSLUH4lyEGwai+TOAdbiSQnlM7sh/qngLyVbMwD8n4J3AolOV+HpSkR7Eo9dht/wHKqV
                CGcDCZS/4vKTjEE0t5iq8qdB3kDleMozA4gVtQZdCSxG+B5zUw34TAV9EPEWUFX+AshLqBxKeeYQ4kUl
                uCqIMxF+xOxyxedtO76KqgGTgOdRBrBp2LHEi+KmvSYhXASAr+8BDyK6PK9VZCPzBy9GdBrq/w04hwGz
                +rLho1dBFoB8B2Et3sf/RGUuyqPUb3bSULyZIHF82ciq95YjuUuR3P0kWpwM0g9/1QS7yCa2ZvvJTxB9
                nfj611HmotzC5jXjbV81SIJFw9eT3TgPcudC9g1atr3ASSf/11Sl3gZZByjl6TbA+aCPE2t4G5VZ+P5P
                2bJuht1bHarOXJBYV9S7EL/+FuZVLKGyYgZwE0JfxGuPyAogjk816fJHEW8+IgkkcQWif0XWVeM1vA6c
                j+fdid9yFCqHk91yG/MHrwT9N8jNiIylqLgUxCeoL6DiIRIzIq5HZQ0kHsbT4aRTdbZ9ESqnQ6v/xmto
                TWXKmVQSXw0SKmkk39vB+XgQiR2L0BPqHkNlJvA62bpLSVWLu27sTiR2El5tlsryAj+kuAsS/xHi30vl
                QcvAnwCcTTr5DFr8dZSWNGy4j+ohq0CeB+42bbMIEYBFVFW8D/KxiyTWLHDznE8f8KgemjPf4h6UCpQh
                oB0hNxf1x4McTdncMtAipOZB0gM22vEPonRFORy0LfjLUP9ekFGUzS0HbQW144htWm0O3RMognI84rcA
                fwuaux3kMMoqvwS0h7onkA15c2feQDcg6fJlSPZRoB1+0SW06rof+L8FbQ/UkG3bG18XkctdycKhm7cS
                IALx+BY+Pj+HNLxKesBqkIPAG4Zs9BkwozWqX0MwG1oOxs/Np77Dkfj6ENnsPSw9zIhB6o2wYMHIzUjD
                s2QqGhA5AdFZZFLv2HE+ioK0BIaQSc0nW3ICudzl1NS8zJJDbZJVELEwu7QGGUnV+3nhoB++CBpDtA1u
                NqvJJF+y431UQBkJtcuYe6TP7CE50mWrmXtgDrxeIEnmDf0YgMqKOtgyAdFuiJYgoqEIv/UXUF2Dcikq
                HVFvPKnMz0hWtkL1dmACKhei8cdIpg83xnYzqkE2sQwBPt6B+ViDqzlQQn3Mw6cjWf97zB+8mnR/RfUS
                oAb17sUvuYVkZa9tg2i0QBlO0ZuLAJhbUU+6bIX1ZQB4XZl/sPOJK1NroeElRPsgknWMLdOsbwlUPiB9
                0Npt7ydc0CyTeh6RpSBfcT6IPwdhMqJrkNiPoWEZlV9aETr+dUSqQY4FORT8SkSnIroQiV0G2TWkh3zI
                nBG+Hf82IjNARqI6dtgxAAAGlElEQVTeceBXIf5biM5CvMsgt5nshx8yd0Tj8XSVKpTXQL6FFxtFrvYF
                YB3CIcTUA32NeeXL6Derg022ICie565fOaTe2okBZyB9X0JLH8elEpuQoJSYdwSeLqOh7nXqNtfTb1br
                UHt5VA426So9QZxvVPZuMar9LGzrI7SnvHIEorOoTr1F3GtFv1nFTQRMEvQfmi+DlDmmDmEJ6BaUGCIF
                RbAV0I7kirs3MlgArek3I59tWDJ5JehSIIvigQkF0bagjg4yyXoyZc+gfAdhAnABeEkyySWoXAN6jZmW
                F9llBEXwZIv9L0IYvmPzQRwhRYl0Q3QS81Lz6Terk/Xn36h8D/QB4GTwCuqwaRZ0PzYf3ETtMe1An3dL
                8grOX+78zazru8gm65uHiOXza8wJkEIGcXgW9EDwupEeWI0rWPAM8BVqNi1upAcvAh3AG0C6YgZ4y51D
                LqeRbVjayPFvuNnzDkPWvQ2Jj0HvReQr+P5K5p2Yo+/0FiQzPyBZdQXJ6rzDnvPWo/69CJ0Q3cS8IXUg
                HwJtidWvoSq1nrLKCmKxHiYVggehBQ9DNW0q9GCUOQh/D6nUZUA3Wk5Pk/CLadFqILFYR2vPI1+WKNSc
                bgS5gFTVX5EWp4O/CbQlqp1BVoL0IJ2aQ9ncLiSKyonFWgQKJISNCBm8xE/o+5ZzeJOZU1DeRnU6Qinh
                0kFuckGkGC92GclKF1xJzT2A5OzW5sRniZdesPWc2jHnoTxCrm41oj6qCcpmdUTpj1jVleS8ElLVx5Hp
                /yY03AF0BiklWV2O58cZefFdzheVgcZc7uNzbmj82uzYfLAO8BCFTOpDyioPJBbr6/pTfTyZ/nPwan/j
                hJjsZ5HNMSSrfgnecSC1xOM/IznHMVWqMkVykucCFtKLolZnA9B3Vku06Kuo/pHKgeoiV1vTE+J5GhBA
                S0hNK/rkcxBtmIDEu4J84Eyb1FrKMk8hdGbJyE+W8deGV5FYT/A+dMcnN1GWeRrRAdTy8SePr5+GxP8O
                ApVHuDI//TP/JKYj8T2XZJSrFYpaDAXamqPvUJ2qp/+MiUjJY0juLZMIT4AcQ67kOpLpJYjMAX+aEW4O
                V5S7IEav7+MKIKxC6q5FW3QBjdmE/xlkKJuH3orHEtB3CWpsqW6g0Vc46IsgVwMtEPkTUIfqGFR7IfoI
                KqeSTB/stLNOIXhNhGiYyVYCf0bkJxS1vZ1kZjFCMegzpFNLKa/aRL74HYgqSi2uaMYpiNeWVOZN8Gcg
                uSmovgXyPMJZpDI9UJY7B9R/mKrBPqnMEpAxSGIB6DJUrLaW3xL0QlJVJ9v4vYHoB6iejMqRTP3DMqAD
                ohOMyRX4GLQvyepiJPcoyHE7NB/ivwjSGj/+M5Lpxc4q0ckkqwT8c0lVnYavNS6ow5wgvolwNOjfUH0W
                kfOReCdSmfcgNwNpuQjVZ0AOROQHpDKDUdYCDWjuARv0JcjWh7KrQNdt9cNAkTaHAJO21SCZimrI/Ql0
                6tZtsYZZSO7GRjVYpmIR5O53RGKoSi5Actfx0UGffNdFZuBH0PAo4Wof1ckVaO5aWhU53+aDkZuBhxHu
                JKbbRi2qh6whl7uayoplzmzIPAW8DdIR8dohsph0+UrzkWpR/3rUL3gyLZ2B6ZC7k8rBdWi2ZOvgeBv/
                4qSv9HTPSLz5pMs3WHvVqP+bTy7WkXGo/gr0UtKpF1BvBspfUD5CGv4Csh7x+oJsQbwM6fLA8W0gKBmU
                SW4mu/oJ0PsRrzUifRBepETfNeJ6GfRvIY7aBHoL6l+F6j0gdSDdUZaRHrKOTHIVWv8A8A/wuiHSFU//
                SqZ8oV17HMp8RNaB/zCq4+lzl4doLapvodILlQ7A70knl4BWoWxCpS+QQfTufGSKWxF/PJ6fpfVrf9/h
                +ahMvQH6PEgJ4nVHZDnp1BIyZYroVJSOqHQHxuH5U7dGPIVb8fynIXcnysOIFIF0Q/1q0kNrySQXOFpm
                MkhvhBJi+iSZAdYfvQ10mfXiKZAX7J7modwFsr3vatnLkKy6i2TGnu9MjJGqPIFU5sE9/7S66ueUV/3u
                04/LROvldut6sipp9Pc+u9REWI8ykmTlSaBbXNAge8ueYc7qNs4pzrVE/WW4mr7NozKpERXvRqTLtNHf
                W8mlvLrLPjMYSg2ixwFX2QK7aYjeBLE3UL845EzuDtShXOieIuOheje57JMkiooiKv08y9PyKt2HGMQx
                gIZiKVrgMO+2a4tdpzCoplHSwecY/wcRwKN/GRUkhwAAAABJRU5ErkJggg==
            </property>
        </structure>
    </list-property>
</report>
