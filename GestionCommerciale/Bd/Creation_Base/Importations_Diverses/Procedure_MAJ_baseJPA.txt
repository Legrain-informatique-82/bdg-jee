#vider les tables � recopier
delete from TA_T_TEL;
delete from TA_T_TIERS;
delete from TA_T_TVA;
delete from TA_T_PAIEMENT;
delete from TA_T_LIGNE;
delete from TA_T_ENTITE;
delete from TA_T_CIVILITE;
delete from TA_T_DOC;
delete from TA_TVA;
delete from TA_FAMILLE;
delete from TA_T_ADR;
delete from TA_UNITE;

commit works;

coller les insertions des tables ci-dessus :

commit works;



Cr�er les tables temporaires � l'identique des tables dont on a besoin


CREATE TABLE TA_ADRESSE_bis (
    ID_ADRESSE           DID3 NOT NULL,
    ADRESSE1_ADRESSE     DLIB100,
    ADRESSE2_ADRESSE     DLIB100,
    ADRESSE3_ADRESSE     DLIB100,
    CODEPOSTAL_ADRESSE   DCODPOS,
    VILLE_ADRESSE        DLGR_LIB,
    PAYS_ADRESSE         DLGR_LIB DEFAULT 'FRANCE',
    QUI_CREE_ADRESSE     DLIB50,
    QUAND_CREE_ADRESSE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_ADRESSE    DLIB50,
    QUAND_MODIF_ADRESSE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"            NUM_VERSION,
    IP_ACCES             DLIB50NN DEFAULT 0
);


CREATE TABLE TA_ARTICLE_bis (
    ID_ARTICLE           DID3 NOT NULL,
    CODE_ARTICLE         DLGR_CODE,
    LIBELLEC_ARTICLE     DLGR_LIBCODE,
    LIBELLEL_ARTICLE     DLIB255,
    ID_FAMILLE           DID_FACULTATIF,
    ID_TVA               DID_FACULTATIF,
    ID_T_TVA             DID_FACULTATIF,
    NUMCPT_ARTICLE       DLIB8,
    DIVERS_ARTICLE       DLIB255,
    COMMENTAIRE_ARTICLE  DLIB_COMMENTAIRE,
    STOCK_MIN_ARTICLE    DID9,
    QUI_CREE_ARTICLE     DLIB50,
    QUAND_CREE_ARTICLE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_ARTICLE    DLIB50,
    QUAND_MODIF_ARTICLE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"            NUM_VERSION,
    IP_ACCES             DLIB50NN DEFAULT 0
);


CREATE TABLE TA_BANQUE (
    ID_BANQUE           DID3 NOT NULL,
    CODE_BANQUE         DLGR_CODE,
    LIBC_BANQUE         DLGR_LIBCODE,
    LIBL_BANQUE         DLIB100,
    QUI_CREE_BANQUE     DLIB50,
    QUAND_CREE_BANQUE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_BANQUE    DLIB50,
    QUAND_MODIF_BANQUE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"           NUM_VERSION,
    IP_ACCES            DLIB50NN DEFAULT 0
);


CREATE TABLE TA_BONLIV_bis (
    ID_BONLIV           DID3 NOT NULL,
    CODE_BONLIV         DLGR_CODE,
    DATE_BONLIV         TIMESTAMP DEFAULT 'NOW',
    QUI_CREE_BONLIV     DLIB50,
    DATE_LIV_BONLIV     TIMESTAMP DEFAULT 'NOW',
    LIBELLE_BONLIV      DLIB255NN,
    ID_ADRESSE          DID_FACULTATIF,
    ID_ADRESSE_LIV      DID_FACULTATIF,
    ID_TIERS            DID3,
    ID_T_PAIEMENT       DID_FACULTATIF,
    ID_C_PAIEMENT       DID_FACULTATIF,
    REM_HT_BONLIV       DID9 DEFAULT 0,
    TX_REM_HT_BONLIV    DID9 DEFAULT 0,
    REM_TTC_BONLIV      DID9 DEFAULT 0,
    TX_REM_TTC_BONLIV   DID9 DEFAULT 0,
    NB_E_BONLIV         DID4,
    TTC                 DBOOL DEFAULT 0,
    COMMENTAIRE         DLIB_COMMENTAIRE,
    QUAND_CREE_BONLIV   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_BONLIV    DLIB50,
    QUAND_MODIF_BONLIV  TIMESTAMP DEFAULT 'NOW',
    "VERSION"           NUM_VERSION,
    IP_ACCES            DLIB50NN DEFAULT 0
);


CREATE TABLE TA_C_PAIEMENT_bis (
    ID_C_PAIEMENT           DID3 NOT NULL,
    CODE_C_PAIEMENT         DLIB50NN,
    LIB_C_PAIEMENT          DLIB255NN,
    ID_TIERS                DID3,
    REPORT_C_PAIEMENT       DID4 DEFAULT 0,
    FIN_MOIS_C_PAIEMENT     DID4 DEFAULT 0,
    QUI_CREE_C_PAIEMENT     DLIB50,
    QUAND_CREE_C_PAIEMENT   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_C_PAIEMENT    DLIB50,
    QUAND_MODIF_C_PAIEMENT  TIMESTAMP DEFAULT 'NOW',
    "VERSION"               NUM_VERSION,
    IP_ACCES                DLIB50NN DEFAULT 0
);


CREATE TABLE TA_COMMENTAIRE_bis (
    ID_COMMENTAIRE           DID3 NOT NULL,
    LIBL_COMMENTAIRE         DLIB_COMMENTAIRE,
    ID_TIERS                 DID3,
    QUI_CREE_COMMENTAIRE     DLIB50,
    QUAND_CREE_COMMENTAIRE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_COMMENTAIRE    DLIB50,
    QUAND_MODIF_COMMENTAIRE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"                NUM_VERSION,
    IP_ACCES                 DLIB50NN DEFAULT 0
);


CREATE TABLE TA_COMPL_bis (
    ID_COMPL           DID3 NOT NULL,
    ID_TIERS           DID3,
    TVA_I_COM_COMPL    DLIB50,
    SIRET_COMPL        DLIB50,
    QUI_CREE_COMPL     DLIB50,
    QUAND_CREE_COMPL   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_COMPL    DLIB50,
    QUAND_MODIF_COMPL  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_DEVIS_bis (
    ID_DEVIS           DID3 NOT NULL,
    CODE_DEVIS         DLGR_CODE,
    DATE_DEVIS         TIMESTAMP DEFAULT 'NOW',
    DATE_ECH_DEVIS     TIMESTAMP DEFAULT 'NOW',
    DATE_LIV_DEVIS     TIMESTAMP DEFAULT 'NOW',
    LIBELLE_DEVIS      DLIB255NN,
    ID_ADRESSE         DID_FACULTATIF,
    ID_ADRESSE_LIV     DID_FACULTATIF,
    ID_TIERS           DID3,
    ID_T_PAIEMENT      DID_FACULTATIF,
    ID_C_PAIEMENT      DID_FACULTATIF,
    REM_HT_DEVIS       DID9 DEFAULT 0,
    TX_REM_HT_DEVIS    DID9 DEFAULT 0,
    REM_TTC_DEVIS      DID9 DEFAULT 0,
    TX_REM_TTC_DEVIS   DID9 DEFAULT 0,
    NB_E_DEVIS         DID4,
    TTC                DBOOL DEFAULT 0,
    EXPORT             DBOOL DEFAULT 0,
    COMMENTAIRE        DLIB_COMMENTAIRE,
    QUI_CREE_DEVIS     DLIB50,
    QUAND_CREE_DEVIS   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_DEVIS    DLIB50,
    QUAND_MODIF_DEVIS  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_EMAIL_bis (
    ID_EMAIL           DID3 NOT NULL,
    ADRESSE_EMAIL      DLIB255NN,
    QUI_CREE_EMAIL     DLIB50,
    QUAND_CREE_EMAIL   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_EMAIL    DLIB50,
    QUAND_MODIF_EMAIL  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_FACTURE_bis (
    ID_FACTURE           DID3 NOT NULL,
    CODE_FACTURE         DLGR_CODE,
    DATE_FACTURE         TIMESTAMP DEFAULT 'NOW',
    DATE_ECH_FACTURE     TIMESTAMP DEFAULT 'NOW',
    DATE_LIV_FACTURE     TIMESTAMP DEFAULT 'NOW',
    LIBELLE_FACTURE      DLIB255NN,
    ID_ADRESSE           DID_FACULTATIF,
    ID_ADRESSE_LIV       DID_FACULTATIF,
    ID_TIERS             DID3,
    ID_T_PAIEMENT        DID_FACULTATIF,
    ID_C_PAIEMENT        DID_FACULTATIF,
    REGLE_FACTURE        DID9 DEFAULT 0,
    REM_HT_FACTURE       DID9 DEFAULT 0,
    TX_REM_HT_FACTURE    DID9 DEFAULT 0,
    REM_TTC_FACTURE      DID9 DEFAULT 0,
    TX_REM_TTC_FACTURE   DID9 DEFAULT 0,
    NB_E_FACTURE         DID4 DEFAULT 0,
    TTC                  DBOOL DEFAULT 0,
    EXPORT               DBOOL DEFAULT 0,
    COMMENTAIRE          DLIB_COMMENTAIRE,
    QUI_CREE_FACTURE     DLIB50,
    QUAND_CREE_FACTURE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_FACTURE    DLIB50,
    QUAND_MODIF_FACTURE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"            NUM_VERSION,
    IP_ACCES             DLIB50NN DEFAULT 0
);


CREATE TABLE TA_INFOS_BONLIV_bis (
    ID_INFOS_BONLIV           DID3 NOT NULL,
    ID_BONLIV                 DID3,
    ADRESSE1                  DLIB100,
    ADRESSE2                  DLIB100,
    ADRESSE3                  DLIB100,
    CODEPOSTAL                DCODPOS,
    VILLE                     DLIB100,
    PAYS                      DLIB100,
    ADRESSE1_LIV              DLIB100,
    ADRESSE2_LIV              DLIB100,
    ADRESSE3_LIV              DLIB100,
    CODEPOSTAL_LIV            DCODPOS,
    VILLE_LIV                 DLIB100,
    PAYS_LIV                  DLIB100,
    CODE_COMPTA               DLIB8NN,
    COMPTE                    DLIB8NN,
    NOM_TIERS                 DLIB100,
    PRENOM_TIERS              DLIB100,
    SURNOM_TIERS              DLIB20,
    CODE_T_CIVILITE           DLGR_CODEL,
    CODE_T_ENTITE             DLGR_CODEL,
    TVA_I_COM_COMPL           DLIB50,
    CODE_C_PAIEMENT           DLGR_CODEL,
    LIB_C_PAIEMENT            DLIB255,
    REPORT_C_PAIEMENT         DID_FACULTATIF,
    FIN_MOIS_C_PAIEMENT       DID_FACULTATIF,
    QUI_CREE_INFOS_BONLIV     DLIB50,
    QUAND_CREE_INFOS_BONLIV   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_INFOS_BONLIV    DLIB50,
    QUAND_MODIF_INFOS_BONLIV  TIMESTAMP DEFAULT 'NOW',
    "VERSION"                 NUM_VERSION,
    IP_ACCES                  DLIB50NN DEFAULT 0,
    LIBL_ENTREPRISE           DLIB100,
    CODE_T_ENTITE_ENTREPRISE  DLGR_CODEL,
    CODE_ENTREPRISE           DLGR_CODEL
);


CREATE TABLE TA_INFOS_DEVIS_bis (
    ID_INFOS_DEVIS            DID3 NOT NULL,
    ID_DEVIS                  DID3,
    ADRESSE1                  DLIB100,
    ADRESSE2                  DLIB100,
    ADRESSE3                  DLIB100,
    CODEPOSTAL                DCODPOS,
    VILLE                     DLIB100,
    PAYS                      DLIB100,
    ADRESSE1_LIV              DLIB100,
    ADRESSE2_LIV              DLIB100,
    ADRESSE3_LIV              DLIB100,
    CODEPOSTAL_LIV            DCODPOS,
    VILLE_LIV                 DLIB100,
    PAYS_LIV                  DLIB100,
    CODE_COMPTA               DLIB8NN,
    COMPTE                    DLIB8NN,
    NOM_TIERS                 DLIB100,
    PRENOM_TIERS              DLIB100,
    SURNOM_TIERS              DLIB20,
    CODE_T_CIVILITE           DLGR_CODEL,
    CODE_T_ENTITE             DLGR_CODEL,
    TVA_I_COM_COMPL           DLIB50,
    CODE_C_PAIEMENT           DLGR_CODEL,
    LIB_C_PAIEMENT            DLIB255,
    REPORT_C_PAIEMENT         DID_FACULTATIF,
    FIN_MOIS_C_PAIEMENT       DID_FACULTATIF,
    QUI_CREE_INFOS_DEVIS      DLIB50,
    QUAND_CREE_INFOS_DEVIS    TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_INFOS_DEVIS     DLIB50,
    QUAND_MODIF_INFOS_DEVIS   TIMESTAMP DEFAULT 'NOW',
    "VERSION"                 NUM_VERSION,
    IP_ACCES                  DLIB50NN DEFAULT 0,
    LIBL_ENTREPRISE           DLIB100,
    CODE_T_ENTITE_ENTREPRISE  DLGR_CODEL,
    CODE_ENTREPRISE           DLGR_CODEL
);


CREATE TABLE TA_INFOS_FACTURE_bis (
    ID_INFOS_FACTURE           DID3 NOT NULL,
    ID_FACTURE                 DID3,
    ADRESSE1                   DLIB100,
    ADRESSE2                   DLIB100,
    ADRESSE3                   DLIB100,
    CODEPOSTAL                 DCODPOS,
    VILLE                      DLIB100,
    PAYS                       DLIB100,
    ADRESSE1_LIV               DLIB100,
    ADRESSE2_LIV               DLIB100,
    ADRESSE3_LIV               DLIB100,
    CODEPOSTAL_LIV             DCODPOS,
    VILLE_LIV                  DLIB100,
    PAYS_LIV                   DLIB100,
    CODE_COMPTA                DLIB8NN,
    COMPTE                     DLIB8NN,
    NOM_TIERS                  DLIB100,
    PRENOM_TIERS               DLIB100,
    SURNOM_TIERS               DLIB20,
    CODE_T_CIVILITE            DLGR_CODEL,
    CODE_T_ENTITE              DLGR_CODEL,
    TVA_I_COM_COMPL            DLIB50,
    CODE_C_PAIEMENT            DLGR_CODEL,
    LIB_C_PAIEMENT             DLIB255,
    REPORT_C_PAIEMENT          DID_FACULTATIF,
    FIN_MOIS_C_PAIEMENT        DID_FACULTATIF,
    QUI_CREE_INFOS_FACTURE     DLIB50,
    QUAND_CREE_INFOS_FACTURE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_INFOS_FACTURE    DLIB50,
    QUAND_MODIF_INFOS_FACTURE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"                  NUM_VERSION,
    IP_ACCES                   DLIB50NN DEFAULT 0,
    LIBL_ENTREPRISE            DLIB100,
    CODE_T_ENTITE_ENTREPRISE   DLGR_CODEL,
    CODE_ENTREPRISE            DLGR_CODEL
);


CREATE TABLE TA_L_BONLIV_bis (
    ID_BONLIV             DID3,
    ID_T_LIGNE            DID3,
    ID_ARTICLE            DID4,
    NUM_LIGNE_L_BONLIV    DID3,
    LIB_L_BONLIV          DLIB255,
    QTE_L_BONLIV          DID9FACULT,
    U1_L_BONLIV           DLIB20,
    U2_L_BONLIV           DLIB20,
    PRIX_U_L_BONLIV       DID9FACULT,
    TAUX_TVA_L_BONLIV     DLONG,
    COMPTE_L_BONLIV       DLIB8,
    CODE_TVA_L_BONLIV     DLIB20,
    CODE_T_TVA_L_BONLIV   DLIB1L,
    MT_HT_L_BONLIV        DID9FACULT,
    MT_TTC_L_BONLIV       DID9FACULT,
    REM_TX_L_BONLIV       DID9FACULT,
    REM_HT_L_BONLIV       DID9FACULT,
    ID_L_BONLIV           DID3 NOT NULL,
    QUI_CREE_L_BONLIV     DLIB50,
    QUAND_CREE_L_BONLIV   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_L_BONLIV    DLIB50,
    QUAND_MODIF_L_BONLIV  TIMESTAMP DEFAULT 'NOW',
    "VERSION"             NUM_VERSION,
    IP_ACCES              DLIB50NN DEFAULT 0
);


CREATE TABLE TA_L_DEVIS_bis (
    ID_DEVIS             DID3,
    ID_T_LIGNE           DID3,
    ID_ARTICLE           DID4,
    NUM_LIGNE_L_DEVIS    DID3,
    LIB_L_DEVIS          DLIB255,
    QTE_L_DEVIS          DID9FACULT,
    U1_L_DEVIS           DLIB20,
    U2_L_DEVIS           DLIB20,
    PRIX_U_L_DEVIS       DID9FACULT,
    TAUX_TVA_L_DEVIS     DLONG,
    COMPTE_L_DEVIS       DLIB8,
    CODE_TVA_L_DEVIS     DLIB20,
    CODE_T_TVA_L_DEVIS   DLIB1L,
    MT_HT_L_DEVIS        DID9FACULT,
    MT_TTC_L_DEVIS       DID9FACULT,
    REM_TX_L_DEVIS       DID9FACULT,
    REM_HT_L_DEVIS       DID9FACULT,
    ID_L_DEVIS           DID3 NOT NULL,
    QUI_CREE_L_DEVIS     DLIB50,
    QUAND_CREE_L_DEVIS   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_L_DEVIS    DLIB50,
    QUAND_MODIF_L_DEVIS  TIMESTAMP DEFAULT 'NOW',
    "VERSION"            NUM_VERSION,
    IP_ACCES             DLIB50NN DEFAULT 0
);


CREATE TABLE TA_L_FACTURE_bis (
    ID_L_FACTURE           DID3 NOT NULL,
    ID_FACTURE             DID3,
    ID_T_LIGNE             DID3,
    ID_ARTICLE             DID4,
    NUM_LIGNE_L_FACTURE    DID3,
    LIB_L_FACTURE          DLIB255,
    QTE_L_FACTURE          DID9FACULT,
    U1_L_FACTURE           DLIB20,
    U2_L_FACTURE           DLIB20,
    PRIX_U_L_FACTURE       DID9FACULT,
    TAUX_TVA_L_FACTURE     DLONG,
    COMPTE_L_FACTURE       DLIB8,
    CODE_TVA_L_FACTURE     DLIB20,
    CODE_T_TVA_L_FACTURE   DLIB1L,
    MT_HT_L_FACTURE        DID9FACULT,
    MT_TTC_L_FACTURE       DID9FACULT,
    REM_TX_L_FACTURE       DID9FACULT,
    REM_HT_L_FACTURE       DID9FACULT,
    QUI_CREE_L_FACTURE     DLIB50,
    QUAND_CREE_L_FACTURE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_L_FACTURE    DLIB50,
    QUAND_MODIF_L_FACTURE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"              NUM_VERSION,
    IP_ACCES               DLIB50NN DEFAULT 0
);


CREATE TABLE TA_PRIX_bis (
    ID_PRIX           DID3 NOT NULL,
    ID_ARTICLE        DID3,
    ID_UNITE          DID_FACULTATIF,
    PRIX_PRIX         DID9,
    PRIXTTC_PRIX      DID9,
    QUI_CREE_PRIX     DLIB50,
    QUAND_CREE_PRIX   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_PRIX    DLIB50,
    QUAND_MODIF_PRIX  TIMESTAMP DEFAULT 'NOW',
    "VERSION"         NUM_VERSION,
    IP_ACCES          DLIB50NN DEFAULT 0
);


CREATE TABLE TA_R_ADR (
    ID_R_ADR           DID3 NOT NULL,
    ID_TIERS           DID3,
    ID_ADRESSE         DID3,
    QUI_CREE_R_ADR     DLIB50,
    QUAND_CREE_R_ADR   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_ADR    DLIB50,
    QUAND_MODIF_R_ADR  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_R_ADR_T_ADR (
    ID_R_ADR_T_ADR           DID3 NOT NULL,
    ID_T_ADR                 DID3,
    ID_ADRESSE               DID3,
    QUI_CREE_R_ADR_T_ADR     DLIB50,
    QUAND_CREE_R_ADR_T_ADR   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_ADR_T_ADR    DLIB50,
    QUAND_MODIF_R_ADR_T_ADR  TIMESTAMP DEFAULT 'NOW',
    "VERSION"                NUM_VERSION,
    IP_ACCES                 DLIB50NN DEFAULT 0
);


CREATE TABLE TA_R_COMMERCIAL_bis (
    ID_R_COMMERCIAL           DID3 NOT NULL,
    ID_TIERS                  DID3,
    ID_TIERS_COM              DID3,
    QUI_CREE_R_COMMERCIAL     DLIB50,
    QUAND_CREE_R_COMMERCIAL   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_COMMERCIAL    DLIB50,
    QUAND_MODIF_R_COMMERCIAL  TIMESTAMP DEFAULT 'NOW',
    "VERSION"                 NUM_VERSION,
    IP_ACCES                  DLIB50NN
);


CREATE TABLE TA_R_DOCUMENT_bis (
    ID_R_DOCUMENT           DID3 NOT NULL,
    ID_FACTURE              DID_FACULTATIF,
    ID_DEVIS                DID_FACULTATIF,
    ID_BONCDE               DID_FACULTATIF,
    ID_BONLIV               DID_FACULTATIF,
    ID_AVOIR                DID_FACULTATIF,
    ID_L_FACTURE            DID_FACULTATIF,
    ID_L_DEVIS              DID_FACULTATIF,
    ID_L_BONCDE             DID_FACULTATIF,
    ID_L_AVOIR              DID_FACULTATIF,
    ID_L_BONLIV             DID_FACULTATIF,
    QUI_CREE_R_DOCUMENT     DLIB50,
    QUAND_CREE_R_DOCUMENT   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_DOCUMENT    DLIB50,
    QUAND_MODIF_R_DOCUMENT  TIMESTAMP DEFAULT 'NOW',
    "VERSION"               NUM_VERSION,
    IP_ACCES                DLIB50NN DEFAULT 0
);


CREATE TABLE TA_R_EMAIL (
    ID_R_EMAIL           DID3 NOT NULL,
    ID_TIERS             DID3,
    ID_EMAIL             DID3,
    QUI_CREE_R_EMAIL     DLIB50,
    QUAND_CREE_R_EMAIL   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_EMAIL    DLIB50,
    QUAND_MODIF_R_EMAIL  TIMESTAMP DEFAULT 'NOW',
    "VERSION"            NUM_VERSION,
    IP_ACCES             DLIB50NN DEFAULT 0
);


CREATE TABLE TA_R_TEL (
    ID_R_TEL           DID3 NOT NULL,
    ID_TIERS           DID3,
    ID_TELEPHONE       DID3,
    QUI_CREE_R_TEL     DLIB50,
    QUAND_CREE_R_TEL   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_TEL    DLIB50,
    QUAND_MODIF_R_TEL  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_R_TEL_T_TEL (
    ID_R_TEL_T_TEL           DID3 NOT NULL,
    ID_TELEPHONE             DID3,
    ID_T_TEL                 DID3,
    QUI_CREE_R_TEL_T_TEL     DLIB50,
    QUAND_CREE_R_TEL_T_TEL   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_TEL_T_TEL    DLIB50,
    QUAND_MODIF_R_TEL_T_TEL  TIMESTAMP DEFAULT 'NOW',
    "VERSION"                NUM_VERSION,
    IP_ACCES                 DLIB50NN DEFAULT 0
);


CREATE TABLE TA_R_WEB (
    ID_R_WEB           DID3 NOT NULL,
    ID_TIERS           DID3,
    ID_WEB             DID3,
    QUI_CREE_R_WEB     DLIB50,
    QUAND_CREE_R_WEB   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_R_WEB    DLIB50,
    QUAND_MODIF_R_WEB  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_REF_PRIX_bis (
    ID_REF_PRIX           DID3 NOT NULL,
    ID_ARTICLE            DID3,
    ID_PRIX               DID3,
    QUI_CREE_REF_PRIX     DLIB50,
    QUAND_CREE_REF_PRIX   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_REF_PRIX    DLIB50,
    QUAND_MODIF_REF_PRIX  TIMESTAMP DEFAULT 'NOW',
    "VERSION"             NUM_VERSION,
    IP_ACCES              DLIB50NN DEFAULT 0
);


CREATE TABLE TA_REPORT_STOCK_bis (
    ID_REPORT_STOCK           DID3 NOT NULL,
    ID_ARTICLE_REPORT_STOCK   DID3,
    DATE_DEB_REPORT_STOCK     TIMESTAMP,
    DATE_FIN_REPORT_STOCK     TIMESTAMP,
    QTE_REPORT_STOCK          NUMERIC(15,2),
    UNITE_REPORT_STOCK        DLGR_CODEL,
    QUI_CREE_REPORT_STOCK     DLIB50,
    QUAND_CREE_REPORT_STOCK   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_REPORT_STOCK    DLIB50,
    QUAND_MODIF_REPORT_STOCK  TIMESTAMP DEFAULT 'NOW',
    "VERSION"                 NUM_VERSION,
    IP_ACCES                  DLIB50NN DEFAULT 0
);


CREATE TABLE TA_STOCK_bis (
    ID_STOCK           DID3 NOT NULL,
    ID_ARTICLE_STOCK   DID3,
    MOUV_STOCK         DLIB_MOUV DEFAULT 'E',
    DATE_STOCK         TIMESTAMP,
    LIBELLE_STOCK      DLIB255,
    QTE1_STOCK         NUMERIC(15,2),
    UN1_STOCK          DLGR_CODEL,
    QTE2_STOCK         NUMERIC(15,2),
    UN2_STOCK          DLGR_CODEL,
    QUI_CREE_STOCK     DLIB50,
    QUAND_CREE_STOCK   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_STOCK    DLIB50,
    QUAND_MODIF_STOCK  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_TELEPHONE_bis (
    ID_TELEPHONE           DID3 NOT NULL,
    NUMERO_TELEPHONE       DLGR_CODE,
    POSTE_TELEPHONE        DLGR_CODEL,
    ID_I_TIERS             DID_FACULTATIF,
    QUI_CREE_TELEPHONE     DLIB50,
    QUAND_CREE_TELEPHONE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_TELEPHONE    DLIB50,
    QUAND_MODIF_TELEPHONE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"              NUM_VERSION,
    IP_ACCES               DLIB50NN DEFAULT 0
);


CREATE TABLE TA_TIERS_bis (
    ID_TIERS           DID3 NOT NULL,
    CODE_TIERS         DLGR_CODE,
    CODE_COMPTA        DLIB7,
    COMPTE             DLIB8NN,
    NOM_TIERS          DLGR_LIB,
    PRENOM_TIERS       DLIB100,
    SURNOM_TIERS       DLIB20,
    ACTIF_TIERS        DBOOL DEFAULT '1',
    TTC_TIERS          DBOOL DEFAULT '0',
    ID_T_CIVILITE      DID_FACULTATIF,
    ID_ENTREPRISE      DID_FACULTATIF,
    ID_T_TIERS         DID3,
    ID_T_ENTITE        DID_FACULTATIF,
    ID_I_BANQUE        DID_FACULTATIF,
    QUI_CREE_TIERS     DLIB50,
    QUAND_CREE_TIERS   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_TIERS    DLIB50,
    QUAND_MODIF_TIERS  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION,
    IP_ACCES           DLIB50NN DEFAULT 0
);


CREATE TABLE TA_WEB_bis (
    ID_WEB           DID3 NOT NULL,
    ADRESSE_WEB      DLIB255NN,
    QUI_CREE_WEB     DLIB50,
    QUAND_CREE_WEB   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_WEB    DLIB50,
    QUAND_MODIF_WEB  TIMESTAMP DEFAULT 'NOW',
    "VERSION"        NUM_VERSION,
    IP_ACCES         DLIB50NN DEFAULT 0
);

CREATE TABLE TA_ENTREPRISE_bis (
    ID_ENTREPRISE           DID3 NOT NULL,
    CODE_ENTREPRISE         DLGR_CODE,
    LIBL_ENTREPRISE         DLGR_LIB,
    ID_T_ENTITE             DID_FACULTATIF,
    ID_I_RESP_TIERS         DID_FACULTATIF,
    QUI_CREE_ENTREPRISE     DLIB50,
    QUAND_CREE_ENTREPRISE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_ENTREPRISE    DLIB50,
    QUAND_MODIF_ENTREPRISE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"               NUM_VERSION,
    IP_ACCES                DLIB50NN DEFAULT 0
);

Inserer les enregistrement dedans en copiant les inserts et en modifiant la table d'insertion si necessaire
exemple "Ta_web" en "Ta_web_bis"
pour les tables suivantes
***  ne pas oublier de modifier les date deb et fin de Ta_info_entreprise car elles sont passées
de timestamp en date ***

TA_ADRESSE_bis ;
TA_ARTICLE_bis ;
TA_BANQUE ;
TA_BONLIV_bis ;
TA_C_PAIEMENT_bis ;
TA_COMMENTAIRE_bis ;
TA_COMPL_bis ;
TA_DEVIS_bis ;
TA_EMAIL_bis ;
TA_FACTURE_bis ;
TA_INFOS_BONLIV_bis ;
TA_INFOS_DEVIS_bis ;
TA_INFOS_FACTURE_bis ;
TA_L_BONLIV_bis ;
TA_L_DEVIS_bis ;
TA_L_FACTURE_bis ;
TA_PRIX_bis ;
TA_R_ADR ;
TA_R_ADR_T_ADR ;
TA_R_COMMERCIAL_bis ;
TA_R_DOCUMENT_bis ;
TA_R_EMAIL ;
TA_R_TEL ;
TA_R_TEL_T_TEL ;
TA_R_WEB ;
TA_REF_PRIX_bis ;
TA_REPORT_STOCK_bis ;
TA_STOCK_bis ;
TA_TELEPHONE_bis ;
TA_TIERS_bis ;
TA_WEB_bis ;
TA_ENTREPRISE_bis;
TA_INFO_ENTREPRISE;


Pour les documents, faire une requete pour voir s'il n'y a pas de type de paiement non existants
update ta_facture_bis set id_t_paiement = null where id_t_paiement 
not in(select id_t_paiement from ta_t_paiement)
s'il y en a , mettre null à la place.



Pour les tiers : 
CREATE OR ALTER PROCEDURE RECUP_TIERS 
as
begin

Insert into ta_c_paiement
 select cp.id_c_paiement,1,cp.code_c_paiement,cp.lib_c_paiement,cp.report_c_paiement,cp.fin_mois_c_paiement,
cp.qui_cree_c_paiement,cp.quand_cree_c_paiement,cp.qui_modif_c_paiement,cp.quand_modif_c_paiement,cp."VERSION",
cp.ip_acces,0 from ta_c_paiement_bis cp;

insert into ta_compl
 select cl.id_compl,cl.tva_i_com_compl,cl.siret_compl,null,cl.qui_cree_compl,cl.quand_cree_compl,cl.qui_modif_compl,
cl.quand_modif_compl,cl."VERSION", cl.ip_acces,0 from ta_compl_bis cl;

INSERT INTO TA_COMMENTAIRE
 select c.id_commentaire, c.libl_commentaire, c.qui_cree_commentaire, c.quand_cree_commentaire,
c.qui_modif_commentaire,c.quand_modif_commentaire, c."VERSION", c.ip_acces, 0 from ta_commentaire_bis c;

INSERT INTO TA_ENTREPRISE
select E.id_entreprise, E.code_entreprise, null, E.qui_cree_entreprise, E.quand_cree_entreprise,
E.qui_modif_entreprise, E.quand_modif_entreprise, E."VERSION", E.ip_acces, 0 from ta_entreprise_bis E ;


insert into ta_tiers  (id_tiers,code_tiers,code_compta,compte,nom_tiers,prenom_tiers,surnom_tiers,
actif_tiers,ttc_tiers,id_commentaire,id_t_civilite,id_entreprise,id_t_tiers,
id_c_paiement,id_compl, qui_cree_tiers,quand_cree_tiers,qui_modif_tiers,
quand_modif_tiers,"VERSION",ip_acces,VERSION_OBJ)
select T.id_tiers,T.code_tiers,T.code_compta,T.compte,T.nom_tiers,T.prenom_tiers,T.surnom_tiers,
T.actif_tiers,T.ttc_tiers,C.id_commentaire,T.id_t_civilite,T.id_entreprise,T.id_t_tiers,
cp.id_c_paiement,Cpl.id_compl, T.qui_cree_tiers,T.quand_cree_tiers,T.qui_modif_tiers,
T.quand_modif_tiers,T."VERSION",T.ip_acces,0

from ta_tiers_bis T
left join ta_commentaire_bis c on c.id_tiers=T.id_tiers
left join ta_c_paiement_bis cp on cp.id_tiers=T.id_tiers
left join ta_compl_bis cpl on   cpl.id_tiers=T.id_tiers;


INSERT INTO TA_ADRESSE
select ad.id_adresse, ad.adresse1_adresse, ad.adresse2_adresse, ad.adresse3_adresse, ad.codepostal_adresse,
ad.ville_adresse, ad.pays_adresse, radr.id_tiers, tadr.id_t_adr,null,null, ad.qui_cree_adresse, ad.quand_cree_adresse, ad.qui_modif_adresse,
ad.quand_modif_adresse, ad."VERSION", ad.ip_acces, 0 from ta_adresse_bis ad
join ta_r_adr radr on radr.id_adresse = ad.id_adresse
left join ta_r_adr_t_adr tadr on tadr.id_adresse = ad.id_adresse ;


update ta_tiers t1 set id_adresse = (select min(id_adresse) from ta_adresse ad where
ad.id_tiers=t1.id_tiers)  ;


INSERT INTO TA_TELEPHONE
select tel.id_telephone, tel.numero_telephone, tel.poste_telephone, null, rtel.id_tiers,
ttel.id_t_tel,null,null, tel.qui_cree_telephone, tel.quand_cree_telephone, tel.qui_modif_telephone, tel.quand_modif_telephone,
tel."VERSION", tel.ip_acces, 0 from ta_telephone_bis tel
join ta_r_tel rtel on rtel.id_telephone = tel.id_telephone
left join ta_r_tel_t_tel ttel on ttel.id_telephone = tel.id_telephone;

update ta_tiers t1 set id_telephone = (select min(id_telephone) from ta_telephone ad where
ad.id_tiers=t1.id_tiers)  ;

insert into ta_email
select em.id_email, em.adresse_email, rm.id_tiers, null,null,null, em.qui_cree_email,
em.quand_cree_email, em.qui_modif_email, em.quand_modif_email, em."VERSION", em.ip_acces, 0
from ta_email_bis em
join ta_r_email rm on rm.id_email = em.id_email  ;

update ta_tiers t1 set id_email = (select min(id_email) from ta_email ad where
ad.id_tiers=t1.id_tiers)  ;

insert into ta_web
select w.id_web, w.adresse_web, rw.id_tiers, null, w.qui_cree_web, w.quand_cree_web,
 w.qui_modif_web, w.quand_modif_web, w."VERSION", w.ip_acces, 0
 from ta_web_bis w
 join ta_r_web rw on rw.id_web = w.id_web;

update ta_tiers t1 set id_web = (select min(id_web) from ta_web ad where
ad.id_tiers=t1.id_tiers)  ;

end
^

# Pour les  articles
CREATE OR ALTER PROCEDURE RECUP_ARTICLES 
as
begin

insert into ta_article
select A.id_article, A.code_article, A.libellec_article, A.libellel_article, A.id_famille,
A.id_tva, A.id_t_tva, null, null, null,null,A.numcpt_article, A.divers_article, A.commentaire_article,
A.stock_min_article,1,null,null,null,null,null,null,  A.qui_cree_article, A.quand_cree_article, A.qui_modif_article,
A.quand_modif_article, A."VERSION", A.ip_acces, 0
from ta_article_bis A;


insert into ta_prix
select P.id_prix, P.id_article, P.id_unite, P.prix_prix, P.prixttc_prix,null,null, P.qui_cree_prix,
P.quand_cree_prix, P.qui_modif_prix, P.quand_modif_prix, P."VERSION", P.ip_acces, 0
from ta_prix_bis P ;

update ta_article A1 set id_prix = (
select R.id_prix from ta_ref_prix_bis R
where R.id_article = A1.id_article);

insert into ta_stock
select s.id_stock, s.id_article_stock, s.mouv_stock, s.date_stock, s.libelle_stock, s.qte1_stock,
 s.un1_stock, s.qte2_stock, s.un2_stock, s.qui_cree_stock, s.quand_cree_stock, s.qui_modif_stock,
 s.quand_modif_stock, s."VERSION", s.ip_acces, 0
 from ta_stock_bis s ;

insert into ta_report_stock
select R.id_report_stock, R.id_article_report_stock, R.date_deb_report_stock,
 R.date_fin_report_stock, R.qte_report_stock, R.unite_report_stock, null,
 null, R.qui_cree_report_stock, R.quand_cree_report_stock, R.qui_modif_report_stock,
 R.quand_modif_report_stock, R."VERSION", R.ip_acces, 0
 from ta_report_stock_bis R ;

end
^

# Pour les documents
CREATE OR ALTER PROCEDURE RECUP_DOCUMENT 
as
declare variable id_document integer;
declare variable id_document_new integer;
declare variable code_document varchar(20);
declare variable date_document timestamp;
declare variable date_ech_document timestamp;
declare variable date_liv_document timestamp;
declare variable export smallint;
declare variable regle_document numeric(15,2);
declare variable libelle_document varchar(255);
declare variable id_tiers integer;
declare variable id_t_paiement integer;
declare variable rem_ht_document numeric(15,2);
declare variable tx_rem_ht_document numeric(15,2);
declare variable rem_ttc_document numeric(15,2);
declare variable tx_rem_ttc_document numeric(15,2);
declare variable nb_e_document integer;
declare variable ttc smallint;
declare variable commentaire varchar(2000);
declare variable qui_cree varchar(50);
declare variable quand_cree timestamp;
declare variable qui_modif varchar(50);
declare variable quand_modif timestamp;
declare variable "VERSION" varchar(20);
declare variable ip_acces varchar(50);
declare variable numversion integer;
begin

for select B.id_bonliv, B.code_bonliv, B.date_bonliv, B.qui_cree_bonliv, B.date_liv_bonliv,
B.libelle_bonliv, B.id_tiers, B.id_t_paiement, B.rem_ht_bonliv, B.tx_rem_ht_bonliv,
B.rem_ttc_bonliv, B.tx_rem_ttc_bonliv, B.nb_e_bonliv, B.ttc, B.commentaire, B.quand_cree_bonliv,
 B.qui_modif_bonliv, B.quand_modif_bonliv, B."VERSION", B.ip_acces, 1
from ta_bonliv_bis B into :id_document, code_document, date_document, qui_cree, date_liv_document,
libelle_document, id_tiers, id_t_paiement, rem_ht_document, tx_rem_ht_document,
rem_ttc_document, tx_rem_ttc_document, nb_e_document, ttc, commentaire, quand_cree,
 qui_modif, quand_modif, "VERSION", ip_acces, numversion do
 begin
   id_document_new= gen_id(num_id_document,1) ;
   insert into ta_bonliv values(:id_document_new,:code_document,:date_document,:qui_cree,:date_liv_document,:libelle_document
   ,:id_tiers,:id_t_paiement,:rem_ht_document,:tx_rem_ht_document,:rem_ttc_document,:tx_rem_ttc_document,:nb_e_document,:ttc
   ,:commentaire,null,null,null,null,null, null,null,null, :quand_cree,:qui_modif,:quand_modif,:version,:ip_acces,:numversion);

insert into ta_l_bonliv
select gen_id(num_id_l_document,1), :id_document_new, lb.id_t_ligne, lb.id_article, lb.num_ligne_l_bonliv,
lb.lib_l_bonliv, lb.qte_l_bonliv, null, lb.u1_l_bonliv, lb.u2_l_bonliv,
 lb.prix_u_l_bonliv, lb.taux_tva_l_bonliv, lb.compte_l_bonliv, lb.code_tva_l_bonliv,
 lb.code_t_tva_l_bonliv, lb.mt_ht_l_bonliv, lb.mt_ttc_l_bonliv, lb.rem_tx_l_bonliv,
 lb.rem_ht_l_bonliv,null, null, lb.qui_cree_l_bonliv, lb.quand_cree_l_bonliv, lb.qui_modif_l_bonliv,
  lb.quand_modif_l_bonliv, lb."VERSION", lb.ip_acces, 1
from ta_l_bonliv_bis lb where lb.id_bonliv = :id_document;

insert into ta_infos_bonliv
select  gen_id(num_id_infos_document,1), :id_document_new, I.adresse1, I.adresse2, I.adresse3, I.codepostal, I.ville,
I.pays, I.adresse1_liv, I.adresse2_liv, I.adresse3_liv, I.codepostal_liv, I.ville_liv, I.pays_liv,
 I.code_compta, I.compte, I.nom_tiers, I.prenom_tiers, I.surnom_tiers, I.code_t_civilite, 
 I.code_t_entite, I.tva_i_com_compl, I.code_c_paiement, I.lib_c_paiement, I.report_c_paiement,
  I.fin_mois_c_paiement, I.libl_entreprise, I.code_entreprise, I.qui_cree_infos_bonliv,
  I.quand_cree_infos_bonliv, I.qui_modif_infos_bonliv, I.quand_modif_infos_bonliv, 
  I."VERSION", I.ip_acces, 1
from ta_infos_bonliv_bis I where i.id_bonliv = :id_document;

update ta_r_document_bis rd set rd.id_bonliv = :id_document_new
where rd.id_bonliv = :id_document ;
end

for select D.id_devis, D.code_devis, D.date_devis, D.date_ech_devis, D.date_liv_devis,
D.libelle_devis, D.id_tiers, D.id_t_paiement, D.rem_ht_devis,
D.tx_rem_ht_devis, D.rem_ttc_devis, D.tx_rem_ttc_devis, D.nb_e_devis, D.ttc, D.export,
 D.commentaire, D.qui_cree_devis, D.quand_cree_devis, D.qui_modif_devis,
 D.quand_modif_devis, D."VERSION", D.ip_acces, 1
from ta_devis_bis D into :id_document, code_document, date_document,date_ech_document , date_liv_document,
libelle_document, id_tiers, id_t_paiement, rem_ht_document, tx_rem_ht_document,
rem_ttc_document, tx_rem_ttc_document, nb_e_document, ttc,export, commentaire,qui_cree, quand_cree,
 qui_modif, quand_modif, "VERSION", ip_acces, numversion do
 begin
   id_document_new= gen_id(num_id_document,1) ;
   insert into ta_devis values(:id_document_new,:code_document,:date_document,:date_ech_document, :date_liv_document,:libelle_document
   ,:id_tiers,:id_t_paiement,0,:rem_ht_document,:tx_rem_ht_document,:rem_ttc_document,:tx_rem_ttc_document,:nb_e_document,:ttc
   ,:export,:commentaire,null,null,null,null,null, null,null,null,:qui_cree, :quand_cree,:qui_modif,:quand_modif,:version,:ip_acces,:numversion);

insert into ta_l_devis
select gen_id(num_id_l_document,1), :id_document_new, ld.id_t_ligne, ld.id_article, ld.num_ligne_l_devis, ld.lib_l_devis,
 ld.qte_l_devis, null, ld.u1_l_devis, ld.u2_l_devis, ld.prix_u_l_devis,
 ld.taux_tva_l_devis, ld.compte_l_devis, ld.code_tva_l_devis, ld.code_t_tva_l_devis,
 ld.mt_ht_l_devis, ld.mt_ttc_l_devis, ld.rem_tx_l_devis, ld.rem_ht_l_devis,null, null, ld.qui_cree_l_devis,
 ld.quand_cree_l_devis, ld.qui_modif_l_devis, ld.quand_modif_l_devis, ld."VERSION", ld.ip_acces, 1
from ta_l_devis_bis ld where ld.id_devis = :id_document;

insert into ta_infos_devis
select  gen_id(num_id_infos_document,1), :id_document_new, I.adresse1, I.adresse2, I.adresse3, I.codepostal, I.ville, I.pays,
 I.adresse1_liv, I.adresse2_liv, I.adresse3_liv, I.codepostal_liv, I.ville_liv, I.pays_liv, I.code_compta,
  I.compte, I.nom_tiers, I.prenom_tiers, I.surnom_tiers, I.code_t_civilite, I.code_t_entite,
  I.tva_i_com_compl, I.code_c_paiement, I.lib_c_paiement, I.report_c_paiement, I.fin_mois_c_paiement,
  I.libl_entreprise, I.code_entreprise, I.qui_cree_infos_devis, I.quand_cree_infos_devis,
  I.qui_modif_infos_devis, I.quand_modif_infos_devis, I."VERSION", I.ip_acces, 1
from ta_infos_devis_bis I where i.id_devis = :id_document;
update ta_r_document_bis rd set rd.id_devis = :id_document_new
where rd.id_devis = :id_document ;
end

for select F.id_facture, F.code_facture, F.date_facture, F.date_ech_facture, F.date_liv_facture, F.libelle_facture,
 F.id_tiers, F.id_t_paiement, F.regle_facture, F.rem_ht_facture, F.tx_rem_ht_facture, F.rem_ttc_facture,
 F.tx_rem_ttc_facture, F.nb_e_facture, F.ttc, F.export, F.commentaire, F.qui_cree_facture, F.quand_cree_facture,
  F.qui_modif_facture, F.quand_modif_facture, F."VERSION", F.ip_acces, 1
  from ta_facture_bis F into :id_document, code_document, date_document,date_ech_document , date_liv_document,
libelle_document, id_tiers, id_t_paiement, regle_document, rem_ht_document, tx_rem_ht_document,
rem_ttc_document, tx_rem_ttc_document, nb_e_document, ttc,export, commentaire,qui_cree, quand_cree,
 qui_modif, quand_modif, "VERSION", ip_acces, numversion do
 begin
    id_document_new= gen_id(num_id_document,1) ;
   insert into ta_facture values(:id_document_new,:code_document,:date_document,:date_ech_document, :date_liv_document,
   :libelle_document
   ,:id_tiers,:id_t_paiement,:regle_document,:rem_ht_document,:tx_rem_ht_document,:rem_ttc_document,:tx_rem_ttc_document,:nb_e_document,
   :ttc
   ,:export,:commentaire,null,null,null,null,null, null,null,null,null,null,null,:qui_cree, :quand_cree,:qui_modif,:quand_modif,:version,:ip_acces,:numversion);

  insert into ta_l_facture
select gen_id(num_id_l_document,1), :id_document_new, lf.id_t_ligne, lf.id_article, lf.num_ligne_l_facture, lf.lib_l_facture,
 lf.qte_l_facture, null, lf.u1_l_facture, lf.u2_l_facture, lf.prix_u_l_facture,
 lf.taux_tva_l_facture, lf.compte_l_facture, lf.code_tva_l_facture, lf.code_t_tva_l_facture,
  lf.mt_ht_l_facture, lf.mt_ttc_l_facture, lf.rem_tx_l_facture, lf.rem_ht_l_facture,null, null, lf.qui_cree_l_facture,
   lf.quand_cree_l_facture, lf.qui_modif_l_facture, lf.quand_modif_l_facture, lf."VERSION", lf.ip_acces, 1
from ta_l_facture_bis lf where lf.id_facture = :id_document;

insert into ta_infos_facture
select  gen_id(num_id_infos_document,1), :id_document_new, I.adresse1, I.adresse2, I.adresse3, I.codepostal, I.ville, I.pays,
 I.adresse1_liv, I.adresse2_liv, I.adresse3_liv, I.codepostal_liv, I.ville_liv, I.pays_liv, I.code_compta,
  I.compte, I.nom_tiers, I.prenom_tiers, I.surnom_tiers, I.code_t_civilite, I.code_t_entite,
  I.tva_i_com_compl, I.code_c_paiement, I.lib_c_paiement, I.report_c_paiement, I.fin_mois_c_paiement,
   I.libl_entreprise, I.code_entreprise, I.qui_cree_infos_facture, I.quand_cree_infos_facture,
   I.qui_modif_infos_facture, I.quand_modif_infos_facture, I."VERSION", I.ip_acces, 1
from ta_infos_facture_bis I where i.id_facture = :id_document;
update ta_r_document_bis rd set rd.id_facture = :id_document_new
where rd.id_facture = :id_document ;
end

insert into ta_r_document select rd.id_r_document,rd.id_facture,rd.id_devis,rd.id_boncde,rd.id_bonliv,
rd.id_avoir,null,null,null,null,null,rd.qui_cree_r_document,rd.quand_cree_r_document,rd.qui_modif_r_document,rd.quand_modif_r_document,
rd."VERSION",rd.ip_acces,1  from ta_r_document_bis rd  ;

end
^

**** !!! Attention, il faut executer la mise a jour des generateurs !!! ****
execute procedure MAJ_GENERATEUR;


update TA_INFO_ENTREPRISE set version_obj=0 where version_obj is null;
update TA_T_TEL set version_obj=0 where version_obj is null;
update TA_T_TIERS set version_obj=0 where version_obj is null;
update TA_T_TVA set version_obj=0 where version_obj is null;
update TA_T_PAIEMENT set version_obj=0 where version_obj is null;
update TA_T_LIGNE set version_obj=0 where version_obj is null;
update TA_T_ENTITE set version_obj=0 where version_obj is null;
update TA_T_CIVILITE set version_obj=0 where version_obj is null;
update TA_T_DOC set version_obj=0 where version_obj is null;
update TA_TVA set version_obj=0 where version_obj is null;
update TA_FAMILLE set version_obj=0 where version_obj is null;
update TA_T_ADR set version_obj=0 where version_obj is null;
update TA_UNITE set version_obj=0 where version_obj is null;
update TA_ADRESSE  set version_obj=0 where version_obj is null;
update ta_apporteur  set version_obj=0 where version_obj is null;
update ta_article  set version_obj=0 where version_obj is null;
update ta_avoir  set version_obj=0 where version_obj is null;
update ta_boncde  set version_obj=0 where version_obj is null;
update ta_bonliv  set version_obj=0 where version_obj is null;
update ta_c_paiement set version_obj=0 where version_obj is null;
update ta_commentaire set version_obj=0 where version_obj is null;
update ta_compl   set version_obj=0 where version_obj is null;
update ta_compte_banque set version_obj=0 where version_obj is null;
update ta_depot set version_obj=0 where version_obj is null;
update ta_devis set version_obj=0 where version_obj is null;
update ta_email set version_obj=0 where version_obj is null;
update ta_entreprise set version_obj=0 where version_obj is null;
update ta_etablissement set version_obj=0 where version_obj is null;
update ta_facture set version_obj=0 where version_obj is null;
update ta_famille_tiers set version_obj=0 where version_obj is null;
update ta_famille_unite set version_obj=0 where version_obj is null;
update ta_l_apporteur set version_obj=0 where version_obj is null;
update ta_l_avoir set version_obj=0 where version_obj is null;
update ta_l_boncde set version_obj=0 where version_obj is null;
update ta_l_bonliv set version_obj=0 where version_obj is null;
update ta_l_devis set version_obj=0 where version_obj is null;
update ta_l_facture set version_obj=0 where version_obj is null;
update ta_l_modele set version_obj=0 where version_obj is null;
update ta_l_proforma set version_obj=0 where version_obj is null;
update ta_mail_maj set version_obj=0 where version_obj is null;
update ta_modele set version_obj=0 where version_obj is null;
update ta_prix set version_obj=0 where version_obj is null;
update ta_proforma set version_obj=0 where version_obj is null;
update ta_r_commercial set version_obj=0 where version_obj is null;
update ta_r_document set version_obj=0 where version_obj is null;
update ta_r_famille_tiers set version_obj=0 where version_obj is null;
update ta_rapport_unite set version_obj=0 where version_obj is null;
update ta_ref_prix set version_obj=0 where version_obj is null;
update ta_report_stock set version_obj=0 where version_obj is null;
update ta_report_t_paiement set version_obj=0 where version_obj is null;
update ta_stock set version_obj=0 where version_obj is null;


**** !!! Attention,Après avoir inséré tous les documents, il faut aller dans le programme pour lancer le calculMontant sur toutes les pièces
pour générer les montants calculés et les enregistrer;**** !!! 



Important !!!, Vérifier que les pays sont remplis dans les adresses !!!

Important !!!, modifier les fichiers de properties du dossier si necessaire !!!
Attention !!! Vérifier s'il n'y a pas des lignes de document avec un article sans prix !!!

select * from ta_l_facture lf
where lf.id_article is not null and lf.prix_u_l_document is null

select * from ta_l_bonliv lf
where lf.id_article is not null and lf.prix_u_l_document is null

select * from ta_l_devis lf
where lf.id_article is not null and lf.prix_u_l_document is null

# Pour la table Ta_WLGR, il faut rajouter un identifiant
et importer les donn�es
