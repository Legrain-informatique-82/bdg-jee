/******************************************************************************/
/*                 Generated by IBExpert 23/03/2009 10:57:30                  */
/******************************************************************************/



/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/


CREATE GENERATOR NUM_ID_T_BANQUE;

CREATE TABLE TA_T_BANQUE (
    ID_T_BANQUE           DID3 NOT NULL /* DID3 = INTEGER NOT NULL */,
    CODE_T_BANQUE         DLGR_CODE /* DLGR_CODE = VARCHAR(20) NOT NULL */,
    LIBL_T_BANQUE         DLGR_LIB /* DLGR_LIB = VARCHAR(100) NOT NULL */,
    QUI_CREE_T_BANQUE     DLIB50 /* DLIB50 = VARCHAR(50) */,
    QUAND_CREE_T_BANQUE   TIMESTAMP DEFAULT 'NOW',
    QUI_MODIF_T_BANQUE    DLIB50 /* DLIB50 = VARCHAR(50) */,
    QUAND_MODIF_T_BANQUE  TIMESTAMP DEFAULT 'NOW',
    "VERSION"          NUM_VERSION /* NUM_VERSION = VARCHAR(20) */,
    IP_ACCES           DLIB50NN DEFAULT 0 /* DLIB50NN = VARCHAR(50) NOT NULL */,
    VERSION_OBJ        INTEGER
);




/******************************************************************************/
/*                                Primary Keys                                */
/******************************************************************************/

ALTER TABLE TA_T_BANQUE ADD PRIMARY KEY (ID_T_BANQUE);


/******************************************************************************/
/*                                  Triggers                                  */
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/*                            Triggers for tables                             */
/******************************************************************************/

CREATE exception E_XAKCODE_T_BANQUE 'Le type de compte bancaire doit être unique'
^

/* Trigger: TBI_TA_T_BANQUE */
CREATE OR ALTER TRIGGER TBI_TA_T_BANQUE FOR TA_T_BANQUE
ACTIVE BEFORE INSERT POSITION 0
as
begin
   If (New.ID_T_BANQUE is null) Then
      New.ID_T_BANQUE = GEN_ID(NUM_ID_T_BANQUE,1);
   New.CODE_T_BANQUE = Upper(New.CODE_T_BANQUE);
   New.QUI_CREE_T_BANQUE = USER;
   new.QUAND_CREE_T_BANQUE = 'NOW';
   new.QUI_MODIF_T_BANQUE = USER;
   new.QUAND_MODIF_T_BANQUE = 'NOW';
   new.IP_ACCES = current_connection;
   select num_version from ta_version into new."VERSION";
end
^


/* Trigger: TBI_XAKCODE_T_BANQUE */
CREATE OR ALTER TRIGGER TBI_XAKCODE_T_BANQUE FOR TA_T_BANQUE
ACTIVE BEFORE INSERT POSITION 1
as
DECLARE variable numrows integer;
begin
  /* E_XAKCODE_T_BANQUE  */
   select count(*) from TA_T_BANQUE
   where CODE_T_BANQUE = NEW.CODE_T_BANQUE
   into :numrows;
   if (numrows > 0) then
      exception E_XAKCODE_T_BANQUE ;
end
^


/* Trigger: TBU_TA_T_BANQUE */
CREATE OR ALTER TRIGGER TBU_TA_T_BANQUE FOR TA_T_BANQUE
ACTIVE BEFORE UPDATE POSITION 0
as
begin
   New.CODE_T_BANQUE = Upper(New.CODE_T_BANQUE);
   new.QUI_MODIF_T_BANQUE = USER;
   new.QUAND_MODIF_T_BANQUE = 'NOW';
   new.IP_ACCES = current_connection;
   select num_version from ta_version into new."VERSION";
end
^


/* Trigger: TBU_XAKCODE_T_BANQUE */
CREATE OR ALTER TRIGGER TBU_XAKCODE_T_BANQUE FOR TA_T_BANQUE
ACTIVE BEFORE UPDATE POSITION 1
as
DECLARE variable numrows integer;
begin
  /* E_XAKCODE_T_BANQUE  */
   If  ((OLD.ID_T_BANQUE <> NEW.ID_T_BANQUE)) then
   begin
     select count(*) from TA_T_BANQUE
     where CODE_T_BANQUE = NEW.CODE_T_BANQUE
     into :numrows;
     if (numrows > 0) then
        exception E_XAKCODE_T_BANQUE ;
   end
end
^


SET TERM ; ^



/******************************************************************************/
/*                                 Privileges                                 */
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON TA_T_BANQUE TO "ADMIN" WITH GRANT OPTION;
