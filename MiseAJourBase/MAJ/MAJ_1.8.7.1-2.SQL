
CREATE or ALTER TRIGGER TA_REPORT_STOCK_BI FOR TA_REPORT_STOCK
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_REPORT_STOCK IS NULL) THEN
    NEW.ID_REPORT_STOCK = GEN_ID(NUM_ID_REPORT_STOCK,1);
END
^


CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR1
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
IF (not exists( SELECT CODE_REQUETE
FROM TA_VISUALISATION
where CODE_REQUETE ='stocks')) THEN
  begin
    query = 'update TA_VISUALISATION set PROC = 0';
    EXECUTE STATEMENT :query;
  end
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR1
^
drop procedure GESTION_INSERTION_VALEUR1
^

execute procedure MAJ_GENERATEUR
^

CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR2
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='article' or CODE_REQUETE = 'Liste des articles';
    query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM) VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Liste des articles'',''select CODE_ARTICLE,LIBELLEC_ARTICLE,NUMCPT_ARTICLE,DIVERS_ARTICLE,COMMENTAIRE_ARTICLE,STOCK_MIN_ARTICLE,PRIX_PRIX,CODE_UNITE,CODE_FAMILLE,CODE_TVA,TAUX_TVA,NUMCPT_TVA,CODE_T_TVA  from v_article'',''CODE_ARTICLE;LIBELLEC_ARTICLE;NUMCPT_ARTICLE;DIVERS_ARTICLE;COMMENTAIRE_ARTICLE;STOCK_MIN_ARTICLE;PRIX_PRIX;CODE_UNITE;CODE_FAMILLE;CODE_TVA;TAUX_TVA;NUMCPT_TVA;CODE_T_TVA'',''CODE;LIBELLE;COMPTE;DIVERS;COMMENTAIRE;STOCK MINI;PRIX;UNITE;FAMILLE;CODE TVA;TAUX TVA;COMPTE TVA;TYPE TVA'',''50;100;50;100;100;20;50;20;50;50;50;50;50'',''article'',''/report/article.rptdesign'',''CODE_ARTICLE'',''fr.legrain.articles.editor.EditorArticle'',''Articles'',NULL,0,NULL)';
    EXECUTE STATEMENT :query;
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR2
^
drop procedure GESTION_INSERTION_VALEUR2
^

CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR3
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='Factures exportées'or CODE_REQUETE ='Liste des Factures';
    query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM)VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Liste des Factures'',''select CODE_FACTURE,DATE_FACTURE,CODE_TIERS,NOM_TIERS,(MTNETTTC)as MTNETTTC ,EXPORT FROM  V_facture , calcul_total_direct(''''facture'''',id_facture)'',''CODE_FACTURE;DATE_FACTURE;CODE_TIERS;NOM_TIERS;MTNETTTC;EXPORT'',''CODE;DATE FACTURE;CODE TIERS;NOM TIERS;NET TTC;EXPORTEE'',''100;100;100;100;200;100;100;100'',''facture'',''/report/visu_facture.rptdesign'',''CODE_FACTURE'',''fr.legrain.editor.facture.swt.multi'',''Facture'',NULL,0,NULL)';    
    EXECUTE STATEMENT :query;
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR3
^
drop procedure GESTION_INSERTION_VALEUR3
^

CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR4
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='tiers' or CODE_REQUETE ='Liste des tiers';
    query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM) VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Liste des tiers'',''select CODE_TIERS,CODE_COMPTA,COMPTE,NOM_TIERS,ACTIF_TIERS,TTC_TIERS,CODE_T_CIVILITE,CODE_ENTREPRISE,CODE_T_TIERS,CODE_BANQUE,CODE_T_ENTITE from v_tiers'',''CODE_TIERS;CODE_COMPTA;COMPTE;NOM_TIERS;ACTIF_TIERS;TTC_TIERS;CODE_T_CIVILITE;CODE_ENTREPRISE;CODE_T_TIERS;CODE_BANQUE;CODE_T_ENTITE'',''CODE_TIERS;CODE_COMPTA;COMPTE;NOM_TIERS;ACTIF_TIERS;TTC_TIERS;CODE_T_CIVILITE;CODE_ENTREPRISE;CODE_T_TIERS;CODE_BANQUE;CODE_T_ENTITE'',''100;50;50;100;30;30;50;50;50;50;50'',''tiers'',''/report/tiers.rptdesign'',''CODE_TIERS'',''fr.legrain.tiers.editor.EditorTiers'',''Tiers'',NULL,0,NULL)';
    EXECUTE STATEMENT :query;
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR4
^
drop procedure GESTION_INSERTION_VALEUR4
^

CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR5
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='stocks' or CODE_REQUETE ='Etat des stocks';
    query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM) VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Etat des stocks'',''select CODE_ARTICLE,LIBELLE_ARTICLE,QTE,UNITE,PERIODE_DEB,PERIODE_FIN,REPORT_QTE from VISU_ETAT_STOCKS(null,null,null,null,null,null)'',''CODE_ARTICLE;LIBELLE_ARTICLE;QTE;UNITE;PERIODE_DEB;PERIODE_FIN'',''Code article;Libellé de l''''article;Quantité;Unité;Date début période;Date fin période'',''100;100;100;100;100;100'',''stocks'',''/report/EtatStocks.rptdesign'',''CODE_ARTICLE'',''fr.legrain.stocks.editor.EditorStocks'',''Stocks'',NULL,1,NULL)';
    EXECUTE STATEMENT :query;
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR5
^
drop procedure GESTION_INSERTION_VALEUR5
^

CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR6
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='Liste des bons de livraison';
    /*query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM) VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Liste des bons de livraison'',''select b.code_bonliv,b.date_bonliv,CODE_TIERS,NOM_TIERS,(MTNETTTC)as MTNETTTC  FROM v_bonliv b , calcul_total_direct(''''BonLiv'''',b.id_bonliv)'',''code_bonliv;date_bonliv;CODE_TIERS;NOM_TIERS;MTNETTTC'',''CODE;DATE BONLIV;CODE TIERS;NOM TIERS;NET TTC'',''100;100;100;100;100'',''BONLIV'',''/report/visu_BonLiv.rptdesign'',''CODE_BONLIV'',''fr.legrain.editor.Bl.swt.multi'',''BonLiv'',NULL,0,NULL)';
    EXECUTE STATEMENT :query;*/
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR6
^
drop procedure GESTION_INSERTION_VALEUR6
^

CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR7
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='Liste des devis';
    /*query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM) VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Liste des devis'','' select b.code_devis,b.date_devis,CODE_TIERS,NOM_TIERS,(MTNETTTC)as MTNETTTC  FROM v_devis b , calcul_total_direct(''''devis'''',b.id_devis)'',''code_devis;date_devis;CODE_TIERS;NOM_TIERS;MTNETTTC'',''CODE;DATE DEVIS;CODE TIERS;NOM TIERS;NET TTC'',''100;100;100;100;100'',''DEVIS'',''/report/visu_devis.rptdesign'',''CODE_DEVIS'',''fr.legrain.editor.devis.swt.multi'',''Devis'',NULL,0,NULL)';
       EXECUTE STATEMENT :query;*/
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR7
^
drop procedure GESTION_INSERTION_VALEUR7
^


CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR8
as    
DECLARE VARIABLE QUERY VARCHAR(10000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='Extraction tiers' or CODE_REQUETE ='Exportation tiers';
    query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM) VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Extraction tiers'',''select NOM_TIERS,PRENOM_TIERS,ADRESSE1_ADRESSE,ADRESSE2_ADRESSE,ADRESSE3_ADRESSE,CODEPOSTAL_ADRESSE,VILLE_ADRESSE,PAYS_ADRESSE,cast((cast(adr.CODEPOSTAL_ADRESSE as integer) / 1000) as varchar(2)) as departement,  CODE_T_CIVILITE,SURNOM_TIERS,LIBL_ENTREPRISE,CODE_TIERS,CODE_ENTREPRISE,ACTIF_TIERS,TTC_TIERS,CODE_T_TIERS,LIBELLE_T_TIERS,LIBL_COMMENTAIRE,CODE_T_ENTITE, tva_i_com_compl,siret_compl,NUMERO_TELEPHONE,ADRESSE_EMAIL,ADRESSE_WEB,QUAND_CREE_TIERS,max(f.Date_facture) as date_dern_fact,max(bonliv.Date_bonliv)as date_dern_bonliv,   max(devis.Date_devis)as date_dern_devis From TA_TIERS Tiers LEFT OUTER join TA_T_ENTITE Ent on Tiers.ID_T_ENTITE = Ent.ID_T_ENTITE LEFT OUTER join TA_T_CIVILITE Civ on Tiers.ID_T_CIVILITE = Civ.ID_T_CIVILITE LEFT OUTER join TA_ENTREPRISE E on Tiers.ID_ENTREPRISE = E.ID_ENTREPRISE LEFT OUTER join TA_T_TIERS TTiers on Tiers.ID_T_TIERS = TTiers.ID_T_TIERS LEFT OUTER join TA_COMMENTAIRE Com on Tiers.ID_TIERS = Com.ID_TIERS LEFT OUTER join ta_compl compl on compl.id_tiers = Tiers.id_tiers LEFT OUTER join TA_R_ADR radr on radr.ID_TIERS = Tiers.id_tiers LEFT OUTER join TA_R_EMAIL remail on remail.id_tiers = Tiers.id_tiers LEFT OUTER join TA_R_WEB rweb on rweb.id_tiers = Tiers.id_tiers LEFT OUTER join ta_ADRESSE adr on adr.ID_ADRESSE = radr.ID_ADRESSE LEFT OUTER join ta_EMAIL email on email.ID_EMAIL = remail.ID_EMAIL LEFT OUTER join ta_WEB web on web.ID_WEB = rweb.ID_WEB LEFT OUTER join ta_facture f on f.ID_tiers = Tiers.id_tiers LEFT OUTER join ta_bonliv bonliv on bonliv.ID_tiers = Tiers.id_tiers LEFT OUTER join ta_devis devis on devis.ID_tiers = Tiers.id_tiers LEFT OUTER join TA_R_TEL rtel on rtel.ID_TIERS = Tiers.id_tiers LEFT OUTER join TA_TELEPHONE tel on tel.ID_TELEPHONE = rtel.ID_TELEPHONE'',''NOM_TIERS;PRENOM_TIERS;ADRESSE1_ADRESSE;ADRESSE2_ADRESSE;ADRESSE3_ADRESSE;CODEPOSTAL_ADRESSE;VILLE_ADRESSE;PAYS_ADRESSE;departement¤cast((cast(adr.CODEPOSTAL_ADRESSE as integer) / 1000) as varchar(2));CODE_T_CIVILITE;SURNOM_TIERS;LIBL_ENTREPRISE;CODE_TIERS;CODE_ENTREPRISE;ACTIF_TIERS;TTC_TIERS;CODE_T_TIERS;LIBELLE_T_TIERS;LIBL_COMMENTAIRE;CODE_T_ENTITE;tva_i_com_compl;siret_compl;NUMERO_TELEPHONE;ADRESSE_EMAIL;ADRESSE_WEB;QUAND_CREE_TIERS;date_dern_fact¤max(f.Date_facture)¤having;date_dern_bonliv¤max(bonliv.Date_bonliv)¤having;date_dern_devis¤max(devis.Date_devis)¤having'',''Nom;Prénom;Adresse 1;Adresse 2;Adresse 3;Code postal;Ville;Pays;Département;Civilite;Surnom;Entreprise;Code tiers;Code entreprise;Actif;TTC;Type tiers;Libellé type;Commentaire;Type entité;Tva intra;Siret;Tél;Email;Web;Date création;Date dernière facture;Date dernier bonliv;Date dernier devis'',''50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50;50'',''tiers'',''/report/extraction_Tiers.rptdesign'',''CODE_TIERS'',''fr.legrain.tiers.editor.EditorTiers'',''Tiers'',''group by  NOM_TIERS,PRENOM_TIERS,ADRESSE1_ADRESSE,ADRESSE2_ADRESSE,ADRESSE3_ADRESSE,CODEPOSTAL_ADRESSE,VILLE_ADRESSE,PAYS_ADRESSE,CODE_T_CIVILITE,SURNOM_TIERS,LIBL_ENTREPRISE,CODE_TIERS,CODE_ENTREPRISE,ACTIF_TIERS,TTC_TIERS,CODE_T_TIERS,LIBELLE_T_TIERS,LIBL_COMMENTAIRE,CODE_T_ENTITE,tva_i_com_compl,siret_compl,NUMERO_TELEPHONE,ADRESSE_EMAIL,ADRESSE_WEB,QUAND_CREE_TIERS'',0,NULL)';

       EXECUTE STATEMENT :query;
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR8
^
drop procedure GESTION_INSERTION_VALEUR8
^

CREATE or ALTER  PROCEDURE GESTION_INSERTION_VALEUR9
as    
DECLARE VARIABLE QUERY VARCHAR(2000);
BEGIN
query ='';
    delete from TA_VISUALISATION where CODE_REQUETE ='Stocks début';
    query = 'INSERT INTO TA_VISUALISATION (ID,CODE_REQUETE,REQUETE,CHAMPS,TITRE_CHAMPS,TAILLE_CHAMPS,MODULE,IMPRESSION,IDENTIFIANT,ID_EDITEUR,ID_PLUGIN,GROUPBY,PROC,PARAM)VALUES (GEN_ID(NUM_ID_VISUALISATION,1),''Stocks début'',''select code_article,libellec_article,qte_report_stock,unite_report_stock,date_deb_report_stock,date_fin_report_stock from ta_report_stock R left join ta_Article Article on(Article.id_article=R.id_article_report_stock)'',''code_article;libellec_article;qte_report_stock;unite_report_stock;date_deb_report_stock;date_fin_report_stock'',''Article;Libellé de article;Quantité;Unité;Date deb;Date fin'',''100;200;100;100;100;100'',''stocks'',''/report/StocksDebut.rptdesign'',''CODE_ARTICLE'',''fr.legrain.stocks.editor.EditorStocks'',''Stocks'','''',0,NULL)';
    EXECUTE STATEMENT :query;
END
^
EXECUTE PROCEDURE GESTION_INSERTION_VALEUR9
^
drop procedure GESTION_INSERTION_VALEUR9
^
