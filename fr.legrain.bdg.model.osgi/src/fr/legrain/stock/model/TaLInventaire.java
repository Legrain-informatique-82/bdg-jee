package fr.legrain.stock.model;

// Generated 4 juin 2009 10:11:38 by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import fr.legrain.article.model.TaEntrepot;
import fr.legrain.article.model.TaLot;
import fr.legrain.general.model.TaObjetLgr;
import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaStock generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "ta_l_inventaire")
public class TaLInventaire extends TaObjetLgr   implements java.io.Serializable {

	private static final long serialVersionUID = 7287995920483748121L;
	
	private int idLInventaire;
	private TaInventaire taInventaire;
//	private Date dateInventaire;
	private String libelleInventaire;
	private BigDecimal qteReelle;
	private String un1Inventaire;
	private BigDecimal qteTheorique;
	private BigDecimal qte2LInventaire;
	private String un2Inventaire;
	private TaEntrepot taEntrepot;
	private String emplacement;
	@Transient
	private String numLot;
//	@Transient
	private TaLot taLot;
	private TaMouvementStock taMouvementStock;
	private Boolean ligneControlee = false;
	
//	private String quiCree;
//	private Date quandCree;
//	private String quiModif;
//	private Date quandModif;
//	private String ipAcces;
	private Integer versionObj;
//	private String version;
	
	@Transient
	private Boolean insertionAuto=false;
	@Transient 
	boolean modifie=false;

	public TaLInventaire() {
	}

	public TaLInventaire(int idStock) {
		this.idLInventaire = idStock;
	}


	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id_l_inventaire", unique = true, nullable = false)
	@LgrHibernateValidated(champBd = "id_l_inventaire",table = "ta_l_inventaire", champEntite="idLInventaire", clazz = TaLInventaire.class)
	public int getIdLInventaire() {
		return this.idLInventaire;
	}

	public void setIdLInventaire(int idStock) {
		this.idLInventaire = idStock;
	}

////	@Version
//	@Column(name = "version", length = 20)
//	public String getVersion() {
//		return this.version;
//	}
//
//	public void setVersion(String version) {
//		this.version = version;
//	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_inventaire")
	@LgrHibernateValidated(champBd = "id_inventaire",table = "ta_inventaire", champEntite="taInventaire.idInventaire", clazz = TaInventaire.class)
	public TaInventaire getTaInventaire() {
		return taInventaire;
	}

	public void setTaInventaire(TaInventaire taInventaire) {
		this.taInventaire = taInventaire;
	}

//
//
//	@Temporal(TemporalType.DATE)
//	@Column(name = "date_inventaire", length = 19)
//	@LgrHibernateValidated(champ = "date_inventaire",table = "ta_l_inventaire", champEntite="xxxxxx", clazz = TaLInventaire.class)
//	public Date getDateInventaire() {
//		return this.dateInventaire;
//	}
//
//	public void setDateInventaire(Date dateStock) {
//		this.dateInventaire = dateStock;
//	}

	@Column(name = "lib_l_inventaire")
	@LgrHibernateValidated(champBd = "lib_l_inventaire",table = "ta_l_inventaire", champEntite="libelleInventaire", clazz = TaLInventaire.class)
	public String getLibelleInventaire() {
		return this.libelleInventaire;
	}

	public void setLibelleInventaire(String libelleStock) {
		this.libelleInventaire = libelleStock;
	}

	@Column(name = "qte_reelle", precision = 15)
	@LgrHibernateValidated(champBd = "qte_reelle",table = "ta_l_inventaire", champEntite="qteReelle", clazz = TaLInventaire.class)
	public BigDecimal getQteReelle() {
		return this.qteReelle;
	}

	public void setQteReelle(BigDecimal qte1Stock) {
		this.qteReelle = qte1Stock;
	}

	@Column(name = "u1_l_inventaire", length = 20)
	@LgrHibernateValidated(champBd = "u1_l_inventaire",table = "ta_l_inventaire", champEntite="un1Inventaire", clazz = TaLInventaire.class)
	public String getUn1Inventaire() {
		return this.un1Inventaire;
	}

	public void setUn1Inventaire(String un1Stock) {
		this.un1Inventaire = un1Stock;
	}

	@Column(name = "qte_theorique", precision = 15)
	@LgrHibernateValidated(champBd = "qte_theorique",table = "ta_l_inventaire", champEntite="qteTheorique", clazz = TaLInventaire.class)
	public BigDecimal getQteTheorique() {
		return this.qteTheorique;
	}

	public void setQteTheorique(BigDecimal qte2Stock) {
		this.qteTheorique = qte2Stock;
	}

	@Column(name = "qte2_l_inventaire", precision = 15)
	@LgrHibernateValidated(champBd = "qte2_l_inventaire",table = "ta_l_inventaire", champEntite="qte2LInventaire", clazz = TaLInventaire.class)
	public BigDecimal getQte2LInventaire() {
		return qte2LInventaire;
	}

	public void setQte2LInventaire(BigDecimal qte2lInventaire) {
		qte2LInventaire = qte2lInventaire;
	}

	
	@Column(name = "u2_l_inventaire", length = 20)
	@LgrHibernateValidated(champBd = "u2_l_inventaire",table = "ta_l_inventaire", champEntite="un2Inventaire", clazz = TaLInventaire.class)
	public String getUn2Inventaire() {
		return this.un2Inventaire;
	}

	public void setUn2Inventaire(String un2Stock) {
		this.un2Inventaire = un2Stock;
	}

	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_entrepot")
	@LgrHibernateValidated(champBd = "id_entrepot",table = "ta_entrepot", champEntite="taEntrepot.idEntrepot", clazz = TaEntrepot.class)
	public TaEntrepot getTaEntrepot() {
		return taEntrepot;
	}

	public void setTaEntrepot(TaEntrepot entrepotOrg) {
		this.taEntrepot = entrepotOrg;
	}

	@Column(name = "emplacement", length = 20)
	@LgrHibernateValidated(champBd = "emplacement",table = "ta_l_inventaire", champEntite="emplacement", clazz = TaLInventaire.class)
	public String getEmplacement() {
		return emplacement;
	}

	public void setEmplacement(String emplacementOrg) {
		this.emplacement = emplacementOrg;
	}

	
	@OneToOne(fetch = FetchType.EAGER, cascade = {CascadeType.ALL,CascadeType.REFRESH})
	@JoinColumn(name = "id_mouvement_stock")
	@LgrHibernateValidated(champBd = "id_mouvement_stock",table = "ta_mouvement_stock", champEntite="taMouvementStock.idMouvementStock", clazz = TaMouvementStock.class)
	public TaMouvementStock getTaMouvementStock() {
		return taMouvementStock;
	}

	public void setTaMouvementStock(TaMouvementStock taMouvementStock) {
		this.taMouvementStock = taMouvementStock;
	}
	
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "id_lot_article")
//	@LgrHibernateValidated(champ = "id_lot_article",table = "ta_lot_article",clazz = TaLotArticle.class)
//	public TaLotArticle getLotArticle() {
//		return lotArticle;
//	}
//
//	public void setLotArticle(TaLotArticle lotArticle) {
//		this.lotArticle = lotArticle;
//	}
	
//	@Transient
	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.REFRESH})
	@JoinColumn(name = "id_lot")
	@LgrHibernateValidated(champBd = "id_lot",table = "ta_lot", champEntite="taLot.idLot", clazz = TaLot.class)	
	public TaLot getTaLot() {
		return taLot;
	}

	public void setTaLot(TaLot taLot) {
		this.taLot = taLot;
	}


//	@Column(name = "num_lot")
	@Transient
	public String getNumLot() {
		return numLot;
	}

	public void setNumLot(String numLot) {
		this.numLot = numLot;
	}
	
//	@Column(name = "qui_cree", length = 50)
//	public String getQuiCree() {
//		return this.quiCree;
//	}
//
//	public void setQuiCree(String quiCreeStock) {
//		this.quiCree = quiCreeStock;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_cree", length = 19)
//	public Date getQuandCree() {
//		return this.quandCree;
//	}
//
//	public void setQuandCree(Date quandCreeStock) {
//		this.quandCree = quandCreeStock;
//	}
//
//	@Column(name = "qui_modif", length = 50)
//	public String getQuiModif() {
//		return this.quiModif;
//	}
//
//	public void setQuiModif(String quiModifStock) {
//		this.quiModif = quiModifStock;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_modif", length = 19)
//	public Date getQuandModif() {
//		return this.quandModif;
//	}
//
//	public void setQuandModif(Date quandModifStock) {
//		this.quandModif = quandModifStock;
//	}
//
//	@Column(name = "ip_acces", length = 50)
//	public String getIpAcces() {
//		return this.ipAcces;
//	}
//
//	public void setIpAcces(String ipAcces) {
//		this.ipAcces = ipAcces;
//	}
	@Version
	@Column(name = "version_obj")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}
	
	@Column(name = "ligne_controlee")
	public Boolean getLigneControlee() {
		return ligneControlee;
	}

	public void setLigneControlee(Boolean ligneControlee) {
		this.ligneControlee = ligneControlee;
	}

	@Transient
	public Boolean getInsertionAuto() {
		return insertionAuto;
	}

	public void setInsertionAuto(Boolean insertionAuto) {
		this.insertionAuto = insertionAuto;
	}
	
	@Transient
	public boolean isModifie() {
		return modifie;
	}

	public void setModifie(boolean modifie) {
		this.modifie = modifie;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((emplacement == null) ? 0 : emplacement.hashCode());
		result = prime * result + idLInventaire;
		result = prime * result
				+ ((insertionAuto == null) ? 0 : insertionAuto.hashCode());
		result = prime
				* result
				+ ((libelleInventaire == null) ? 0 : libelleInventaire
						.hashCode());
		result = prime * result + ((numLot == null) ? 0 : numLot.hashCode());
		result = prime * result
				+ ((qte2LInventaire == null) ? 0 : qte2LInventaire.hashCode());
		result = prime * result
				+ ((qteReelle == null) ? 0 : qteReelle.hashCode());
		result = prime * result
				+ ((qteTheorique == null) ? 0 : qteTheorique.hashCode());
		result = prime * result
				+ ((taEntrepot == null) ? 0 : taEntrepot.hashCode());
		result = prime * result
				+ ((taInventaire == null) ? 0 : taInventaire.hashCode());
		result = prime * result + ((taLot == null) ? 0 : taLot.hashCode());
		result = prime
				* result
				+ ((taMouvementStock == null) ? 0 : taMouvementStock.hashCode());
		result = prime * result
				+ ((un1Inventaire == null) ? 0 : un1Inventaire.hashCode());
		result = prime * result
				+ ((un2Inventaire == null) ? 0 : un2Inventaire.hashCode());
		result = prime * result
				+ ((versionObj == null) ? 0 : versionObj.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TaLInventaire other = (TaLInventaire) obj;
		if (emplacement == null) {
			if (other.emplacement != null)
				return false;
		} else if (!emplacement.equals(other.emplacement))
			return false;
		if (idLInventaire != other.idLInventaire)
			return false;
		if (insertionAuto == null) {
			if (other.insertionAuto != null)
				return false;
		} else if (!insertionAuto.equals(other.insertionAuto))
			return false;
		if (libelleInventaire == null) {
			if (other.libelleInventaire != null)
				return false;
		} else if (!libelleInventaire.equals(other.libelleInventaire))
			return false;
		if (numLot == null) {
			if (other.numLot != null)
				return false;
		} else if (!numLot.equals(other.numLot))
			return false;
		if (qte2LInventaire == null) {
			if (other.qte2LInventaire != null)
				return false;
		} else if (!qte2LInventaire.equals(other.qte2LInventaire))
			return false;
		if (qteReelle == null) {
			if (other.qteReelle != null)
				return false;
		} else if (!qteReelle.equals(other.qteReelle))
			return false;
		if (qteTheorique == null) {
			if (other.qteTheorique != null)
				return false;
		} else if (!qteTheorique.equals(other.qteTheorique))
			return false;
		if (taEntrepot == null) {
			if (other.taEntrepot != null)
				return false;
		} else if (!taEntrepot.equals(other.taEntrepot))
			return false;
		if (taInventaire == null) {
			if (other.taInventaire != null)
				return false;
		} else if (!taInventaire.equals(other.taInventaire))
			return false;
		if (taLot == null) {
			if (other.taLot != null)
				return false;
		} else if (!taLot.equals(other.taLot))
			return false;
		if (taMouvementStock == null) {
			if (other.taMouvementStock != null)
				return false;
		} else if (!taMouvementStock.equals(other.taMouvementStock))
			return false;
		if (un1Inventaire == null) {
			if (other.un1Inventaire != null)
				return false;
		} else if (!un1Inventaire.equals(other.un1Inventaire))
			return false;
		if (un2Inventaire == null) {
			if (other.un2Inventaire != null)
				return false;
		} else if (!un2Inventaire.equals(other.un2Inventaire))
			return false;
		if (versionObj == null) {
			if (other.versionObj != null)
				return false;
		} else if (!versionObj.equals(other.versionObj))
			return false;
		return true;
	}

}
