package fr.legrain.document.model;
// Generated Apr 9, 2009 2:12:06 PM by Hibernate Tools 3.2.0.CR1

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlTransient;

import org.apache.log4j.Logger;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonIgnore;

import fr.legrain.article.model.TaLabelArticle;
import fr.legrain.article.model.TaTReception;
import fr.legrain.document.dto.IDocumentCalcul;
import fr.legrain.document.dto.IDocumentTiers;
import fr.legrain.document.dto.IInfosDocumentTiers;
import fr.legrain.document.dto.ILigneDocumentTiers;
import fr.legrain.document.events.SWTModificationDocumentEvent;
import fr.legrain.lib.data.ChangeModeEvent;
import fr.legrain.lib.data.ChangeModeListener;
import fr.legrain.lib.data.ExceptLgr;
import fr.legrain.lib.data.LibCalcul;
import fr.legrain.stock.model.TaGrMouvStock;
import fr.legrain.tiers.model.TaAdresse;
import fr.legrain.tiers.model.TaCPaiement;
import fr.legrain.tiers.model.TaTiers;
import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaBonReception generated by hbm2java
 */
@Entity
@EntityListeners(SwtDocumentListener.class)
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "ta_bon_reception", uniqueConstraints = @UniqueConstraint(columnNames = "code_document"))
//@SequenceGenerator(name = "gen_bon_reception", sequenceName = "num_id_bon_reception", allocationSize = 1)
@NamedQueries(value = { 
		@NamedQuery(name=TaBonReception.QN.FIND_BY_DATE, query="select a from TaBonReception a where a.taTiers.codeTiers like :codeTiers and  a.dateDocument between :dateDeb and :dateFin order by a.codeDocument"), 
		@NamedQuery(name=TaBonReception.QN.FIND_BY_DATE_LIGHT, query="select f.idDocument, f.codeDocument, f.dateDocument, f.libelleDocument, tiers.codeTiers, infos.nomTiers,0,0,f.netHtCalc,f.netTtcCalc from TaBonReception f join f.taInfosDocument infos join f.taTiers tiers where tiers.codeTiers like :codeTiers and f.dateDocument between :dateDeb and :dateFin order by f.codeDocument"),
		@NamedQuery(name=TaBonReception.QN.FIND_BY_TIERS_AND_CODE_LIGHT, query="select f.idDocument, f.codeDocument, f.dateDocument, f.libelleDocument, tiers.codeTiers, infos.nomTiers,0,0,f.netHtCalc,f.netTtcCalc from TaBonReception f join f.taInfosDocument infos join f.taTiers tiers where tiers.codeTiers like :codeTiers and f.codeDocument like :codeDocument order by f.codeDocument"),
		@NamedQuery(name=TaBonReception.QN.FIND_BY_TIERS_AND_CODE, query="select a from TaBonReception a where a.taTiers.codeTiers like :codeTiers and a.codeDocument between :codeDeb and :codeFin order by a.codeDocument"),
		@NamedQuery(name=TaBonReception.QN.FIND_BY_CODE, query="select a from TaBonReception a where a.taTiers.codeTiers like :codeTiers and  a.codeDocument between :codeDeb and :codeFin order by a.codeDocument"),
		@NamedQuery(name=TaBonReception.QN.FIND_BY_DATE_PARDATE, query="select a from TaBonReception a where a.taTiers.codeTiers like :codeTiers and  a.dateDocument between :dateDeb and :dateFin order by a.dateDocument"),
		@NamedQuery(name=TaBonReception.QN.FIND_BY_TIERS, query="select a from TaBonReception a where a.taTiers.codeTiers like :codeTiers"),
		@NamedQuery(name=TaBonReception.QN.FIND_BY_TIERS_AND_DATE, query="select a from TaBonReception a where a.taTiers.codeTiers like :codeTiers and a.dateDocument between :dateDeb and :dateFin order by a.codeDocument"),
		
		@NamedQuery(name=TaBonReception.QN.FIND_ALL_LIGHT, query="select new fr.legrain.document.dto.TaBonReceptionDTO(f.id, f.codeDocument, f.dateDocument, f.libelleDocument, t.codeTiers, t.nomTiers, tr.codeTReception, tr.liblTReception) from TaBonReception f left join f.taTiers t left join f.taTReception tr order by f.dateDocument DESC, f.codeDocument DESC"),
		@NamedQuery(name=TaBonReception.QN.FIND_BY_CODE_LIGHT, query="select new fr.legrain.document.dto.TaBonReceptionDTO(f.id, f.codeDocument, f.dateDocument, f.libelleDocument, t.codeTiers, t.nomTiers, tr.codeTReception, tr.liblTReception) from TaBonReception f left join f.taTiers t left join f.taTReception tr where f.codeDocument like :codeDocument order by f.codeDocument"),

		//		@NamedQuery(name=TaBonReception.QN.FIND_BY_ETAT_DATE, query="select a from TaBonReception a where a.dateEchDocument between ? and ? and a.taEtat.codeEtat = ? order by a.codeDocument"),
//		@NamedQuery(name=TaBonReception.QN.FIND_BY_ETAT_ENCOURS_DATE, query="select a from TaBonReception a where a.dateEchDocument < ? and a.taEtat is null and a.taRDocuments is empty order by a.codeDocument"),
//		@NamedQuery(name=TaBonReception.QN.FIND_BY_ETAT_TIERS_DATE, query="select a from TaBonReception a where a.taTiers.codeTiers like ? and a.dateEchDocument between ? and ? and a.taEtat.codeEtat = ? order by a.codeDocument"),
//		@NamedQuery(name=TaBonReception.QN.FIND_BY_ETAT_TIERS_ENCOURS_DATE, query="select a from TaBonReception a where a.taTiers.codeTiers like ? and a.dateEchDocument < ? and a.taEtat is null and a.taRDocuments is empty order by a.codeDocument")

		
		
})
public class TaBonReception extends SWTDocument implements ChangeModeListener, java.io.Serializable , IDocumentTiers,IDocumentCalcul {

	private static final long serialVersionUID = -3124862746875290086L;
	
	public static final String TYPE_DOC = "BonReception";
	public static final String PATH_ICONE_COULEUR = "dashboard/reception.svg";
	public static final String PATH_ICONE_BLANC = "";
	public static final String PATH_ICONE_GRIS = "";
	public static class QN {
		public static final String FIND_BY_DATE = "TaBonReception.findEntre2Date";
		public static final String FIND_BY_TIERS_AND_CODE_LIGHT = "TaBonReception.findEntre2CodeParCodeLight";
		public static final String FIND_BY_DATE_LIGHT = "TaBonReception.findEntre2DateLight";
		public static final String FIND_BY_TIERS_AND_CODE = "TaBonReception.findEntre2CodeParCode";
		public static final String FIND_BY_DATE_PARDATE = "TaBonReception.findEntre2DateParDate";
		public static final String FIND_BY_CODE = "TaBonReception.findEntre2Code";
		public static final String FIND_BY_TIERS_AND_DATE = "TaBonReception.findTiersEntre2Date";
		public static final String FIND_BY_TIERS = "TaBonReception.findTiers";
		public static final String FIND_ALL_LIGHT = "TaBonReception.findAllLight";
		public static final String FIND_BY_CODE_LIGHT = "TaBonReception.findByCodeLight";
//		public static final String FIND_BY_ETAT_DATE = "TaBonReception.findEtatDate";
//		public static final String FIND_BY_ETAT_ENCOURS_DATE = "TaBonReception.findEtatEnCoursDate";
//		public static final String FIND_BY_ETAT_TIERS_DATE = "TaBonReception.findTiersEtat";
//		public static final String FIND_BY_ETAT_TIERS_ENCOURS_DATE = "TaBonReception.findTiersEtatEnCoursDate";
		
		
		
	}
	
//	private int idDocument;
	private String version;
	private TaTPaiement taTPaiement;
	private TaTReception taTReception;
	private TaTiers taTiers;
	//private TaCPaiement taCPaiement;
	private String codeDocument;
	private Date dateDocument;
	private Date dateLivDocument;
	private Date heureDocument;
	private String libelleDocument;
	private TaGrMouvStock taGrMouvStock;
	private BigDecimal remHtDocument= new BigDecimal(0);
	private BigDecimal txRemHtDocument= new BigDecimal(0);
	private BigDecimal remTtcDocument= new BigDecimal(0);
	private BigDecimal txRemTtcDocument= new BigDecimal(0);
	private Integer nbEDocument= 0;
	private Integer ttc= 0;
	private String commentaire;
	private String quiCree;
	private Date quandCree;
	private String quiModif;
	private Date quandModif;
	private String ipAcces;
	private Date dateVerrouillage;
//	private Integer versionObj;

	protected Integer nbDecimalesQte;
	
	private Boolean gestionLot = false;
	private TaInfosBonReception taInfosDocument;
	private Set<TaRDocument> taRDocuments = new HashSet<TaRDocument>(0);
	private Set<TaRAcompte> taRAcomptes = new HashSet<TaRAcompte>(0);
	private Set<TaREtat> taREtats = new HashSet<TaREtat>(0);
	private Set<TaHistREtat> taHistREtats = new HashSet<TaHistREtat>(0);
	
	@Transient
	private ArrayList<LigneTva> lignesTVA = null; //ensemble des lignes de tva du document
	@Transient
	private BigDecimal mtTtcAvantRemiseGlobaleCalc = new BigDecimal(0);


	@Transient
	private boolean gestionTVA = true;
	@Transient
	static Logger logger = Logger.getLogger(TaBonReception.class.getName());

//	@Transient
	private BigDecimal mtTtcCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal mtHtCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal mtTvaCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netTtcCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netHtCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netTvaCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netAPayer = new BigDecimal(0);
	
	private TaTiers taTiersPrestationService;
	private List<TaLabelArticle> taLabelArticles;
//	private TaEtat taEtat;
	@Transient
	private BigDecimal remTtcIntermediaireDocument = new BigDecimal(0);
	
	@Transient
	private boolean legrain = false;
	@Transient
	protected TaEtat taEtat;

	private Set<TaRReglementLiaison> taRReglementLiaisons = new HashSet<TaRReglementLiaison>(0);
	
	private Boolean utiliseUniteSaisie = true;


	
	public TaBonReception(boolean legrain) {
		this.legrain = legrain;
		lignes = new ArrayList<TaLBonReception>(0);
		lignesTVA = new ArrayList<LigneTva>();
	}
	public TaBonReception() {
		lignes = new ArrayList<TaLBonReception>(0);
		lignesTVA = new ArrayList<LigneTva>();
	}
	
	public TaBonReception(int idBonliv) {
		this.idDocument = idBonliv;
		lignes = new ArrayList<TaLBonReception>(0);
		lignesTVA = new ArrayList<LigneTva>();		
	}
	
	public TaBonReception(String oldCodeBonliv) {
		super(oldCodeBonliv);
		legrain = true;
		lignes = new ArrayList<TaLBonReception>(0);
		this.lignesTVA = new ArrayList<LigneTva>();
		//passage ejb
//		this.modeDocument = EnumModeObjet.C_MO_INSERTION;
	}
	
	public TaBonReception(int idBonliv, TaTPaiement taTPaiement, TaTiers taTiers,
			TaCPaiement taCPaiement,TaAdresse taAdresseByIdAdresse, 
			TaAdresse taAdresseByIdAdresseLiv,String codeBonliv,
			Date dateBonliv, Date dateEchBonliv,Date dateLivBonliv,
			String libelleBonliv, 
			BigDecimal remHtBonliv, BigDecimal txRemHtBonliv,
			BigDecimal remTtcBonliv, BigDecimal txRemTtcBonliv, Integer nbEBonliv,
			Integer ttc, Integer export, String commentaire, String quiCreeBonliv,
			Date quandCreeBonliv, String quiModifBonliv, Date quandModifBonliv,
			String ipAcces, Integer versionObj, List<TaLBonReception> taLBonReception,
			TaInfosBonReception taInfosBonlives, Set<TaRDocument> taRDocuments) {
		this.idDocument = idBonliv;
		this.taTPaiement = taTPaiement;
		this.taTiers = taTiers;
		//this.taCPaiement = taCPaiement;

		this.codeDocument = codeBonliv;
		this.dateDocument = dateBonliv;
		this.dateLivDocument = dateLivBonliv;
		this.libelleDocument = libelleBonliv;
		this.remHtDocument = remHtBonliv;
		this.txRemHtDocument = txRemHtBonliv;
		this.remTtcDocument = remTtcBonliv;
		this.txRemTtcDocument = txRemTtcBonliv;
		this.nbEDocument = nbEBonliv;
		this.ttc = ttc;
		//this.export = export;
		this.commentaire = commentaire;
		this.quiCree = quiCreeBonliv;
		this.quandCree = quandCreeBonliv;
		this.quiModif = quiModifBonliv;
		this.quandModif = quandModifBonliv;
		this.ipAcces = ipAcces;
		this.versionObj = versionObj;
		this.lignes = taLBonReception;
		this.taInfosDocument = taInfosBonlives;
		this.taRDocuments = taRDocuments;
	}

//	@Id
//	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "gen_bon_reception")
//	@Column(name = "id_document", unique = true, nullable = false)
//	@LgrHibernateValidated(champ = "id_document",table = "ta_bon_reception",clazz = TaBonReception.class)
//	public int getIdDocument() {
//		return this.idDocument;
//	}
//
//	public void setIdDocument(int idBonliv) {
//		this.idDocument = idBonliv;
//	}

	@Column(name = "version", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_t_paiement")
	@LgrHibernateValidated(champBd = "id_t_paiement",table = "ta_t_paiement",champEntite="TaTPaiement.idTPaiement", clazz = TaTPaiement.class)
	public TaTPaiement getTaTPaiement() {
		return this.taTPaiement;
	}

	public void setTaTPaiement(TaTPaiement taTPaiement) {
		this.taTPaiement = taTPaiement;
	}

	@NotNull(message="le tiers doit être renseigné")
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_tiers")
	@LgrHibernateValidated(champBd = "id_tiers",table = "ta_tiers",champEntite="TaTiers.idTiers", clazz = TaTiers.class)
	public TaTiers getTaTiers() {
		return this.taTiers;
	}

	public void setTaTiers(TaTiers taTiers) {
		if(taRAcomptes.size()==0 || rechercheSiMemeTiers(taTiers))
			this.taTiers = taTiers;
	}

	public boolean rechercheSiMemeTiers(TaTiers taTiers){
		for (TaRAcompte acompte : taRAcomptes) {
			if(acompte.getTaAcompte().getTaTiers()!=null)
				if (!acompte.getTaAcompte().getTaTiers().equals(taTiers))
					return false;
		}
		return true;
	}
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "id_c_paiement")
//	@LgrHibernateValidated(champ = "id_c_paiement",table = "ta_c_paiement",clazz = TaCPaiement.class)
//	public TaCPaiement getTaCPaiement() {
//		return this.taCPaiement;
//	}
//
//	public void setTaCPaiement(TaCPaiement taCPaiement) {
//		this.taCPaiement = taCPaiement;
//	}


	@Column(name = "code_document", unique = true, length = 20)
	@LgrHibernateValidated(champBd = "code_document",table = "ta_bon_reception",champEntite="codeDocument", clazz = TaBonReception.class)
	public String getCodeDocument() {
		return this.codeDocument;
	}

	public void setCodeDocument(String codeBonliv) {
		this.codeDocument = codeBonliv;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_document", length = 19)
	@LgrHibernateValidated(champBd = "date_document",table = "ta_bon_reception",champEntite="dateDocument", clazz = TaBonReception.class)
	public Date getDateDocument() {
		return this.dateDocument;
	}

	public void setDateDocument(Date dateFacture) {
		if(this.oldDate==null)this.oldDate=dateFacture;
		else
		if(this.dateDocument==null||
				this.dateDocument.compareTo(dateFacture)!=0)
			this.oldDate=this.dateDocument;
		this.dateDocument = dateFacture;
	}


	@Temporal(TemporalType.DATE)
	@Column(name = "date_liv_document", length = 19)
	@LgrHibernateValidated(champBd = "date_liv_document",table = "ta_bon_reception",champEntite="dateLivDocument", clazz = TaBonReception.class)
	public Date getDateLivDocument() {
		return this.dateLivDocument;
	}

	public void setDateLivDocument(Date dateLivBonliv) {
		this.dateLivDocument = dateLivBonliv;
	}

	@Column(name = "libelle_document")
	@LgrHibernateValidated(champBd = "libelle_document",table = "ta_bon_reception",champEntite="libelleDocument", clazz = TaBonReception.class)
	public String getLibelleDocument() {
		return this.libelleDocument;
	}

	public void setLibelleDocument(String libelleBonliv) {
		this.libelleDocument = libelleBonliv;
	}

	
	
	@Column(name = "rem_ht_document", precision = 15)
	@LgrHibernateValidated(champBd = "rem_ht_document",table = "ta_bon_reception",champEntite="remHtDocument", clazz = TaBonReception.class)
	public BigDecimal getRemHtDocument() {
		return this.remHtDocument;
	}

	public void setRemHtDocument(BigDecimal remHtBonliv) {
		this.remHtDocument = remHtBonliv;
	}

	@Column(name = "tx_rem_ht_document", precision = 15)
	@LgrHibernateValidated(champBd = "tx_rem_ht_document",table = "ta_bon_reception",champEntite="txRemHtDocument", clazz = TaBonReception.class)
	public BigDecimal getTxRemHtDocument() {
		return this.txRemHtDocument;
	}

	public void setTxRemHtDocument(BigDecimal txRemHtBonliv) {
		if(txRemHtBonliv==null)txRemHtBonliv=new BigDecimal(0);
		if(this.txRemHtDocument!=null && this.txRemHtDocument.compareTo(txRemHtBonliv)!=0){	
			this.txRemHtDocument = txRemHtBonliv;
			if(legrain) {
				System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
				//passage ejb => dans TaBonReceptionService
//				calculeTvaEtTotaux();
				try {
					fireModificationDocument(new SWTModificationDocumentEvent(this));
				} catch (Exception e) {
					logger.error("",e);
				}
			}
		}
	}

	@Column(name = "rem_ttc_document", precision = 15)
	@LgrHibernateValidated(champBd = "rem_ttc_document",table = "ta_bon_reception",champEntite="remTtcDocument", clazz = TaBonReception.class)
	public BigDecimal getRemTtcDocument() {
		return this.remTtcDocument;
	}

	public void setRemTtcDocument(BigDecimal remTtcBonliv) {
		this.remTtcDocument = remTtcBonliv;
	}

	@Column(name = "tx_rem_ttc_document", precision = 15)
	@LgrHibernateValidated(champBd = "tx_rem_ttc_document",table = "ta_bon_reception",champEntite="txRemTtcDocument", clazz = TaBonReception.class)
	public BigDecimal getTxRemTtcDocument() {
		return this.txRemTtcDocument;
	}

	public void setTxRemTtcDocument(BigDecimal txRemTtcBonliv) {
		if(txRemTtcBonliv==null)txRemTtcBonliv=new BigDecimal(0);
		if(this.txRemTtcDocument!=null && this.txRemTtcDocument.compareTo(txRemTtcBonliv)!=0){	
			this.txRemTtcDocument = txRemTtcBonliv;
			if(legrain) {
				System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
				//passage ejb => dans TaBonReceptionService
//				calculeTvaEtTotaux();
				try {
					fireModificationDocument(new SWTModificationDocumentEvent(this,"txRemTtcDocument"));
				} catch (Exception e) {
					logger.error("",e);
				}
			}
		}
	}

	@Column(name = "nb_e_document")
	@LgrHibernateValidated(champBd = "nb_e_document",table = "ta_bon_reception",champEntite="nbEDocument", clazz = TaBonReception.class)
	public Integer getNbEDocument() {
		return this.nbEDocument;
	}

	public void setNbEDocument(Integer nbEBonliv) {
		this.nbEDocument = nbEBonliv;
	}

	@Column(name = "ttc")
	@LgrHibernateValidated(champBd = "ttc",table = "ta_bon_reception",champEntite="ttc", clazz = TaBonReception.class)
	public Integer getTtc() {
		return this.ttc;
	}

	public void setTtc(Integer ttc) {
		this.ttc = ttc;
	}

//	@Column(name = "export")
//	@LgrHibernateValidated(champ = "export",table = "ta_bon_reception",clazz = TaBonReception.class)
//	public Integer getExport() {
//		return this.export;
//	}
//
//	public void setExport(Integer export) {
//		this.export = export;
//	}

	@Column(name = "commentaire", length = 2000)
	@LgrHibernateValidated(champBd = "commentaire",table = "ta_bon_reception",champEntite="commentaire", clazz = TaBonReception.class)
	public String getCommentaire() {
		return this.commentaire;
	}

	public void setCommentaire(String commentaire) {
		if(this.commentaire==null||(commentaire!=null &&
				this.commentaire.compareTo(commentaire)!=0)){
			this.commentaire = commentaire;		
			if(legrain) {
				try {
					fireModificationDocument(new SWTModificationDocumentEvent(this));
				} catch (Exception e) {
					logger.error("",e);
				}
			}
		}
	}

	@Column(name = "qui_cree", length = 50)
	public String getQuiCree() {
		return this.quiCree;
	}

	public void setQuiCree(String quiCreeBonliv) {
		this.quiCree = quiCreeBonliv;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_cree", length = 19)
	public Date getQuandCree() {
		return this.quandCree;
	}

	public void setQuandCree(Date quandCreeBonliv) {
		this.quandCree = quandCreeBonliv;
	}

	@Column(name = "qui_modif", length = 50)
	public String getQuiModif() {
		return this.quiModif;
	}

	public void setQuiModif(String quiModifBonliv) {
		this.quiModif = quiModifBonliv;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_modif", length = 19)
	public Date getQuandModif() {
		return this.quandModif;
	}

	public void setQuandModif(Date quandModifBonliv) {
		this.quandModif = quandModifBonliv;
	}

	@Column(name = "ip_acces", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}

//	@Version
//	@Column(name = "version_obj")
//	public Integer getVersionObj() {
//		return this.versionObj;
//	}
//
//	public void setVersionObj(Integer versionObj) {
//		this.versionObj = versionObj;
//	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "taDocument", orphanRemoval=true)
	@OrderBy("numLigneLDocument")
	@Fetch(FetchMode.SUBSELECT)
	@LgrHibernateValidated(champBd = "id_l_document",table = "ta_l_bon_reception", champEntite="TaLBonReception.idLDocument", clazz = TaLBonReception.class)
//	@Valid
	public List<TaLBonReception> getLignes() {
		return this.lignes;
	}

	public void setLignes(List<TaLBonReception> taLBonReception) {
		this.lignes = taLBonReception;
	}
	
	@javax.persistence.OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "taDocument")
	public TaInfosBonReception getTaInfosDocument() {
		return this.taInfosDocument;
	}

	public void setTaInfosDocument(TaInfosBonReception taInfosBonlives) {
		this.taInfosDocument = taInfosBonlives;
	}

	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "taBonReception", orphanRemoval=true)
	@XmlTransient
	public Set<TaRDocument> getTaRDocuments() {
		return this.taRDocuments;
	}

	public void setTaRDocuments(Set<TaRDocument> taRDocuments) {
		this.taRDocuments = taRDocuments;
	}
	

	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "taBonReception", orphanRemoval=true)
	public Set<TaREtat> getTaREtats() {
		return this.taREtats;
	}

	public void setTaREtats(Set<TaREtat> taREtats) {
		this.taREtats = taREtats;
	}
	

	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "taBonReception", orphanRemoval=true)
	public Set<TaHistREtat> getTaHistREtats() {
		return this.taHistREtats;
	}

	public void setTaHistREtats(Set<TaHistREtat> taHistREtats) {
		this.taHistREtats = taHistREtats;
	}	
	
	@Transient
	public Set<TaRAcompte> getTaRAcomptes(){
		return null;
	}

	public void setTaRAcomptes(Set<TaRAcompte> taRAcomptes) {
	}
	/**
	 * Initialisation des propriétés de la facture en fonction du tiers
	 */
	public void changementDeTiers() {
//		if(this.taTiers!=null && this.taTiers.getTaTTvaDoc()!=null && 
//				this.taTiers.getTaTTvaDoc().getCodeTTvaDoc()!=null){
//			if(!this.taTiers.getTaTTvaDoc().getCodeTTvaDoc().equals("F")
//					//				||this.taTiers.getTaTTvaDoc().getCodeTTvaDoc().equals("UE")
//					//				||this.taTiers.getTaTTvaDoc().getCodeTTvaDoc().equals("HUE")
//			)
//				setGestionTVA(false);
//			else setGestionTVA(true);
//		}else
//			setGestionTVA(true);
	}
	
	@Override
	protected void afterAjoutLigne(SWTLigneDocument ligne) throws ExceptLgr {
		System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
		//passage ejb => dans TaBonReceptionService
//		calculeTvaEtTotaux();
		reinitialiseNumLignes();
	}

	@Override
	protected void afterEnregistrerEntete() throws ExceptLgr {
		System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
		//passage ejb => dans TaBonReceptionService
//		calculeTvaEtTotaux();
		reinitialiseNumLignes();
		
	}

	@Override
	protected void afterModifierEntete() throws ExceptLgr {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected void afterRemoveLigne(SWTLigneDocument ligne) throws ExceptLgr {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected void afterSupprimerEntete() throws ExceptLgr {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected boolean beforeAjoutLigne(SWTLigneDocument ligne) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeEnregistrerEntete() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeModifierEntete() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeRemoveLigne(SWTLigneDocument ligne) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeSupprimerEntete() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected void reinitialiseNumLignes() {
//		for (Object ligne : lignes) {
//			((TaLBonReception)ligne).setNumLigneLDocument(
//					((TaLBonReception) ligne).getNUM_LIGNE());
//		}		
	}

	@Override
	public void changementMode(ChangeModeEvent evt) {
		// TODO Raccord de méthode auto-généré
		switch (evt.getNouveauMode()) {
		case C_MO_CONSULTATION:
			break;
		case C_MO_EDITION:
			//S'il n'existe pas déjà, charger un objet swtArticle pour la ligne
			break;
		case C_MO_INSERTION:
//			S'il n'existe pas déjà, charger un objet swtArticle pour la ligne
			break;
		case C_MO_SUPPRESSION:
			break;
		}

	}
	@Transient
	public ArrayList<LigneTva> getLignesTVA() {
		return lignesTVA;
	}

	public void setLignesTVA(ArrayList<LigneTva> lignesTVA) {
		this.lignesTVA = lignesTVA;
	}
	
//	@Transient
	@Column(name = "mt_ttc_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_ttc_calc",table = "ta_bon_reception",champEntite="mtTtcCalc", clazz = TaBonReception.class)
	public BigDecimal getMtTtcCalc() {
		return mtTtcCalc;
	}

	public void setMtTtcCalc(BigDecimal mtTtcCalc) {
		this.mtTtcCalc = LibCalcul.arrondi(mtTtcCalc);
	}

	//@Transient
	@Column(name = "mt_ht_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_ht_calc",table = "ta_bon_reception",champEntite="mtHtCalc", clazz = TaBonReception.class)
	public BigDecimal getMtHtCalc() {
		return mtHtCalc;
	}

	public void setMtHtCalc(BigDecimal mtHtCalc) {
		this.mtHtCalc = LibCalcul.arrondi(mtHtCalc);
	}

	//@Transient
	@Column(name = "mt_tva_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_tva_calc",table = "ta_bon_reception",champEntite="mtTvaCalc", clazz = TaBonReception.class)
	public BigDecimal getMtTvaCalc() {
		return mtTvaCalc;
	}

	public void setMtTvaCalc(BigDecimal mtTvaCalc) {
		this.mtTvaCalc = LibCalcul.arrondi(mtTvaCalc);
	}

	//@Transient
	@Column(name = "net_ttc_calc", precision = 15)
	@LgrHibernateValidated(champBd = "net_ttc_calc",table = "ta_bon_reception",champEntite="netTtcCalc", clazz = TaBonReception.class)
	public BigDecimal getNetTtcCalc() {
		return netTtcCalc;
	}

	public void setNetTtcCalc(BigDecimal netTtcCalc) {
		this.netTtcCalc = LibCalcul.arrondi(netTtcCalc);
	}

	//@Transient
	@Column(name = "net_ht_calc", precision = 15)
	@LgrHibernateValidated(champBd = "net_ht_calc",table = "ta_bon_reception",champEntite="netAPayer", clazz = TaBonReception.class)
	public BigDecimal getNetHtCalc() {
		return netAPayer;
	}

	public void setNetHtCalc(BigDecimal netHtCalc) {
		this.netHtCalc = LibCalcul.arrondi(netHtCalc);
	}

	//@Transient
	@Column(name = "net_tva_calc", precision = 15)
	@LgrHibernateValidated(champBd = "net_tva_calc",table = "ta_bon_reception",champEntite="netTvaCalc", clazz = TaBonReception.class)
	public BigDecimal getNetTvaCalc() {
		return netTvaCalc;
	}

	public void setNetTvaCalc(BigDecimal netTvaCalc) {
		this.netTvaCalc = LibCalcul.arrondi(netTvaCalc);
	}

	//@Transient
	@Column(name = "net_a_payer", precision = 15)
	@LgrHibernateValidated(champBd = "net_a_payer",table = "ta_bon_reception",champEntite="netAPayer", clazz = TaBonReception.class)
	public BigDecimal getNetAPayer() {
		return netAPayer;
	}

	public void setNetAPayer(BigDecimal netAPayer) {
		this.netAPayer = LibCalcul.arrondi(netAPayer);
	}

	public void setLegrain(boolean legrain) {
		this.legrain = legrain;
		for (TaLBonReception ligne : getLignes()) {
			ligne.setLegrain(legrain);
		}
	}
	
//passage ejb => dans TaBonReceptionService
//	
//	public void calculeTvaEtTotaux(){
//		calculTvaTotal();
//		calculTotaux();
//	}
//	
//	/**
//	 * Calcul des totaux de la facture
//	 */
//	public void calculTotaux() {
//		
////			    MT_TVA Numeric(15,2),
//			setMtHtCalc(new BigDecimal(0));
//			setNetHtCalc(new BigDecimal(0));
//			setMtTtcCalc(new BigDecimal(0));
//			setMtTtcAvantRemiseGlobaleCalc(new BigDecimal(0));
//			for (Object ligne : lignes) {
//				if(((TaLBonReception)ligne).getTaTLigne().getCodeTLigne().equals(C_CODE_T_LIGNE_H)) {
//					if(((TaLBonReception)ligne).getMtHtLApresRemiseGlobaleDocument()!=null)
//						setNetHtCalc(getNetHtCalc().add(((TaLBonReception)ligne).getMtHtLApresRemiseGlobaleDocument()));
//					if(((TaLBonReception)ligne).getMtTtcLApresRemiseGlobaleDocument()!=null)
//						setMtTtcCalc(getMtTtcCalc().add(((TaLBonReception)ligne).getMtTtcLApresRemiseGlobaleDocument()));
//					if(((TaLBonReception)ligne).getMtHtLDocument()!=null)
//						setMtHtCalc(getMtHtCalc().add(((TaLBonReception)ligne).getMtHtLDocument()));
//					if(((TaLBonReception)ligne).getMtTtcLDocument()!=null)
//						setMtTtcAvantRemiseGlobaleCalc(getMtTtcAvantRemiseGlobaleCalc().add(((TaLBonReception)ligne).getMtTtcLDocument()));
//				}
//				
//			}
//			
//			setNetTvaCalc(getMtTtcCalc().subtract(getNetHtCalc()));
//			BigDecimal tva = new BigDecimal(0);
//			for (LigneTva ligneTva : lignesTVA) {
//				tva = tva.add(ligneTva.getMtTva());
//			}
//			if(tva.compareTo(getNetTvaCalc())!=0) {
//				logger.error("Montant de la TVA incorrect : "+getNetTvaCalc()+" ** "+tva);
//			}
//			
//			//setNetTtcCalc(getMtTtcCalc().subtract(getMtTtcCalc().multiply(getRemTtcFacture().divide(new BigDecimal(100)))));
//			//setNetTtcCalc(getMtTtcCalc().subtract(getMtTtcCalc().multiply(getTxRemTtcDocument().divide(new BigDecimal(100)))));
//			setNetTtcCalc(getMtTtcCalc().subtract(getMtTtcCalc().multiply(getTxRemTtcDocument().divide(new BigDecimal(100))).setScale(2,BigDecimal.ROUND_HALF_UP)));
//			
//			/*
//			 * remise HT déjà calculée dans dispatcherTva()
//			 */
//			//setRemTtcDocument(getMtTtcCalc().subtract(getNetTtcCalc()));
//			setRemTtcDocument(getMtTtcCalc().subtract(getNetTtcCalc()).setScale(2,BigDecimal.ROUND_HALF_UP));
//			
//			setNetAPayer(getNetTtcCalc());
//			
//			//TODO A Finir ou a supprimer
////			select sum(f.mt_tva_recup) from calcul_tva_direct(:module,:id_document,:taux_r_ht,:ttc) f into :MTNETTVA;
////			tva=:mtnettva;
////			mt_ttc=:totalttc;
////			mt_tva=:mt_ttc-:mt_ht;
////			if (ttc=1) {
////			       txremiseht = taux_r_ht;
////			       mtnetttc=:mt_ttc - (:mt_ttc*(:txremiseht/100));
////			       MTNETHT=:mtnetttc - :MTNETTVA;
////			       remise_ht =  :totalttc - :mtnetttc ;
////			} else {
////			      txremiseht = taux_r_ht;
////			      MTNETHT=:mt_ht-(:mt_ht*(:txremiseht/100));
////			      mtnetttc=:MTNETHT + :MTNETTVA;
////			      remise_ht = mt_ht - mtnetht;
////			}
////			  txremisettc = taux_r_ttc;
////			  remise_ttc = (:mtnetttc * (:txremisettc/100));
////			  mtnetttc = :mtnetttc -:remise_ttc;
////			  netapayer = :mtnetttc - :regle;
//	}
//
//	/**
//	 * Reparti le total chaque code TVA sur l'ensemble des lignes concernées par ce code. 
//	 */
//	public void dispatcherTva() {
//
//		BigDecimal tvaLigne = new BigDecimal(0);
//		BigDecimal totalTemp = new BigDecimal(0);
//
//		for (Object ligne : lignes) {
//			if(((TaLBonReception)ligne).getMtHtLDocument()!=null)
//				totalTemp = totalTemp.add(((TaLBonReception)ligne).getMtHtLDocument());
//		}
//		if(totalTemp!=null && txRemHtDocument!=null)
//			setRemHtDocument(totalTemp.multiply(txRemHtDocument.divide(new BigDecimal(100))).setScale(2,BigDecimal.ROUND_HALF_UP));	
//		
//		for (TaLBonReception ligne : getLignes()) {
//			if(txRemHtDocument!=null && txRemHtDocument.signum()>0 && ligne.getMtHtLDocument()!=null  && ligne.getMtTtcLDocument()!=null) {
//				if(ttc==1){
//					((TaLBonReception)ligne).setMtTtcLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtTtcLDocument().subtract(((TaLBonReception)ligne).getMtTtcLDocument()
//							.multiply(txRemHtDocument).divide(new BigDecimal(100),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP)));
//					((TaLBonReception)ligne).setMtHtLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtTtcLApresRemiseGlobaleDocument());
//					
//				}else{
//					((TaLBonReception)ligne).setMtHtLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtHtLDocument().subtract(((TaLBonReception)ligne).getMtHtLDocument()
//							.multiply(txRemHtDocument).divide(new BigDecimal(100),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP)));
//					((TaLBonReception)ligne).setMtTtcLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtHtLApresRemiseGlobaleDocument());	
//				}
//			}
//		}
//				
//		for (LigneTva ligneTva : lignesTVA) {
//
//			if (ligneTva.getMtTva()!=null) {
//				int lignepasse=1;
//				BigDecimal tvaTmp = ligneTva.getMtTva();
//				BigDecimal ttcTmp = LibCalcul.arrondi(ligneTva.getMontantTotalTtcAvecRemise());
//				BigDecimal htTmp = LibCalcul.arrondi(ligneTva.getMontantTotalHtAvecRemise());
//
//				for (Object ligne : lignes) {
//					if(((TaLBonReception)ligne).getTaTLigne().getCodeTLigne().equals(C_CODE_T_LIGNE_H)) {
//						if(((TaLBonReception)ligne).getCodeTvaLDocument()!=null&&
//								((TaLBonReception)ligne).getCodeTvaLDocument().equals(ligneTva.getCodeTva())){
//							if (ligneTva.getMontantTotalHt().signum()==0) 
//								tvaLigne = ((TaLBonReception)ligne).getMtHtLDocument().multiply(ligneTva.getTauxTva()).divide(new BigDecimal(100));
//							else {
//								if  (lignepasse>= ligneTva.getNbLigneDocument()) 
//									tvaLigne = tvaTmp;
//								else {
//									if(ttc==1){
//										if(LibCalcul.arrondi(ligneTva.getMontantTotalTtcAvecRemise()).signum()<=0)
//											tvaLigne=BigDecimal.valueOf(0);
//										else
//											tvaLigne = (ligneTva.getMtTva().multiply(((TaLBonReception)ligne).getMtTtcLDocument())).divide(LibCalcul.arrondi(ligneTva.getMontantTotalTtcAvecRemise()),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP);
//									}
//									else{
//										if(LibCalcul.arrondi(ligneTva.getMontantTotalHtAvecRemise()).signum()<=0)
//											tvaLigne =BigDecimal.valueOf(0);
//										else
//											tvaLigne = (ligneTva.getMtTva().multiply(((TaLBonReception)ligne).getMtHtLDocument())).divide(LibCalcul.arrondi(ligneTva.getMontantTotalHtAvecRemise()),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP);
//									}
//								}
//							}
//							tvaTmp =  tvaTmp.subtract(tvaLigne);
//							totalTemp = totalTemp.add(((TaLBonReception)ligne).getMtHtLDocument());
//
//							if(txRemHtDocument!=null && txRemHtDocument.signum()>0) {
//								if  (lignepasse>= ligneTva.getNbLigneDocument()) {
//									((TaLBonReception)ligne).setMtHtLApresRemiseGlobaleDocument(htTmp);
//									((TaLBonReception)ligne).setMtTtcLApresRemiseGlobaleDocument(ttcTmp);
//								} else {
//									((TaLBonReception)ligne).setMtHtLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtHtLDocument().subtract(((TaLBonReception)ligne).getMtHtLDocument().multiply(txRemHtDocument).divide(new BigDecimal(100),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP)));
//									((TaLBonReception)ligne).setMtTtcLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtTtcLDocument().subtract(((TaLBonReception)ligne).getMtTtcLDocument().multiply(txRemHtDocument).divide(new BigDecimal(100),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP)));
//								}
////								ttcTmp =  ttcTmp.subtract(((TaLBonReception)ligne).getMtTtcLFacture());
////								htTmp =  htTmp.subtract(((TaLBonReception)ligne).getMtHtLFacture());
//							} else {
//								if(ttc==1)
//									if  (lignepasse>= ligneTva.getNbLigneDocument()) {
//										((TaLBonReception)ligne).setMtHtLApresRemiseGlobaleDocument(htTmp);
//									}else{
//										((TaLBonReception)ligne).setMtHtLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtTtcLDocument().subtract(tvaLigne));
//									}
//								else
//									if  (lignepasse>= ligneTva.getNbLigneDocument()) {
//										((TaLBonReception)ligne).setMtTtcLApresRemiseGlobaleDocument(ttcTmp);
//									}else {
//										((TaLBonReception)ligne).setMtTtcLApresRemiseGlobaleDocument(((TaLBonReception)ligne).getMtHtLDocument().add(tvaLigne));
//									}
//
//							}
//							ttcTmp =  ttcTmp.subtract(((TaLBonReception)ligne).getMtTtcLApresRemiseGlobaleDocument());
//							htTmp =  htTmp.subtract(((TaLBonReception)ligne).getMtHtLApresRemiseGlobaleDocument());
//
//							lignepasse++;
//						}
//					}
//					setRemHtDocument(totalTemp.multiply(txRemHtDocument.divide(new BigDecimal(100))));						
//
////					setRemHtDocument(getRemHtDocument().add(totalTemp.multiply(txRemHtDocument.divide(new BigDecimal(100)))));						
//
//				}
//			}
//		}
////		}
//
//	}
//	
//	/**
//	 * Lance la fonction de calcul du montant sur chacunes des lignes du document.
//	 */
//	public void calculMontantLigneDocument() {
//		for (Object ligne : lignes) {
//			((TaLBonReception)ligne).calculMontant();
//		}
//	}
//	
//	/**
//	 * Calcul de la grille de TVA en fonction de lignes du document et du taux de remise HT global.
//	 * Mise à jour de la propriété <code>lignesTVA</code>
//	 * et mise à jour du montant de la TVA dans les lignes du document
//	 */
//	public void calculTvaTotal() {
//		calculMontantLigneDocument();
//		calculLignesTva();
//		dispatcherTva();
//	}
//	
//	/**
//	 * Calcul de la grille de TVA en fonction de lignes du document et du taux de remise HT global.
//	 * Mise à jour de la propriété <code>lignesTVA</code>
//	 */
//	public void calculLignesTva() {
//
//		Map<String,BigDecimal> montantTotalHt = new HashMap<String,BigDecimal>();
//		Map<String,BigDecimal> montantTotalTtc = new HashMap<String,BigDecimal>();
//		Map<String,BigDecimal> montantTotalHtAvecRemise = new HashMap<String,BigDecimal>();
//		Map<String,BigDecimal> montantTotalTtcAvecRemise = new HashMap<String,BigDecimal>();
//		Map<String,BigDecimal> mtTVA = new HashMap<String,BigDecimal>();
//		Map<String,BigDecimal> tauxTVA = new HashMap<String,BigDecimal>();
//		Map<String,Integer> nbLigne = new HashMap<String,Integer>();
//		String codeTVA = null;
//		TaTvaDAO taTvaDAO = new TaTvaDAO();
//		
//		/*
//		 * calcul de la TVA different en fonction de la propriete TTC
//		 */
//		BigDecimal ttcLigne = null;
//		BigDecimal htLigne = null;
//		for (Object ligne : lignes) {
//			//en commentaire pour ne pas refaire les calculs pendants les editions, 
//			//((TaLBonReception)ligne).calculMontant();
//			codeTVA = ((TaLBonReception)ligne).getCodeTvaLDocument();
//			if(codeTVA!=null && !codeTVA.equals("")) {
//				ttcLigne = ((TaLBonReception)ligne).getMtTtcLDocument();
//				htLigne = ((TaLBonReception)ligne).getMtHtLDocument();
//				if(montantTotalHt.containsKey(codeTVA)) {
//					montantTotalTtc.put(codeTVA,montantTotalTtc.get(codeTVA).add(ttcLigne));
//					montantTotalHt.put(codeTVA,montantTotalHt.get(codeTVA).add(htLigne));
//					montantTotalTtcAvecRemise.put(codeTVA,montantTotalTtcAvecRemise.get(codeTVA).add(ttcLigne));
//					montantTotalHtAvecRemise.put(codeTVA,montantTotalHtAvecRemise.get(codeTVA).add(htLigne));
//					nbLigne.put(codeTVA,nbLigne.get(codeTVA)+1);
//				} else {
//					montantTotalTtc.put(codeTVA,ttcLigne);
//					montantTotalHt.put(codeTVA,htLigne);
//					montantTotalTtcAvecRemise.put(codeTVA,ttcLigne);
//					montantTotalHtAvecRemise.put(codeTVA,htLigne);
//					tauxTVA.put(codeTVA,((TaLBonReception)ligne).getTauxTvaLDocument());
//					nbLigne.put(codeTVA,1);
//				}
//			}
//		}
//
//		for (String codeTva : montantTotalTtc.keySet()) {
//			//les 2 maps ont les meme cles
//			BigDecimal mtTtcTotal = montantTotalTtc.get(codeTva);
//			BigDecimal mtHtTotal = montantTotalHt.get(codeTva);
//			BigDecimal tva =null;
//			if(txRemHtDocument!=null && txRemHtDocument.signum()>0) {
////				mtTtcTotal =LibCalcul.arrondi(mtTtcTotal.subtract(     mtTtcTotal.multiply(   txRemHtDocument.divide(new BigDecimal(100))  )       ));
////				mtHtTotal = LibCalcul.arrondi(mtHtTotal.subtract(    mtHtTotal.multiply( (txRemHtDocument.divide(new BigDecimal(100))))     ) ) ;
//				BigDecimal valeurInterTTC=mtTtcTotal.multiply(   txRemHtDocument.divide(new BigDecimal(100)),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP);
//				mtTtcTotal =LibCalcul.arrondi(mtTtcTotal.subtract(valeurInterTTC )) ;
//				BigDecimal valeurInterHT=mtHtTotal.multiply( txRemHtDocument.divide(new BigDecimal(100)),MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP);
//				mtHtTotal = LibCalcul.arrondi(mtHtTotal.subtract( valeurInterHT )) ;
//				montantTotalTtcAvecRemise.put(codeTva, mtTtcTotal);
//				montantTotalHtAvecRemise.put(codeTva, mtHtTotal);
//			} 
//
//			if (ttc==1) {
//				tva=mtTtcTotal.subtract((mtTtcTotal.multiply(BigDecimal.valueOf(100))) .divide((BigDecimal.valueOf(100).add(tauxTVA.get(codeTva))) ,MathContext.DECIMAL128).setScale(2,BigDecimal.ROUND_HALF_UP)     ) ;
//				mtTVA.put(codeTva, tva);
//				montantTotalHtAvecRemise.put(codeTva, mtTtcTotal.subtract(tva));
//			} else {
//				tva=mtHtTotal.multiply(   (tauxTVA.get(codeTva).divide(new BigDecimal(100)))) ;
//				mtTVA.put(codeTva, tva );
//				montantTotalTtcAvecRemise.put(codeTva, mtHtTotal.add(tva));
//			}
//		}
//
//		lignesTVA.clear();
//		for (String codeTva : mtTVA.keySet()) {
//			LigneTva ligneTva = new LigneTva();
//			ligneTva.setCodeTva(codeTva);
//			ligneTva.setTauxTva(tauxTVA.get(codeTva));
//			ligneTva.setMtTva(mtTVA.get(codeTva));
//			ligneTva.setMontantTotalHt(montantTotalHt.get(codeTva));
//			ligneTva.setMontantTotalTtc(montantTotalTtc.get(codeTva));
//			ligneTva.setMontantTotalHtAvecRemise(montantTotalHtAvecRemise.get(codeTva));
//			ligneTva.setMontantTotalTtcAvecRemise(montantTotalTtcAvecRemise.get(codeTva));
//			ligneTva.setLibelle(taTvaDAO.findByCode(codeTva).getLibelleTva());
//			ligneTva.setNbLigneDocument(nbLigne.get(codeTva));
//			lignesTVA.add(ligneTva);
//		}
//		
//		//dispatcherTva();
//	}

	//@Transient
	@Column(name = "mt_ttc_avt_rem_globale_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_ttc_avt_rem_globale_calc",table = "ta_bon_reception",champEntite="mtTtcAvantRemiseGlobaleCalc", clazz = TaBonReception.class)
	public BigDecimal getMtTtcAvantRemiseGlobaleCalc() {
		return mtTtcAvantRemiseGlobaleCalc;
	}

	public void setMtTtcAvantRemiseGlobaleCalc(
			BigDecimal mtTtcAvantRemiseGlobaleCalc) {
		this.mtTtcAvantRemiseGlobaleCalc = mtTtcAvantRemiseGlobaleCalc;
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((codeDocument == null) ? 0 : codeDocument.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TaBonReception other = (TaBonReception) obj;
		if (codeDocument == null) {
			if (other.codeDocument != null)
				return false;
		} else if (!codeDocument.equals(other.codeDocument))
			return false;
		if (commentaire == null) {
			if (other.commentaire != null)
				return false;
		} else if (!commentaire.equals(other.commentaire))
			return false;
		if (dateDocument == null) {
			if (other.dateDocument != null)
				return false;
		} else if (!dateDocument.equals(other.dateDocument))
			return false;
		if (dateLivDocument == null) {
			if (other.dateLivDocument != null)
				return false;
		} else if (!dateLivDocument.equals(other.dateLivDocument))
			return false;
		if (gestionTVA != other.gestionTVA)
			return false;
		if (ipAcces == null) {
			if (other.ipAcces != null)
				return false;
		} else if (!ipAcces.equals(other.ipAcces))
			return false;
		if (legrain != other.legrain)
			return false;
		if (libelleDocument == null) {
			if (other.libelleDocument != null)
				return false;
		} else if (!libelleDocument.equals(other.libelleDocument))
			return false;
		if (lignesTVA == null) {
			if (other.lignesTVA != null)
				return false;
		} else if (!lignesTVA.equals(other.lignesTVA))
			return false;
		if (mtHtCalc == null) {
			if (other.mtHtCalc != null)
				return false;
		} else if (!mtHtCalc.equals(other.mtHtCalc))
			return false;
		if (mtTtcAvantRemiseGlobaleCalc == null) {
			if (other.mtTtcAvantRemiseGlobaleCalc != null)
				return false;
		} else if (!mtTtcAvantRemiseGlobaleCalc
				.equals(other.mtTtcAvantRemiseGlobaleCalc))
			return false;
		if (mtTtcCalc == null) {
			if (other.mtTtcCalc != null)
				return false;
		} else if (!mtTtcCalc.equals(other.mtTtcCalc))
			return false;
		if (mtTvaCalc == null) {
			if (other.mtTvaCalc != null)
				return false;
		} else if (!mtTvaCalc.equals(other.mtTvaCalc))
			return false;
		if (nbEDocument == null) {
			if (other.nbEDocument != null)
				return false;
		} else if (!nbEDocument.equals(other.nbEDocument))
			return false;
		if (netAPayer == null) {
			if (other.netAPayer != null)
				return false;
		} else if (!netAPayer.equals(other.netAPayer))
			return false;
		if (netHtCalc == null) {
			if (other.netHtCalc != null)
				return false;
		} else if (!netHtCalc.equals(other.netHtCalc))
			return false;
		if (netTtcCalc == null) {
			if (other.netTtcCalc != null)
				return false;
		} else if (!netTtcCalc.equals(other.netTtcCalc))
			return false;
		if (netTvaCalc == null) {
			if (other.netTvaCalc != null)
				return false;
		} else if (!netTvaCalc.equals(other.netTvaCalc))
			return false;
		if (quandCree == null) {
			if (other.quandCree != null)
				return false;
		} else if (!quandCree.equals(other.quandCree))
			return false;
		if (quandModif == null) {
			if (other.quandModif != null)
				return false;
		} else if (!quandModif.equals(other.quandModif))
			return false;
		if (quiCree == null) {
			if (other.quiCree != null)
				return false;
		} else if (!quiCree.equals(other.quiCree))
			return false;
		if (quiModif == null) {
			if (other.quiModif != null)
				return false;
		} else if (!quiModif.equals(other.quiModif))
			return false;
		if (remHtDocument == null) {
			if (other.remHtDocument != null)
				return false;
		} else if (!remHtDocument.equals(other.remHtDocument))
			return false;
		if (remTtcDocument == null) {
			if (other.remTtcDocument != null)
				return false;
		} else if (!remTtcDocument.equals(other.remTtcDocument))
			return false;
		if (taInfosDocument == null) {
			if (other.taInfosDocument != null)
				return false;
		} else if (!taInfosDocument.equals(other.taInfosDocument))
			return false;
		if (taRDocuments == null) {
			if (other.taRDocuments != null)
				return false;
		} else if (!taRDocuments.equals(other.taRDocuments))
			return false;
		if (taTPaiement == null) {
			if (other.taTPaiement != null)
				return false;
		} else if (!taTPaiement.equals(other.taTPaiement))
			return false;
		if (taTiers == null) {
			if (other.taTiers != null)
				return false;
		} else if (!taTiers.equals(other.taTiers))
			return false;
		if (ttc == null) {
			if (other.ttc != null)
				return false;
		} else if (!ttc.equals(other.ttc))
			return false;
		if (txRemHtDocument == null) {
			if (other.txRemHtDocument != null)
				return false;
		} else if (!txRemHtDocument.equals(other.txRemHtDocument))
			return false;
		if (txRemTtcDocument == null) {
			if (other.txRemTtcDocument != null)
				return false;
		} else if (!txRemTtcDocument.equals(other.txRemTtcDocument))
			return false;
		if (version == null) {
			if (other.version != null)
				return false;
		} else if (!version.equals(other.version))
			return false;
		return true;
	}
	@Transient
	public boolean isGestionTVA() {
		return gestionTVA;
	}
	public void setGestionTVA(boolean gestionTVA) {
		this.gestionTVA = gestionTVA;
	}
	@Transient
	public BigDecimal getRemTtcIntermediaireDocument() {
		return mtTtcAvantRemiseGlobaleCalc.subtract(mtTtcCalc);
	}
	
	@Override
	@Transient
	public String getTypeDocument() {
		// TODO Auto-generated method stub
		return TYPE_DOC;
	}
	
	public void calculDateEcheanceAbstract(Integer report, Integer finDeMois){
//		calculDateEcheance(report,finDeMois);
	}
//	@Override
//	@Transient
//	public Integer getExport() {
//		// TODO Auto-generated method stub
//		return null;
//	}
//	@Override
//	@Transient
//	public void setExport(Integer export) {
//		// TODO Auto-generated method stub
//		
//	}
	
	
//	public Date calculDateEcheance(Integer report, Integer finDeMois) {
//		TaTCPaiementDAO taTCPaiementDAO = new TaTCPaiementDAO();
//		TaTCPaiement typeCP = taTCPaiementDAO.findByCode(TaTCPaiement.C_CODE_TYPE_BON_LIVRAISON);
//		TaCPaiement conditionDoc = null;
//		TaCPaiement conditionTiers = null;
//		TaCPaiement conditionSaisie = null;
//		
//		if(typeCP!=null) conditionDoc = typeCP.getTaCPaiement();
//		if(getTaTiers()!=null) conditionTiers = getTaTiers().getTaCPaiement();
//
//		if(report!=null || finDeMois!=null) { 
//			conditionSaisie = new TaCPaiement();
//			if(report!=null)
//				conditionSaisie.setReportCPaiement(report);
//			if(finDeMois!=null)
//				conditionSaisie.setFinMoisCPaiement(finDeMois);
//		}
//		
//		//on applique toute les conditions par ordre décroissant de priorité, la derniere valide est conservée
//		Date nouvelleDate = null;
//		if(conditionDoc!=null) {
//			nouvelleDate = conditionDoc.calculeNouvelleDate(getDateDocument());
//		}
//		if(conditionTiers!=null) {
//			nouvelleDate = conditionTiers.calculeNouvelleDate(getDateDocument());
//		}
//		if(conditionSaisie!=null) {
//			nouvelleDate = conditionSaisie.calculeNouvelleDate(getDateDocument());
//		}
//		setDateEchDocument(nouvelleDate);
//		return nouvelleDate;
//	}
	
	@Transient
	public BigDecimal getRegleCompletDocument() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public BigDecimal getResteAReglerComplet() {
		// TODO Auto-generated method stub
		return null;
	}	
	@Transient
	public List<ILigneDocumentTiers> getLignesGeneral(){
		return this.lignes;
	}

	@Transient
	public boolean isLegrain() {
		// TODO Auto-generated method stub
		return legrain;
	}
	
	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL ,orphanRemoval=true , mappedBy ="taBonReception")
	//Attention si FetchType.EAGER => à cause d'autre EAGER, génère des outter join et duplique les lignes,
	//si EAGER il faut donc gérer ce problème ou remplacer la List des lignes par un Set
	@JoinColumn(name = "id_gr_mouv_stock")
//	@Fetch(FetchMode.SUBSELECT)
	@LgrHibernateValidated(champBd = "id_gr_mouvement_stock",table = "ta_gr_mouv_stock",champEntite="TaGrMouvStock.idGrMouvStock", clazz = TaGrMouvStock.class)
	public TaGrMouvStock getTaGrMouvStock() {
		return taGrMouvStock;
	}
	public void setTaGrMouvStock(TaGrMouvStock taGrMouvStock) {
		this.taGrMouvStock = taGrMouvStock;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_t_reception")
	@LgrHibernateValidated(champBd = "id_t_reception",table = "ta_t_reception",champEntite="TaTReception.idTReception", clazz = TaTReception.class)
	public TaTReception getTaTReception() {
		return taTReception;
	}
	public void setTaTReception(TaTReception taTReception) {
		this.taTReception = taTReception;
	}
	
	@Override
	@JsonIgnore
	public void setTaInfosDocument(IInfosDocumentTiers infosDocumentTiers) {
		this.taInfosDocument =  (TaInfosBonReception) infosDocumentTiers;
		
	}
		@Temporal(TemporalType.TIME)
	@Column(name = "heure_document")
	@LgrHibernateValidated(champBd = "heure_document",table = "ta_bon_reception",champEntite="heureDocument", clazz = TaBonReception.class)
	public Date getHeureDocument() {
		return heureDocument;
	}
	public void setHeureDocument(Date heureDocument) {
		this.heureDocument = heureDocument;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_tiers_prestation_service")
	@LgrHibernateValidated(champBd = "id_tiers_prestation_service",table = "ta_tiers", champEntite="taTiers.idTiers", clazz = TaTiers.class)
	public TaTiers getTaTiersPrestationService() {
		return taTiersPrestationService;
	}
	public void setTaTiersPrestationService(TaTiers taTiersPrestationService) {
		this.taTiersPrestationService = taTiersPrestationService;
	}
	
	@Override
	public void calculeTvaEtTotaux() {
		// TODO Auto-generated method stub
		
	}
	
	@Fetch(FetchMode.SELECT)
	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "ta_r_label_reception",
			joinColumns = {@JoinColumn(name = "id_reception")},inverseJoinColumns = {@JoinColumn(name = "id_label_article")})
	public List<TaLabelArticle> getTaLabelArticles(){
		return this.taLabelArticles;
	}

	public void setTaLabelArticles(List<TaLabelArticle> taLabelArticles) {
		this.taLabelArticles = taLabelArticles;
	}
	
	
//	@ManyToOne(fetch = FetchType.EAGER)
//	@JoinColumn(name = "id_etat")
//	@LgrHibernateValidated(champBd = "id_etat",table = "ta_etat",champEntite="TaEtat.idEtat", clazz = TaEtat.class)
//	public TaEtat getTaEtat() {
//		return this.taEtat;
//	}
//
//	public void setTaEtat(TaEtat taEtat) {
//		this.taEtat = taEtat;
//	}
	
	@Column(name = "date_verrouillage")
	public Date getDateVerrouillage() {
		return dateVerrouillage;
	}

	public void setDateVerrouillage(Date dateVerrouillage) {
		this.dateVerrouillage=dateVerrouillage;
	}
	
	
	@Transient
	public TaMiseADisposition getTaMiseADisposition() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setTaMiseADisposition(TaMiseADisposition taMiseADisposition) {
		// TODO Auto-generated method stub
		
	}
	@Transient
	public Date getDateExport() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setDateExport(Date dateExport) {
		// TODO Auto-generated method stub
		
	}
	
	@Column(name = "gestion_lot")
	public Boolean getGestionLot() {
		return gestionLot;
	}
	public void setGestionLot(Boolean gestionLot) {
		this.gestionLot = gestionLot;
	}


	
	
	@Column(name = "nb_decimales_qte")
	public Integer getNbDecimalesQte() {
		return nbDecimalesQte;
	}

	public void setNbDecimalesQte(Integer nbDecimalesQte) {
		this.nbDecimalesQte = nbDecimalesQte;
	}

	
	@Transient
	public Integer getNbDecimalesPrix() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setNbDecimalesPrix(Integer nbDecimalesPrix) {
		// TODO Auto-generated method stub
		
	}

	public void addREtat(TaEtat taEtat) {
		TaHistREtat hist=new TaHistREtat();
		TaREtat rEtat=getTaREtat();
		if(rEtat!=null) {
			hist.setTaEtat(getTaREtat().getTaEtat());
			hist.setTaBonReception(this);
			this.getTaHistREtats().add(hist);
		}else rEtat=new TaREtat();
		
		rEtat.setTaEtat(taEtat);
		rEtat.setTaBonReception(this);
		this.setTaREtat(rEtat);
		this.getTaREtats().add(rEtat);
	}

	
	@Transient
	public TaEtat getTaEtat() {
		return this.taEtat;
	}

	@Transient
	public void setTaEtat(TaEtat taEtat) {
//		this.taEtat = taEtat;
	}
	@Override
	public Boolean gereStock() {
		// TODO Auto-generated method stub
		return this.getTaGrMouvStock()!=null;
	}
	
	
	
	
	@OneToMany(cascade = CascadeType.ALL,fetch = FetchType.LAZY, mappedBy = "taBonReception", orphanRemoval=true)
	public Set<TaRReglementLiaison> getTaRReglementLiaisons() {
		return taRReglementLiaisons;
	}

	public void setTaRReglementLiaisons(Set<TaRReglementLiaison> taRReglementLiaisons) {
		this.taRReglementLiaisons = taRReglementLiaisons;
	}

	
	public void addRReglementLiaison(TaRReglementLiaison taReglementLiaison){
		if(!this.getTaRReglementLiaisons().contains(taReglementLiaison)){
			taReglementLiaison.setTaBonReception(this);
			this.getTaRReglementLiaisons().add(taReglementLiaison);	
		}
	}
	public void removeReglementLiaison(TaRReglementLiaison taRReglementLiaison){
		this.getTaRReglementLiaisons().remove(taRReglementLiaison);
	}
	@Transient
	public String getNumeroCommandeFournisseur() {
		// TODO Auto-generated method stub
		return null;
	}
	

	@Column(name = "utilise_unite_saisie")
	public Boolean getUtiliseUniteSaisie() {
		return utiliseUniteSaisie;
	}

	public void setUtiliseUniteSaisie(Boolean utiliseUniteSaisie) {
		this.utiliseUniteSaisie = utiliseUniteSaisie;
	}
}
