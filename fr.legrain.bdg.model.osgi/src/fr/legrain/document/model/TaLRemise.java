package fr.legrain.document.model;

// Generated Mar 24, 2009 4:44:04 PM by Hibernate Tools 3.2.0.CR1

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaTRemise generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "ta_l_remise")
@NamedQueries(value = { 
		@NamedQuery(name=TaLRemise.QN.FIND_ALL_BY_REMISE, query="select new fr.legrain.document.dto.TaLRemiseDTO("
				+ "r.idDocument, r.codeDocument, r.libelleDocument, r.dateDocument, t.codeTiers,t.nomTiers, tp.codeTPaiement, r.netTtcCalc, cp.nomBanque, cp.compte,"
				+ "cp.idCompteBanque,cp.iban,cp.codeBIC) "
				+ " from TaLRemise lf join lf.taDocument f join lf.taReglement r join r.taTiers t  left join r.taTPaiement tp left join r.taCompteBanque cp "
				+ " where f.codeDocument=:codeDoc  order by f.idDocument")		
})
public class TaLRemise implements java.io.Serializable {

	private static final long serialVersionUID = 8025555331515406829L;
	
	public static class QN {
		public static final String FIND_ALL_BY_REMISE = "TaLRemise.findAllByRemise";
	}
	
	private int idLDocument;
	private TaRemise taDocument;
	private TaReglement taReglement;
//	private TaAcompte taAcompte;
	private Integer etat = 0;
//	private Integer export = 0;	
	private String quiCree;
	private Date quandCree;
	private String quiModif;
	private Date quandModif;
	private String ipAcces;
	private Integer versionObj;
	private String version;
	private Date dateExport;
	
//	@Transient
//	private BigDecimal montantRegle = new BigDecimal(0);

	
	@Transient
	private Boolean accepte=true;
	@Transient
	private String codeDocument;
	@Transient
	private String typeDocument;

	public TaLRemise() {
	}

	public TaLRemise(int idLDocument) {
		this.idLDocument = idLDocument;
	}


	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id_l_document", unique = true, nullable = false)
	public int getIdLDocument() {
		return this.idLDocument;
	}

	public void setIdLDocument(int idLDocument) {
		this.idLDocument = idLDocument;
	}

	@Column(name = "version", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
	@JoinColumn(name = "id_document")
	@LgrHibernateValidated(champBd = "id_document",table = "ta_remise", champEntite="taDocument.idDocument", clazz = TaRemise.class)
	public TaRemise getTaDocument() {
		return taDocument;
	}

	public void setTaDocument(TaRemise taDocument) {
		this.taDocument = taDocument;
	}

//	@Column(name = "montant_regle", precision = 15)
//	@LgrHibernateValidated(champ = "montant_regle",table = "ta_l_remise",clazz = TaLRemise.class)
//	public BigDecimal getMontantRegle() {
//		return montantRegle;
//	}
//
//	public void setMontantRegle(BigDecimal montantRegle) {
//		this.montantRegle = montantRegle;
//	}
	
	@Column(name = "etat")
	@LgrHibernateValidated(champBd = "etat",table = "ta_l_remise", champEntite="etat", clazz = TaLRemise.class)
	public Integer getEtat() {
		return etat;
	}

	public void setEtat(Integer etat) {
		this.etat = etat;
	}
	
//	@Column(name = "export")
//	@LgrHibernateValidated(champBd = "export",table = "ta_l_remise", champEntite="etat", clazz = TaLRemise.class)
//	public Integer getExport() {
//		return export;
//	}
//
//	public void setExport(Integer export) {
//		this.export = export;
//	}
	
	@Column(name = "qui_cree", length = 50)
	public String getQuiCree() {
		return this.quiCree;
	}

	public void setQuiCree(String quiCree) {
		this.quiCree = quiCree;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_cree", length = 19)
	public Date getQuandCree() {
		return this.quandCree;
	}

	public void setQuandCree(Date quandCreeTRemise) {
		this.quandCree = quandCreeTRemise;
	}

	@Column(name = "qui_modif", length = 50)
	public String getQuiModif() {
		return this.quiModif;
	}

	public void setQuiModif(String quiModifTRemise) {
		this.quiModif = quiModifTRemise;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_modif", length = 19)
	public Date getQuandModif() {
		return this.quandModif;
	}

	public void setQuandModif(Date quandModifTRemise) {
		this.quandModif = quandModifTRemise;
	}

	@Column(name = "ip_acces", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}

	@Version
	@Column(name = "version_obj")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}

	@Transient
	public Boolean getAccepte() {
		return accepte;
	}

	public void setAccepte(Boolean accepte) {
		this.accepte = accepte;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)

	@JoinColumn(name = "id_reglement")
	@LgrHibernateValidated(champBd = "id_reglement",table = "ta_reglement", champEntite="taReglement.idDocument", clazz = TaReglement.class)
	public TaReglement getTaReglement() {
		if(this.taReglement!=null){
			setTypeDocument(TaReglement.TYPE_DOC);
			setCodeDocument(taReglement.getCodeDocument());
		}
		return this.taReglement;
	}

	public void setTaReglement(TaReglement taReglement) {
		this.taReglement = taReglement;
		if(this.taReglement!=null){
			setTypeDocument(TaReglement.TYPE_DOC);
			setCodeDocument(taReglement.getCodeDocument());
		}
	}
	
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "id_acompte")
//	@LgrHibernateValidated(champBd = "id_acompte",table = "ta_acompte", champEntite="taAcompte.idDocument", clazz = TaApporteur.class)
//	public TaAcompte getTaAcompte() {
//		if(this.taAcompte!=null){
//			setTypeDocument(TaAcompte.TYPE_DOC);
//			setCodeDocument(taAcompte.getCodeDocument());
//		}
//		return this.taAcompte;
//	}
//
//	public void setTaAcompte(TaAcompte taAcompte) {		
//		this.taAcompte = taAcompte;
//		if(this.taAcompte!=null){
//			setTypeDocument(TaAcompte.TYPE_DOC);
//			setCodeDocument(taAcompte.getCodeDocument());
//		}
//	}

	@Transient
	public String getCodeDocument() {
		return this.codeDocument;
	}
	@Transient
	public void setCodeDocument(String codeFacture) {
		this.codeDocument = codeFacture;
	}

	@Transient
	public String getTypeDocument() {
		return typeDocument;
	}

	@Transient
	public void setTypeDocument(String typeDocument) {
		this.typeDocument=typeDocument;
	}

//	@PreUpdate
	public void verifUpdate() throws Exception{
		if(this.typeDocument==TaAcompte.TYPE_DOC){
			
		}
		
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_export")
	public Date getDateExport() {
		return dateExport;
	}

	public void setDateExport(Date dateExport) {
		this.dateExport = dateExport;
	}
	
}
