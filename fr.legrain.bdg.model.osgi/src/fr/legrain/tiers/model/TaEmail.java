package fr.legrain.tiers.model;

// Generated Mar 24, 2009 4:44:04 PM by Hibernate Tools 3.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlElement;

import org.apache.log4j.Logger;
import org.eclipse.persistence.oxm.annotations.XmlInverseReference;

import fr.legrain.general.model.TaObjetLgr;
import fr.legrain.tiers.model.TaTEmail;
import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaEmail generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "ta_email")
//@SequenceGenerator(name = "gen_email", sequenceName = "num_id_email", allocationSize = 1)
@NamedQueries(value = { 
		@NamedQuery(name=TaEmail.QN.FIND_BY_IMPORT, query="select a from TaEmail a where a.origineImport = :origineImport and a.idImport = :idImport"),
		@NamedQuery(name=TaEmail.QN.FIND_ALL_LIGHT, query="select new fr.legrain.tiers.dto.TaEmailDTO(a.idEmail, a.adresseEmail, t.codeTiers, t.nomTiers, t.prenomTiers, e.nomEntreprise, ty.codeTEmail, a.commCommercialEmail, a.commAdministratifEmail, t.idTiers) from TaEmail a left join a.taTiers t left join a.taTEmail ty left join t.taEntreprise e")
		})
public class TaEmail extends TaObjetLgr   implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 204792088848227084L;

	@Transient
	static Logger logger = Logger.getLogger(TaEmail.class.getName());
	
	public static class QN {
		public static final String FIND_BY_IMPORT = "TaEmail.findByImport";
		public static final String FIND_ALL_LIGHT = "TaEmail.findAllLight";
	}

	private int idEmail;
//	private String version;
	private TaTEmail taTEmail;
	private TaTiers taTiers;
	private String adresseEmail;
	private Integer commCommercialEmail;
	private Integer commAdministratifEmail;
//	private String quiCree;
//	private Date quandCree;
//	private String quiModif;
//	private Date quandModif;
	private String idImport;
	private String origineImport;
//	private String ipAcces;
	private Integer versionObj;
//	private Set<TaTiers> taTierses = new HashSet<TaTiers>(0);

	public TaEmail() {
	}

	public TaEmail(int idEmail) {
		this.idEmail = idEmail;
	}

	public TaEmail(int idEmail, TaTEmail taTEmail, TaTiers taTiers,
			String adresseEmail, String quiCreeEmail, Date quandCreeEmail,
			String quiModifEmail, Date quandModifEmail, String ipAcces,
			Integer versionObj, Set<TaTiers> taTierses) {
		this.idEmail = idEmail;
		this.taTEmail = taTEmail;
		this.taTiers = taTiers;
		this.adresseEmail = adresseEmail;
		this.quiCree = quiCreeEmail;
		this.quandCree = quandCreeEmail;
		this.quiModif = quiModifEmail;
		this.quandModif = quandModifEmail;
		this.ipAcces = ipAcces;
		this.versionObj = versionObj;
//		this.taTierses = taTierses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id_email", unique = true, nullable = false)
	@LgrHibernateValidated(champBd = "id_email",table = "ta_email",champEntite="idEmail", clazz = TaEmail.class)
	public int getIdEmail() {
		return this.idEmail;
	}

	public void setIdEmail(int idEmail) {
		this.idEmail = idEmail;
	}

//	@Column(name = "version", length = 20)
//	public String getVersion() {
//		return this.version;
//	}
//
//	public void setVersion(String version) {
//		this.version = version;
//	}

//	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH})
	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.REFRESH})
	@JoinColumn(name = "id_t_email")
	@LgrHibernateValidated(champBd = "id_t_email",table = "ta_t_email",champEntite="idTEmail",clazz = TaTEmail.class)
	public TaTEmail getTaTEmail() {
		return this.taTEmail;
	}

	public void setTaTEmail(TaTEmail taTEmail) {
		this.taTEmail = taTEmail;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
	@JoinColumn(name = "id_tiers")
	@LgrHibernateValidated(champBd = "id_tiers",table = "ta_tiers",champEntite="idTiers",clazz = TaTiers.class)
	@XmlElement
	@XmlInverseReference(mappedBy="taEmails")
	public TaTiers getTaTiers() {
		return this.taTiers;
	}

	public void setTaTiers(TaTiers taTiers) {
		this.taTiers = taTiers;
	}

	@Column(name = "adresse_email")
	@LgrHibernateValidated(champBd = "adresse_email",table = "ta_email",champEntite="adresseEmail",clazz = TaEmail.class)
	public String getAdresseEmail() {
		return this.adresseEmail;
	}

	public void setAdresseEmail(String adresseEmail) {
		this.adresseEmail = adresseEmail;
	}
	
	@Column(name = "comm_commercial")
	@LgrHibernateValidated(champBd = "comm_commercial",table = "ta_email",champEntite="commCommercialEmail",clazz = TaEmail.class)
	public Integer getCommCommercialEmail() {
		return this.commCommercialEmail;
	}

	public void setCommCommercialEmail(Integer commCommercialTelephone) {
		this.commCommercialEmail = commCommercialTelephone;
	}
	
	@Column(name = "comm_administratif")
	@LgrHibernateValidated(champBd = "comm_administratif",table = "ta_email",champEntite="commAdministratifEmail",clazz = TaEmail.class)
	public Integer getCommAdministratifEmail() {
		return this.commAdministratifEmail;
	}

	public void setCommAdministratifEmail(Integer commAdministratifTelephone) {
		this.commAdministratifEmail = commAdministratifTelephone;
	}

//	@Column(name = "qui_cree", length = 50)
//	public String getQuiCree() {
//		return this.quiCree;
//	}
//
//	public void setQuiCree(String quiCreeEmail) {
//		this.quiCree = quiCreeEmail;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_cree", length = 19)
//	public Date getQuandCree() {
//		return this.quandCree;
//	}
//
//	public void setQuandCree(Date quandCreeEmail) {
//		this.quandCree = quandCreeEmail;
//	}
//
//	@Column(name = "qui_modif", length = 50)
//	public String getQuiModif() {
//		return this.quiModif;
//	}
//
//	public void setQuiModif(String quiModifEmail) {
//		this.quiModif = quiModifEmail;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_modif", length = 19)
//	public Date getQuandModif() {
//		return this.quandModif;
//	}
//
//	public void setQuandModif(Date quandModifEmail) {
//		this.quandModif = quandModifEmail;
//	}
	
	@Column(name = "origine_import", length = 100)
	@LgrHibernateValidated(champBd = "origine_import",table = "ta_email",champEntite="origineImport",clazz = TaEmail.class)
	public String getOrigineImport() {
		return this.origineImport;
	}

	public void setOrigineImport(String origineImport) {
		this.origineImport = origineImport;
	}
	
	@Column(name = "id_import", length = 100)
	@LgrHibernateValidated(champBd = "id_import",table = "ta_email",champEntite="idImport",clazz = TaEmail.class)
	public String getIdImport() {
		return this.idImport;
	}

	public void setIdImport(String idImport) {
		this.idImport = idImport;
	}

//	@Column(name = "ip_acces", length = 50)
//	public String getIpAcces() {
//		return this.ipAcces;
//	}
//
//	public void setIpAcces(String ipAcces) {
//		this.ipAcces = ipAcces;
//	}

	@Version
	@Column(name = "version_obj")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}

//	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch = FetchType.EAGER, mappedBy = "taEmail")
//	public Set<TaTiers> getTaTierses() {
//		return this.taTierses;
//	}
//
//	public void setTaTierses(Set<TaTiers> taTierses) {
//		this.taTierses = taTierses;
//	}
	
	@PrePersist
	@PreUpdate
	public void verif() {
		if(commCommercialEmail==null) commCommercialEmail = 0;
		if(commAdministratifEmail==null) commAdministratifEmail = 0;
	}

	@Override
	public Object clone() throws CloneNotSupportedException {
		TaEmail objet = new TaEmail();
		try {
			objet.setAdresseEmail(adresseEmail);
			objet.setCommAdministratifEmail(commAdministratifEmail);
			objet.setCommCommercialEmail(commCommercialEmail);
//			objet.setOrigineImport(origineImport);
			objet.setTaTEmail(taTEmail);

		} catch (Exception e) {
			logger.error("", e);
		}
		// on renvoie le clone
		return objet;
	}
	
	
	
	
}
