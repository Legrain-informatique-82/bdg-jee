package fr.legrain.article.model;

// Generated Mar 24, 2009 4:44:04 PM by Hibernate Tools 3.2.0.CR1

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.log4j.Logger;

import fr.legrain.general.model.TaObjetLgr;
import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaNote generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "ta_note_article")
//@SequenceGenerator(name = "gen_note_article", sequenceName = "num_id_note_article", allocationSize = 1)
public class TaNoteArticle extends TaObjetLgr   implements java.io.Serializable {

	private static final long serialVersionUID = -8954437150089923366L;

	@Transient
	static Logger logger = Logger.getLogger(TaNoteArticle.class.getName());
	
	private int idNoteArticle;
//	private String version;
	private TaTNoteArticle taTNoteArticle;
	private TaArticle taArticle;
	private String noteArticle;
	private Date dateNoteArticle;
//	private String quiCree;
//	private Date quandCree;
//	private String quiModif;
//	private Date quandModif;
//	private String ipAcces;
	private Integer versionObj;

	public TaNoteArticle() {
	}

	public TaNoteArticle(int idNote) {
		this.idNoteArticle = idNote;
	}

	public TaNoteArticle(int idNoteArticle, TaTNoteArticle taTNoteArticle, TaArticle taArticle, String noteArticle, Date dateNoteArticle,
			String quiCreeNote, Date quandCreeNote, String quiModifNote,
			Date quandModifNote, String ipAcces, Integer versionObj) {
		this.idNoteArticle = idNoteArticle;
		this.taTNoteArticle = taTNoteArticle;
		this.taArticle = taArticle;
		this.noteArticle = noteArticle;
		this.dateNoteArticle = dateNoteArticle;
		this.quiCree = quiCreeNote;
		this.quandCree = quandCreeNote;
		this.quiModif = quiModifNote;
		this.quandModif = quandModifNote;
		this.ipAcces = ipAcces;
		this.versionObj = versionObj;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id_note_article", unique = true, nullable = false)
	@LgrHibernateValidated(champBd = "id_note_article",table = "ta_note_article", champEntite="idNoteArticle", clazz = TaNoteArticle.class)
	public int getIdNoteArticle() {
		return this.idNoteArticle;
	}

	public void setIdNoteArticle(int idNoteArticle) {
		this.idNoteArticle = idNoteArticle;
	}

//	@Column(name = "version", length = 20)
//	public String getVersion() {
//		return this.version;
//	}
//
//	public void setVersion(String version) {
//		this.version = version;
//	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST, /*CascadeType.MERGE,*/ CascadeType.REFRESH})
	@JoinColumn(name = "id_t_note_article")
	@LgrHibernateValidated(champBd = "id_t_note_article",table = "ta_note_article", champEntite="taTNoteArticle.idTNoteArticle", clazz = TaTNoteArticle.class)
	public TaTNoteArticle getTaTNoteArticle() {
		return this.taTNoteArticle;
	}

	public void setTaTNoteArticle(TaTNoteArticle taTNoteArticle) {
		this.taTNoteArticle = taTNoteArticle;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
	@JoinColumn(name = "id_article")
	@LgrHibernateValidated(champBd = "id_article",table = "ta_article", champEntite="taArticle.idArticle", clazz = TaArticle.class)
	public TaArticle getTaArticle() {
		return this.taArticle;
	}

	public void setTaArticle(TaArticle taArticle) {
		this.taArticle = taArticle;
	}

	@Column(name = "note_article")
	@LgrHibernateValidated(champBd = "note_article",table = "ta_note_article", champEntite="noteArticle", clazz = TaNoteArticle.class)
	public String getNoteArticle() {
		return this.noteArticle;
	}

	public void setNoteArticle(String noteArticle) {
		this.noteArticle = noteArticle;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "date_note_article", length = 19)
	@LgrHibernateValidated(champBd = "date_note_article",table = "ta_note_article", champEntite="dateNoteArticle", clazz = TaNoteArticle.class)
	public Date getDateNoteArticle() {
		return this.dateNoteArticle;
	}

	public void setDateNoteArticle(Date dateNoteArticle) {
		this.dateNoteArticle = dateNoteArticle;
	}

//	@Column(name = "qui_cree", length = 50)
//	public String getQuiCree() {
//		return this.quiCree;
//	}
//
//	public void setQuiCree(String quiCreeNote) {
//		this.quiCree = quiCreeNote;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_cree", length = 19)
//	public Date getQuandCree() {
//		return this.quandCree;
//	}
//
//	public void setQuandCree(Date quandCreeNote) {
//		this.quandCree = quandCreeNote;
//	}
//
//	@Column(name = "qui_modif", length = 50)
//	public String getQuiModif() {
//		return this.quiModif;
//	}
//
//	public void setQuiModif(String quiModifNote) {
//		this.quiModif = quiModifNote;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_modif", length = 19)
//	public Date getQuandModif() {
//		return this.quandModif;
//	}
//
//	public void setQuandModif(Date quandModifNote) {
//		this.quandModif = quandModifNote;
//	}
//
//	@Column(name = "ip_acces", length = 50)
//	public String getIpAcces() {
//		return this.ipAcces;
//	}
//
//	public void setIpAcces(String ipAcces) {
//		this.ipAcces = ipAcces;
//	}

	@Version
	@Column(name = "version_obj")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}

	
	@Override
	public Object clone() throws CloneNotSupportedException {
		TaNoteArticle objet = new TaNoteArticle();
		try {
			objet.setDateNoteArticle(dateNoteArticle);
			objet.setNoteArticle(noteArticle);
			objet.setTaTNoteArticle(taTNoteArticle);
			objet.setTaArticle(taArticle);
		} catch (Exception e) {
			logger.error("", e);
		}
		// on renvoie le clone
		return objet;
	}
}
