package fr.legrain.article.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import javax.validation.Valid;

import org.apache.log4j.Logger;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import fr.legrain.bdg.model.mapping.mapper.TaLFabricationPFMapper;
import fr.legrain.document.dto.IDocumentTiers;
import fr.legrain.document.dto.IInfosDocumentTiers;
import fr.legrain.document.dto.ILigneDocumentTiers;
import fr.legrain.document.dto.ITaLFabrication;
import fr.legrain.document.dto.ITaLModeleFabrication;
import fr.legrain.document.events.SWTModificationDocumentEvent;
import fr.legrain.document.model.LigneTva;
import fr.legrain.document.model.SWTDocument;
import fr.legrain.document.model.SWTLigneDocument;
import fr.legrain.document.model.TaEtat;
import fr.legrain.document.model.TaHistREtat;
import fr.legrain.document.model.TaMiseADisposition;
import fr.legrain.document.model.TaRAcompte;
import fr.legrain.document.model.TaRDocument;
import fr.legrain.document.model.TaREtat;
import fr.legrain.document.model.TaRReglementLiaison;
import fr.legrain.document.model.TaTPaiement;
import fr.legrain.lib.data.ChangeModeEvent;
import fr.legrain.lib.data.ChangeModeListener;
import fr.legrain.lib.data.ExceptLgr;
import fr.legrain.lib.data.LibCalcul;
import fr.legrain.stock.model.TaGrMouvStock;
import fr.legrain.stock.model.TaMouvementStock;
import fr.legrain.tiers.model.TaAdresse;
import fr.legrain.tiers.model.TaCPaiement;
import fr.legrain.tiers.model.TaTiers;
import fr.legrain.validator.LgrHibernateValidated;

/**
* TaFabrication generated by hbm2java
*/
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "ta_modele_fabrication", uniqueConstraints = @UniqueConstraint(columnNames = "code_document"))
//@SequenceGenerator(name = "gen_fabrication", sequenceName = "num_id_fabrication", allocationSize = 1)
@NamedQueries(value = { 
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_DATE, query="select a from TaModeleFabrication a where a.dateDebR between :dateDebut and :dateFin order by a.dateDebR"), 
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_DATE_LIGHT, query="select f.idDocument, f.codeDocument, f.dateDocument, f.libelleDocument, tiers.codeTiers, infos.nomTiers,0,0,f.netHtCalc,f.netTtcCalc from TaModeleFabrication f join f.taInfosDocument infos join f.taTiers tiers where tiers.codeTiers like :codeTiers and f.dateDocument between :dateDebut and :dateFin order by f.codeDocument"),
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_TIERS_AND_CODE_LIGHT, query="select f.idDocument, f.codeDocument, f.dateDocument, f.libelleDocument, tiers.codeTiers, infos.nomTiers,0,0,f.netHtCalc,f.netTtcCalc from TaModeleFabrication f join f.taInfosDocument infos join f.taTiers tiers where tiers.codeTiers like :codeTiers and f.codeDocument like :codeDocument order by f.codeDocument"),
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_TIERS_AND_CODE, query="select a from TaModeleFabrication a where a.taTiers.codeTiers like :codeTiers and a.codeDocument between :dateDebut and :dateFin order by a.codeDocument"),
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_CODE, query="select a from TaModeleFabrication a where a.taTiers.codeTiers like :codeTiers and  a.codeDocument between :dateDebut and :dateFin order by a.codeDocument"),
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_DATE_PARDATE, query="select a from TaModeleFabrication a where a.taTiers.codeTiers like :codeTiers and  a.dateDocument between :dateDebut and :dateFin order by a.dateDocument"),
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_TIERS, query="select a from TaModeleFabrication a where a.taTiers.codeTiers like :codeTiers"),
		@NamedQuery(name=TaModeleFabrication.QN.FIND_BY_TIERS_AND_DATE, query="select a from TaModeleFabrication a where a.taTiers.codeTiers like :codeTiers and a.dateDocument between :dateDebut and :dateFin order by a.codeDocument")
})
public class TaModeleFabrication extends SWTDocument implements ChangeModeListener, java.io.Serializable , IDocumentTiers {

	private static final long serialVersionUID = -4921990258361877278L;

	public static final String TYPE_DOC = "Fabrication";
	
	public static class QN {
		public static final String FIND_BY_DATE = "TaModeleFabrication.findEntre2Date";
		public static final String FIND_BY_TIERS_AND_CODE_LIGHT = "TaModeleFabrication.findEntre2CodeParCodeLight";
		public static final String FIND_BY_DATE_LIGHT = "TaModeleFabrication.findEntre2DateLight";
		public static final String FIND_BY_TIERS_AND_CODE = "TaModeleFabrication.findEntre2CodeParCode";
		public static final String FIND_BY_DATE_PARDATE = "TaModeleFabrication.findEntre2DateParDate";
		public static final String FIND_BY_CODE = "TaModeleFabrication.findEntre2Code";
		public static final String FIND_BY_TIERS_AND_DATE = "TaModeleFabrication.findTiersEntre2Date";
		public static final String FIND_BY_TIERS = "TaModeleFabrication.findTiers";
	}
	
	@Transient
	static Logger logger = Logger.getLogger(TaModeleFabrication.class.getName());
	
//	private int idDocument;
	private String version;
	private TaTPaiement taTPaiement;
	private TaTFabrication taTFabrication;
	private TaTiers taTiers;
	//private TaCPaiement taCPaiement;
	private String codeDocument;
	private Date dateDocument;
	private Date dateLivDocument;
	private String libelleDocument;
	private TaGrMouvStock taGrMouvStock;
	private BigDecimal remHtDocument= new BigDecimal(0);
	private BigDecimal txRemHtDocument= new BigDecimal(0);
	private BigDecimal remTtcDocument= new BigDecimal(0);
	private BigDecimal txRemTtcDocument= new BigDecimal(0);
	private Integer nbEDocument= 0;
	private Integer ttc= 0;
	private String commentaire;
	
	private String quiCree;
	private Date quandCree;
	private String quiModif;
	private Date quandModif;
	private String ipAcces;
	
	private Date dateDebT; //Théorique
	private Date dateFinT;
	private Date dateDebR; //Rèelle
	private Date dateFinR;
//	private List<TaProduit> listProduits;
//	private List<TaMatierePremiere> listMatierePremieres;
//	private List<TaLModeleFabrication> listProduits;
//	private List<TaLModeleFabrication> listMatierePremieres;
	private List<TaLModeleFabricationPF> lignesProduits;
	private List<TaLModeleFabricationMP> lignesMatierePremieres;
	private TaGrMouvStock grpMouvement;

	private TaInfosFabrication taInfosDocument;
	private Set<TaRDocument> taRDocuments = new HashSet<TaRDocument>(0);
	private Set<TaRAcompte> taRAcomptes = new HashSet<TaRAcompte>(0);
	private Date dateVerrouillage;
	@Transient
	private ArrayList<LigneTva> lignesTVA = null; //ensemble des lignes de tva du document
	@Transient
	private BigDecimal mtTtcAvantRemiseGlobaleCalc = new BigDecimal(0);

	protected Integer nbDecimalesQte;
	
	@Transient
	private boolean gestionTVA = true;

//	@Transient
	private BigDecimal mtTtcCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal mtHtCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal mtTvaCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netTtcCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netHtCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netTvaCalc = new BigDecimal(0);
//	@Transient
	private BigDecimal netAPayer = new BigDecimal(0);
	
	private TaTiers taTiersPrestationService;
	
	@Transient
	private BigDecimal remTtcIntermediaireDocument = new BigDecimal(0);
	
	@Transient
	private boolean legrain = false;

	
	public TaModeleFabrication(boolean legrain) {
		this.legrain = legrain;
		lignes = new ArrayList<ITaLFabrication>(0);
		lignesTVA = new ArrayList<LigneTva>();
	}
	public TaModeleFabrication() {
		lignes = new ArrayList<ITaLFabrication>(0);
		lignesTVA = new ArrayList<LigneTva>();
	}
	
	public TaModeleFabrication(int idBonliv) {
		this.idDocument = idBonliv;
		lignes = new ArrayList<ITaLFabrication>(0);
		lignesTVA = new ArrayList<LigneTva>();		
	}
	
	public TaModeleFabrication(String oldCodeBonliv) {
		super(oldCodeBonliv);
		legrain = true;
		lignes = new ArrayList<ITaLFabrication>(0);
		this.lignesTVA = new ArrayList<LigneTva>();
		//passage ejb
//		this.modeDocument = EnumModeObjet.C_MO_INSERTION;
	}
	
	public TaModeleFabrication(int idBonliv, TaTPaiement taTPaiement, TaTiers taTiers,
			TaCPaiement taCPaiement,TaAdresse taAdresseByIdAdresse, 
			TaAdresse taAdresseByIdAdresseLiv,String codeBonliv,
			Date dateBonliv, Date dateEchBonliv,Date dateLivBonliv,
			String libelleBonliv, 
			BigDecimal remHtBonliv, BigDecimal txRemHtBonliv,
			BigDecimal remTtcBonliv, BigDecimal txRemTtcBonliv, Integer nbEBonliv,
			Integer ttc, Integer export, String commentaire, String quiCreeBonliv,
			Date quandCreeBonliv, String quiModifBonliv, Date quandModifBonliv,
			String ipAcces, Integer versionObj, List<ITaLFabrication> taLFabrication,
			TaInfosFabrication taInfosBonlives, Set<TaRDocument> taRDocuments) {
		this.idDocument = idBonliv;
		this.taTPaiement = taTPaiement;
		this.taTiers = taTiers;
		//this.taCPaiement = taCPaiement;

		this.codeDocument = codeBonliv;
		this.dateDocument = dateBonliv;
		this.dateLivDocument = dateLivBonliv;
		this.libelleDocument = libelleBonliv;
		this.remHtDocument = remHtBonliv;
		this.txRemHtDocument = txRemHtBonliv;
		this.remTtcDocument = remTtcBonliv;
		this.txRemTtcDocument = txRemTtcBonliv;
		this.nbEDocument = nbEBonliv;
		this.ttc = ttc;
		//this.export = export;
		this.commentaire = commentaire;
		this.quiCree = quiCreeBonliv;
		this.quandCree = quandCreeBonliv;
		this.quiModif = quiModifBonliv;
		this.quandModif = quandModifBonliv;
		this.ipAcces = ipAcces;
		this.versionObj = versionObj;
		this.lignes = taLFabrication;
		this.taInfosDocument = taInfosBonlives;
		this.taRDocuments = taRDocuments;
	}
	
	@Transient
	public boolean isGestionTVA() {
		return gestionTVA;
	}
	public void setGestionTVA(boolean gestionTVA) {
		this.gestionTVA = gestionTVA;
	}
	@Transient
	public BigDecimal getRemTtcIntermediaireDocument() {
		return mtTtcAvantRemiseGlobaleCalc.subtract(mtTtcCalc);
	}
	
	@Override
	@Transient
	public String getTypeDocument() {
		// TODO Auto-generated method stub
		return TYPE_DOC;
	}
	
	public void calculDateEcheanceAbstract(Integer report, Integer finDeMois){
//		calculDateEcheance(report,finDeMois);
	}
//	@Override
//	@Transient
//	public Integer getExport() {
//		// TODO Auto-generated method stub
//		return null;
//	}
//	@Override
//	@Transient
//	public void setExport(Integer export) {
//		// TODO Auto-generated method stub
//		
//	}
	
	@Transient
	public BigDecimal getRegleCompletDocument() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public BigDecimal getResteAReglerComplet() {
		// TODO Auto-generated method stub
		return null;
	}	
	@Transient
	public List<ILigneDocumentTiers> getLignesGeneral(){
		return this.lignes;
	}

	@Transient
	public boolean isLegrain() {
		// TODO Auto-generated method stub
		return legrain;
	}
	
	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	//Attention si FetchType.EAGER => à cause d'autre EAGER, génère des outter join et duplique les lignes,
	//si EAGER il faut donc gérer ce problème ou remplacer la List des lignes par un Set
	@JoinColumn(name = "id_gr_mouv_stock")
	@LgrHibernateValidated(champBd = "id_gr_mouvement_stock",table = "ta_gr_mouv_stock", champEntite="taGrMouvStock.idGrMouvStock", clazz = TaGrMouvStock.class)
	public TaGrMouvStock getTaGrMouvStock() {
		return taGrMouvStock;
	}
	public void setTaGrMouvStock(TaGrMouvStock taGrMouvStock) {
		this.taGrMouvStock = taGrMouvStock;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_deb_t", length = 19)
	public Date getDateDebT() {
		return dateDebT;
	}

	public void setDateDebT(Date dateDebT) {
		this.dateDebT = dateDebT;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_fin_t", length = 19)
	public Date getDateFinT() {
		return dateFinT;
	}

	public void setDateFinT(Date dateFinT) {
		this.dateFinT = dateFinT;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_deb_r", length = 19)
	public Date getDateDebR() {
		return dateDebR;
	}

	public void setDateDebR(Date dateDebR) {
		this.dateDebR = dateDebR;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_fin_r", length = 19)
	public Date getDateFinR() {
		return dateFinR;
	}


	public void setDateFinR(Date dateFinR) {
		this.dateFinR = dateFinR;
	}

	public void findProduit() {
//		listProduits = new ArrayList<TaLModeleFabricationPF>();
//		listMatierePremieres = new ArrayList<TaLModeleFabricationMP>();
//		for (TaLModeleFabrication l : getLignes()) {
//			if(l.getTypeLDocument().equals("MP")) {
//				listMatierePremieres.add(l);
//			} else {
//				listProduits.add(l);
//			}
////			if(l.getTaMouvementStock().getQte1Stock()==null || l.getTaMouvementStock().getQte1Stock().signum()<0) {
////				listMatierePremieres.add(l);
////			} else {
////				listProduits.add(l);
////			}
//		}
	}

	@Column(name = "version", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_t_paiement")
	@LgrHibernateValidated(champBd = "id_t_paiement",table = "ta_t_paiement", champEntite="taTPaiement.idTPaiement", clazz = TaTPaiement.class)
	public TaTPaiement getTaTPaiement() {
		return this.taTPaiement;
	}

	public void setTaTPaiement(TaTPaiement taTPaiement) {
		this.taTPaiement = taTPaiement;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_tiers")
	@LgrHibernateValidated(champBd = "id_tiers",table = "ta_tiers", champEntite="taTiers.idTiers", clazz = TaTiers.class)
	public TaTiers getTaTiers() {
		return this.taTiers;
	}

	public void setTaTiers(TaTiers taTiers) {
		if(taRAcomptes.size()==0 || rechercheSiMemeTiers(taTiers))
			this.taTiers = taTiers;
	}

	public boolean rechercheSiMemeTiers(TaTiers taTiers){
		for (TaRAcompte acompte : taRAcomptes) {
			if(acompte.getTaAcompte().getTaTiers()!=null)
				if (!acompte.getTaAcompte().getTaTiers().equals(taTiers))
					return false;
		}
		return true;
	}

	@Column(name = "code_document", unique = true, length = 20)
	@LgrHibernateValidated(champBd = "code_document",table = "ta_modele_fabrication", champEntite="codeDocument", clazz = TaModeleFabrication.class)
	public String getCodeDocument() {
		return this.codeDocument;
	}

	public void setCodeDocument(String codeBonliv) {
		this.codeDocument = codeBonliv;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_document", length = 19)
	@LgrHibernateValidated(champBd = "date_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public Date getDateDocument() {
		return this.dateDocument;
	}

	public void setDateDocument(Date dateFacture) {
		if(this.oldDate==null)this.oldDate=dateFacture;
		else
		if(this.dateDocument==null||
				this.dateDocument.compareTo(dateFacture)!=0)
			this.oldDate=this.dateDocument;
		this.dateDocument = dateFacture;
	}


	@Temporal(TemporalType.DATE)
	@Column(name = "date_liv_document", length = 19)
	@LgrHibernateValidated(champBd = "date_liv_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public Date getDateLivDocument() {
		return this.dateLivDocument;
	}

	public void setDateLivDocument(Date dateLivBonliv) {
		this.dateLivDocument = dateLivBonliv;
	}

	@Column(name = "libelle_document")
	@LgrHibernateValidated(champBd = "libelle_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public String getLibelleDocument() {
		return this.libelleDocument;
	}

	public void setLibelleDocument(String libelleBonliv) {
		this.libelleDocument = libelleBonliv;
	}

	
	
	@Column(name = "rem_ht_document", precision = 15)
	@LgrHibernateValidated(champBd = "rem_ht_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public BigDecimal getRemHtDocument() {
		return this.remHtDocument;
	}

	public void setRemHtDocument(BigDecimal remHtBonliv) {
		this.remHtDocument = remHtBonliv;
	}

	@Column(name = "tx_rem_ht_document", precision = 15)
	@LgrHibernateValidated(champBd = "tx_rem_ht_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public BigDecimal getTxRemHtDocument() {
		return this.txRemHtDocument;
	}

	public void setTxRemHtDocument(BigDecimal txRemHtBonliv) {
		if(txRemHtBonliv==null)txRemHtBonliv=new BigDecimal(0);
		if(this.txRemHtDocument!=null && this.txRemHtDocument.compareTo(txRemHtBonliv)!=0){	
			this.txRemHtDocument = txRemHtBonliv;
			if(legrain) {
				System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
				//passage ejb => dans TaFabricationService
//				calculeTvaEtTotaux();
				try {
					fireModificationDocument(new SWTModificationDocumentEvent(this));
				} catch (Exception e) {
					logger.error("",e);
				}
			}
		}
	}

	@Column(name = "rem_ttc_document", precision = 15)
	@LgrHibernateValidated(champBd = "rem_ttc_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public BigDecimal getRemTtcDocument() {
		return this.remTtcDocument;
	}

	public void setRemTtcDocument(BigDecimal remTtcBonliv) {
		this.remTtcDocument = remTtcBonliv;
	}

	@Column(name = "tx_rem_ttc_document", precision = 15)
	@LgrHibernateValidated(champBd = "tx_rem_ttc_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public BigDecimal getTxRemTtcDocument() {
		return this.txRemTtcDocument;
	}

	public void setTxRemTtcDocument(BigDecimal txRemTtcBonliv) {
		if(txRemTtcBonliv==null)txRemTtcBonliv=new BigDecimal(0);
		if(this.txRemTtcDocument!=null && this.txRemTtcDocument.compareTo(txRemTtcBonliv)!=0){	
			this.txRemTtcDocument = txRemTtcBonliv;
			if(legrain) {
				System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
				//passage ejb => dans TaFabricationService
//				calculeTvaEtTotaux();
				try {
					fireModificationDocument(new SWTModificationDocumentEvent(this,"txRemTtcDocument"));
				} catch (Exception e) {
					logger.error("",e);
				}
			}
		}
	}

	@Column(name = "nb_e_document")
	@LgrHibernateValidated(champBd = "nb_e_document",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public Integer getNbEDocument() {
		return this.nbEDocument;
	}

	public void setNbEDocument(Integer nbEBonliv) {
		this.nbEDocument = nbEBonliv;
	}

	@Column(name = "ttc")
	@LgrHibernateValidated(champBd = "ttc",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public Integer getTtc() {
		return this.ttc;
	}

	public void setTtc(Integer ttc) {
		this.ttc = ttc;
	}

//	@Column(name = "export")
//	@LgrHibernateValidated(champ = "export",table = "ta_modele_fabrication",clazz = TaFabrication.class)
//	public Integer getExport() {
//		return this.export;
//	}
//
//	public void setExport(Integer export) {
//		this.export = export;
//	}

	@Column(name = "commentaire", length = 2000)
	@LgrHibernateValidated(champBd = "commentaire",table = "ta_modele_fabrication", champEntite="", clazz = TaModeleFabrication.class)
	public String getCommentaire() {
		return this.commentaire;
	}

	public void setCommentaire(String commentaire) {
		if(this.commentaire==null||
				this.commentaire.compareTo(commentaire)!=0){
			this.commentaire = commentaire;		
			if(legrain) {
				try {
					fireModificationDocument(new SWTModificationDocumentEvent(this));
				} catch (Exception e) {
					logger.error("",e);
				}
			}
		}
	}

	@Column(name = "qui_cree", length = 50)
	public String getQuiCree() {
		return this.quiCree;
	}

	public void setQuiCree(String quiCreeBonliv) {
		this.quiCree = quiCreeBonliv;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_cree", length = 19)
	public Date getQuandCree() {
		return this.quandCree;
	}

	public void setQuandCree(Date quandCreeBonliv) {
		this.quandCree = quandCreeBonliv;
	}

	@Column(name = "qui_modif", length = 50)
	public String getQuiModif() {
		return this.quiModif;
	}

	public void setQuiModif(String quiModifBonliv) {
		this.quiModif = quiModifBonliv;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_modif", length = 19)
	public Date getQuandModif() {
		return this.quandModif;
	}

	public void setQuandModif(Date quandModifBonliv) {
		this.quandModif = quandModifBonliv;
	}

	@Column(name = "ip_acces", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}
	
	@Transient
	public List<ITaLModeleFabrication> getLignes(){
		lignes = new ArrayList();
		lignes.addAll(lignesMatierePremieres);
		lignes.addAll(lignesProduits);
		return lignes;
	}

//	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "taDocument",  orphanRemoval=true)
//	@OrderBy("numLigneLDocument")
//	@Fetch(FetchMode.SUBSELECT)
//	public List<TaLModeleFabrication> getLignes() {
//		return this.lignes;
//	}
//
//	public void setLignes(List<ITaLFabrication> taLFabrication) {
//		this.lignes = taLFabrication;
//	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "taDocument",  orphanRemoval=true)
	@OrderBy("numLigneLDocument")
	@Fetch(FetchMode.SUBSELECT)
	@LgrHibernateValidated(champBd = "id_l_document",table = "ta_l_modele_fabrication_mp", champEntite="taLModeleFabrication.idLDocument", clazz = TaLModeleFabricationMP.class)
	@Valid
	public List<TaLModeleFabricationMP> getLignesMatierePremieres() {
		return this.lignesMatierePremieres;
	}

	public void setLignesMatierePremieres(List<TaLModeleFabricationMP> taLFabrication) {
		this.lignesMatierePremieres = taLFabrication;
	}
	
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "taDocument",  orphanRemoval=true)
	@OrderBy("numLigneLDocument")
	@Fetch(FetchMode.SUBSELECT)
	@LgrHibernateValidated(champBd = "id_l_document",table = "ta_l_modele_fabrication_pf", champEntite="taLModeleFabrication.idLDocument", clazz = TaLModeleFabricationPF.class)
	@Valid
	public List<TaLModeleFabricationPF> getLignesProduits() {
		return this.lignesProduits;
	}

	public void setLignesProduits(List<TaLModeleFabricationPF> taLFabrication) {
		this.lignesProduits = taLFabrication;
	}
	
	@javax.persistence.OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "taDocument")
	public TaInfosFabrication getTaInfosDocument() {
		return this.taInfosDocument;
	}

	public void setTaInfosDocument(TaInfosFabrication taInfosBonlives) {
		this.taInfosDocument = taInfosBonlives;
	}

	@Transient
//	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "taBonliv", orphanRemoval=true)
	public Set<TaRDocument> getTaRDocuments() {
		return this.taRDocuments;
	}

	@Transient
	public void setTaRDocuments(Set<TaRDocument> taRDocuments) {
		this.taRDocuments = taRDocuments;
	}
	
	@Transient
//	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "taBonliv", orphanRemoval=true)
	public Set<TaRAcompte> getTaRAcomptes(){
		return this.taRAcomptes;
	}

	@Transient
	public void setTaRAcomptes(Set<TaRAcompte> taRAcomptes) {
		this.taRAcomptes = taRAcomptes;
	}
	/**
	 * Initialisation des propriétés de la facture en fonction du tiers
	 */
	public void changementDeTiers() {
//		if(this.taTiers!=null && this.taTiers.getTaTTvaDoc()!=null && 
//				this.taTiers.getTaTTvaDoc().getCodeTTvaDoc()!=null){
//			if(!this.taTiers.getTaTTvaDoc().getCodeTTvaDoc().equals("F")
//					//				||this.taTiers.getTaTTvaDoc().getCodeTTvaDoc().equals("UE")
//					//				||this.taTiers.getTaTTvaDoc().getCodeTTvaDoc().equals("HUE")
//			)
//				setGestionTVA(false);
//			else setGestionTVA(true);
//		}else
//			setGestionTVA(true);
	}
	
	@Override
	protected void afterAjoutLigne(SWTLigneDocument ligne) throws ExceptLgr {
		System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
		//passage ejb => dans TaFabricationService
//		calculeTvaEtTotaux();
		reinitialiseNumLignes();
	}

	@Override
	protected void afterEnregistrerEntete() throws ExceptLgr {
		System.out.println("===****=== Transfert de code metier des entites vers les services, à bien vérifier");
		//passage ejb => dans TaFabricationService
//		calculeTvaEtTotaux();
		reinitialiseNumLignes();
		
	}

	@Override
	protected void afterModifierEntete() throws ExceptLgr {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected void afterRemoveLigne(SWTLigneDocument ligne) throws ExceptLgr {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected void afterSupprimerEntete() throws ExceptLgr {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected boolean beforeAjoutLigne(SWTLigneDocument ligne) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeEnregistrerEntete() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeModifierEntete() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeRemoveLigne(SWTLigneDocument ligne) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected boolean beforeSupprimerEntete() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	protected void reinitialiseNumLignes() {
//		for (Object ligne : lignes) {
//			((TaLFabrication)ligne).setNumLigneLDocument(
//					((TaLFabrication) ligne).getNUM_LIGNE());
//		}		
	}

	@Override
	public void changementMode(ChangeModeEvent evt) {
		// TODO Raccord de méthode auto-généré
		switch (evt.getNouveauMode()) {
		case C_MO_CONSULTATION:
			break;
		case C_MO_EDITION:
			//S'il n'existe pas déjà, charger un objet swtArticle pour la ligne
			break;
		case C_MO_INSERTION:
//			S'il n'existe pas déjà, charger un objet swtArticle pour la ligne
			break;
		case C_MO_SUPPRESSION:
			break;
		}

	}
	@Transient
	public ArrayList<LigneTva> getLignesTVA() {
		return lignesTVA;
	}

	public void setLignesTVA(ArrayList<LigneTva> lignesTVA) {
		this.lignesTVA = lignesTVA;
	}
	
//	@Transient
	@Column(name = "mt_ttc_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_ttc_calc",table = "ta_modele_fabrication", champEntite="mtTtcCalc", clazz = TaModeleFabrication.class)
	public BigDecimal getMtTtcCalc() {
		return mtTtcCalc;
	}

	public void setMtTtcCalc(BigDecimal mtTtcCalc) {
		this.mtTtcCalc = LibCalcul.arrondi(mtTtcCalc);
	}

	//@Transient
	@Column(name = "mt_ht_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_ht_calc",table = "ta_modele_fabrication", champEntite="mtHtCalc", clazz = TaModeleFabrication.class)
	public BigDecimal getMtHtCalc() {
		return mtHtCalc;
	}

	public void setMtHtCalc(BigDecimal mtHtCalc) {
		this.mtHtCalc = LibCalcul.arrondi(mtHtCalc);
	}

	//@Transient
	@Column(name = "mt_tva_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_tva_calc",table = "ta_modele_fabrication", champEntite="mtTvaCalc", clazz = TaModeleFabrication.class)
	public BigDecimal getMtTvaCalc() {
		return mtTvaCalc;
	}

	public void setMtTvaCalc(BigDecimal mtTvaCalc) {
		this.mtTvaCalc = LibCalcul.arrondi(mtTvaCalc);
	}

	//@Transient
	@Column(name = "net_ttc_calc", precision = 15)
	@LgrHibernateValidated(champBd = "net_ttc_calc",table = "ta_modele_fabrication", champEntite="netTtcCalc", clazz = TaModeleFabrication.class)
	public BigDecimal getNetTtcCalc() {
		return netTtcCalc;
	}

	public void setNetTtcCalc(BigDecimal netTtcCalc) {
		this.netTtcCalc = LibCalcul.arrondi(netTtcCalc);
	}

	//@Transient
	@Column(name = "net_ht_calc", precision = 15)
	@LgrHibernateValidated(champBd = "net_ht_calc",table = "ta_modele_fabrication", champEntite="netHtCalc", clazz = TaModeleFabrication.class)
	public BigDecimal getNetHtCalc() {
		return netHtCalc;
	}

	public void setNetHtCalc(BigDecimal netHtCalc) {
		this.netHtCalc = LibCalcul.arrondi(netHtCalc);
	}

	//@Transient
	@Column(name = "net_tva_calc", precision = 15)
	@LgrHibernateValidated(champBd = "net_tva_calc",table = "ta_modele_fabrication", champEntite="netTvaCalc", clazz = TaModeleFabrication.class)
	public BigDecimal getNetTvaCalc() {
		return netTvaCalc;
	}

	public void setNetTvaCalc(BigDecimal netTvaCalc) {
		this.netTvaCalc = LibCalcul.arrondi(netTvaCalc);
	}

	//@Transient
	@Column(name = "net_a_payer", precision = 15)
	@LgrHibernateValidated(champBd = "net_a_payer",table = "ta_modele_fabrication", champEntite="netAPayer", clazz = TaModeleFabrication.class)
	public BigDecimal getNetAPayer() {
		return netAPayer;
	}

	public void setNetAPayer(BigDecimal netAPayer) {
		this.netAPayer = LibCalcul.arrondi(netAPayer);
	}

	public void setLegrain(boolean legrain) {
		this.legrain = legrain;
		for (ITaLModeleFabrication ligne : getLignesMatierePremieres()) {
			ligne.setLegrain(legrain);
		}
		for (ITaLModeleFabrication ligne : getLignesProduits()) {
			ligne.setLegrain(legrain);
		}
	}

	@Column(name = "mt_ttc_avt_rem_globale_calc", precision = 15)
	@LgrHibernateValidated(champBd = "mt_ttc_avt_rem_globale_calc",table = "ta_modele_fabrication", champEntite="mtTtcAvantRemiseGlobaleCalc", clazz = TaModeleFabrication.class)
	public BigDecimal getMtTtcAvantRemiseGlobaleCalc() {
		return mtTtcAvantRemiseGlobaleCalc;
	}

	public void setMtTtcAvantRemiseGlobaleCalc(
			BigDecimal mtTtcAvantRemiseGlobaleCalc) {
		this.mtTtcAvantRemiseGlobaleCalc = mtTtcAvantRemiseGlobaleCalc;
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((codeDocument == null) ? 0 : codeDocument.hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TaModeleFabrication other = (TaModeleFabrication) obj;
		if (codeDocument == null) {
			if (other.codeDocument != null)
				return false;
		} else if (!codeDocument.equals(other.codeDocument))
			return false;
		if (commentaire == null) {
			if (other.commentaire != null)
				return false;
		} else if (!commentaire.equals(other.commentaire))
			return false;
		if (dateDocument == null) {
			if (other.dateDocument != null)
				return false;
		} else if (!dateDocument.equals(other.dateDocument))
			return false;
		if (dateLivDocument == null) {
			if (other.dateLivDocument != null)
				return false;
		} else if (!dateLivDocument.equals(other.dateLivDocument))
			return false;
		if (gestionTVA != other.gestionTVA)
			return false;
		if (ipAcces == null) {
			if (other.ipAcces != null)
				return false;
		} else if (!ipAcces.equals(other.ipAcces))
			return false;
		if (legrain != other.legrain)
			return false;
		if (libelleDocument == null) {
			if (other.libelleDocument != null)
				return false;
		} else if (!libelleDocument.equals(other.libelleDocument))
			return false;
		if (lignesTVA == null) {
			if (other.lignesTVA != null)
				return false;
		} else if (!lignesTVA.equals(other.lignesTVA))
			return false;
		if (mtHtCalc == null) {
			if (other.mtHtCalc != null)
				return false;
		} else if (!mtHtCalc.equals(other.mtHtCalc))
			return false;
		if (mtTtcAvantRemiseGlobaleCalc == null) {
			if (other.mtTtcAvantRemiseGlobaleCalc != null)
				return false;
		} else if (!mtTtcAvantRemiseGlobaleCalc
				.equals(other.mtTtcAvantRemiseGlobaleCalc))
			return false;
		if (mtTtcCalc == null) {
			if (other.mtTtcCalc != null)
				return false;
		} else if (!mtTtcCalc.equals(other.mtTtcCalc))
			return false;
		if (mtTvaCalc == null) {
			if (other.mtTvaCalc != null)
				return false;
		} else if (!mtTvaCalc.equals(other.mtTvaCalc))
			return false;
		if (nbEDocument == null) {
			if (other.nbEDocument != null)
				return false;
		} else if (!nbEDocument.equals(other.nbEDocument))
			return false;
		if (netAPayer == null) {
			if (other.netAPayer != null)
				return false;
		} else if (!netAPayer.equals(other.netAPayer))
			return false;
		if (netHtCalc == null) {
			if (other.netHtCalc != null)
				return false;
		} else if (!netHtCalc.equals(other.netHtCalc))
			return false;
		if (netTtcCalc == null) {
			if (other.netTtcCalc != null)
				return false;
		} else if (!netTtcCalc.equals(other.netTtcCalc))
			return false;
		if (netTvaCalc == null) {
			if (other.netTvaCalc != null)
				return false;
		} else if (!netTvaCalc.equals(other.netTvaCalc))
			return false;
		if (quandCree == null) {
			if (other.quandCree != null)
				return false;
		} else if (!quandCree.equals(other.quandCree))
			return false;
		if (quandModif == null) {
			if (other.quandModif != null)
				return false;
		} else if (!quandModif.equals(other.quandModif))
			return false;
		if (quiCree == null) {
			if (other.quiCree != null)
				return false;
		} else if (!quiCree.equals(other.quiCree))
			return false;
		if (quiModif == null) {
			if (other.quiModif != null)
				return false;
		} else if (!quiModif.equals(other.quiModif))
			return false;
		if (remHtDocument == null) {
			if (other.remHtDocument != null)
				return false;
		} else if (!remHtDocument.equals(other.remHtDocument))
			return false;
		if (remTtcDocument == null) {
			if (other.remTtcDocument != null)
				return false;
		} else if (!remTtcDocument.equals(other.remTtcDocument))
			return false;
		if (taInfosDocument == null) {
			if (other.taInfosDocument != null)
				return false;
		} else if (!taInfosDocument.equals(other.taInfosDocument))
			return false;
		if (taRDocuments == null) {
			if (other.taRDocuments != null)
				return false;
		} else if (!taRDocuments.equals(other.taRDocuments))
			return false;
		if (taTPaiement == null) {
			if (other.taTPaiement != null)
				return false;
		} else if (!taTPaiement.equals(other.taTPaiement))
			return false;
		if (taTiers == null) {
			if (other.taTiers != null)
				return false;
		} else if (!taTiers.equals(other.taTiers))
			return false;
		if (ttc == null) {
			if (other.ttc != null)
				return false;
		} else if (!ttc.equals(other.ttc))
			return false;
		if (txRemHtDocument == null) {
			if (other.txRemHtDocument != null)
				return false;
		} else if (!txRemHtDocument.equals(other.txRemHtDocument))
			return false;
		if (txRemTtcDocument == null) {
			if (other.txRemTtcDocument != null)
				return false;
		} else if (!txRemTtcDocument.equals(other.txRemTtcDocument))
			return false;
		if (version == null) {
			if (other.version != null)
				return false;
		} else if (!version.equals(other.version))
			return false;
		return true;
	}
	
//	@Transient
//	public List<TaLModeleFabrication> getListProduits() {
//		return listProduits;
//	}
//	public void setListProduits(List<TaLModeleFabrication> listProduits) {
//		this.listProduits = listProduits;
//	}
//	
//	@Transient
//	public List<TaLModeleFabrication> getListMatierePremieres() {
//		return listMatierePremieres;
//	}
//	public void setListMatierePremieres(List<TaLModeleFabrication> listMatierePremieres) {
//		this.listMatierePremieres = listMatierePremieres;
//	}
	
	@Transient
	public TaGrMouvStock getGrpMouvement() {
		return grpMouvement;
	}
	public void setGrpMouvement(TaGrMouvStock grpMouvement) {
		this.grpMouvement = grpMouvement;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_t_fabrication")
	@LgrHibernateValidated(champBd = "id_t_fabrication",table = "ta_t_fabrication", champEntite="taTFabrication.idTFabrication", clazz = TaTFabrication.class)
	public TaTFabrication getTaTFabrication() {
		return taTFabrication;
	}
	public void setTaTFabrication(TaTFabrication taTFabrication) {
		this.taTFabrication = taTFabrication;
	}
	
	@Override
	public void setTaInfosDocument(IInfosDocumentTiers infosDocumentTiers) {
		this.taInfosDocument = (TaInfosFabrication) infosDocumentTiers;
		
	}
	@Override
	public void calculeTvaEtTotaux() {
		// TODO Auto-generated method stub
		
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_tiers_prestation_service")
	@LgrHibernateValidated(champBd = "id_tiers_prestation_service",table = "ta_tiers", champEntite="taTiers.idTiers", clazz = TaTiers.class)
	public TaTiers getTaTiersPrestationService() {
		return taTiersPrestationService;
	}
	public void setTaTiersPrestationService(TaTiers taTiersPrestationService) {
		this.taTiersPrestationService = taTiersPrestationService;
	}
	@Transient
	public TaEtat getTaEtat() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setTaEtat(TaEtat taEtat) {
		// TODO Auto-generated method stub
		
	}
	
	@Column(name = "date_verrouillage")
	public Date getDateVerrouillage() {
		return dateVerrouillage;
	}

	public void setDateVerrouillage(Date dateVerrouillage) {
		this.dateVerrouillage=dateVerrouillage;
	}
	
	
	@Transient
	public TaMiseADisposition getTaMiseADisposition() {
		return null;
	}
	@Transient
	public void setTaMiseADisposition(TaMiseADisposition taMiseADisposition) {
		
	}
	@Transient
	public Date getDateExport() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setDateExport(Date dateExport) {
		// TODO Auto-generated method stub
		
	}
	
	
	public void reinitialiseNumLignesMP(Integer aPartirDe,int increment){
		int i=aPartirDe+increment;
		//int i=aPartirDe;
		for (Object ligne : lignesMatierePremieres) {
//			if(((SWTLigneDocument)ligne).getNUM_LIGNE()>=aPartirDe)
			if(((SWTLigneDocument)ligne).getNumLigneLDocument()>=aPartirDe)
			{
				((SWTLigneDocument)ligne).setNumLigneLDocument(i);
				i++;
			}
		}
		reinitialiseNumLignes();
	}
	
	public void reinitialiseNumLignesPF(Integer aPartirDe,int increment){
		int i=aPartirDe+increment;
		//int i=aPartirDe;
		for (Object ligne : lignesProduits) {
//			if(((SWTLigneDocument)ligne).getNUM_LIGNE()>=aPartirDe)
			if(((SWTLigneDocument)ligne).getNumLigneLDocument()>=aPartirDe)
			{
				((SWTLigneDocument)ligne).setNumLigneLDocument(i);
				i++;
			}
		}
		reinitialiseNumLignes();
	}
	
	@Transient
	public Boolean getGestionLot() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public void setGestionLot(Boolean gestionLot) {
		// TODO Auto-generated method stub
		
	}
	
	


	
	
	@Column(name = "nb_decimales_qte")
	public Integer getNbDecimalesQte() {
		return nbDecimalesQte;
	}

	public void setNbDecimalesQte(Integer nbDecimalesQte) {
		this.nbDecimalesQte = nbDecimalesQte;
	}
	@Transient
	public Integer getNbDecimalesPrix() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setNbDecimalesPrix(Integer nbDecimalesPrix) {
		// TODO Auto-generated method stub
		
	}

	
	@Transient
	public Set<TaREtat> getTaREtats() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setTaREtats(Set<TaREtat> taREtats) {
		// TODO Auto-generated method stub
		
	}
	@Transient
	public Set<TaHistREtat> getTaHistREtats() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setTaHistREtats(Set<TaHistREtat> taHistREtats) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public Boolean gereStock() {
		// TODO Auto-generated method stub
		return false;
	}
	@Transient
	public Set<TaRReglementLiaison> getTaRReglementLiaisons() {
		// TODO Auto-generated method stub
		return null;
	}
	@Transient
	public void setTaRReglementLiaisons(Set<TaRReglementLiaison> taRReglementLiaisons) {
		// TODO Auto-generated method stub
		
	}
	@Transient
	public String getNumeroCommandeFournisseur() {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Transient
	public Boolean getUtiliseUniteSaisie() {
		return null;
	}
	@Transient
	public void setUtiliseUniteSaisie(Boolean utiliseUniteSaisie) {
		
	}
}
