package fr.legrain.article.model;

// Generated Sep 1, 2008 3:06:27 PM by Hibernate Tools 3.2.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;

import org.apache.log4j.Logger;

import fr.legrain.general.model.TaObjetLgr;
import fr.legrain.validator.LgrHibernateValidated;

/**
 * TaUnite generated by hbm2java
 */
@Entity
//@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "ta_unite")
//@SequenceGenerator(name = "gen_unite", sequenceName = "num_id_unite", allocationSize = 1)
@NamedQueries(value = { 
		//@NamedQuery(name=TaUnite.QN.FIND_BY_ARTICLE, query="select a from TaUnite a where (a.taArticle is null) or (a.taArticle.codeArticle = ?)")
		@NamedQuery(name=TaUnite.QN.FIND_BY_ARTICLE, 
				query="select a from TaUnite a left join a.taArticle ar where a.taArticle is null or ar.codeArticle = :codeArticle"),
		
		@NamedQuery(name=TaUnite.QN.FIND_BY_CODE_LIGHT, query="select new fr.legrain.article.dto.TaUniteDTO(f.idUnite,f.codeUnite,f.liblUnite) from TaUnite f where f.codeUnite like :codeUnite order by f.codeUnite"),
		@NamedQuery(name=TaUnite.QN.FIND_ALL_LIGHT, query="select new fr.legrain.article.dto.TaUniteDTO(f.idUnite,f.codeUnite,f.liblUnite) from TaUnite f order by f.codeUnite"),
		
		@NamedQuery(name=TaUnite.QN.FIND_BY_CODE_LIGHT_COEFF_DEFINIT, query="select new fr.legrain.article.dto.TaUniteDTO(e.idUnite,e.codeUnite,e.liblUnite)" 
								+ " from TaUnite e" 
								+ " where e.idUnite in" 
								+ " (" 
								+   " select e2.uniteB.id " 
								+   " from TaCoefficientUnite e2 " 
								+   " where e2.uniteA.codeUnite = :codeUniteStock "
								+ " )" 
								+       " or e.idUnite in " 
								+ " (" 
								+    " select e3.uniteA.id" 
								+   " from TaCoefficientUnite e3" 
								+   " where e3.uniteB.codeUnite = :codeUniteStock "
								+ " ) or e.codeUnite = :codeUniteStock " 
								+ " and e.codeUnite like :codeUnite " 
								+ " order by e.codeUnite"),
		@NamedQuery(name=TaUnite.QN.FIND_ALL_LIGHT_COEFF_DEFINIT, query="select new fr.legrain.article.dto.TaUniteDTO(e.idUnite,e.codeUnite,e.liblUnite)" 
				+ " from TaUnite e" 
				+ " where e.idUnite in" 
				+ " (" 
				+   " select e2.uniteB.id " 
				+   " from TaCoefficientUnite e2 " 
				+   " where e2.uniteA.codeUnite = :codeUniteStock "
				+ " )" 
				+       " or e.idUnite in " 
				+ " (" 
				+    " select e3.uniteA.id" 
				+   " from TaCoefficientUnite e3" 
				+   " where e3.uniteB.codeUnite = :codeUniteStock "
				+ " ) or e.codeUnite = :codeUniteStock" 
				+ " order by e.codeUnite"),
		@NamedQuery(name=TaUnite.QN.FIND_BY_CODE_COEFF_DEFINIT, query="select e " 
				+ " from TaUnite e" 
				+ " where e.idUnite in" 
				+ " (" 
				+   " select e2.uniteB.id " 
				+   " from TaCoefficientUnite e2 " 
				+   " where e2.uniteA.codeUnite = :codeUniteStock "
				+ " )" 
				+       " or e.idUnite in " 
				+ " (" 
				+    " select e3.uniteA.id" 
				+   " from TaCoefficientUnite e3" 
				+   " where e3.uniteB.codeUnite = :codeUniteStock "
				+ " ) or e.codeUnite = :codeUniteStock " 
				+ " and e.codeUnite like :codeUnite " 
				+ " order by e.codeUnite"),
		@NamedQuery(name=TaUnite.QN.FIND_ALL_COEFF_DEFINIT, query="select e " 
		+ " from TaUnite e" 
		+ " where e.idUnite in" 
		+ " (" 
		+   " select e2.uniteB.id " 
		+   " from TaCoefficientUnite e2 " 
		+   " where e2.uniteA.codeUnite = :codeUniteStock "
		+ " )" 
		+       " or e.idUnite in " 
		+ " (" 
		+    " select e3.uniteA.id" 
		+   " from TaCoefficientUnite e3" 
		+   " where e3.uniteB.codeUnite = :codeUniteStock "
		+ " ) or e.codeUnite = :codeUniteStock" 
		+ " order by e.codeUnite")

		
})
public class TaUnite extends TaObjetLgr   implements java.io.Serializable {
	
	private static final long serialVersionUID = -1164853348965871664L;

	public static class QN {
		public static final String FIND_BY_ARTICLE = "TaUnite.findByArticle";

		public static final String FIND_BY_CODE_LIGHT = "TaUnite.findByCodeLight";
		public static final String FIND_ALL_LIGHT = "TaUnite.findAllLight";
		public static final String FIND_BY_CODE_LIGHT_COEFF_DEFINIT = "TaUnite.findByCodeLightCoeffDefinit";
		public static final String FIND_ALL_LIGHT_COEFF_DEFINIT = "TaUnite.findAllLightCoeffDefinit";
		public static final String FIND_BY_CODE_COEFF_DEFINIT = "TaUnite.findByCodeCoeffDefinit";
		public static final String FIND_ALL_COEFF_DEFINIT = "TaUnite.findAllCoeffDefinit";
	}

	@Transient
	static Logger logger = Logger.getLogger(TaFamille.class.getName());
	// Dima -  Fin
	
	private int idUnite;
//	private String version;
	private String codeUnite;
	private String liblUnite;
	
	/*----------------------------------------------------------------------------------------------------------*/
	private Integer nbUnite;
	private BigDecimal hauteur;
	private BigDecimal longueur;
	private BigDecimal largeur;
	private BigDecimal poids;
	private TaArticle taArticle;
	/*----------------------------------------------------------------------------------------------------------*/
	
	private TaFamilleUnite taFamilleUnite;
//	private String quiCree;
//	private Date quandCree;
//	private String quiModif;
//	private Date quandModif;
//	private String ipAcces;
//	private Set<TaPrix> taPrixes = new HashSet<TaPrix>(0);
	private Integer versionObj;

	public TaUnite() {
	}

	public TaUnite(int idUnite) {
		this.idUnite = idUnite;
	}

	public TaUnite(int idUnite, String codeUnite, String liblUnite,
			String quiCreeUnite, Date quandCreeUnite, String quiModifUnite,
			Date quandModifUnite, String ipAcces, Set<TaPrix> taPrixes) {
		this.idUnite = idUnite;
		this.codeUnite = codeUnite;
		this.liblUnite = liblUnite;
		this.quiCree = quiCreeUnite;
		this.quandCree = quandCreeUnite;
		this.quiModif = quiModifUnite;
		this.quandModif = quandModifUnite;
		this.ipAcces = ipAcces;
//		this.taPrixes = taPrixes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id_unite", unique = true, nullable = false)
	@LgrHibernateValidated(champBd = "id_unite",table = "ta_unite", champEntite="idUnite", clazz = TaUnite.class)
	public int getIdUnite() {
		return this.idUnite;
	}

	public void setIdUnite(int idUnite) {
		this.idUnite = idUnite;
	}

//	//@Version
//	@Column(name = "version", length = 20)
//	public String getVersion() {
//		return this.version;
//	}
//
//	public void setVersion(String version) {
//		this.version = version;
//	}
	
	@Version
	@Column(name = "version_obj", precision = 15)
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}

	@Column(name = "code_unite", length = 20)
	//@Length(max=5)
	@LgrHibernateValidated(champBd = "code_unite",table = "ta_unite", champEntite="codeUnite", clazz = TaUnite.class)
	public String getCodeUnite() {
		return this.codeUnite;
	}

	public void setCodeUnite(String codeUnite) {
		this.codeUnite = codeUnite;
	}

	@Column(name = "libl_unite")
	@LgrHibernateValidated(champBd = "libl_unite",table = "ta_unite", champEntite="liblUnite", clazz = TaUnite.class)
	public String getLiblUnite() {
		return this.liblUnite;
	}

	public void setLiblUnite(String liblUnite) {
		this.liblUnite = liblUnite;
	}
	
	/*----------------------------------------------------------------------------------------------------------*/

	@Column(name = "nb_unite")
	@LgrHibernateValidated(champBd = "nb_unite",table = "ta_unite", champEntite="nbUnite", clazz = TaUnite.class)
	public Integer getNbUnite() {
		return nbUnite;
	}

	public void setNbUnite(Integer nbUnite) {
		this.nbUnite = nbUnite;
	}

	@Column(name = "hauteur")
	@LgrHibernateValidated(champBd = "hauteur",table = "ta_unite", champEntite="hauteur", clazz = TaUnite.class)
	public BigDecimal getHauteur() {
		return hauteur;
	}

	public void setHauteur(BigDecimal hauteur) {
		this.hauteur = hauteur;
	}

	@Column(name = "longueur")
	@LgrHibernateValidated(champBd = "longueur",table = "ta_unite", champEntite="longueur", clazz = TaUnite.class)
	public BigDecimal getLongueur() {
		return longueur;
	}

	public void setLongueur(BigDecimal longueur) {
		this.longueur = longueur;
	}

	@Column(name = "largeur")
	@LgrHibernateValidated(champBd = "largeur",table = "ta_unite", champEntite="largeur", clazz = TaUnite.class)
	public BigDecimal getLargeur() {
		return largeur;
	}

	public void setLargeur(BigDecimal largeur) {
		this.largeur = largeur;
	}

	@Column(name = "poids")
	@LgrHibernateValidated(champBd = "poids",table = "ta_unite", champEntite="poids", clazz = TaUnite.class)
	public BigDecimal getPoids() {
		return poids;
	}

	public void setPoids(BigDecimal poids) {
		this.poids = poids;
	}
	
//	@ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_article")
	@LgrHibernateValidated(champBd = "id_article",table = "ta_unite", champEntite="taArticle.idArticle", clazz = TaArticle.class)
	public TaArticle getTaArticle() {
		return taArticle;
	}

	public void setTaArticle(TaArticle taArticle) {
		this.taArticle = taArticle;
	}
	/*----------------------------------------------------------------------------------------------------------*/
	
//	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.REFRESH})
	@JoinColumn(name = "id_famille")
	@LgrHibernateValidated(champBd = "id_famille",table = "ta_unite", champEntite="taFamilleUnite.idFamille", clazz = TaFamilleUnite.class)
	public TaFamilleUnite getTaFamilleUnite() {
		return taFamilleUnite;
	}

	public void setTaFamilleUnite(TaFamilleUnite taFamilleUnite) {
		this.taFamilleUnite = taFamilleUnite;
	}
	
//	@Column(name = "qui_cree", length = 50)
//	public String getQuiCree() {
//		return this.quiCree;
//	}
//
//	public void setQuiCree(String quiCreeUnite) {
//		this.quiCree = quiCreeUnite;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_cree", length = 19)
//	public Date getQuandCree() {
//		return this.quandCree;
//	}
//
//	public void setQuandCree(Date quandCreeUnite) {
//		this.quandCree = quandCreeUnite;
//	}
//
//	@Column(name = "qui_modif", length = 50)
//	public String getQuiModif() {
//		return this.quiModif;
//	}
//
//	public void setQuiModif(String quiModifUnite) {
//		this.quiModif = quiModifUnite;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "quand_modif", length = 19)
//	public Date getQuandModif() {
//		return this.quandModif;
//	}
//
//	public void setQuandModif(Date quandModifUnite) {
//		this.quandModif = quandModifUnite;
//	}
//
//	@Column(name = "ip_acces", length = 50)
//	public String getIpAcces() {
//		return this.ipAcces;
//	}
//
//	public void setIpAcces(String ipAcces) {
//		this.ipAcces = ipAcces;
//	}

//	@OneToMany(cascade ={CascadeType.MERGE,CascadeType.PERSIST} , fetch = FetchType.LAZY, mappedBy = "taUnite")
//	@XmlTransient
//	public Set<TaPrix> getTaPrixes() {
//		return this.taPrixes;
//	}
//
//	public void setTaPrixes(Set<TaPrix> taPrixes) {
//		this.taPrixes = taPrixes;
//	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((codeUnite == null) ? 0 : codeUnite.hashCode());
		return result;
	}

//	@PrePersist
//	@PreUpdate
	public void beforePost ()throws Exception{
		this.setCodeUnite(codeUnite.toUpperCase());
	}

	@Override
	public Object clone() throws CloneNotSupportedException {
		TaUnite objet = new TaUnite();
		try {
			objet.setCodeUnite(codeUnite);
			objet.setHauteur(hauteur);
			objet.setLargeur(largeur);
			objet.setLiblUnite(liblUnite);
			objet.setLongueur(longueur);
			objet.setNbUnite(nbUnite);
			objet.setPoids(poids);
			objet.setTaFamilleUnite(taFamilleUnite);
			
		} catch (Exception e) {
			logger.error("", e);
		}
		// on renvoie le clone
		return objet;
	}
}
