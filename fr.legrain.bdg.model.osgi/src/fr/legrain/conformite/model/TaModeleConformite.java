package fr.legrain.conformite.model;

// Generated Mar 24, 2009 4:44:04 PM by Hibernate Tools 3.2.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import fr.legrain.lib.data.LibConversion;
import fr.legrain.validator.LgrHibernateValidated;
//import org.hibernate.annotations.Cache;
//import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * TaTCivilite generated by hbm2java
 */
@Entity
@Table(name = "ta_modele_conformite")
public class TaModeleConformite implements java.io.Serializable {

	private static final long serialVersionUID = -2395618394689767735L;

	private int idModeleConformite;
	
	private String code;
	private String valeurDefaut;
	private String deuxiemeValeur;
	private String libelleConformite;
	private String valeurCalculee;
	private TaTypeConformite taTypeConformite;
	private Set<TaModeleBareme> taModeleBaremes;
	private TaGroupe taGroupe;
	private TaModeleGroupe taModeleGroupe;
	private String version;
	private Boolean ctrlBloquant = true;
	private Boolean ctrlFacultatif = false;


	private String quiCree;
	private Date quandCree;
	private String quiModif;
	private Date quandModif;
	private String ipAcces;
	private Integer versionObj;

	public TaModeleConformite() {
	}

	public TaModeleConformite(int idGroupe) {
		this.idModeleConformite = idGroupe;
	}



	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id_modele_conformite", unique = true, nullable = false)
	@LgrHibernateValidated(champBd = "id_modele_conformite",table = "ta_modele_conformite", champEntite="idModeleConformite", clazz = TaModeleConformite.class)
	public int getIdModeleConformite() {
		return this.idModeleConformite;
	}

	public void setIdModeleConformite(int idConformite) {
		this.idModeleConformite = idConformite;
	}

	
	@Column(name = "version", length = 20)
	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}



	@Column(name = "qui_cree", length = 50)
	public String getQuiCree() {
		return this.quiCree;
	}

	public void setQuiCree(String quiCreeTCivilite) {
		this.quiCree = quiCreeTCivilite;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_cree", length = 19)
	public Date getQuandCree() {
		return this.quandCree;
	}

	public void setQuandCree(Date quandCreeTCivilite) {
		this.quandCree = quandCreeTCivilite;
	}

	@Column(name = "qui_modif", length = 50)
	public String getQuiModif() {
		return this.quiModif;
	}

	public void setQuiModif(String quiModifTCivilite) {
		this.quiModif = quiModifTCivilite;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "quand_modif", length = 19)
	public Date getQuandModif() {
		return this.quandModif;
	}

	public void setQuandModif(Date quandModifTCivilite) {
		this.quandModif = quandModifTCivilite;
	}

	@Column(name = "ip_acces", length = 50)
	public String getIpAcces() {
		return this.ipAcces;
	}

	public void setIpAcces(String ipAcces) {
		this.ipAcces = ipAcces;
	}

	@Version
	@Column(name = "version_obj")
	public Integer getVersionObj() {
		return this.versionObj;
	}

	public void setVersionObj(Integer versionObj) {
		this.versionObj = versionObj;
	}

	@Column(name = "valeur_defaut", length = 50)
	@LgrHibernateValidated(champBd = "valeur_defaut",table = "ta_modele_conformite", champEntite="valeurDefaut", clazz = TaModeleConformite.class)
	public String getValeurDefaut() {
		return valeurDefaut;
	}

	public void setValeurDefaut(String valeurDefaut) {
		this.valeurDefaut = valeurDefaut;
	}

	@Column(name = "deuxieme_valeur", length = 50)
	@LgrHibernateValidated(champBd = "deuxieme_valeur",table = "ta_modele_conformite", champEntite="deuxiemeValeur", clazz = TaModeleConformite.class)
	public String getDeuxiemeValeur() {
		return deuxiemeValeur;
	}

	public void setDeuxiemeValeur(String deuxiemeValeur) {
		this.deuxiemeValeur = deuxiemeValeur;
	}

	@Column(name = "libelle_conformite", length = 50)
	@LgrHibernateValidated(champBd = "libelle_conformite",table = "ta_modele_conformite", champEntite="libelleConformite", clazz = TaModeleConformite.class)
	public String getLibelleConformite() {
		return libelleConformite;
	}

	public void setLibelleConformite(String libelleConformite) {
		this.libelleConformite = libelleConformite;
	}

	@Column(name = "valeur_calculee", length = 50)
	@LgrHibernateValidated(champBd = "valeur_calculee",table = "ta_modele_conformite", champEntite="valeurCalculee", clazz = TaModeleConformite.class)
	public String getValeurCalculee() {
		return valeurCalculee;
	}

	public void setValeurCalculee(String valeurCalculee) {
		this.valeurCalculee = valeurCalculee;
	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "taConformite", orphanRemoval=true)
	public Set<TaModeleBareme> getTaModeleBaremes() {
		return this.taModeleBaremes;
	}

	public void setTaModeleBaremes(Set<TaModeleBareme> taModeleBaremes) {
		this.taModeleBaremes = taModeleBaremes;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_type_conformite")
	@LgrHibernateValidated(champBd = "id_type_conformite",table = "ta_modele_conformite", champEntite="taTypeConformite.idTypeConformite", clazz = TaTypeConformite.class)
	public TaTypeConformite getTaTypeConformite() {
		return taTypeConformite;
	}

	public void setTaTypeConformite(TaTypeConformite taTypeConformite) {
		this.taTypeConformite = taTypeConformite;
	}

	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_groupe")
	@LgrHibernateValidated(champBd = "id_groupe",table = "ta_modele_conformite", champEntite="taGroupe.idGroupe", clazz = TaGroupe.class)
	public TaGroupe getTaGroupe() {
		return taGroupe;
	}

	public void setTaGroupe(TaGroupe taGroupe) {
		this.taGroupe = taGroupe;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_modele_groupe")
	@LgrHibernateValidated(champBd = "id_modele_groupe",table = "ta_modele_conformite", champEntite="taModeleGroupe.idModeleGroupe", clazz = TaModeleGroupe.class)
	public TaModeleGroupe getTaModeleGroupe() {
		return taModeleGroupe;
	}

	public void setTaModeleGroupe(TaModeleGroupe taModeleGroupe) {
		this.taModeleGroupe = taModeleGroupe;
	}

	public TaModeleConformite(int idConformite, String valeurDefaut,
			String deuxiemeValeur, String libelleConformite,
			String valeurCalculee, TaTypeConformite taTypeConformite,
			TaGroupe taGroupe, String version, String quiCree, Date quandCree,
			String quiModif, Date quandModif, String ipAcces, Integer versionObj) {
		super();
		this.idModeleConformite = idConformite;
		this.valeurDefaut = valeurDefaut;
		this.deuxiemeValeur = deuxiemeValeur;
		this.libelleConformite = libelleConformite;
		this.valeurCalculee = valeurCalculee;
		this.taTypeConformite = taTypeConformite;
		this.taGroupe = taGroupe;
		this.version = version;
		this.quiCree = quiCree;
		this.quandCree = quandCree;
		this.quiModif = quiModif;
		this.quandModif = quandModif;
		this.ipAcces = ipAcces;
		this.versionObj = versionObj;
	}


	public List<Integer> findListeIdControleDependant() {
		List<Integer> listeIdControleDependant = new ArrayList<Integer>();;
		if(taTypeConformite.getCode().equals(TaTypeConformite.C_TYPE_CALCULE)) {
			
			//analyser la formule et lister les controles dépendant
			
			Pattern pattern = Pattern.compile(TaBareme.REGEX_FORMULE_VALEUR_CALC); 
			String expr = getDeuxiemeValeur();
			if(expr != null && !expr.equals("")) {
				Matcher matcher = pattern.matcher(expr);
				while (matcher.find()) {
					String match = matcher.group().replaceAll(TaBareme.REGEX_FORMULE_CARACTERE_PONCTUATION,"");
					String idControleModele = match.substring(1);
					listeIdControleDependant.add(LibConversion.stringToInteger(idControleModele));
				}
			}
			return listeIdControleDependant;
		} else {
			//ne fait référence à aucun autre controle dans les calculs
			return listeIdControleDependant;
		}
	}
	
	public boolean dependDuControle(Integer idControle) {
		List<Integer> listeIdControleDependant = findListeIdControleDependant();
		return listeIdControleDependant.contains(idControle);
	}

	@Column(name = "ctrl_bloquant")
	public Boolean getCtrlBloquant() {
		return ctrlBloquant;
	}

	public void setCtrlBloquant(Boolean ctrlBloquant) {
		this.ctrlBloquant = ctrlBloquant;
	}

	@Column(name = "ctrl_facultatif")
	public Boolean getCtrlFacultatif() {
		return ctrlFacultatif;
	}

	public void setCtrlFacultatif(Boolean ctrlFacultatif) {
		this.ctrlFacultatif = ctrlFacultatif;
	}

	@Column(name = "code")
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}




}
